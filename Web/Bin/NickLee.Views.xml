<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NickLee.Views</name>
    </assembly>
    <members>
        <member name="T:NickLee.Views.Windows.Forms.TableSelectionChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Windows.Forms.TreeTable.SelectionChanged" /> event of the <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> class.
            </summary>
            <remarks>A <see cref="E:NickLee.Views.Windows.Forms.TreeTable.SelectionChanged" /> event is raised when the selected
            rows of the <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> have changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableSelectionChangedEventArgs.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Creates and initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.TableSelectionChangedEventArgs" /> class.
            </summary>
            <param name="firstIndex">The first index of the row whose selection may have changed.</param>
            <param name="lastIndex">The last index of the row whose selection may have changed.</param>
            <param name="isAdjusting">Indicates if this event is part of a series of selection events.</param>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableSelectionChangedEventArgs.FirstIndex">
            <summary>
            Gets the index of the first row whose selection may have changed.
            </summary>
            <value>The index of the first row whose selection may have changed.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableSelectionChangedEventArgs.IsAdjusting">
            <summary>
            Indicates whether this event is part of a series of selection events.
            </summary>
            <value><see langword="true" /> if this event is part of a series of
            selection events; Otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableSelectionChangedEventArgs.LastIndex">
            <summary>
            Gets the index of the last row whose selection may have changed.
            </summary>
            <value>The index of the last row whose selection may have changed.</value>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.IRowFilter">
            <summary>
            Represents a row filter for the <see cref="T:NickLee.Views.Windows.Forms.TreeModelView" /> class.
            </summary>
            <remarks>The interface provides a single method, <see cref="M:NickLee.Views.Windows.Forms.IRowFilter.FilterRow(NickLee.Views.Windows.Forms.TreeModelView,System.Object)" />, to determine whether
            a specific row should be visible in the <strong>TreeModelView</strong>.
            When the filter changes, the <see cref="E:NickLee.Views.Windows.Forms.IRowFilter.RowFilterChanged" /> event
            should be raised.
            </remarks>
            <seealso cref="T:NickLee.Views.Windows.Forms.IRowGroup" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.IRowFilter.FilterRow(NickLee.Views.Windows.Forms.TreeModelView,System.Object)">
            <summary>
            When implemented by a class, filters a row of the specified <see cref="T:NickLee.Views.Windows.Forms.TreeModelView" />.
            </summary>
            <param name="view">The <see cref="T:NickLee.Views.Windows.Forms.TreeModelView" /> being filtered.</param>
            <param name="row">The row of the view being filtered.</param>
            <returns><see langword="true" /> if the row should be made visible in the view;
            <see langword="false" /> otherwise.</returns>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.IRowFilter.RowFilterChanged">
            <summary>
            Occurs when the filter has changed.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.DrawTableCellEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:NickLee.Views.Windows.Forms.TreeTable.DrawTableCell" />
            event of a <see cref="T:NickLee.Views.Windows.Forms.TreeTable" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.DefaultRowGroup">
            <summary>
            A simple implementation of the <see cref="T:NickLee.Views.Windows.Forms.IRowGroup" /> interface that uses property descriptors
            to group rows of a <see cref="T:NickLee.Views.Windows.Forms.TreeModelView" />.
            </summary>
            <remarks>
            The <see cref="P:NickLee.Views.Windows.Forms.DefaultRowGroup.MappingNames" /> property is used to specify how to group rows.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to
            create a <see cref="T:NickLee.Views.Windows.Forms.DefaultRowGroup" /> that groups rows based on
            their <strong>Value</strong> property. The property <strong>Value</strong>
            must be defined on the nodes of the wrapped tree model.
            </para>
            <code lang="C#">
            TreeTable table = new TreeTable();
            table.TreeModelView.RowGroup = new DefaultRowGroup("Value");
            </code>
            <code lang="Visual Basic">
            Dim table as New TreeTable()
            table.TreeModelView.RowGroup = New DefaultRowGroup("Value")
            End Sub
            </code>
            </example>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.IRowGroup">
            <summary>
            Represents a row group for the <see cref="T:NickLee.Views.Windows.Forms.TreeModelView" /> class.
            </summary>
            <remarks><p>The interface provides a single method, <see cref="M:NickLee.Views.Windows.Forms.IRowGroup.GetGroup(NickLee.Views.Windows.Forms.TreeModelView,System.Object)" />, to determine the
            group to which a row belongs. Setting a row group on a <see cref="T:NickLee.Views.Windows.Forms.TreeModelView" />
            changes the hierarchy defined by the wrapped <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" />. The new
            hierarchy is defined by the <see cref="M:NickLee.Views.Windows.Forms.IRowGroup.GetGroup(NickLee.Views.Windows.Forms.TreeModelView,System.Object)" /> method.</p>
            <p>When the group changes, the <see cref="E:NickLee.Views.Windows.Forms.IRowGroup.RowGroupChanged" /> event
            should be raised.</p>
            </remarks>
            <seealso cref="T:NickLee.Views.Windows.Forms.IRowFilter" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.IRowGroup.GetGroup(NickLee.Views.Windows.Forms.TreeModelView,System.Object)">
            <summary>
            When implemented by a class, returns the group to which the specified row belongs.
            </summary>
            <param name="view">The tree model view.</param>
            <param name="row">The row of the table.</param>
            <returns>An <see cref="T:System.Object" /> that represents the group to
            which the specified row belongs.</returns>
            <remarks>If the method returns <see langword="null" />, the
            specified row will be located under the root node.</remarks>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.IRowGroup.RowGroupChanged">
            <summary>
            Occurs when the group has changed.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultRowGroup.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.DefaultRowGroup" /> class.
            </summary>
            <param name="mappingName">A group name.</param>
            <remarks>The <paramref name="mappingName" /> parameter is the name of the property that will be
            used to split nodes into groups. The property type must match the
            type of the nodes of the model. If <paramref name="mappingName" /> is <see langword="null" />,
            no group will be created and all the nodes will be put at the root level.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultRowGroup.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.DefaultRowGroup" /> class.
            </summary>
            <param name="mappingNames">An array of group names.</param>
            <remarks>The <paramref name="mappingNames" /> parameter contains the names of the properties that will be
            used to split nodes into groups. The properties types must match the
            type of the nodes of the model. If <paramref name="mappingNames" /> is <see langword="null" />,
            no group will be created and all the nodes will be put at the root level.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultRowGroup.ConvertToString(System.Object,System.String)">
            <summary>
            Converts the specified object to a string representation.
            </summary>
            <param name="value">The object to convert.</param>
            <param name="mappingName">The name of the property descriptor that was used
            to retrieve <paramref name="value" />.</param>
            <remarks>The default implementation returns the concatenation of <paramref name="mappingName" />
            with the result of <strong>value.ToString()</strong>.</remarks>
            <returns>The string representation of <paramref name="value" />.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultRowGroup.GetGroup(NickLee.Views.Windows.Forms.TreeModelView,System.Object)">
            <summary>
            Returns the group to which the specified row belongs.
            </summary>
            <param name="view">The tree model view.</param>
            <param name="row">The row of the table.</param>
            <returns>An <see cref="T:System.Object" /> that represents the group to
            which the specified row belongs.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultRowGroup.OnRowGroupChanged">
            <summary>
            Raises the <see cref="E:NickLee.Views.Windows.Forms.DefaultRowGroup.RowGroupChanged" /> event.
            </summary>
            <remarks>Called when the group is changed.</remarks>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.DefaultRowGroup.RowGroupChanged">
            <summary>
            Occurs when the group has changed.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.DefaultRowGroup.MappingNames">
            <summary>
            Gets or sets the property names used to split the tree model nodes into groups.
            </summary>
            <value>An array of <see cref="T:System.String" /> that represents the names of the
            properties that will be used to split the tree model nodes into groups.</value>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to
            create a <see cref="T:NickLee.Views.Windows.Forms.DefaultRowGroup" /> that groups rows based on
            their <strong>Value</strong> property. The property <strong>Value</strong> must
            be defined on the nodes of the wrapped tree model.
            </para>
            <code lang="C#">
            TreeTable table = new TreeTable();
            table.TreeModelView.RowGroup = new DefaultRowGroup("Value");
            </code>
            <code lang="Visual Basic">
            Dim table as New TreeTable()
            table.TreeModelView.RowGroup = New DefaultRowGroup("Value")
            End Sub
            </code>
            </example>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.TreeModelAction">
            <summary>
            Describes an action performed on an <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" /> object.
            </summary>
            <remarks>Uses the members of this enumeration to determine the action that has occurred on an <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" /> object.</remarks>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.TreeColumn">
            <summary>
            Defines a column of a <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> that
            displays the contents as a tree component.
            </summary>
            <remarks>
            <p>The nodes hierarchy is defined by the tree model connected to the
            table (See <see cref="P:NickLee.Views.Windows.Forms.TreeTable.TreeModel">TreeTable.TreeModel</see>).
            </p>
            <p>You can change the appearance of the <strong>TreeColumn</strong> by
            setting some of its display and style properties. Setting
            <see cref="P:NickLee.Views.Windows.Forms.TreeColumn.ShowPlusMinus" /> to <see langword="true" /> displays a plus-sign or
            minus-sign button next to each node object that can be
            expanded or collapsed, respectively. The indentation between
            a node and its children can be changed using the <see cref="P:NickLee.Views.Windows.Forms.TreeColumn.Indent" />
            property. An <see cref="T:System.Drawing.Image" /> can also be displayed before the label
            displayed in each cell. The image displayed is controlled by the
            <see cref="P:NickLee.Views.Windows.Forms.TreeColumn.CollapsedImage" />, <see cref="P:NickLee.Views.Windows.Forms.TreeColumn.ExpandedImage" />, or
            <see cref="P:NickLee.Views.Windows.Forms.TreeColumn.LeafImage" /> depending on the node state.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to create a <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> with some columns.
            The <strong>TreeTable</strong> is connected to a <see cref="T:NickLee.Views.Windows.Forms.DefaultTreeModel" /> that wraps
            an <see cref="T:System.Collections.ICollection" />. We suppose that the object located in the collection have the
            <strong>Name</strong> and <strong>Value</strong> properties defined.
            </para>
            <code lang="C#">
            private TreeTable CreateTable(ICollection collection) {

            // Creates a DefaultTreeModel that wraps the collection
            ITreeModel model = new DefaultTreeModel(collection);

            // Creates a TreeTable with no columns.
            TreeTable table = new TreeTable(model);

            // Creates a tree column mapped to the "Name" property of the tree model.
            // This column is read-only
            TreeColumn column1 = new TreeColumn("Name", "Name");
            column1.ReadOnly = true;

            // Creates a column mapped to the "Value" property of the tree model.
            TableColumn column2 = new TableColumn("Value", "Value");

            // Adds the columns to the table.
            table.Columns.AddRange(new TableColumn[] { column1, column2 });

            // Returns the table
            return table;
            }
            </code>
            <code lang="Visual Basic">
            Private Function CreateTable(ByVal collection As ICollection) As TreeTable

            ' Creates a DefaultTreeModel that wraps the collection
            Dim model As New DefaultTreeModel(collection)

            ' Creates a TreeTable with no columns.
            Dim table As New TreeTable(model)

            ' Creates a tree column mapped to the "Name" property of the tree model.
            ' This column is read-only
            Dim column1 As New TreeColumn("Name", "Name")
            column1.ReadOnly = true

            ' Creates a column mapped to the "Value" property of the tree model.
            Dim column2 As New TableColumn ("Value", "Value")

            ' Adds the columns to the table.
            table.Columns.AddRange(New TableColumn() { column1, column2 })

            ' Returns the table
            Return table
            End Function
            </code>
            </example>
            <seealso cref="T:NickLee.Views.Windows.Forms.TreeTable" />
            <seealso cref="T:NickLee.Views.Windows.Forms.ITreeModel" />
            <seealso cref="T:NickLee.Views.Windows.Forms.TreeModelView" />
            <seealso cref="T:NickLee.Views.Windows.Forms.TableColumn" />
            <seealso cref="T:NickLee.Views.Windows.Forms.ImageTableColumn" />
        </member>
        <member name="T:NickLee.Views.Windows.Forms.TableColumn">
            <summary>
            Defines a column of a <see cref="T:NickLee.Views.Windows.Forms.TreeTable" />.
            </summary>
            <remarks>
            <p>Represents all the attributes of a column of a <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> such
            as the width, the text and image in the header or the format for displaying text.</p>
            <p>You can add and remove columns of a <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> using
            the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.Columns" /> property of the <see cref="T:NickLee.Views.Windows.Forms.TreeTable" />.</p>
            <p>The values displayed by the column are defined by the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.MappingName" />
            property that defines the name of the property of the node displayed in a row.</p>
            <p>By default, a cell of a column can be edited by the
            <see cref="T:NickLee.Views.Windows.Forms.DefaultTreeTableCellEditor" />, but you can make the column read-only
            using the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.ReadOnly" /> property or you can change the editor through the
            <see cref="P:NickLee.Views.Windows.Forms.TableColumn.CellEditor" /> property.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to create a <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> with some columns.
            The <strong>TreeTable</strong> is connected to a <see cref="T:NickLee.Views.Windows.Forms.DefaultTreeModel" /> that wraps
            an <see cref="T:System.Collections.ICollection" />. We suppose that the object located in the collection have the
            <strong>Name</strong> and <strong>Value</strong> properties defined.
            </para>
            <code lang="C#">
            private TreeTable CreateTable(ICollection collection) {

            // Creates a DefaultTreeModel that wraps the collection
            ITreeModel model = new DefaultTreeModel(collection);

            // Creates a TreeTable with no columns.
            TreeTable table = new TreeTable(model);

            // Creates a tree column mapped to the "Name" property of the tree model.
            // This column is read-only
            TreeColumn column1 = new TreeColumn("Name", "Name");
            column1.ReadOnly = true;

            // Creates a column mapped to the "Value" property of the tree model.
            TableColumn column2 = new TableColumn("Value", "Value");

            // Adds the columns to the table.
            table.Columns.AddRange(new TableColumn[] { column1, column2 });

            // Returns the table
            return table;
            }
            </code>
            <code lang="Visual Basic">
            Private Function CreateTable(ByVal collection As ICollection) As TreeTable

            ' Creates a DefaultTreeModel that wraps the collection
            Dim model As New DefaultTreeModel(collection)

            ' Creates a TreeTable with no columns.
            Dim table As New TreeTable(model)

            ' Creates a tree column mapped to the "Name" property of the tree model.
            ' This column is read-only
            Dim column1 As New TreeColumn("Name", "Name")
            column1.ReadOnly = true

            ' Creates a column mapped to the "Value" property of the tree model.
            Dim column2 As New TableColumn ("Value", "Value")

            ' Adds the columns to the table.
            table.Columns.AddRange(New TableColumn() { column1, column2 })

            ' Returns the table
            Return table
            End Function
            </code>
            </example>
            <seealso cref="T:NickLee.Views.Windows.Forms.TreeTable" />
            <seealso cref="T:NickLee.Views.Windows.Forms.ITreeModel" />
            <seealso cref="T:NickLee.Views.Windows.Forms.TreeColumn" />
            <seealso cref="T:NickLee.Views.Windows.Forms.ImageTableColumn" />
            <seealso cref="P:NickLee.Views.Windows.Forms.TableColumn.TreeModelView" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.#ctor">
            <summary>
            Creates and initializes a <see cref="T:NickLee.Views.Windows.Forms.TableColumn" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.#ctor(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Creates and initializes a <see cref="T:NickLee.Views.Windows.Forms.TableColumn" />.
            </summary>
            <param name="prop">A property descriptor that describes the property to
            display.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.#ctor(System.String,System.String)">
            <summary>
            Creates and initializes a <see cref="T:NickLee.Views.Windows.Forms.TableColumn" />.
            </summary>
            <param name="headerText">The text of the column header.</param>
            <param name="mappingName">The name of the property that
            is displayed in this column.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.Dispose(System.Boolean)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.Component.Dispose">Component.Dispose</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.GetColumnValueAtRow(System.Int32)">
            <summary>
            Gets the value displayed by the column at the specified row index.
            </summary>
            <param name="rowIndex">The row index.</param>
            <returns>The value displayed by the column at the specified row index</returns>.
            <remarks>The default behavior of this method uses the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.PropertyDescriptor" />
            property to retrieve the value of the specified row. If the row index is valid,
            but the value cannot be retrieved using the property descriptor, <see langword="null" />
            is returned.</remarks>
            <seealso cref="M:NickLee.Views.Windows.Forms.TableColumn.GetTextValue(System.Int32)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.GetFormatProvider">
            <summary>
            Returns a format provider taking into account default format providers.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.GetPreferredHeaderWidth(System.Drawing.Graphics)">
            <summary>
            Computes the preferred width for the header of this column.
            </summary>
            <param name="g">Graphics used to perform measures.</param>
            <returns>The preferred width for the header of this column.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.GetPreferredHeight(System.Drawing.Graphics,System.Int32)">
            <summary>
            Computes the preferred height of a specified row.
            </summary>
            <param name="g">Graphics used to perform measures.</param>
            <param name="row">The index of the row to compute.</param>
            <returns>The preferred height of the specified row in this column.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.GetPreferredWidth(System.Drawing.Graphics,System.Int32)">
            <summary>
            Computes the preferred width of a specified row.
            </summary>
            <param name="g">Graphics used to perform measures.</param>
            <param name="row">The index of the row to compute.</param>
            <returns>The preferred width of the specified row in this column.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.GetText(System.Object)">
            <summary>
            Converts the specified value to a string.
            </summary>
            <param name="value">The value.</param>
            <returns>The specified value converted to a string.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.GetTextValue(System.Int32)">
            <summary>
            Returns the text displayed at the specified row index.
            </summary>
            <param name="rowIndex">The row index.</param>
            <returns>The text displayed at the specified row index.</returns>
            <seealso cref="M:NickLee.Views.Windows.Forms.TableColumn.GetColumnValueAtRow(System.Int32)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.GetToolTipArea(System.Int32,System.Drawing.Point)">
            <summary>
            Returns the area of the tooltip at the specified row index.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="p">The offset of the mouse location in the cell.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle" /> structure that corresponds to the tooltip area at
            the specified point.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.GetToolTipAreas(System.Int32)">
            <summary>
            Returns the areas where tooltips can be displayed at the specified row index.
            </summary>
            <param name="rowIndex">The row index.</param>
            <returns>An array of <see cref="T:System.Drawing.Rectangle" /> structures representing the areas
            of the specified cell where tooltips can be displayed.</returns>
            <remarks>The coordinates of the rectangles are relative to the table cell.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.GetToolTipValue(System.Int32,System.Drawing.Point)">
            <summary>
            Returns the text displayed by the tooltip at the specified row index.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="p">The offset of the mouse location in the cell.</param>
            <returns>The text displayed by the tooltip at the specified row index.</returns>
            <remarks>The default behavior returns the text displayed by the specified row.</remarks>
            <seealso cref="M:NickLee.Views.Windows.Forms.TableColumn.ShouldShowToolTip(System.Int32,System.Drawing.Point)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.GetTypeConverter">
            <summary>
            Returns a type converter taking into account default type converters.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.IsRowEditable(System.Int32)">
            <summary>
            Gets a value indicating whether the specified row is editable.
            </summary>
            <param name="rowIndex">The zero-based index of the row.</param>
            <returns>A value indicating whether the specified cell is editable.</returns>
            <remarks>The default behavior checks the <strong>IsReadOnly</strong> property
            of the <see cref="T:System.ComponentModel.PropertyDescriptor">PropertyDescriptor</see> instance displayed by this column,
            as well as the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.ReadOnly">ReadOnly</see> property value.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.OnCellEditorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.CellEditor" /> property is changed on the control.
            </summary>
            <remarks>Called when the <strong>CellEditor</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.OnEditFormatChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.EditFormat" /> property is changed on the column.
            </summary>
            <remarks>Called when the <strong>EditFormat</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.OnFormatChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.Format" /> property is changed on the column.
            </summary>
            <remarks>Called when the <strong>Format</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.OnHeaderTextChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.HeaderText" /> property is changed on the control.
            </summary>
            <remarks>Called when the <strong>HeaderText</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.OnMappingNameChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.MappingName" /> property is changed on the control.
            </summary>
            <remarks>Called when the <strong>MappingName</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.OnNullTextChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.NullText" /> property is changed on the control.
            </summary>
            <remarks>Called when the <strong>NullText</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.OnPropertyDescriptorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.PropertyDescriptor" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
            <remarks>Called when the <strong>PropertyDescriptor</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.OnReadOnlyChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.ReadOnly" /> property is changed on the control.
            </summary>
            <remarks>Called when the <strong>ReadOnly</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.OnShowToolTipChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="E:NickLee.Views.Windows.Forms.TableColumn.ShowToolTipChanged" /> property is changed on the control.
            </summary>
            <remarks>Called when the <strong>ShowToolTipChanged</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.OnStringFormatChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.StringFormat" /> property is changed on the column.
            </summary>
            <remarks>Called when the <strong>StringFormat</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.OnWidthChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.Width" /> property is changed on the control.
            </summary>
            <remarks>Called when the <strong>Width</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Drawing.Brush,System.Drawing.Brush,System.Drawing.Font,System.Boolean)">
            <summary>
            Paints a cell of this column.
            </summary>
            <param name="g">The graphics to paint on.</param>
            <param name="bounds">The bounding rectangle of the cell.</param>
            <param name="rowIndex">The index of the row being painted.</param>
            <param name="background">The background brush used for painting the cell.</param>
            <param name="foreground">The foreground brush used for painting the cell.</param>
            <param name="font">The font used for drawing the text.</param>
            <param name="isRightToLeft">Indicates whether the table is in right-to-left mode.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.PaintHeader(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Brush,System.Drawing.Brush,System.Boolean)">
            <summary>
            Paints the header of the column.
            </summary>
            <param name="g">The graphics used for painting.</param>
            <param name="bounds">The bounding rectangle of the column header.</param>
            <param name="foreground">The foreground brush.</param>
            <param name="background">The background brush.</param>
            <param name="rightToLeft">Indicates whether the table where the column is painted is in right-to-left mode.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.ResetPropertyDescriptor">
            <summary>
            Called by the table when the model has changed so that property descriptor
            is reset.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.RowControllerChanged(NickLee.Views.Windows.Forms.RowControllerChangeEventArgs)">
            <summary>
            Is called when the rows of the tree table have changed.
            </summary>
            <param name="e"> A <see cref="T:NickLee.Views.Windows.Forms.RowControllerChangeEventArgs" /> that contains the event data.</param>
            <remarks><p>This method is useful for a column that needs to cache its values.
            Depending on the value of <paramref name="e" />, the cache should be invalidated.</p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.RowsChanged(System.Object[],System.Int32[],System.String)">
            <summary>
            Is called when a property of the nodes displayed at the specified rows has changed
            in the tree model.
            </summary>
            <param name="nodes">An array containing the nodes of the tree model that has changed. If this parameter
            is <see langword="null" />, all the rows of the tree table may have changed.</param>
            <param name="indexes">An array containing the indexes of the nodes that have changed.</param>
            <param name="propertyName">The property that has changed. If this parameter is <see langword="null" />,
            all the properties of the specified rows may have changed.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.SetColumnValueAtRow(System.Int32,System.Object)">
            <summary>
            Sets the value displayed by the column at the specified row.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.SetTable(NickLee.Views.Windows.Forms.TreeTable)">
            <summary>
            Sets the <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> to which this column belongs.
            </summary>
            <param name="table">A <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> object or <see langword="null" /> if the column is removed from the table.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.ShouldCacheTextValues">
            <summary>
            Returns a value indicating whether the column should cache the text values displayed.
            </summary>
            <returns><see langword="true" /> if the column should cache the text values displayed;
            <see langword="false" /> otherwise.</returns>
            <remarks>The default behavior returns <see langword="true" /> when the type displayed by
            the column is <see cref="T:System.DateTime" /> or <see cref="T:System.TimeSpan" />. This behavior can be
            overridden by using the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.CacheTextValues" /> property.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.ShouldInvalidateColumn(System.String)">
            <summary>
            Gets a value indicating whether the column should be repainted when
            the specified property of the nodes displayed in the column has changed in the tree
            model.
            </summary>
            <remarks>The default implementation returns <see langword="true" /> when the property that
            has changed corresponds to the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.MappingName" /> property of the column.</remarks>
            <param name="propertyName">The name of the property that has changed.</param>
            <returns>A value indicating whether the column should be repainted.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.ShouldSerializeWidth">
            <summary>
            Do not serialize when no value is set.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.ShouldShowToolTip(System.Int32,System.Drawing.Point)">
            <summary>
            Indicates whether the tooltip of the cell located at the specified row index will be displayed or not.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="p">The offset of the mouse location in the cell.</param>
            <returns><see langword="true" /> if the tooltip should be displayed;
            <see langword="true" /> otherwise.</returns>
            <remarks><p>The default behavior returns <see langword="true" /> if the text displayed at the specified row
            is too large to fit its cell; otherwise, <see langword="false" /> is returned.</p>
            </remarks>
            <seealso cref="M:NickLee.Views.Windows.Forms.TableColumn.GetToolTipValue(System.Int32,System.Drawing.Point)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.ShouldUseTypeConverter(System.Object)">
            <summary>
            Returns true if the conversion of value to a string rep will use a type converter.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumn.SupportMultipleToolTips">
            <summary>
            Gets a value indicating whether the column supports different tooltips inside
            the same table cell.
            </summary>
            <returns><see langword="true" /> if the column supports different tooltips inside
            the same table cell; <see langword="false" /> otherwise.</returns>
            <remarks>The default behavior is to return <see langword="false" />. If you need
            to display several different tooltips inside the same cell, override this method
            and return <see langword="true" />. In this case, you will have to override the
            <see cref="M:NickLee.Views.Windows.Forms.TableColumn.GetToolTipValue(System.Int32,System.Drawing.Point)" /> method and return different tooltips depending on the
            mouse location.</remarks>
            <seealso cref="M:NickLee.Views.Windows.Forms.TableColumn.GetToolTipValue(System.Int32,System.Drawing.Point)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TableColumn.ShouldShowToolTip(System.Int32,System.Drawing.Point)" />
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TableColumn._cellEditor">
            <summary>
            The cell editor for the column.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TableColumn._editFormat">
            <summary>
            Optional format for displaying edited information in the column.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TableColumn._format">
            <summary>
            Optional format for displaying information in the column.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TableColumn._headerImage">
            <summary>
            Image of the header.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TableColumn._headerImageIndex">
            <summary>
            Index of the image in the image list.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TableColumn._headerText">
            <summary>
            Header text.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TableColumn._imageList">
            <summary>
            Image list containing the image of the header.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TableColumn._mappingName">
            <summary>
            Displayed property name.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TableColumn._nullText">
            <summary>
            Text to display when the value is <see langword="null" />.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TableColumn._propertyDescriptor">
            <summary>
            Property descriptor of the displayed column property.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TableColumn._readOnly">
            <summary>
            Column is read only.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TableColumn._showToolTip">
            <summary>
            Column shows tooltips.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TableColumn._table">
            <summary>
            The tree table.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TableColumn._width">
            <summary>
            The width of the column.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TableColumn.CellEditorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.CellEditor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TableColumn.EditFormatChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.EditFormat" /> property is changed on the column.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TableColumn.FormatChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.Format" /> property is changed on the column.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TableColumn.HeaderTextChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.HeaderText" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TableColumn.MappingNameChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.MappingName" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TableColumn.NullTextChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.NullText" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TableColumn.PropertyDescriptorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.PropertyDescriptor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TableColumn.ReadOnlyChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.ReadOnly" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TableColumn.ShowToolTipChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.ShowToolTip" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TableColumn.StringFormatChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.StringFormat" /> property is changed on the column.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TableColumn.WidthChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.Width" /> property is changed on the control.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumn.Alignment">
            <summary>
            This property is obsolete. Please use the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.TextAlign" /> property.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumn.CacheTextValues">
            <summary>
            Gets or sets a value indicating whether the texts displayed by this column should be cached.
            </summary>
            <value><see langword="true" /> if the texts displayed by this column should be cached; otherwise,
            <see langword="false" />.</value>
            <seealso cref="M:NickLee.Views.Windows.Forms.TableColumn.ShouldCacheTextValues" />
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumn.CellEditor">
            <summary>
            Gets or sets the editor used to edit the column.
            </summary>
            <value>
            A <see cref="T:NickLee.Views.Windows.Forms.ITreeTableCellEditor" /> object used to edit the values in the column.
            </value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumn.EditFormat">
            <summary>
            Gets or sets the format used to format text in this column when editing.
            </summary>
            <value>A string that represents the format used while editing. See <see cref="T:System.IFormattable" />
            for details.</value>
            <exception cref="T:System.ArgumentNullException">The property value is
            <see langword="null" />.</exception>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumn.Format">
            <summary>
            Gets or sets the format used to format text in this column.
            </summary>
            <value>A string that represents the format. See <see cref="T:System.IFormattable" />
            for details.</value>
            <exception cref="T:System.ArgumentNullException">The property value is
            <see langword="null" />.</exception>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumn.FormatInfo">
            <summary>
            Gets or sets the <see cref="T:System.IFormatProvider" /> used to format the text in this column.
            </summary>
            <value>An <see cref="T:System.IFormatProvider" /> object. The default value is <see langword="null" />.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumn.HasDefaultFormatInfo">
            <summary>
            Returns true if the property descriptor is using the default format provider.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumn.HasDefaultTypeConverter">
            <summary>
            Returns true if the property descriptor is using the default type converter.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumn.HeaderImage">
            <summary>
            Gets or sets the image displayed in the column header.
            </summary>
            <value>The <see cref="T:System.Drawing.Image" /> displayed in the column header.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumn.HeaderImageIndex">
            <summary>
            Gets or sets the image list index value of the image displayed in the header.
            </summary>
            <value>The image list zero-based index of the image displayed in the header.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumn.HeaderText">
            <summary>
            Gets or sets the text displayed in the column header.
            </summary>
            <value>A <see cref="T:System.String" /> object.</value>
            <exception cref="T:System.ArgumentNullException">The property value is
            <see langword="null" />.</exception>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumn.ImageList">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Forms.ImageList" /> that contains the
            <see cref="T:System.Drawing.Image" /> objects used by this column.
            </summary>
            <value>The <see cref="T:System.Windows.Forms.ImageList" /> that contains the <see cref="T:System.Drawing.Image" />
            objects used by the column. The default value is <see langword="null" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumn.MappingName">
            <summary>
            Gets or sets the name of the property displayed by
            this column.
            </summary>
            <value>The name of the property displayed by the column.</value>
            <seealso cref="P:NickLee.Views.Windows.Forms.TableColumn.PropertyDescriptor" />
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumn.NullText">
            <summary>
            Gets or sets the text that is displayed when the value of a cell is <see langword="null" />.
            </summary>
            <value>A string that is displayed when the value of a cell is <see langword="null" />.</value>
            <exception cref="T:System.ArgumentNullException">The property value is
            <see langword="null" />.</exception>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumn.PropertyDescriptor">
            <summary>
            Gets or sets the property descriptor that describes the property to
            display in this column.
            </summary>
            <value>A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that describes the property of the node
            displayed in this column.</value>
            <remarks>This property can be used to specify the property of the node to
            display in the column. When setting this property, the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.MappingName" />
            property will be set to the name of the property descriptor and the column will
            become read-only if the property descriptor is read-only.</remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumn.ReadOnly">
            <summary>
            Gets or sets a value that indicates whether the column is editable or not.
            </summary>
            <value><see langword="true" /> if the column is read-only; <see langword="false" /> otherwise.
            The default value is <see langword="false" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumn.ShowToolTip">
            <summary>
            Gets a value that indicates whether the column shows tooltips when the mouse hovers a cell.
            </summary>
            <value><see langword="true" /> if the column displays tooltips; <see langword="false" /> otherwise.
            The default value is <see langword="false" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumn.StringFormat">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.StringFormat" /> used to display text in this column.
            </summary>
            <value><see cref="T:System.Drawing.StringFormat" /> object that specifies formatting attributes, such as line
            spacing and alignment, that are applied to the drawn text.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumn.Table">
            <summary>
            Gets the table to which this column belongs.
            </summary>
            <remarks>The value may be <see langword="null" /> if the column is not attached
            to a table.</remarks>
            <value>The <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> that contains this column or <see langword="null" /> if no table
            contains this column.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumn.TextAlign">
            <summary>
            Gets or sets the alignment of text in a cell of this column.
            </summary>
            <value>One of the <see cref="T:System.Drawing.StringAlignment" /> values that
            defines the alignment of text in a cell of this column.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumn.TreeModel">
            <summary>
            Gets the tree model of the table to which this column has been added.
            </summary>
            <remarks>The value may be <see langword="null" /> if the column is not attached
            to a table.</remarks>
            <value>The <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" /> of the table that contains this column or <see langword="null" /> if no table
            contains this column.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumn.TreeModelView">
            <summary>
            Gets the tree model view of the table to which this column has been added.
            </summary>
            <remarks>The value may be <see langword="null" /> if the column is not attached
            to a table.</remarks>
            <value>The <see cref="P:NickLee.Views.Windows.Forms.TableColumn.TreeModelView" /> of the table that contains this column or <see langword="null" /> if no table
            contains this column.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumn.Width">
            <summary>
            Gets or sets the width of this column.
            </summary>
            <value>The width of the column in pixels.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumn.WordWrapping">
            <summary>
            Indicates whether the text displayed by the column should be word-wrapped.
            </summary>
            <value><see langword="true" /> if the text is word-wrapped; <see langword="false" /> otherwise.</value>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeColumn.#ctor">
            <summary>
            Creates and initializes a <see cref="T:NickLee.Views.Windows.Forms.TreeColumn" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeColumn.#ctor(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Creates and initializes a <see cref="T:NickLee.Views.Windows.Forms.TreeColumn" />.
            </summary>
            <param name="prop">The property descriptor describing the property to
            display in the column.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeColumn.#ctor(System.String,System.String)">
            <summary>
            Creates and initializes a <see cref="T:NickLee.Views.Windows.Forms.TreeColumn" />.
            </summary>
            <param name="headerText">The text of the column header.</param>
            <param name="mappingName">The name of the property that
            is displayed in this column.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeColumn.GetImage(System.Int32)">
            <summary>
            Computes the image to display next to the text of the specified row.
            </summary>
            <param name="row">The zero-based index of the row to look for an image.</param>
            <returns>The image to display next to the
            specified object or <see langword="null" /> if no image must be displayed
            next to the text.
            </returns>
            <remarks>
            <p>The method behaves as follows:<br />
            <ul>
            <li>If <paramref name="row" /> is a leaf node, the method returns
            <see cref="P:NickLee.Views.Windows.Forms.TreeColumn.LeafImage" />.</li>
            <li>If <paramref name="row" /> is a collapsed node, the method returns
            <see cref="P:NickLee.Views.Windows.Forms.TreeColumn.CollapsedImage" />.</li>
            <li>If <paramref name="row" /> is an expanded node, the method returns
            <see cref="P:NickLee.Views.Windows.Forms.TreeColumn.ExpandedImage" />.</li>
            </ul>
            </p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeColumn.GetIndentOffset(System.Int32)">
            <summary>
            THIS IS PRELIMINARY CODE AND SUBJECT TO CHANGE.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeColumn.GetPreferredHeight(System.Drawing.Graphics,System.Int32)">
            <summary>
            Computes the preferred height of a specified row.
            </summary>
            <param name="g">The graphics used to perform measures.</param>
            <param name="row">The index of the row to compute.</param>
            <returns>The preferred height of the specified row in this column.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeColumn.GetPreferredWidth(System.Drawing.Graphics,System.Int32)">
            <summary>
            Computes the preferred width of a specified row.
            </summary>
            <param name="g">The graphics used to perform measures.</param>
            <param name="row">The index of the row to compute.</param>
            <returns>The preferred size of the specified row in this column</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeColumn.GetTextValue(System.Int32)">
            <summary>
            Returns the text displayed at the specified row index.
            </summary>
            <param name="rowIndex">The row index.</param>
            <returns>The text displayed at the specified row index.</returns>
            <seealso cref="M:NickLee.Views.Windows.Forms.TableColumn.GetColumnValueAtRow(System.Int32)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeColumn.HitTestExpandButton(System.Drawing.Point,System.Int32,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Check if a point is located in the expand button of the specified row.
            </summary>
            <param name="p">The point to check.</param>
            <param name="rowIndex">The zero-based index of the row.</param>
            <param name="bounds">The bounds of the cell.</param>
            <param name="isRightToLeft"><see langword="true" /> if the <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> is
            being painting from right to left; Otherwise, <see langword="false" />.</param>
            <returns><see langword="true" /> if <paramref name="p" /> is located in the expand button
            of the row whose index is <paramref name="rowIndex" />.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeColumn.OnExpandButtonClicked(System.Int32)">
            <summary>
            Called when the expand/collapse button has been clicked on the specified row.
            </summary>
            <param name="row">The zero-based index of the row that was clicked.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeColumn.OnIndentChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeColumn.Indent" /> property is changed on the control.
            </summary>
            <remarks>Called when the <strong>Indent</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeColumn.OnLineStyleChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeColumn.LineStyle" /> property is changed on the control.
            </summary>
            <remarks>Called when the <strong>LineStyle</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeColumn.OnShowPlusMinusChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeColumn.ShowPlusMinus" /> property is changed on the control.
            </summary>
            <remarks>Called when the <strong>ShowPlusMinus</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeColumn.OnUseBoldFontForParentChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeColumn.UseBoldFontForParent" /> property is changed on the control.
            </summary>
            <remarks>Called when the <strong>UseBoldFontForParent</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeColumn.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Drawing.Brush,System.Drawing.Brush,System.Drawing.Font,System.Boolean)">
            <summary>
            Paints a cell of this column.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> object to paint to.</param>
            <param name="bounds">The bounding rectangle of the cell.</param>
            <param name="rowNum">The index of the row being painted.</param>
            <param name="background">The background brush used for painting the cell.</param>
            <param name="foreground">The foreground brush used for painting the cell.</param>
            <param name="font">The font used for drawing the text.</param>
            <param name="isRightToLeft">Indicates whether the table is in right-to-left mode.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeColumn.PaintButton(System.Drawing.Graphics,System.Drawing.Brush,System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Is called to draw the expand/collapse button.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to paint.</param>
            <param name="background">The background brush.</param>
            <param name="foreground">The foreground pen.</param>
            <param name="x">The left coordinate of the expand/collapse button.</param>
            <param name="y">The top coordinate of the expand/collapse button.</param>
            <param name="w">The width of the expand/collapse button.</param>
            <param name="h">The height of the expand/collapse button.</param>
            <param name="expanded"></param>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeColumn.IndentChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeColumn.Indent" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeColumn.LineStyleChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeColumn.LineStyle" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeColumn.ShowPlusMinusChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeColumn.ShowPlusMinus" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeColumn.UseBoldFontForParentChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeColumn.UseBoldFontForParent" /> property is changed on the control.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeColumn.CollapsedImage">
            <summary>
            Gets or sets the image displayed when a tree node is in the collapsed state.
            </summary>
            <value>An <see cref="T:System.Drawing.Image" /> displayed when a tree node is in the collapsed state.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeColumn.CollapsedImageIndex">
            <summary>
            Gets or sets the image list index of the image displayed when the tree node is in the collapsed state.
            </summary>
            <value>The zero-based index of the image in the <see cref="T:System.Windows.Forms.ImageList" />.</value>
            <seealso cref="P:NickLee.Views.Windows.Forms.TreeColumn.CollapsedImage" />
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeColumn.ExpandedImage">
            <summary>
            Gets or sets the image displayed when a tree node is in the expanded state.
            </summary>
            <value>An <see cref="T:System.Drawing.Image" /> displayed when a tree node is in the expanded state.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeColumn.ExpandedImageIndex">
            <summary>
            Gets or sets the image list index of the image displayed when the tree node is in the expanded state.
            </summary>
            <value>The zero-based index of the image in the <see cref="T:System.Windows.Forms.ImageList" />.</value>
            <seealso cref="P:NickLee.Views.Windows.Forms.TreeColumn.ExpandedImage" />
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeColumn.Indent">
            <summary>
            Gets or sets the distance to indent each of the child tree levels.
            </summary>
            <value>The distance in pixels to indent each of the child tree levels.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">The property is negative.</exception>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeColumn.LeafImage">
            <summary>
            Gets or sets the image displayed when a tree node is a leaf.
            </summary>
            <value>An <see cref="T:System.Drawing.Image" /> displayed when a tree node is a leaf.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeColumn.LeafImageIndex">
            <summary>
            Gets or sets the image list index of the image displayed when the tree node has no children.
            </summary>
            <value>The zero-based index of the image in the <see cref="T:System.Windows.Forms.ImageList" />.</value>
            <seealso cref="P:NickLee.Views.Windows.Forms.TreeColumn.LeafImage" />
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeColumn.LineStyle">
            <summary>
            Gets or sets the style of lines linking parent and child nodes.
            </summary>
            <value>
            One of the <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle" /> values.
            The default value is <see cref="F:NickLee.Views.Windows.Forms.GridLineStyle.None" />.
            </value>
            <remarks>The lines are draw using the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.GridLineColor" /> property.</remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeColumn.ShowPlusMinus">
            <summary>
            Gets or sets a value indicating whether plus-sign (+) and minus-sign (-) buttons are displayed next to tree nodes that contain child tree nodes.
            </summary>
            <value>
            <see langword="true" /> if plus-sign and minus-sign buttons are displayed next to tree nodes that contain child tree nodes; <see langword="false" /> otherwise.
            The default value is <see langword="true" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeColumn.UseBoldFontForParent">
            <summary>
            Gets or sets a value indicating whether parent nodes will be displayed using a bold font.
            </summary>
            <value>
            <see langword="true" /> if parent nodes are displayed using a bold font; <see langword="false" /> otherwise.
            The default value is <see langword="true" />.
            </value>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.TableSelectionChangedEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:NickLee.Views.Windows.Forms.TreeTable.SelectionChanged" /> event of a <see cref="T:NickLee.Views.Windows.Forms.TreeTable" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.TableColumnsChangeEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:NickLee.Views.Windows.Forms.TableColumnCollection.CollectionChanged" /> or
            a <see cref="E:NickLee.Views.Windows.Forms.TableColumnCollection.CollectionChanging" /> event of a <see cref="T:NickLee.Views.Windows.Forms.TableColumnCollection" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.RowControllerChangeEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Windows.Forms.IRowController.RowControllerChanged" /> event of the <see cref="T:NickLee.Views.Windows.Forms.IRowController" /> interface.
            </summary>
            <remarks>An <see cref="E:NickLee.Views.Windows.Forms.IRowController.RowControllerChanged" /> event is raised when the data in an <see cref="T:NickLee.Views.Windows.Forms.IRowController" /> changes.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.RowControllerChangeEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.RowControllerChangeEventArgs" /> class that resets the whole model.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.RowControllerChangeEventArgs.#ctor(NickLee.Views.Windows.Forms.RowControllerAction)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.RowControllerChangeEventArgs" /> class with the specified action.
            </summary>
            <param name="action">One value of <see cref="T:NickLee.Views.Windows.Forms.RowControllerAction" />.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.RowControllerChangeEventArgs.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.RowControllerChangeEventArgs" /> class specifying the new first visible row.
            </summary>
            <param name="row">The zero-based index of the new first visible row.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.RowControllerChangeEventArgs.#ctor(NickLee.Views.Windows.Forms.RowControllerAction,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.RowControllerChangeEventArgs" /> class with the specified row and action.
            </summary>
            <param name="action">One value of <see cref="T:NickLee.Views.Windows.Forms.RowControllerAction" />.</param>
            <param name="row">The zero-based index of the row that changed.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.RowControllerChangeEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.RowControllerChangeEventArgs" /> class with a new size for the specified row.
            </summary>
            <param name="row">The zero-based index of the row that changed.</param>
            <param name="height">The new size of the row.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.RowControllerChangeEventArgs.#ctor(NickLee.Views.Windows.Forms.RowControllerAction,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.RowControllerChangeEventArgs" /> class with the specified row and action.
            </summary>
            <param name="action">One value of <see cref="T:NickLee.Views.Windows.Forms.RowControllerAction" />.</param>
            <param name="row">The zero-based index of the first row that changed.</param>
            <param name="count">The number of rows that changed.</param>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.RowControllerChangeEventArgs.Action">
            <summary>
            Gets the action that has occurred on the model.
            </summary>
            <value>
            One of the <see cref="T:NickLee.Views.Windows.Forms.RowControllerAction" /> values.
            </value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.RowControllerChangeEventArgs.Height">
            <summary>
            Gets the new height of the row whose size was changed.
            </summary>
            <value>An <see cref="T:System.Int32" /> that represents the height of the row
            whose size was changed.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.RowControllerChangeEventArgs.Row">
            <summary>
            Gets the zero-based index of the row on which an action has occurred.
            </summary>
            <value>The zero-based index of the row on which an action has occurred.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.RowControllerChangeEventArgs.RowCount">
            <summary>
            Gets the number of rows that changed.
            </summary>
            <value>An <see cref="T:System.Int32" /> the represents the number of rows
            that changed.</value>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.Printing.Footer">
            <summary>
            Defines the footer of a document.
            </summary>
            <remarks>
            <p>Describes the footer of an <see cref="T:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument" />. You can set the
            footer of an <see cref="T:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument" /> using the
            <see cref="P:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.Footer" /> property.</p>
            <p>A footer is defined by three text sections. The texts will be drawn on the left,
            center and right area of the footer. Each text can have several lines and may
            contain some predefined patterns that will be translated to values of the document
            that is printed. For example, the following footer:<br></br>
            <code>
            new Footer("Page " + HeaderFooter.PagePattern, null, null);
            </code>
            will print 'Page 1' on the left section of the first page.</p>
            <p>Such patterns exist for the page number, the number of pages in the document,
            the file name, the document name, the author, the date and time.</p>
            </remarks>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.Printing.HeaderFooter">
            <summary>
            Defines the <see langword="abstract" /> base class for the header and footer of a printable document.
            </summary>
            <remarks>
            <p>This class is the base class for the <see cref="T:NickLee.Views.Windows.Forms.Printing.Header" /> and <see cref="T:NickLee.Views.Windows.Forms.Printing.Footer" />
            classes that describe the header and the footer of a
            <see cref="T:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument" />.</p>
            <p>You can set the header and the footer of a <see cref="T:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument" />
            using the <see cref="P:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.Header" /> and
            <see cref="P:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.Footer" /> properties.</p>
            <p>A header or footer is defined by three text sections. The texts will be drawn on
            the left, center and right area of the header. Each text can have several lines and
            may contain some predefined patterns that will be translated to values of the
            document that is printed. For example, the following header:<br></br>
            <code>
            new Header("Page " + HeaderFooter.PagePattern, null, null);
            </code>
            will print 'Page 1' on the left section of the first page.</p>
            <p>Such patterns exist for the page number, the number of pages in the document,
            the file name, the document name, the author, the date and time.</p>
            </remarks>
            <seealso cref="T:NickLee.Views.Windows.Forms.Printing.Header" />
            <seealso cref="T:NickLee.Views.Windows.Forms.Printing.Footer" />
            <seealso cref="T:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.HeaderFooter.#ctor">
            <summary>
            Creates and initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.Printing.HeaderFooter" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.HeaderFooter.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates and initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.Printing.HeaderFooter" /> class.
            </summary>
            <param name="left">
            The text printed on the left of the page.
            </param>
            <param name="center">
            The text printed on the center of the page.
            </param>
            <param name="right">
            The text printed on the right of the page.
            </param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.HeaderFooter.AddPattern(System.String,NickLee.Views.Windows.Forms.Printing.HeaderFooter.GetReplacingValue)">
            <summary>
            Adds a new pattern with a delegate to compute the replacing value.
            </summary>
            <param name="pattern">The new pattern to be replaced.</param>
            <param name="func">
            The delegate of type <see cref="T:NickLee.Views.Windows.Forms.Printing.HeaderFooter.GetReplacingValue" /> to
            compute the replacing value.
            </param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.HeaderFooter.Clone">
            <summary>
            Copies the <see cref="T:NickLee.Views.Windows.Forms.Printing.HeaderFooter" />.
            </summary>
            <returns>A new <see cref="T:NickLee.Views.Windows.Forms.Printing.HeaderFooter" /> instance.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.HeaderFooter.Print(System.Drawing.Graphics,System.Drawing.RectangleF,NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument)">
            <summary>
            Prints this header/footer object.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> object where to print.</param>
            <param name="bounds">
            A <see cref="T:System.Drawing.RectangleF" /> structure that specifies the location of the drawn text.
            </param>
            <param name="doc">
            The <see cref="T:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument" /> currently being printed.
            </param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.HeaderFooter.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents the current
            <see cref="T:NickLee.Views.Windows.Forms.Printing.HeaderFooter" />.
            </summary>
            <returns>
            Returns a <strong>String</strong> that represents the current
            <see cref="T:NickLee.Views.Windows.Forms.Printing.HeaderFooter" />.
            </returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.HeaderFooter.ToString(NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument)">
            <summary>
            Converts the header or footer to a pretty string replacing the patterns
            by values from the document.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.Printing.HeaderFooter.AuthorPattern">
            <summary>
            The pattern for the name of the author of the document.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.Printing.HeaderFooter.DatePattern">
            <summary>
            The pattern for the printing date.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.Printing.HeaderFooter.DocumentPattern">
            <summary>
            The pattern for the name of the document.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.Printing.HeaderFooter.FileNamePattern">
            <summary>
            The pattern for the name of the file associated with the document.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.Printing.HeaderFooter.PagePattern">
            <summary>
            The pattern for the page number.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.Printing.HeaderFooter.PagesPattern">
            <summary>
            The pattern for the number of pages in the document.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.Printing.HeaderFooter.TimePattern">
            <summary>
            The pattern for the printing time.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.HeaderFooter.CenterFont">
            <summary>
            Gets or sets the font for the centered text.
            </summary>
            <value>A <see cref="T:System.Drawing.Font" /> object that defines the font of the center text of the header.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.HeaderFooter.CenterText">
            <summary>
            Gets or sets the centered text.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the text to print on the center.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.HeaderFooter.Color">
            <summary>
            Gets or sets the color of the header or footer.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the color
            of the header or footer. The default value is <see cref="P:System.Drawing.Color.Black">Color.Black</see>.
            </value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.HeaderFooter.Height">
            <summary>
            Gets the heigth of this object.
            </summary>
            <value>The height of the header.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.HeaderFooter.LeftFont">
            <summary>
            Gets or sets the font for the left text.
            </summary>
            <value>A <see cref="T:System.Drawing.Font" /> object that defines the font of the left text of the header.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.HeaderFooter.LeftText">
            <summary>
            Gets or sets the left text.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the text to print on the left.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.HeaderFooter.LineAlignment">
            <summary>
            Gets or sets the vertical line alignment.
            </summary>
            <value>One of the <see cref="T:System.Drawing.StringAlignment" /> values. The
            default value is <strong>Near</strong> for a header and <strong>Far</strong>
            for a footer.
            </value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.HeaderFooter.RightFont">
            <summary>
            Gets or sets the font for the right text.
            </summary>
            <value>A <see cref="T:System.Drawing.Font" /> object that defines the font of the right text of the header.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.HeaderFooter.RightText">
            <summary>
            Gets or sets the right text.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the text to print on the right.</value>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.Printing.HeaderFooter.GetReplacingValue">
            <summary>
            Achieves the computation of the value to replace a pattern by.
            </summary>
            <param name="document">A <see cref="T:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument">document</see> that contains
            the data to print.
            </param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.Footer.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:NickLee.Views.Windows.Forms.Printing.Footer" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.Footer.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:NickLee.Views.Windows.Forms.Printing.Footer" /> class.
            </summary>
            <param name="left">
            The text printed on the left of the page.
            </param>
            <param name="center">
            The text printed on the center of the page.
            </param>
            <param name="right">The text printed on the right of the page.
            </param>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.NodeStateChangeEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Windows.Forms.TreeTable.NodeStateChanging" /> and <see cref="E:NickLee.Views.Windows.Forms.TreeTable.NodeStateChanged" />
            events of the <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> class.
            </summary>
            <remarks>The <see cref="E:NickLee.Views.Windows.Forms.TreeTable.NodeStateChanging" /> is raised before expanding or collapsing a node.
            The <see cref="E:NickLee.Views.Windows.Forms.TreeTable.NodeStateChanged" /> is raised after expanding or collapsing a node.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.NodeStateChangeEventArgs.#ctor(System.Object,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.NodeStateChangeEventArgs" /> class.
            </summary>
            <param name="node">The node whose state is being changed.</param>
            <param name="expanded"><see langword="true" /> if the node is being expanded;
            <see langword="false" /> otherwise.</param>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.NodeStateChangeEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the operation should be canceled.
            </summary>
            <value><see langword="true" /> if the operation should be canceled;
            <see langword="false" /> otherwise. The default value is <see langword="false" />.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.NodeStateChangeEventArgs.Expanded">
            <summary>
            Gets a value indicating whether the node is being expanded.
            </summary>
            <value><see langword="true" /> if the node is being expanded;
            <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.NodeStateChangeEventArgs.Node">
            <summary>
            Gets the node whose state is being changed.
            </summary>
            <value>An <see cref="T:System.Object" /> representing the node whose state is being
            changed.</value>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.GridLineStyle">
            <summary>
            Specifies the style of gridlines in a <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> control.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.Design.TreeTableDesigner">
            <summary>
            Defines a designer for the <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> class.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Design.TreeTableDesigner.AssociatedComponents">
            <summary>
            This member overrides <see cref="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents">ComponentDesigner.AssociatedComponents</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Design.TreeTableDesigner.Verbs">
            <summary>
            This member overrides <see cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs">ComponentDesigner.Verbs</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Web.UI.Design.TreeTableDesigner">
            <summary>
            This class is for internal use only and is not intended to be used by your code.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.Design.TreeTableDesigner.GetPersistInnerHtml">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Design.ControlDesigner.GetPersistInnerHtml">ControlDesigner.GetPersistInnerHtml</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.Design.TreeTableDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Overridden. See <see cref="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)">ComponentDesigner.Initialize</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.Design.TreeTableDesigner.PreFilterProperties(System.Collections.IDictionary)">
            <summary>
            Overridden. See <see cref="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)">ComponentDesigner.PreFilterProperties</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.Design.TreeTableDesigner.ResetColumns">
            <summary>
            Resets the <strong>Columns</strong> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.Design.TreeTableDesigner.ShouldSerializeColumns">
            <summary>
            Indicates whether the <strong>Columns</strong> property should be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="P:NickLee.Views.Web.UI.Design.TreeTableDesigner.Columns">
            <summary>
            Gets or sets the columns of the tree table.
            </summary>
        </member>
        <member name="P:NickLee.Views.Web.UI.Design.TreeTableDesigner.DesignTimeHtmlRequiresLoadComplete">
            <summary>
            Overridden. See <see cref="P:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete">ControlDesigner.DesignTimeHtmlRequiresLoadComplete</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Web.UI.Design.TreeTableDesigner.Verbs">
            <summary>
            Overridden. See <see cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs">ComponentDesigner.Verbs</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.TreeTable">
            <summary>
            Defines a Windows Form table that displays a hierarchical tree of nodes
            exposed through an <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" /> model.
            </summary>
            <remarks>
            <p>The <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> control displays a hierarchical tree of nodes in a
            table.</p>
            <p>To display data in a <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> use the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.TreeModel" />
            property. You can use the default <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" /> implementation
            (<see cref="T:NickLee.Views.Windows.Forms.DefaultTreeModel" />) or define your own by implementing the
            <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" /> interface.</p>
            <p>The table is initially created without any columns. You can add columns
            (instances of <see cref="T:NickLee.Views.Windows.Forms.TableColumn" />) to the table by using the
            <see cref="P:NickLee.Views.Windows.Forms.TreeTable.Columns" /> property. The <see cref="T:NickLee.Views.Windows.Forms.TreeColumn" /> class
            defines a column that displays the hierarchy of nodes of the <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" /> with
            (+) and (-) signs that allows you to collapse or expand the hierarchy.</p>
            <p>Each column can display a property of a node of the <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" />.
            The name of the displayed property is defined by the
            <see cref="P:NickLee.Views.Windows.Forms.TableColumn.MappingName" /> property of the <see cref="T:NickLee.Views.Windows.Forms.TableColumn" />.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to create a <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> with some columns.
            The <strong>TreeTable</strong> is connected to a <see cref="T:NickLee.Views.Windows.Forms.DefaultTreeModel" /> that wraps
            an <see cref="T:System.Collections.ICollection" />. We suppose that the object located in the collection have the
            <strong>Name</strong> and <strong>Value</strong> properties defined.
            </para>
            <code lang="C#">
            private TreeTable CreateTable(ICollection collection) {

            // Creates a DefaultTreeModel that wraps the collection
            ITreeModel model = new DefaultTreeModel(collection);

            // Creates a TreeTable with no columns.
            TreeTable table = new TreeTable(model);

            // Creates a tree column mapped to the "Name" property of the tree model.
            // This column is read-only
            TreeColumn column1 = new TreeColumn("Name", "Name");
            column1.ReadOnly = true;

            // Creates a column mapped to the "Value" property of the tree model.
            TableColumn column2 = new TableColumn("Value", "Value");

            // Adds the columns to the table.
            table.Columns.AddRange(new TableColumn[] { column1, column2 });

            // Returns the table
            return table;
            }
            </code>
            <code lang="Visual Basic">
            Private Function CreateTable(ByVal collection As ICollection) As TreeTable

            ' Creates a DefaultTreeModel that wraps the collection
            Dim model As New DefaultTreeModel(collection)

            ' Creates a TreeTable with no columns.
            Dim table As New TreeTable(model)

            ' Creates a tree column mapped to the "Name" property of the tree model.
            ' This column is read-only
            Dim column1 As New TreeColumn("Name", "Name")
            column1.ReadOnly = true

            ' Creates a column mapped to the "Value" property of the tree model.
            Dim column2 As New TableColumn ("Value", "Value")

            ' Adds the columns to the table.
            table.Columns.AddRange(New TableColumn() { column1, column2 })

            ' Returns the table
            Return table
            End Function
            </code>
            </example>
            <seealso cref="T:NickLee.Views.Windows.Forms.ITreeModel" />
            <seealso cref="T:NickLee.Views.Windows.Forms.TableColumn" />
            <seealso cref="T:NickLee.Views.Windows.Forms.TreeColumn" />
            <seealso cref="T:NickLee.Views.Windows.Forms.ImageTableColumn" />
            <seealso cref="P:NickLee.Views.Windows.Forms.TreeTable.TreeModelView" />
        </member>
        <member name="T:NickLee.Views.Windows.Forms.IRowController">
            <summary>
            Represents a list of objects, oriented for graphical representation.
            </summary>
            <remarks>
            <p>The interface provides the following services: row selection, row size, first
            visible row.</p>
            <p>This interface is implemented by the <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> control so that
            other controls that need to synchronize with a <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> can directly
            connect to the events of the row controller.</p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.IRowController.AddSelectionInterval(System.Int32,System.Int32)">
            <summary>
            When implemented by a class, adds the rows in the specified range to the selection.
            </summary>
            <remarks>The method selects the rows in the range defined by the
            two indexes. It is not necessary that <strong>index0</strong> is smaller than <strong>index1</strong>. The
            rows at <strong>index0</strong> and <strong>index1</strong> are also selected.</remarks>
            <param name="index0">The first index to add to the selection.</param>
            <param name="index1">The last index to add to the selection.</param>
            <remarks>When changing its selection, a row controller should raise the
            appropriate <see cref="E:NickLee.Views.Windows.Forms.IRowController.RowControllerChanged" /> event.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.IRowController.ClearSelection">
            <summary>
            When implemented by a class, removes all the selected rows from the selection.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.IRowController.GetRowHeight(System.Int32)">
            <summary>
            When implemented by a class, gets the height of the specified row.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <returns>The size of the specified row.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.IRowController.GetRowPosition(System.Int32)">
            <summary>
            When implemented by a class, gets the vertical offset of the specified row.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <returns>The vertical offset of the specified row.</returns>
            <remarks>The <see cref="P:NickLee.Views.Windows.Forms.IRowController.FirstVisibleRow" /> row position is <strong>0</strong>.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.IRowController.GetSelection">
            <summary>
            When implemented by a class, gets the selected rows of the row controller.
            </summary>
            <returns>An array of zero-based indices of the selected rows.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.IRowController.GetValueAt(System.Int32)">
            <summary>
            When implemented by a class, gets the value of the specified row.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <returns>The value of the specified row.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.IRowController.IndexOfRow(System.Object)">
            <summary>
            When implemented by a class, gets the zero-based index of the specified value in the row controller.
            </summary>
            <param name="value">The value.</param>
            <returns>The zero-based index of the specified value in the row controller, or
            <strong>-1</strong> if <paramref name="value" /> is not in the row controller.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.IRowController.IsSelected(System.Int32)">
            <summary>
            When implemented by a class, returns a value indicating whether the specified row is selected or not.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <returns>A value indicating whether the specified row is selected or not.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.IRowController.RemoveSelectionInterval(System.Int32,System.Int32)">
            <summary>
            When implemented by a class, deselects the rows in the specified range.
            </summary>
            <remarks>The method deselects the rows in the range defined by the
            two indexes. It is not necessary that <strong>index0</strong> is smaller than <strong>index1</strong>. The
            rows at <strong>index0</strong> and <strong>index1</strong> are also deselected.</remarks>
            <param name="index0">The first index to remove from the selection.</param>
            <param name="index1">The last index to remove from the selection.</param>
            <remarks>When changing its selection, a row controller should raise the
            appropriate <see cref="E:NickLee.Views.Windows.Forms.IRowController.RowControllerChanged" /> event.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.IRowController.SetRowHeight(System.Int32,System.Int32)">
            <summary>
            When implemented by a class, sets the height of the specified row.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <param name="height">The height of the row.</param>
            <remarks>When changing the height of its rows, a row controller should raise the
            appropriate <see cref="E:NickLee.Views.Windows.Forms.IRowController.RowControllerChanged" /> event.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.IRowController.SetRowHeights(System.Int32)">
            <summary>
            When implemented by a class, sets the height of all the rows.
            </summary>
            <param name="height">The new height.</param>
            <remarks>When changing the height of all the rows, a row controller should raise the
            appropriate <see cref="E:NickLee.Views.Windows.Forms.IRowController.RowControllerChanged" /> event.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.IRowController.SetSelected(System.Int32,System.Boolean)">
            <summary>
            When implemented by a class, sets the selection state of a single row of the row controller.
            </summary>
            <param name="row">The zero-based index of the row whose selection is being changed.</param>
            <param name="value">A value indicating whether <paramref name="row" /> should be selected or not.</param>
            <remarks>When changing its selection, a row controller should raise the
            appropriate <see cref="E:NickLee.Views.Windows.Forms.IRowController.RowControllerChanged" /> event.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.IRowController.SetSelectionInterval(System.Int32,System.Int32)">
            <summary>
            When implemented by a class, sets the selection to the specified range.
            </summary>
            <remarks>The method sets the selection to the range defined by the
            two indexes. It is not necessary that <strong>index0</strong> is smaller than <strong>index1</strong>. The
            rows at <strong>index0</strong> and <strong>index1</strong> are also selected.</remarks>
            <param name="index0">The first index to select.</param>
            <param name="index1">The last index to select.</param>
            <remarks>When changing its selection, a row controller should raise the
            appropriate <see cref="E:NickLee.Views.Windows.Forms.IRowController.RowControllerChanged" /> event.</remarks>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.IRowController.RowControllerChanged">
            <summary>
            Occurs when the row controller changes.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.IRowController.CurrentRow">
            <summary>
            When implemented by a class, gets or sets the current row of the row controller.
            </summary>
            <value>The zero-based index of the current row of the row controller.</value>
            <remarks>When changing its <see cref="P:NickLee.Views.Windows.Forms.IRowController.CurrentRow" />, a row controller should raise the
            appropriate <see cref="E:NickLee.Views.Windows.Forms.IRowController.RowControllerChanged" /> event.</remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.IRowController.FirstVisibleRow">
            <summary>
            When implemented by a class, gets or sets the first visible row of the row controller.
            </summary>
            <value>The zero-based index of the first visible row of the row controller.</value>
            <remarks>When changing its <see cref="P:NickLee.Views.Windows.Forms.IRowController.FirstVisibleRow" />, a row controller should raise the
            appropriate <see cref="E:NickLee.Views.Windows.Forms.IRowController.RowControllerChanged" /> event.</remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.IRowController.FirstVisibleRowAdjusting">
            <summary>
            When implemented by a class, gets or sets a value indicating whether the row controller is adjusting its first visible row.
            </summary>
            <value><see langword="true" /> if the first visible row is being adjusted;
            <see langword="false" /> otherwise.</value>
            <remarks>This value can be used when the <see cref="P:NickLee.Views.Windows.Forms.IRowController.FirstVisibleRow" /> is changed many times, using
            the scroll bar, for example. When receiving a <see cref="E:NickLee.Views.Windows.Forms.IRowController.RowControllerChanged" /> event that indicates that the
            <see cref="P:NickLee.Views.Windows.Forms.IRowController.FirstVisibleRow" /> has changed, a listener of the row controller can use <see cref="P:NickLee.Views.Windows.Forms.IRowController.FirstVisibleRowAdjusting" />
            to know whether the row controller is scrolling or not.</remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.IRowController.RowCount">
            <summary>
            When implemented by a class, gets the number of rows of the row controller.
            </summary>
            <value>An <see cref="T:System.Int32" /> that represents the number of rows
            of the row controller.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.IRowController.SelectionAdjusting">
            <summary>
            When implemented by a class, gets or sets the adjustment status of selection.
            </summary>
            <value><see langword="true" /> if the selection is being adjusted;
            <see langword="false" /> otherwise.</value>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable.defaultPreferredColumnWidth">
            <summary>
            The default preferred column width.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable.defaultRowHeaderWidth">
            <summary>
            The default width of the row header.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable.FlagAutoExpand">
            <summary>
            Flag indicating autoExpand property.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable.FlagCanMoveColumn">
            <summary>
            Indicates if columns can be moved using the mouse.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable.FlagCanResizeColumn">
            <summary>
            Indicates if the user can resize a column.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable.FlagCanResizeRow">
            <summary>
            Indicates if the user can resize a row.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable.FlagHScrollBarVisible">
            <summary>
            Flag indicating whether the horizontal scrollbar is visible.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable.FlagInitializing">
            <summary>
            Indicates if we are in <strong>BeginInit/EndInit</strong> session.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable.FlagInMultipleSelection">
            <summary>
            Indicates if we are currently selecting several rows.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable.FlagLargeExpandCollapse">
            <summary>
            Indicates that we are currently doing a large expand/collapse modification.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable.FlagMovingColumn">
            <summary>
            Indicates that we are currently moving a column.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable.FlagMultiSelect">
            <summary>
            Indicates if the table can multi select lines
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable.FlagReadOnly">
            <summary>
            Indicates if the table is readonly
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable.FlagResizingColumn">
            <summary>
            Indicates if we are currently resizing a column.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable.FlagResizingRow">
            <summary>
            Indicates if we are currently resizing a row.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable.FlagScrollingHorizontally">
            <summary>
            Flag indicating whether the table is adjusting its horizontal scroll bar
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable.FlagSettingVerticalScrollbarValues">
            <summary>
            Flag indicating whether the table is adjusting its vertical scroll bar
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable.FlagUpdatingScroll">
            <summary>
            Indicates if we are in <strong>UpdateScroll</strong> method.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable.FlagVScrollBarVisible">
            <summary>
            Flag indicating whether the vertical scrollbar is visible.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> class.
            </summary>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to create a <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> with some columns.
            The <strong>TreeTable</strong> is connected to a <see cref="T:NickLee.Views.Windows.Forms.DefaultTreeModel" /> that wraps
            an <see cref="T:System.Collections.ICollection" />. We suppose that the object located in the collection have the
            <strong>Name</strong> and <strong>Value</strong> properties defined.
            </para>
            <code lang="C#">
            private TreeTable CreateTable(ICollection collection) {

            // Creates a DefaultTreeModel that wraps the collection
            ITreeModel model = new DefaultTreeModel(collection);

            // Creates a TreeTable with no columns.
            TreeTable table = new TreeTable(model);

            // Creates a tree column mapped to the "Name" property of the tree model.
            // This column is read-only
            TreeColumn column1 = new TreeColumn("Name", "Name");
            column1.ReadOnly = true;

            // Creates a column mapped to the "Value" property of the tree model.
            TableColumn column2 = new TableColumn("Value", "Value");

            // Adds the columns to the table.
            table.Columns.AddRange(new TableColumn[] { column1, column2 });

            // Returns the table
            return table;
            }
            </code>
            <code lang="Visual Basic">
            Private Function CreateTable(ByVal collection As ICollection) As TreeTable

            ' Creates a DefaultTreeModel that wraps the collection
            Dim model As New DefaultTreeModel(collection)

            ' Creates a TreeTable with no columns.
            Dim table As New TreeTable(model)

            ' Creates a tree column mapped to the "Name" property of the tree model.
            ' This column is read-only
            Dim column1 As New TreeColumn("Name", "Name")
            column1.ReadOnly = true

            ' Creates a column mapped to the "Value" property of the tree model.
            Dim column2 As New TableColumn ("Value", "Value")

            ' Adds the columns to the table.
            table.Columns.AddRange(New TableColumn() { column1, column2 })

            ' Returns the table
            Return table
            End Function
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.#ctor(System.Boolean)">
            <summary>
            This method is not intended to be used by your code.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.AddNodesInternal(System.Object,System.Int32,System.Object[])">
            <summary>
            Called when new subnodes have been added to a node.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.AddSelectionInterval(System.Int32,System.Int32)">
            <summary>
            Adds the rows in the specified range to the selection.
            </summary>
            <param name="index0">The first index to add to the selection.</param>
            <param name="index1">The last index to add to the selection.</param>
            <remarks>The method selects the rows in the range defined by the
            two indexes. It is not necessary that <paramref name="index0" /> is smaller that
            <paramref name="index1" />. The rows at <paramref name="index0" /> and
            <paramref name="index1" /> are also selected.</remarks>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index0" /> or
            <paramref name="index1" /> are not valid indices.</exception>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.AutoResizeColumn(System.Int32)">
            <summary>
            Resizes the specified column to its preferred width.
            </summary>
            <param name="column">The zero-based column index.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.AutoResizeRow(System.Int32)">
            <summary>
            Resizes the specified row to its preferred height.
            </summary>
            <param name="row">The zero-based row index.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.BeginInit">
            <summary>
            Begins the initialization of a <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> that is used on a form or used
            by another component. The initialization occurs at run time.
            </summary>
            <remarks>The Visual Studio .NET design environment uses this method
            to start the initialization of a component that is used on a form
            or used by another component. The <see cref="M:NickLee.Views.Windows.Forms.TreeTable.EndInit" /> method ends the
            initialization. The use of <strong>BeginInit</strong> and <strong>EndInit</strong> methods prevents the
            control from being used before it is fully initialized.</remarks>																																																																													///
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.BeginUpdate">
            <summary>
            Disables any redrawing of the tree table.
            </summary>
            <remarks>
            To maintain performance while several modifications are occuring on the tree
            model, call the <strong>BeginUpdate</strong> method. The <strong>BeginUpdate</strong> method
            prevents the control from painting until the <see cref="M:NickLee.Views.Windows.Forms.TreeTable.EndUpdate" /> method is called.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ClearSelection">
            <summary>
            Deselects all the rows.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.CollapseAll">
            <summary>
            Collapses recursively the whole tree.
            </summary>
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.IsRowExpanded(System.Int32)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.ExpandRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.CollapseRow(System.Object)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.CollapseAll(System.Int32)">
            <summary>
            Collapses the specified row and all its descendant nodes.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.IsRowExpanded(System.Int32)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.ExpandRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.CollapseRow(System.Object)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.CollapseAll(System.Object)">
            <summary>
            Collapses the specified node and all its descendant nodes.
            </summary>
            <param name="node">The tree node.</param>
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.IsRowExpanded(System.Int32)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.ExpandRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.CollapseRow(System.Object)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.CollapseRow(System.Int32)">
            <summary>
            Collapses the specified row.
            </summary>
            <param name="row">The zero-based index of the row to collapse.</param>
            <remarks>The <see cref="E:NickLee.Views.Windows.Forms.TreeTable.NodeStateChanging" /> and <see cref="E:NickLee.Views.Windows.Forms.TreeTable.NodeStateChanged" /> events are
            raised when a row is collapsed.</remarks>
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.IsRowExpanded(System.Int32)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.ExpandRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.CollapseAll(System.Object)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.CollapseRow(System.Object)">
            <summary>
            Collapses the specified node.
            </summary>
            <param name="node">The tree node to collapse.</param>
            <remarks>The <see cref="E:NickLee.Views.Windows.Forms.TreeTable.NodeStateChanging" /> and <see cref="E:NickLee.Views.Windows.Forms.TreeTable.NodeStateChanged" /> events are
            raised when a row is collapsed.</remarks>
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.IsRowExpanded(System.Int32)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.ExpandRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.CollapseAll(System.Object)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ColumnChanged(NickLee.Views.Windows.Forms.TableColumn,System.Boolean)">
            <summary>
            Invoked when a column has changed.
            </summary>
            <param name="column">The column that has changed.</param>
            <param name="size"><see langword="true" /> if the column size has changed; otherwise,
            <see langword="false" />.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ColumnCollectionChanged(NickLee.Views.Windows.Forms.TableColumnsChangeEventArgs)">
            <summary>
            Invoked when the column collection has changed.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ColumnCollectionChanging(NickLee.Views.Windows.Forms.TableColumnsChangeEventArgs)">
            <summary>
            Invoked when the column collection is going to change.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ColumnFromPoint(System.Int32)">
            <summary>
            Checks if the specified point is on a column.
            </summary>
            <param name="x">The coordinate to test.</param>
            <returns>The column index or <strong>-1</strong> if the point is not on a column.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ComputeVisibleRows(System.Object,System.Collections.ArrayList)">
            <summary>
            Fills list with all the descendants of node.
            Only called by GetVisibleRows.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.CreateDefaultColumns">
            <summary>
            Returns the default columns used by the control.
            </summary>
            <returns>An array of <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> objects.</returns>
            <remarks>
            The default implementation returns an empty array.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.CreateScrollBars">
            <summary>
            Creates vertical and horizontal scrollbars.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.Dispose(System.Boolean)">
            <summary>
            Cleans up any resources being used by the <see cref="T:NickLee.Views.Windows.Forms.TreeTable" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.EditCell(System.Int32,System.Int32)">
            <summary>
            Starts editing a cell at the specified location.
            </summary>
            <param name="row">The row index.</param>
            <param name="col">The column index.</param>
            <returns><see langword="true" /> if the editing has started;
            <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.EndInit">
            <summary>
            Ends the initialization of a <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> that is used on a form or
            used by another component. The initialization occurs at run time.
            </summary>
            <remarks>
            The Visual Studio .NET design environment uses this method to end
            the initialization of a component that is used on a form or used by
            another component. The <see cref="M:NickLee.Views.Windows.Forms.TreeTable.BeginInit" /> method starts the initialization.
            The use of <strong>BeginInit</strong> and <strong>EndInit</strong> methods prevents the control
            from being used before it is fully initialized.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.EndUpdate">
            <summary>
            Enables the redrawing of the tree table.
            </summary>
            <remarks>
            To maintain performance while several modifications are occuring on the tree
            model, call the <strong>BeginUpdate</strong> method. The <strong>BeginUpdate</strong> method
            prevents the control from painting until the <see cref="M:NickLee.Views.Windows.Forms.TreeTable.EndUpdate" /> method is called.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.EnsureColumnVisible(System.Int32)">
            <summary>
            Scrolls the table so that the specified column becomes
            visible.
            </summary>
            <param name="columnIndex">The column index.</param>
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.EnsureRowVisible(System.Int32)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.EnsureVisible(System.Int32,System.Int32)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.EnsureRowVisible(System.Int32)">
            <summary>
            Scrolls the table so that the specified row becomes
            visible.
            </summary>
            <param name="rowIndex">The row index.</param>
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.EnsureColumnVisible(System.Int32)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.EnsureVisible(System.Int32,System.Int32)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.EnsureRowVisible(System.Int32,System.Int32)">
            <summary>
            Scrolls the table so that the specified rows become
            visible.
            </summary>
            <param name="startIndex">The zero-based row index of the first row.</param>
            <param name="endIndex">The zero-based row index of the last row.</param>
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.EnsureColumnVisible(System.Int32)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.EnsureVisible(System.Int32,System.Int32)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.EnsureVisible(System.Int32,System.Int32)">
            <summary>
            Scrolls the table so that the specified cell becomes
            visible.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="columnIndex">The column index.</param>
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.EnsureColumnVisible(System.Int32)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.EnsureRowVisible(System.Int32)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ExpandAll">
            <summary>
            Expands recursively the whole tree.
            </summary>
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.IsRowExpanded(System.Int32)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.ExpandRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.CollapseRow(System.Object)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ExpandAll(System.Int32)">
            <summary>
            Expands the specified row and all its descendant nodes.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.IsRowExpanded(System.Int32)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.ExpandRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.CollapseRow(System.Object)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ExpandAll(System.Object)">
            <summary>
            Expands the specified node and all its descendant nodes.
            </summary>
            <param name="node">The tree node to expand.</param>
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.IsRowExpanded(System.Int32)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.ExpandRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.CollapseRow(System.Object)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ExpandRow(System.Int32)">
            <summary>
            Expands the specified row.
            </summary>
            <param name="row">The zero-based index of the row to expand.</param>
            <remarks>The <see cref="E:NickLee.Views.Windows.Forms.TreeTable.NodeStateChanging" /> and <see cref="E:NickLee.Views.Windows.Forms.TreeTable.NodeStateChanged" /> events are
            raised when a row is expanded.</remarks>
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.IsRowExpanded(System.Int32)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.CollapseRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.ExpandAll(System.Object)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ExpandRow(System.Object)">
            <summary>
            Expands the specified node.
            </summary>
            <param name="node">The tree node to expand.</param>
            <remarks>The <see cref="E:NickLee.Views.Windows.Forms.TreeTable.NodeStateChanging" /> and <see cref="E:NickLee.Views.Windows.Forms.TreeTable.NodeStateChanged" /> events are
            raised when a row is expanded.</remarks>
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.IsRowExpanded(System.Int32)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.CollapseRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.ExpandAll(System.Object)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.FireEvent(System.Object,System.EventArgs)">
            <summary>
            Fires an event based on key in the Events list.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.GetCellBounds(System.Int32,System.Int32)">
            <summary>
            Gets the bounding rectangle of the specified cell.
            </summary>
            <param name="rowIndex">The row index of the cell.</param>
            <param name="columnIndex">The column index of the cell.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding
            rectangle of the cell.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.GetCellEditor(System.Int32,System.Int32)">
            <summary>
            Gets the editor for the specified cell.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <param name="column">The zero-based index of the column.</param>
            <returns>The <see cref="T:NickLee.Views.Windows.Forms.ITreeTableCellEditor" /> that will
            be used to edit the specified cell.</returns>
            <remarks>
            The default implementation uses the editor defined by the column,
            if any. Otherwise, the method tries to locate a <see cref="T:NickLee.Views.Windows.Forms.TreeTableEditorAttribute" />
            on the property to be edited. If no specific editor is found, the method returns
            a <see cref="T:NickLee.Views.Windows.Forms.DefaultTreeTableCellEditor" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.GetChild(System.Object,System.Int32)">
            <summary>
            Retrieves the node child corresponding to the specified index.
            </summary>
            <param name="node">The tree node.</param>
            <param name="index">The zero-based index of the child.</param>
            <returns>The child of <paramref name="node" /> whose index is
            <paramref name="index" />.</returns>
            <remarks>If <paramref name="node" /> is <see langword="null" />, the root of the tree
            model is used.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.GetChildCount(System.Object)">
            <summary>
            Retrieves the number of children belonging to a node.
            </summary>
            <param name="node">The tree node.</param>
            <returns>The number of children of <paramref name="node" />.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.GetColumnBounds(System.Int32)">
            <summary>
            Gets the bounding rectangle of the specified column.
            </summary>
            <param name="column">The column index.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle of the column.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.GetColumnsWidth">
            <summary>
            Computes the sum of column width.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.GetFlag(System.UInt64)">
            <summary>
            Gets the value of a flag.
            </summary>
            <param name="flag">The flag.</param>
            <returns>The value of a flag.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.GetIndexOfChild(System.Object,System.Object)">
            <summary>
            Returns the zero-based index of the specified child in the specified node.
            </summary>
            <param name="node">The parent tree node.</param>
            <param name="child">The child node.</param>
            <returns>A zero-based index, or <strong>-1</strong> if the <paramref name="child" /> is not a child of
            <paramref name="parent" />.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.GetLastDescendant(System.Object)">
            <summary>
            Returns the very last child of the specified node (recursive)
            taking into account the node state (expand/collapse).
            </summary>
            <remarks>null is returned if node has no child or if it's not expanded.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.GetNextVisible(System.Object)">
            <summary>
            Retrieves the next visible node of the specified node.
            </summary>
            <param name="node">The tree node.</param>
            <returns>The next visible node of <strong>node</strong>, or <see langword="null" /> if there is no next visible node.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.GetParent(System.Object)">
            <summary>
            Retrieves the parent of the specified node.
            </summary>
            <param name="node">The tree node.</param>
            <returns>The parent node of the <paramref name="node" />, or <see langword="null" />
            if <paramref name="node" /> has no parent.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.GetPreviousVisible(System.Object)">
            <summary>
            Retrieves the previous visible node of the specified node.
            </summary>
            <param name="node">The tree node.</param>
            <returns>The previous visible node of <strong>node</strong>, or <see langword="null" />
            if there is no previous visible node.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.GetRowBounds(System.Int32)">
            <summary>
            Gets the bounding rectangle of the specified row.
            </summary>
            <param name="row">The row index.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle of the row.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.GetRowBounds(System.Int32,System.Int32)">
            <summary>
            Gets the bounding rectangle of the specified rows.
            </summary>
            <param name="fromIndex">The first row index.</param>
            <param name="toIndex">The last row index.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle of the rows.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.GetRowHeight(System.Int32)">
            <summary>
            Gets the height of the specified row.
            </summary>
            <param name="rowIndex">The row index.</param>
            <returns>The height of the specified row.</returns>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="rowIndex" /> is not
            a valid index.</exception>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.GetRowHeight(System.Object)">
            <summary>
            Gets the height of the row corresponding to the specified node.
            </summary>
            <param name="node">The tree node.</param>
            <returns>The height of the row corresponding to <paramref name="node" />.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="node" /> is not
            a node that belongs to the tree table.</exception>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.GetRowHeightSum">
            <summary>
            Computes the sum of all row heights.
            </summary>
            <returns>The sum of all row heights.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.GetRowPosition(System.Int32)">
            <summary>
            Gets the position of the specified row.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <returns>The position of the specified row.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.GetSelectedRows">
            <summary>
            Gets the selected nodes of the table.
            </summary>
            <returns>An array containing the selected nodes of the table.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.GetSelection">
            <summary>
            Gets the selected rows of the table.
            </summary>
            <returns>An array of zero-based indexes of the selected rows.</returns>
            <remarks>The returned array is sorted usin the row indices.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.GetValueAt(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Object" /> at the specified row index.
            </summary>
            <param name="rowIndex">The zero-based row index.</param>
            <returns>The node value at the specified row index.</returns>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="rowIndex" /> is not
            a valid index.</exception>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.GetValueAt(System.Int32,System.Int32)">
            <summary>
            Gets the value at the specified cell.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <param name="column">The zero-based index of the column.</param>
            <returns>The value at the specified cell.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.GetVisibleRows(System.Object)">
            <summary>
            Gets a list of all the descendant of the node that are visible when the node is visible.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.HandleHorizontalScroll(System.Object,System.EventArgs)">
            <summary>
            Invoked when the horizontal <strong>scrollBar</strong> value changes.
            </summary>
            <param name="sender">Sender of the event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.HandleVerticalScroll(System.Object,System.EventArgs)">
            <summary>
            Invoked when the vertical <strong>scrollBar</strong> value changes.
            </summary>
            <param name="sender">Sender of the event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.HandleVerticalScrollBarScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Invoked on the vertical scrollbar scroll event.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.HitTest(System.Drawing.Point)">
            <summary>
            Gets information about the <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> control at a specified point on the screen.
            </summary>
            <param name="point">A <see cref="T:System.Drawing.Point" /> that represents single x,y coordinates.
            </param>
            <returns>A <see cref="T:NickLee.Views.Windows.Forms.TreeTable.HitTestInfo" /> that contains specific information
            about the table.
            </returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.HitTestResizeColumn(System.Drawing.Point,System.Int32@)">
            <summary>
            Checks if the specified point is on the border of a column.
            </summary>
            <param name="p">The point to check.</param>
            <param name="col">The resulting column index or <strong>-1</strong> if the point is not on a column.</param>
            <returns><see langword="true" /> if the point is on the border of a column.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.IndexOfFirstDescendant(System.Object)">
            <summary>
            Returns the zero-based index of the first visible child in the node hierarchy.
            </summary>
            <param name="node">A tree node.</param>
            <returns>The zero-based index of the first visible child in the node hierarchy.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.IndexOfLastDescendant(System.Object)">
            <summary>
            Returns the zero-based index of the last visible child in the node hierarchy.
            </summary>
            <param name="node">A tree node.</param>
            <returns>The zero-based index of the last visible child in the node hierarchy.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.IndexOfRow(System.Object)">
            <summary>
            Gets the zero-based index of the specified node in the table.
            </summary>
            <param name="node">The tree node.</param>
            <returns>The zero-based row index of <paramref name="node" /> in the table, or
            <strong>-1</strong> if <paramref name="node" /> is not displayed by the table.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.InitColors">
            <summary>
            Initializes the colors.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.InitPrintingContext(System.Drawing.Rectangle)">
            <summary>
            Initializes the printing context.
            </summary>
            <param name="clientRect">
            The area where to print the tree table.
            </param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.InsertRows(System.Int32,System.Collections.IList,System.Boolean)">
            <summary>
            Is called to add internal rows into the table.
            </summary>
            <param name="index">The index at which rows will be added.</param>
            <param name="objects">The list of objects to add.</param>
            <param name="useCache"><see langword="true" /> to use cache information stored by
            a call to <see cref="M:NickLee.Views.Windows.Forms.TreeTable.RemoveRows(System.Int32,System.Int32,System.Boolean)" />; <see langword="true" /> otherwise.</param>
            <remarks>This method should be used under rare circumstances.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.InvalidateCell(System.Int32,System.Int32)">
            <summary>
            Invalidates the specified cell of the table.
            </summary>
            <param name="rowIndex">The zero-based index of the row.</param>
            <param name="columnIndex">The zero-based index of the column.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.InvalidateColumn(NickLee.Views.Windows.Forms.TableColumn)">
            <summary>
            Invalidates the specified column of the table.
            </summary>
            <param name="column">The table column.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.InvalidateColumn(System.Int32)">
            <summary>
            Invalidates the specified column of the table.
            </summary>
            <param name="columnIndex">The zero-based index of the column.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.InvalidateColumnHeaders">
            <summary>
            Invalidates the column headers of the table.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.InvalidateRow(System.Int32)">
            <summary>
            Invalidates the specified row of the table.
            </summary>
            <param name="rowIndex">The zero-based index of the row.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.IsCellEditable(System.Int32,System.Int32)">
            <summary>
            Gets a value indicating whether the specified cell is editable.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <param name="column">The zero-based index of the column.</param>
            <returns><see langword="true" /> if the specified cell is editable; Otherwise,
            <see langword="false" />.</returns>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="row" /> or
            <paramref name="column" /> are not valid indices.</exception>
            <remarks>
            <p>The default behavior of this method is to call the <see cref="M:NickLee.Views.Windows.Forms.TableColumn.IsRowEditable(System.Int32)" />
            method.</p>
            <p>To edit table cells using the mouse or the keyboard, the
            <see cref="P:NickLee.Views.Windows.Forms.TreeTable.ReadOnly" /> property must be set to
            <see langword="false" />.</p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.IsEditing">
            <summary>
            Gets the editing status of the table.
            </summary>
            <returns><see langword="true" /> if the table is currently editing a cell;
            <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.IsGroup(System.Int32)">
            <summary>
            Indicates whether the row located at the specified index is a group or a regular row.
            </summary>
            <param name="index">The zero-based index of the row.</param>
            <returns><see langword="true" /> if the row located at <paramref name="index" /> is a group;
            <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.IsHorizontalScrollBarNeeded">
            <summary>
            Checks if the horizontal scrollbar is needed.
            </summary>
            <remarks>The computation takes into account the visibility status
            of the other scrollbar.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.IsInitializing">
            <summary>
            Gets a value indicating whether the control is being initialized.
            </summary>
            <returns><see langword="true" /> if the control is being initialized; otherwise
            <see langword="false" />.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">Control.IsInputKey</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.IsLeaf(System.Int32)">
            <summary>
            Gets a value indicating whether the specified row is a leaf.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <returns>A value indicating whether the specified row is a leaf.</returns>
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.ExpandRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.CollapseRow(System.Object)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.IsLeaf(System.Object)">
            <summary>
            Returns a value indicating whether the specified node is a leaf.
            </summary>
            <param name="node">The tree node.</param>
            <returns><see langword="true" /> if <paramref name="node" /> is a leaf;
            <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.IsRowExpanded(System.Int32)">
            <summary>
            Gets a value indicating whether the specified row is expanded.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <returns>A value indicating whether the specified node is expanded.</returns>
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.ExpandRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.CollapseRow(System.Object)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.IsRowExpanded(System.Object)">
            <summary>
            Gets a value indicating whether the specified node is expanded.
            </summary>
            <param name="node">The tree node.</param>
            <returns>A value indicating whether the specified node is expanded.</returns>
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.ExpandRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.CollapseRow(System.Object)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.IsRowVisible(System.Object)">
            <summary>
            Gets a value indicating whether the specified node is visible.
            </summary>
            <param name="node">The tree node.</param>
            <returns><see langword="true" /> if the <paramref name="node" /> is visible in the table;
            otherwise <see langword="false" />.</returns>
            <remarks>
            A tree node is said to be visible when all its ancestors are expanded.
            </remarks>
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.ExpandRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.IsRowExpanded(System.Int32)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.IsSelected(System.Int32)">
            <summary>
            Gets a value indicating whether a specified row is selected.
            </summary>
            <param name="rowIndex">The row index to test.</param>
            <returns><see langword="true" /> if the row is selected; <see langword="false" /> otherwise.</returns>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="rowIndex" /> is not a
            valid index.</exception>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.IsSelectionEmpty">
            <summary>
            Gets a value that indicates if the selection is empty.
            </summary>
            <returns><see langword="true" /> if the table does not have any selected rows;
            <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.IsVerticalScrollBarNeeded">
            <summary>
            Checks if the vertical scrollbar is needed.
            </summary>
            <remarks>The computation takes into account the visibility status
            of the other scrollbar.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.LayoutScrollBars">
            <summary>
            Places the scrollbars depending on the orientation.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.NodesAdded(NickLee.Views.Windows.Forms.TreeModelChangeEventArgs)">
            <summary>
            Is called when nodes have been added to the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.TreeModel" />.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.NodesChanged(NickLee.Views.Windows.Forms.TreeModelChangeEventArgs)">
            <summary>
            Is called when a node has been changed into the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.TreeModel" />.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.NodesDeleted(NickLee.Views.Windows.Forms.TreeModelChangeEventArgs)">
            <summary>
            Is called when nodes have been removed from the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.TreeModel" />.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.NodesMoved(NickLee.Views.Windows.Forms.TreeModelChangeEventArgs)">
            <summary>
            Is called when a node has moved in the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.TreeModel" />.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.NodesReset(NickLee.Views.Windows.Forms.TreeModelChangeEventArgs)">
            <summary>
            Is called when a node has been reset in the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.TreeModel" />.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnAlternatingBackColorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.AlternatingBackColor" /> property is changed on the control.
            </summary>
            <remarks>Called when the <strong>AlternatingBackColor</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnAutoExpandChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.AutoExpand" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>AutoExpand</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnBackColorChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">Control.OnBackColorChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnBackgroundColorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.BackgroundColor" /> property is changed on the control.
            </summary>
            <remarks>Called when the <strong>BackgroundColor</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnBeginEdit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Windows.Forms.TreeTable.BeginEdit" /> event.
            </summary>
            <param name="args">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnBorderStyleChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.BorderStyle" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>BorderStyle</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnCanMoveColumnsChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.CanMoveColumns" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>CanMoveColumns</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnCanResizeColumnsChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.CanResizeColumns" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>CanResizeColumns</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnCanResizeRowsChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.CanResizeRows" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>CanResizeRows</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnColumnHeaderHeightChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.ColumnHeaderHeight" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>ColumnHeaderHeight</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnColumnHeadersVisibleChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.ColumnHeadersVisible" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>ColumnHeadersVisible</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnCreateControl">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnCreateControl">Control.OnCreateControl</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnCurrentCellChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Windows.Forms.TreeTable.CurrentCellChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
            <remarks>Called when the current cell is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnDrawTableCell(NickLee.Views.Windows.Forms.DrawTableCellEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Windows.Forms.TreeTable.DrawTableCell" /> event.
            </summary>
            <param name="e">An <see cref="T:NickLee.Views.Windows.Forms.DrawTableCellEventArgs" /> that contains the event data.</param>
            <remarks>Called to draw a table cell when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.OwnerDraw" /> property
            is set to <see langword="true" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnEditingNavigationChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Windows.Forms.TreeTable.EditingNavigationChanged" /> event.
            </summary>
            <param name="args">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnEditingStopped(System.Object,System.EventArgs)">
            <summary>
            Invoked when the <strong>ITreeTableCellEditor</strong> requests to stop editing.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnEditingValidated(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Windows.Forms.TreeTable.EditingValidated" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnEditingValidated(System.Object,System.EventArgs)">
            <summary>
            Invoked when the <strong>ITreeTableCellEditor</strong> requests to validate the edited value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnEndEdit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Windows.Forms.TreeTable.EndEdit" /> event.
            </summary>
            <param name="args">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnFlatStyleChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.FlatStyle" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>FlatStyle</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnFontChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">Control.OnFontChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnGotFocus(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)">Control.OnGotFocus</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnGridLineColorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.GridLineColor" /> property is changed on the control.
            </summary>
            <remarks>Called when the <strong>GridLineColor</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnGridLineStyleChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.GridLineStyle" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>GridLineStyle</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnGroupBackColorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.GroupBackColor" /> property is changed on the control.
            </summary>
            <remarks>Called when the <strong>GroupBackColor</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnHeaderBackColorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.HeaderBackColor" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>HeaderBackColor</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnHeaderFontChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.HeaderFont" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>HeaderFont</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnHeaderForeColorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.HeaderForeColor" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>HeaderForeColor</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnImageClick(System.Drawing.Point)">
            <summary>
            Simulates a click on the table.
            </summary>
            <param name="pt">The point of the click.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnInteractionException(System.UnhandledExceptionEventArgs)">
            <summary>
            Invoked when an exception has occured during an interaction in the table.
            </summary>
            <param name="args">An <see cref="T:System.UnhandledExceptionEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">Control.OnKeyDown</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">Control.OnKeyPress</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnLostFocus(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)">Control.OnLostFocus</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseDown" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> containing mouse information.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> containing mouse information.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> containing mouse information.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseWheel" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> containing mouse information.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnMultiSelectChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.MultiSelect" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>MultiSelect</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnNodeStateChanged(NickLee.Views.Windows.Forms.NodeStateChangeEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Windows.Forms.TreeTable.NodeStateChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:NickLee.Views.Windows.Forms.NodeStateChangeEventArgs" /> that contains the event data.</param>
            <remarks>Called when a node is expanded or collapsed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnNodeStateChanging(NickLee.Views.Windows.Forms.NodeStateChangeEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Windows.Forms.TreeTable.NodeStateChanging" /> event.
            </summary>
            <param name="e">An <see cref="T:NickLee.Views.Windows.Forms.NodeStateChangeEventArgs" /> that contains the event data.</param>
            <remarks>Called before a node is expanded or collapsed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnOwnerDrawChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.OwnerDraw" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>OwnerDraw</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.
            </summary>
            <param name="pe">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> containing paint data.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">Control.OnPaintBackground</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnPreferredColumnWidthChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.PreferredColumnWidth" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>PreferredColumnWidth</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnPreferredRowHeightChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.PreferredRowHeight" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>PreferredRowHeight</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnQueryNewRow(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Windows.Forms.TreeTable.QueryNewRow" /> event.
            </summary>
            <param name="args">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnReadOnlyChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.ReadOnly" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>ReadOnly</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnRightToLeftChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">Control.OnRightToLeftChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnRowControllerChanged(NickLee.Views.Windows.Forms.RowControllerChangeEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Windows.Forms.TreeTable.RowControllerChanged" /> event.
            </summary>
            <param name="e"> A <see cref="T:NickLee.Views.Windows.Forms.RowControllerChangeEventArgs" /> that contains the event data.</param>
            <remarks>Before raising the event, the method calls the <see cref="M:NickLee.Views.Windows.Forms.TableColumn.RowControllerChanged(NickLee.Views.Windows.Forms.RowControllerChangeEventArgs)" />
            method for each column.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnRowHeadersVisibleChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.RowHeadersVisible" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>RowHeadersVisible</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnRowHeaderWidthChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.RowHeaderWidth" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>RowHeaderWidth</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnScrollBarVisibilityChanged">
            <summary>
            Raises the <see cref="E:NickLee.Views.Windows.Forms.TreeTable.ScrollBarVisibilityChanged" /> event.
            </summary>
            <remarks>Called when the scrollbars visibility is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnSelectionBackColorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.SelectionBackColor" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>SelectionBackColor</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnSelectionChanged(NickLee.Views.Windows.Forms.TableSelectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Windows.Forms.TreeTable.SelectionChanged" /> event.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Windows.Forms.TableSelectionChangedEventArgs" /> that contains the event data.</param>
            <remarks>Called when the selection is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnSelectionForeColorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.SelectionForeColor" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>SelectionForeColor</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)">Control.OnSystemColorsChanged</see>
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnTreeModelChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Windows.Forms.TreeTable.TreeModelChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
            <remarks>Called when the tree model is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.OnVisibleChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">Control.OnVisibleChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.PageDown">
            <summary>
            Scrolls down the table of a whole page.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.PageUp">
            <summary>
            Scrolls up the table of a whole page.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.PaintColumnHeaders(System.Drawing.Graphics)">
            <summary>
            Painting column headers.
            </summary>
            <param name="g">The graphics.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.PaintCurrentRowArrow(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Drawing.Brush)">
            <summary>
            Painting the arrow for the current row.
            </summary>
            <param name="g">The graphics.</param>
            <param name="rowHeaderRect">Bounding box of row header.</param>
            <param name="rightToLeft">Right to left mode.</param>
            <param name="brush">The brush to fill the arrow.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.PaintGrid(System.Drawing.Graphics)">
            <summary>
            Paint cells, grid lines and row headers.
            </summary>
            <param name="g">The graphics for painting.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.PaintRectangleBetweenScrollBars(System.Drawing.Graphics)">
            <summary>
            Paints the rectangle between the two scrollbars when needed.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.PositionFromRowIndex(System.Int32)">
            <summary>
            Gets the absolute position of a row.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.PrintColumnsHeaders(System.Drawing.Printing.PrintPageEventArgs,System.Drawing.RectangleF)">
            <summary>
            Prints the column headers of the table.
            </summary>
            <param name="pe">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains the event data.</param>
            <param name="bounds">A <see cref="T:System.Drawing.RectangleF" /> that contains the size of the area where the header of the table component must be located in the printed page.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.PrintGrid(System.Drawing.Printing.PrintPageEventArgs,System.Drawing.RectangleF)">
            <summary>
            Prints the grid part of the table.
            </summary>
            <param name="pe">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains the event data.</param>
            <param name="bounds">A <see cref="T:System.Drawing.RectangleF" /> that contains the size of the area where the grid of the table component must be located in the printed page.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">Control.ProcessCmdKey</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">Control.ProcessDialogKey</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.RaiseSelectionChanged">
            <summary>
            Notifies listeners that the selection has changed.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.RaiseSelectionChanged(System.Boolean)">
            <summary>
            Notifies listeners that we have ended a series of selection adjustments.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.RaiseSelectionChanged(System.Int32,System.Int32)">
            <summary>
            Notifies listeners that the selection has changed between the two indexes.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.RaiseSelectionChanged(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Notifies listeners that the selection has changed between the two indexes.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.RecomputeRowIndexesAndPositions(System.Int32)">
            <summary>
            Recomputes the indexed rows and their positions after some rows have been inserted or removed.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.RefreshFromModel">
            <summary>
            This method is called when the whole model has changed.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.RefreshNode(System.Object)">
            <summary>
            This method is called when the whole hierarchy of the 'node' may have changed.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.RemoveNodesInternal(System.Object,System.Int32,System.Object[])">
            <summary>
            Called when subnodes have been removed from a node.
            Only called when node is visible and expanded...
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.RemoveRows(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Is called to remove internal rows from the table.
            </summary>
            <param name="index">The index of the first row to be removed.</param>
            <param name="count">The number of rows to remove.</param>
            <param name="cacheRows"><see langword="true" /> to keep information about the removed rows
            for future use; <see langword="false" /> otherwise.</param>
            <remarks>This method should be used under rare circumstances.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.RemoveSelectionInterval(System.Int32,System.Int32)">
            <summary>
            Deselects the rows in the specified range.
            </summary>
            <remarks>The method deselects the rows in the range defined by the
            two indexes. It is not necessary that <strong>index0</strong> is smaller that <strong>index1</strong>. The
            rows at <strong>index0</strong> and <strong>index1</strong> are also deselected.</remarks>
            <param name="index0">The first index to remove from the selection.</param>
            <param name="index1">The last index to remove from the selection.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ResetBackColor">
            <summary>
            Resets the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.BackColor" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ResetColumns">
            <summary>
            Resets the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.Columns" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ResetForeColor">
            <summary>
            Resets the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.ForeColor" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ResetPrintingContext">
            <summary>
            Sets to <see langword="null" /> the printing context.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.RowFromPosition(System.Int32)">
            <summary>
            Computes the index of the row at the specified position.
            </summary>
            <param name="position">The Y position.</param>
            <returns>The index of the row or <strong>-1</strong> if the position
            does not correspond to a row.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.RowIndexFromPosition(System.Int32)">
            <summary>
            Gets the index of a row from an absolute position.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ScaleCore(System.Single,System.Single)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)">Control.ScaleCore</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ScrollDown">
            <summary>
            Scrolls down the table of one row.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ScrollTo(System.Int32,System.Int32)">
            <summary>
            Scrolls the table to the specified offsets.
            </summary>
            <param name="x">The horizontal offset.</param>
            <param name="y">The vertical offset.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ScrollUp">
            <summary>
            Scrolls up the table of one row.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">Control.SetBoundsCore</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.SetCurrentCell(System.Int32,System.Int32)">
            <summary>
            Sets the current cell on the control.
            </summary>
            <param name="row">The zero-based index of the current row.</param>
            <param name="column">The zero-based index of the current column.</param>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="row" /> or
            <paramref name="column" /> are not valid indices.</exception>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.SetFlag(System.UInt64,System.Boolean)">
            <summary>
            Sets or unsets the value of a flag.
            </summary>
            <param name="flag">The flag value.</param>
            <param name="value">The value of the flag</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.SetRowHeight(System.Int32,System.Int32)">
            <summary>
            Sets the height of the specified row.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="newHeight">The new height.</param>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="rowIndex" /> is not
            a valid index.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="newHeight" /> is
            negative.</exception>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.SetRowHeight(System.Object,System.Int32)">
            <summary>
            Sets the height of the row corresponding to the specified node.
            </summary>
            <param name="node">The node.</param>
            <param name="height">The new height.</param>
            <exception cref="T:System.ArgumentException"><paramref name="node" /> is not
            a node that belongs to the tree table.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="height" /> is
            negative.</exception>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.SetRowHeights(System.Int32)">
            <summary>
            Sets the height of all the rows.
            </summary>
            <param name="height">The new height.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="height" /> is
            negative.</exception>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.SetSelected(System.Int32,System.Boolean)">
            <summary>
            Selects or deselects the specified row.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="value"><see langword="true" /> to select, <see langword="false" /> to deselect.</param>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="rowIndex" /> is not a
            valid index.</exception>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.SetSelectionInterval(System.Int32,System.Int32)">
            <summary>
            Sets the selection to the specified range.
            </summary>
            <param name="index0">The first index to select.</param>
            <param name="index1">The last index to select.</param>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index0" /> or
            <paramref name="index1" /> are not valid indices.</exception>
            <remarks>The method sets the selection to the range defined by the
            two indexes. It is not necessary that <paramref name="index0" /> is smaller that
            <paramref name="index1" />. The rows at <paramref name="index0" /> and
            <paramref name="index1" /> are also selected.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.SetValueAt(System.Object,System.Int32,System.Int32)">
            <summary>
            Sets the value at the specified cell.
            </summary>
            <param name="value">The new value.</param>
            <param name="row">The zero-based index of the row.</param>
            <param name="column">The zero-based index of the column.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ShouldInvalidateRow(System.String)">
            <summary>
            Gets a value indicating whether the whole row should be refreshed after the specified property has changed.
            </summary>
            <param name="propertyName">The property that changed.</param>
            <returns>A value indicating whether the whole row should be refreshed after the specified property has changed.</returns>
            <remarks>
            If <paramref name="property" /> is <see langword="null" />,
            the method returns <see langword="true" />. Otherwise, the method returns <see langword="true" /> only if the
            <paramref name="property" /> has the <see cref="T:System.ComponentModel.RefreshPropertiesAttribute" /> set.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ShouldSerializeAlternatingBackColor">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.AlternatingBackColor" />
            property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ShouldSerializeColumns">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.Columns" /> property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ShouldSerializeGroupBackColor">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.GroupBackColor" />
            property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ShouldSerializeHeaderFont">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.HeaderFont" />
            property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ShouldSerializePreferredRowHeight">
            <summary>
            Do not serialize when no value is set.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ShowOutlineLevel(System.Int32)">
            <summary>
            Displays a specified outline level.
            </summary>
            <remarks>The method will collapse and expand nodes so that only the
            specified outline level is visible. The level must be greater than or equal to <strong>1</strong>.</remarks>
            <param name="level">The outline level to display.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="level" /> is less
            than <strong>1</strong>.</exception>
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.IsRowExpanded(System.Int32)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.ExpandRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Windows.Forms.TreeTable.CollapseRow(System.Object)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.StopEditing">
            <summary>
            Stops the current editing without validating the value in the editor.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ToggleExpandRow(System.Int32)">
            <summary>
            Called by the interactor to change the node state.
            </summary>
            <param name="row">The zero-based index of the row to expand or collpase.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ToImage">
            <summary>
            Creates and returns an <see cref="T:System.Drawing.Image" /> that represents the control.
            </summary>
            <returns>A <see cref="T:System.Drawing.Image" />.</returns>
            <remarks>The format of the returned image is
            <see cref="F:System.Drawing.Imaging.PixelFormat.Format32bppArgb" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ToImage(System.Drawing.Imaging.PixelFormat)">
            <summary>
            Creates and returns an <see cref="T:System.Drawing.Image" /> that represents the control.
            </summary>
            <param name="format">The format of the returned image.</param>
            <returns>A <see cref="T:System.Drawing.Image" />.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.UpdateExpandedCollapsedRows">
            <summary>
            Recomputes the <strong>_expandedCollapsedRows</strong> hash table.
            Calling this method removes from the hash table the rows that are no longer in the table.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.UpdateScroll">
            <summary>
            Updates the scrolling status of the component.
            <para>The method also updates the visibility of scrollbars.</para>
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.UpdateScrollBarForcedVisibility(NickLee.Views.Windows.Forms.ScrollBarVisibility,System.UInt64)">
            <summary>
            Sets the visibility of a scrollbar to visible or invisible.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.UpdateScrollBarVisibility">
            <summary>
            Updates the visibility of scrollbar.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.UpdateTableRowsCache">
            <summary>
            Recomputes the <strong>_tableRowsCache</strong> hash table.
            Calling this method removes from the hash table the rows that are no longer in the table, or that
            are visible.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ValidateAndStopEditing">
            <summary>
            Stops the current editing by validating the value in the editor.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.ValidateAndStopEditing(System.Boolean)">
            <summary>
            </summary>
            <param name="force"></param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.WndProc(System.Windows.Forms.Message@)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">Control.WndProc</see>.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._adjusting">
            <summary>
            A Boolean value to implement <strong>IRowController.FirstVisibleRowAdjusting</strong>.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._alternatingBackColor">
            <summary>
            Alternating back color.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._backgroundColor">
            <summary>
            Background color.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._borderStyle">
            <summary>
            The border style. The initialization must be done here.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._cellEditor">
            <summary>
            The current cell editor.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._columnHeaderHeight">
            <summary>
            Height of column headers.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._columnHeaderVisible">
            <summary>
            Visibility of column headers.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._columns">
            <summary>
            Collection of columns.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._columnsModified">
            <summary>
            Indicates if the columns property contains default columns
            or not.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._currentCol">
            <summary>
            Current column.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._currentRow">
            <summary>
            Current row.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._defaultEditor">
            <summary>
            The default cell editor.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._defaultTimeSpanEditor">
            <summary>
            The default cell editor for time span.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._editingColumn">
            <summary>
            Edited column.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._editingRow">
            <summary>
            Edited row.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._editorComp">
            <summary>
            The current control used for editing a cell.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._editTimer">
            <summary>
            Timer to wait for starting the editing on tree column.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._expandedCollapsedRows">
            <summary>
            The expanded rows.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._firstAdjustedIndex">
            <summary>
            The smallest index whose selection
            changed.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._firstChangedIndex">
            <summary>
            The smallest index whose selection
            changed when selection is adjusting.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._flags">
            <summary>
            Contains flag indicators.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._gridLineColor">
            <summary>
            Color of grid lines.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._gridLineStyle">
            <summary>
            Style for grid lines.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._groupBackColor">
            <summary>
            Fore color for groups.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._headerBackColor">
            <summary>
            Back color of header.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._headerFont">
            <summary>
            Font of header.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._headerForeColor">
            <summary>
            Fore color of header.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._horizontalOffset">
            <summary>
            Horizontal scrolling value in pixels.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._hScrollBar">
            <summary>
            Horizontal scrollbar.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._hScrollBarVisibility">
            <summary>
            Visibility of horizontal scrollbar.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._initialMoveColumnPos">
            <summary>
            Initial position when moving a column.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._lastAdjustedIndex">
            <summary>
            The biggest index whose selection
            changed.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._lastChangedIndex">
            <summary>
            The biggest index whose selection changed
            when selection is adjusting.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._lastDragPosition">
            <summary>
            Last Y position during multiple selection drag.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._lastMouseDown">
            <summary>
            Initial mouse X position while resizing a column.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._maxSelectedIndex">
            <summary>
            The biggest index of selected rows.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._minSelectedIndex">
            <summary>
            The smallest index of selected rows.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._movedColumn">
            <summary>
            Index of moved column.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._movedColumnPos">
            <summary>
            Current mouse X position while moving a column.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._ownerDraw">
            <summary>
            Indicates the draw mode of the table
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._preferredColumnWidth">
            <summary>
            Preferred column width.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._preferredRowHeight">
            <summary>
            Preferred height of row.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._printingContext">
            <summary>
            The parameters needed for printing.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._resizeColumnPos">
            <summary>
            Current mouse X position while resizing a column.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._resizedColumn">
            <summary>
            Index of resized column.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._resizedRow">
            <summary>
            Index of resized row.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._resizeRowPos">
            <summary>
            Current mouse Y position while resizing a row.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._restoreCursor">
            <summary>
            Stored cursor.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._rowHeaderVisible">
            <summary>
            Visibility of row headers.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._rowHeaderWidth">
            <summary>
            Width of row headers.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._rowIndexes">
            <summary>
            A hash table to make the correspondence value -&gt; row.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._rows">
            <summary>
            Array of rows.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._selectedRows">
            <summary>
            The selected rows.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._selectionAdjusting">
            <summary>
            Indicates if the selection is currently being adjusted.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._selectionAnchor">
            <summary>
            Anchor for multiple selections.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._selectionBackColor">
            <summary>
            Back color for selection.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._selectionForeColor">
            <summary>
            Fore color for selection.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._settingValueWithEditor">
            <summary>
            Indicates if a value change has been done through the editor.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._tableRowsCache">
            <summary>
            A cache for collapsed rows.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._tooltip">
            <summary>
            The tooltip manager.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._tooltipObject">
            <summary>
            The object that is currently holding the tooltip.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._updating">
            <summary>
            Counter for [Begin|End]Update calls.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._verticalOffset">
            <summary>
            Vertical scrolling value in pixels.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._view">
            <summary>
            The tree model.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._vScrollBar">
            <summary>
            Vertical scrollbar.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable._vScrollBarVisibility">
            <summary>
            Visibility of vertical scrollbar.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.AlternatingBackColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.AlternatingBackColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.AutoExpandChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.AutoExpand" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.BackgroundColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.BackgroundColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.BeginEdit">
            <summary>
            Occurs when the table starts editing a cell.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.BorderStyleChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.BorderStyle" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.CanMoveColumnsChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.CanMoveColumns" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.CanResizeColumnsChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.CanResizeColumns" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.CanResizeRowsChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.CanResizeRows" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.ColumnHeaderHeightChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.ColumnHeaderHeight" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.ColumnHeadersVisibleChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.ColumnHeadersVisible" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.CurrentCellChanged">
            <summary>
            Occurs when the current cell is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.DrawTableCell">
            <summary>
            Occurs when the table draw cells in owner draw mode.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.OwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows an event handler
            listening to the <see cref="E:NickLee.Views.Windows.Forms.TreeTable.DrawTableCell" /> event. The event handler draws
            expanded nodes with children using an specific font. Other nodes are painted using the default
            painting algorithm.
            </para>
            <code lang="C#">
            // Attach the event handler
            TreeTable table = new TreeTable();
            table.OwnerDraw = true;
            table.DrawTableCell += new DrawTableCellEventHandler(OnDrawTableCell);

            // The code of the event handler
            private void OnDrawTableCell(object sender, DrawTableCellArgs e) {
            TreeTable table = e.TreeTable;
            object value = table.GetValueAt(e.Row);
            // If the node being drawn has children and is expanded, draw it using
            // an italic font.
            if (table.TreeModel.GetChildCount(value) != 0 &amp;&amp; table.IsRowExpanded(value)) {
            Font font = new Font(e.Font, e.Font.Style | FontStyle.Italic);
            e.DrawCell(e.Bounds, e.BackBrush, e.ForeBrush, font);
            } else
            e.DrawCell();
            }
            </code>
            <code lang="Visual Basic">
            ' Attach the event handler
            Dim table As New TreeTable()
            table.OwnerDraw = True

            ' The code of the event handler
            Private Sub OnDrawTableCell(ByVal sender As Object, ByVal e As DrawTableCellArgs) Handles table.DrawTableCell
            Dim table As TreeTable = e.TreeTable
            Dim value As Object = table.GetValueAt(e.Row)
            ' If the node being drawn has children and is expanded, draw it using
            ' an italic font.
            If table.TreeModel.GetChildCount(value) &lt;&gt; 0 And table.IsRowExpanded(value)) Then
            Dim font As New Font(e.Font, e.Font.Style | FontStyle.Italic)
            e.DrawCell(e.Bounds, e.BackBrush, e.ForeBrush, font)
            Else
            e.DrawCell()
            End If
            End Sub
            </code>
            </example>
            <seealso cref="P:NickLee.Views.Windows.Forms.TreeTable.OwnerDraw" />
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.EditingNavigationChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.EditingNavigation" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.EditingValidated">
            <summary>
            Occurs when the table validates the editing of a cell.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.EndEdit">
            <summary>
            Occurs when the table stops editing a cell.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.FlatStyleChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.FlatStyle" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.GridLineColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.GridLineColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.GridLineStyleChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.GridLineStyle" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.GroupBackColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.GroupBackColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.HeaderBackColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.HeaderBackColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.HeaderFontChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.HeaderFont" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.HeaderForeColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.HeaderForeColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.InteractionException">
            <summary>
            Occurs when an exception is being thrown during an interaction in the table.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.MultiSelectChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.MultiSelect" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.NodeStateChanged">
            <summary>
            Event fired after a node has been expanded or collapsed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.NodeStateChanging">
            <summary>
            Occurs when a node is being expanded or collapsed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.OwnerDrawChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.OwnerDraw" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.PreferredColumnWidthChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.PreferredColumnWidth" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.PreferredRowHeightChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.PreferredRowHeight" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.QueryNewRow">
            <summary>
            Event fired to create a new row on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.ReadOnlyChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.ReadOnly" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.RowControllerChanged">
            <summary>
            Occurs when the row controller changes.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.RowHeadersVisibleChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.RowHeadersVisible" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.RowHeaderWidthChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.RowHeaderWidth" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.ScrollBarVisibilityChanged">
            <summary>
            Occurs when the visibility of scrollbars is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.SelectionBackColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.SelectionBackColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.SelectionChanged">
            <summary>
            Occurs when the selection has changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.SelectionForeColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.SelectionForeColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeTable.TreeModelChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.TreeModel" /> property is changed on the control.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.AlternatingBackColor">
            <summary>
            Gets or sets the background color of alternating rows for a ledger appearance.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the alternating background color.
            The default value is the system color for windows (<see cref="P:System.Drawing.SystemColors.Window">SystemColors.Window</see>).
            </value>
            <remarks>
            By default, all rows have the same color (the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.BackColor" /> property of the control).
            When you set the <strong>AlternatingBackColor</strong> to a new color, all the other rows are set to the new color.
            To reset the alternating background color
            to its default value, set the property to <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.AutoColumnHeaderSize">
            <summary>
            Gets or sets a value indicating whether the column header height should be automatically computed
            using the header font.
            </summary>
            <value><see langword="true" /> if the column header height should be automatically computed;
            <see langword="false" /> otherwise. The default value is <see langword="true" />.</value>
            <remarks>This property is obsolete. See the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.ColumnHeaderHeight" /> property.</remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.AutoExpand">
            <summary>
            Gets or sets a value indicating the default expand/collpase state of tree nodes.
            </summary>
            <value><see langword="true" /> if the default state of a node is <strong>collapsed</strong>;
            Otherwise, <see langword="false" />. The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.BackColor">
            <summary>
            Gets or sets the background color of the table.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of rows in the grid.
            The default value is the system color for windows (<see cref="P:System.Drawing.SystemColors.Window">SystemColors.Window</see>).
            </value>
            <remarks>
            Whereas the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.BackColor" /> property determines the color of rows
            in the grid, the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.BackgroundColor" /> determines
            the color of the non-row area, which is only visible when the grid
            is scrolled to the bottom, or if only a few rows
            are contained in the grid.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.BackgroundColor">
            <summary>
            Gets or sets the color of the non-row area of the grid.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the grid background.
            The default value is the <see cref="P:System.Drawing.SystemColors.AppWorkspace">SystemColors.AppWorkspace</see> color.
            </value>
            <remarks>
            The background color determines the color of the non-row area
            of the grid, which is only visible when no table is displayed
            by the <see cref="T:NickLee.Views.Windows.Forms.TreeTable" />, or if the grid is scrolled to the bottom,
            or if only a few rows are contained in the grid.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.BorderStyle">
            <summary>
            Gets or sets the border style of the control.
            </summary>
            <value>
            One of the <see cref="T:System.Windows.Forms.BorderStyle" /> values. The default value is <strong>Fixed3D</strong>.
            </value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.CanMoveColumns">
            <summary>
            Gets or sets a value indicating whether the user can move columns.
            </summary>
            <value><see langword="true" /> if the user can move columns;
            <see langword="false" /> otherwise.
            The default value is <see langword="true" />.</value>
            <remarks>To move a column, click in the header of the column and drag it to the
            desired position.</remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.CanResizeColumns">
            <summary>
            Gets or sets a value indicating whether the user can resize columns.
            </summary>
            <value><see langword="true" /> if the user can resize columns;
            <see langword="false" /> otherwise.
            The default value is <see langword="true" />.</value>
            <remarks>To resize a column, click in the space between two columns in the column
            header area and drag to resize the row to a new height.</remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.CanResizeRows">
            <summary>
            Gets or sets a value indicating whether the user can resize rows.
            </summary>
            <value><see langword="true" /> if the user can resize rows;
            <see langword="false" /> otherwise.
            The default value is <see langword="true" />.</value>
            <remarks>To resize a row, click in the space between two rows in the row header
            area and drag to resize the row to a new height.</remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.CellsRectangle">
            <summary>
            Gets the <see cref="T:System.Drawing.Rectangle" /> where table cells are drawn.
            </summary>
            <value>A <see cref="T:System.Drawing.Rectangle" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.ColumnHeaderHeight">
            <summary>
            Gets or sets the height of column headers.
            </summary>
            <value>
            The height of column headers.
            </value>
            <remarks>
            The column header may be not visible if the property
            <see cref="P:NickLee.Views.Windows.Forms.TreeTable.ColumnHeadersVisible" /> is set to <see langword="false" />.
            By default, this property uses the size of the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.HeaderFont" />.
            To reset this property to its default value, set it to <strong>-1</strong>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.ColumnHeadersVisible">
            <summary>
            Gets or sets the visibility of column headers.
            </summary>
            <value>
            <see langword="true" /> if the column headers are visible,
            <see langword="false" /> otherwise.
            The default value is <see langword="true" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.Columns">
            <summary>
            Gets the collection of columns of this table.
            </summary>
            <value>A <see cref="T:NickLee.Views.Windows.Forms.TableColumnCollection" /> that represents the collection of columns displayed by the table.</value>
            <remarks>By default the table is built without any columns.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to create a <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> with some columns.
            </para>
            <code lang="C#">
            private TreeTable CreateTable(ITreeModel model) {
            // Creates a TreeTable with no columns.
            TreeTable table = new TreeTable(model);

            // Creates a tree column mapped to the "Name" property of the tree model.
            // This column is read-only
            TreeColumn column1 = new TreeColumn("Name", "Name");
            column1.ReadOnly = true;

            // Creates a column mapped to the "Value" property of the tree model.
            TableColumn column2 = new TableColumn("Value", "Value");

            // Adds the columns to the table.
            table.Columns.AddRange(new TableColumn[] { column1, column2 });

            // Returns the table
            return table;
            }
            </code>
            <code lang="Visual Basic">
            Private Function CreateTable(ByVal model As ITreeModel) As TreeTable
            ' Creates a TreeTable with no columns.
            Dim table As New TreeTable(model)

            ' Creates a tree column mapped to the "Name" property of the tree model.
            ' This column is read-only
            Dim column1 As New TreeColumn("Name", "Name")
            column1.ReadOnly = true

            ' Creates a column mapped to the "Value" property of the tree model.
            Dim column2 As New TableColumn ("Value", "Value")

            ' Adds the columns to the table.
            table.Columns.AddRange(New TableColumn() { column1, column2 })

            ' Returns the table
            Return table
            End Function
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.CreateParams">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.CreateParams">Control.CreateParams</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.CurrentColumn">
            <summary>
            Gets or sets the index of the current column.
            </summary>
            <value>The index of the current column.</value>
            <remarks>
            Note that when the table does not contain any column, the value of the
            property is <strong>0</strong>.
            </remarks>
            <seealso cref="P:NickLee.Views.Windows.Forms.TreeTable.CurrentRow" />
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.CurrentRow">
            <summary>
            Gets or sets the current row of the table.
            </summary>
            <value>The zero-based index of the current row.
            </value>
            <remarks>The current row is the row marked with an arrow in
            the row headers. Note that when the table does not contain any row the value of the
            property is <strong>0</strong>.
            </remarks>
            <seealso cref="P:NickLee.Views.Windows.Forms.TreeTable.CurrentColumn" />
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.DefaultSize">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.DefaultSize">Control.DefaultSize</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.EditingColumn">
            <summary>
            Gets the index of the currently edited column.
            </summary>
            <remarks>The value is valid only if the method <see cref="M:NickLee.Views.Windows.Forms.TreeTable.IsEditing" /> returns <see langword="true" />.</remarks>
            <value>An integer value that represents the currently edited column.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.EditingNavigation">
            <summary>
            Gets or sets a value indicating whether the current cell and selection should be moved after validating
            a cell being edited with the keyboard.
            </summary>
            <value><see langword="true" /> if the current cell and selection should be moved after validating an edition.
            <see langword="false" /> otherwise. The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.EditingRow">
            <summary>
            Gets the index of the currently edited row.
            </summary>
            <remarks>The value is valid only if the method <see cref="M:NickLee.Views.Windows.Forms.TreeTable.IsEditing" /> returns <see langword="true" />.</remarks>
            <value>An integer value that represents the currently edited row.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.FirstVisibleRow">
            <summary>
            Gets or sets the index of the first visible row.
            </summary>
            <value>The index of the first visible row.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The property value is not
            between <strong>0</strong> and <strong>RowCount-1</strong>.</exception>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.FirstVisibleRowAdjusting">
            <summary>
            Gets or sets a Boolean value indicating whether the tree first visible row is being adjusted.
            </summary>
            <value><see langword="true" /> if the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.FirstVisibleRow" /> is being adjusted;
            Otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.FlatStyle">
            <summary>
            Gets or sets the flat style appearance of the control.
            </summary>
            <value>One of the <see cref="T:System.Windows.Forms.FlatStyle" /> values.
            The default value is <b>Standard</b>.</value>
            <remarks>Setting this property to either <b>Flat</b> or <b>Popup</b>
            has the same effect.</remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.Font">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.Font">Control.Font</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.ForeColor">
            <summary>
            Gets or sets the foreground color used for rows.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of cells.
            The default value is the value for window text (<see cref="P:System.Drawing.SystemColors.WindowText">SystemColors.WindowText</see>).</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.GridLineColor">
            <summary>
            Gets or sets the color of the grid line.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the grid lines.
            The default value is the system color for controls (<see cref="P:System.Drawing.SystemColors.Control">SystemColors.Control</see>).
            </value>
            <remarks>
            No grid line is displayed if the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.GridLineStyle" /> property
            is set to <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle">None</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.GridLineStyle">
            <summary>
            Gets or sets the style of grid lines.
            </summary>
            <value>
            One of the <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle" /> values.
            The default value is <see cref="F:NickLee.Views.Windows.Forms.GridLineStyle.Solid" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.GroupBackColor">
            <summary>
            Gets or sets the background color of rows that represent groups of rows.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the background color for rows
            that represent groups of rows. The default value inherits from the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.BackColor" /> property.
            </value>
            <remarks>
            To reset the group background color to its default value, set the
            property to <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.HeaderBackColor">
            <summary>
            Gets or sets the background color used for
            row and column headers.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the background
            color of row and column headers. The default value is
            the color used for
            controls (<see cref="P:System.Drawing.SystemColors.Control">SystemColors.Control</see>).</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.HeaderFont">
            <summary>
            Gets or sets the font used for column headers.
            </summary>
            <value>
            The <see cref="T:System.Drawing.Font" /> object that represents the header text.
            </value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.HeaderForeColor">
            <summary>
            Gets or sets the color used for text
            in column and row headers.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground
            color in column and row headers.
            The default value is the value used
            for controls (<see cref="P:System.Drawing.SystemColors.ControlText">SystemColors.ControlText</see>).</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.HideExpandedParent">
            <summary>
            THIS IS PRELIMINARY CODE AND SUBJECT TO CHANGE.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.HorizontalOffset">
            <summary>
            Gets or sets the horizontal scrolling offset of the tree table in pixels.
            </summary>
            <value>The horizontal scrolling offset of the tree table in pixels</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.HScrollBar">
            <summary>
            Gets or sets the visibility of the horizontal scrollbar.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Windows.Forms.ScrollBarVisibility" /> values.
            The default value is <see cref="F:NickLee.Views.Windows.Forms.ScrollBarVisibility.AsNeeded" />.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.HScrollBarHeight">
            <summary>
            Gets the displayed height of the horizontal scrollbar.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.IsHScrollBarVisible">
            <summary>
            Gets a value indicating whether the horizontal scrollbar is visible.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.IsVScrollBarVisible">
            <summary>
            Gets a value indicating whether the vertical scrollbar is visible.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.MultiSelect">
            <summary>
            Gets or sets a value indicating whether the user can select several rows.
            </summary>
            <value><see langword="true" /> if the user can select several rows;
            otherwise, <see langword="false" />.</value>
            <remarks>When this property is set to <see langword="true" />,
            the user cannot select several table rows interactively anymore.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.OwnerDraw">
            <summary>
            Gets or sets a value indicating whether the code that you
            provide draws the table cells or not.
            </summary>
            <value>
            <see langword="true" /> if table cells are to be drawn using custom user
            code; <see langword="false" /> otherwise.
            </value>
            <remarks>
            <p>When the <strong>OwnerDraw</strong> property is set to <see langword="true" />,
            you need to handle all drawing of table cells. You can use
            this capability to create your own special table cells
            displays. Use the <see cref="E:NickLee.Views.Windows.Forms.TreeTable.DrawTableCell" /> event to handle the drawing of
            table cells.</p>
            <p>When the <strong>OwnerDraw</strong> property is set to <see langword="false" />,
            the <strong>DrawTableCell</strong> event is not raised.</p>
            </remarks>
            <seealso cref="E:NickLee.Views.Windows.Forms.TreeTable.DrawTableCell" />
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.PreferredColumnWidth">
            <summary>
            Gets or sets the preferred width of columns.
            </summary>
            <value>The preferred width of columns.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The property value is negative.
            </exception>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.PreferredRowHeight">
            <summary>
            Gets or sets the preferred height for new rows.
            </summary>
            <value>The preferred value in pixel of a row height.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the user can edit table cells.
            </summary>
            <value><see langword="true" /> if the user can edit table cells;
            otherwise, <see langword="false" />.</value>
            <remarks>When this property is set to <see langword="true" />,
            the user cannot edit table cells interactively anymore. It's
            still possible to call <see cref="M:NickLee.Views.Windows.Forms.TreeTable.EditCell(System.Int32,System.Int32)" /> to edit a cell.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.RowCount">
            <summary>
            Gets the number of rows.
            </summary>
            <value>The number of rows in the table.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.RowHeadersVisible">
            <summary>
            Gets or sets the visibility of row headers.
            </summary>
            <value>
            <see langword="true" /> if the row headers are visible,
            <see langword="false" /> otherwise. The default value is <see langword="true" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.RowHeaderWidth">
            <summary>
            Gets or sets the width of row headers.
            </summary>
            <value>The width of row headers.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The property value is negative.
            </exception>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.SelectionAdjusting">
            <summary>
            Gets or sets a value that indicates if the selection is currently being
            adjusted.
            </summary>
            <value><see langword="true" /> if the selection is currently beeing
            adjusted; <see langword="false" /> otherwise.
            </value>
            <remarks>The value is <see langword="true" /> when the mouse is dragged over the
            table to select rows.</remarks>
            <seealso cref="P:NickLee.Views.Windows.Forms.TableSelectionChangedEventArgs.IsAdjusting" />
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.SelectionBackColor">
            <summary>
            Gets or sets the background color of selected cells.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the background color of selected cells.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.SelectionForeColor">
            <summary>
            Gets or sets the foreground color of selected cells.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of selected cells.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.Text">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.Text">Control.Text</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.ToolTip">
            <summary>
            Gets the internal tooltip used by this control.
            </summary>
            <value>A <see cref="T:System.Windows.Forms.ToolTip" /> reference.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.TreeModel">
            <summary>
            Gets or sets the <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" /> object that represents the data displayed in the table.
            </summary>
            <value>The <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" /> object that represents the data displayed in the table.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.TreeModelView">
            <summary>
            Gets the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.TreeModelView" /> that wraps the <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" /> connected
            to the table.
            </summary>
            <value>A <see cref="T:NickLee.Views.Windows.Forms.TreeModelView">TreeModelView</see> instance.</value>
            <remarks>The <see cref="T:NickLee.Views.Windows.Forms.TreeModelView">TreeModelView</see> can be used to sort,
            group or filter rows of the table.
            </remarks>
            <seealso cref="T:NickLee.Views.Windows.Forms.TreeModelView" />
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.VerticalOffset">
            <summary>
            Gets the vertical scrolling offset of the tree table in pixels.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.VisibleColumnHeaderHeight">
            <summary>
            Gets the height of column header that is
            really displayed.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.VisibleRowHeaderWidth">
            <summary>
            Gets the width of row header that is
            really displayed.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.VScrollBar">
            <summary>
            Gets or sets the visibility of the vertical scrollbar.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Windows.Forms.ScrollBarVisibility" /> values.
            The default value is <strong>AsNeeded</strong>. </value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.VScrollBarWidth">
            <summary>
            Gets the displayed width of the vertical scrollbar.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.TreeTable.EditTreeTimer">
            <summary>
            The timer used to start the tree editing.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.TreeTable.HitTestInfo">
            <summary>
            Contains information about a part of the <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> at a specified coordinate.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTable.HitTestInfo.ToString">
            <summary>
            This member overrides <see cref="M:System.Object.ToString">object.ToString</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.HitTestInfo.Type">
            <summary>
            Gets the part of the <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> control,
            other than the row or column, that was clicked.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Windows.Forms.TreeTable.HitTestType" /> values.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.HitTestInfo.Row">
            <summary>
            Gets the index of the clicked row.
            </summary>
            <value>The index of the clicked row.</value>
            <remarks>If the	coordinate does not correspond to a
            row then the value returns <strong>-1</strong>.</remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTable.HitTestInfo.Column">
            <summary>
            Gets the index of the clicked column.
            </summary>
            <value>The index of the clicked column.</value>
            <remarks>If the	coordinate does not correspond to a
            column then the value returns <strong>-1</strong>.</remarks>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.TreeTable.HitTestType">
            <summary>
            Specifies the part of the <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> control the user has clicked.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.TreeTable.PrintingContext">
            <summary>
            Keeps the parameters specific to the drawing context (painting
            or printing).
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.TreeTable.TableRow">
            <summary>
            Defines a row of the tree table.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable.TableRow.height">
            <summary>
            The height of the row.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable.TableRow.index">
            <summary>
            The index of the row.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable.TableRow.position">
            <summary>
            The position.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TreeTable.TableRow.value">
            <summary>
            The object displayed in the row.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.RowControllerChangeEventHandler">
            <summary>
            Represents the method that handles an <see cref="E:NickLee.Views.Windows.Forms.IRowController.RowControllerChanged" /> event of an <see cref="T:NickLee.Views.Windows.Forms.IRowController" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.Design.ImageIndexEditor">
            <summary>
            Provides a user interface to edit a property that represents the index of an image in an <see cref="T:System.Windows.Forms.ImageList" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Design.ImageIndexEditor.#ctor">
            <summary>
            Creates and initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.Design.ImageIndexEditor" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Design.ImageIndexEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            This member overrides <see cref="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported">UITypeEditor.GetPaintValueSupported</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Design.ImageIndexEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)">UITypeEditor.PaintValue</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Util.PrettyDateTimeConverter">
            <summary>
            Provides a type converter to convert <see cref="T:System.DateTime" /> objects
            to and from other representations.
            </summary>
            <remarks>This converter extends the <see cref="T:System.ComponentModel.DateTimeConverter" /> class to
            convert the <see cref="F:System.DateTime.MinValue" /> and <see cref="F:System.DateTime.MaxValue" />
            to the string "NA".
            </remarks>
        </member>
        <member name="M:NickLee.Views.Util.PrettyDateTimeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)">TypeConverter.ConvertFrom</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Util.PrettyDateTimeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)">TypeConverter.ConvertTo</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.NodeStateChangeEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:NickLee.Views.Windows.Forms.TreeTable.NodeStateChanging" /> and
            <see cref="E:NickLee.Views.Windows.Forms.TreeTable.NodeStateChanged" /> events of a <see cref="T:NickLee.Views.Windows.Forms.TreeTable" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.ImageTableColumn">
            <summary>
            Specifies a column of a <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> in which each cell contains images.
            </summary>
            <remarks>
            The <see cref="M:NickLee.Views.Windows.Forms.ImageTableColumn.GetImages(System.Int32)" /> method determines the images that will be displayed
            by this column depending on the value of the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.MappingName" /> property.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.ImageTableColumn.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.ImageTableColumn" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.ImageTableColumn.GetImages(System.Int32)">
            <summary>
            Retrieves the list of images to draw for the specified row.
            </summary>
            <param name="rowIndex">The zero-based index of the row.</param>
            <returns>An <see cref="T:System.Array" /> of images.</returns>
            <remarks>
            <p>The method tries to retrieve images from the specified row using the
            following rules:<br />
            <ul>
            <li>If the column has been set an <see cref="P:NickLee.Views.Windows.Forms.TableColumn.ImageList" />, and if the object
            property value retrieved using the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.MappingName" /> property can be
            converted to an integer, then this integer will be used to
            locate the image in the image list, and this image will be returned.
            </li>
            <li>
            If the object property value retrieved using the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.MappingName" /> property
            is an <see cref="T:System.Drawing.Image" />, this value is returned.
            </li>
            <li>
            If the object property value retrieved using the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.MappingName" /> property
            is an array of <see cref="T:System.Drawing.Image" />, this value is returned.
            </li>
            <li>
            If the object property value retrieved using the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.MappingName" /> property
            is an <see cref="T:System.Windows.Forms.ImageList" />, the
            images contained in the image list are returned.
            </li>
            <li>
            If the object property value retrieved using the <see cref="P:NickLee.Views.Windows.Forms.TableColumn.MappingName" /> property
            is an <see cref="T:System.Windows.Forms.ImageList.ImageCollection" />, this value is returned.
            </li>
            </ul>
            </p>
            <br />
            If the images to be displayed cannot be retrieved using properties on the objects
            displayed by the table, you can subclass <strong>ImageTableColumn</strong> and
            override this method.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.ImageTableColumn.GetPreferredHeight(System.Drawing.Graphics,System.Int32)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Windows.Forms.TableColumn.GetPreferredHeight(System.Drawing.Graphics,System.Int32)">TableColumn.GetPreferredHeight</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.ImageTableColumn.GetPreferredWidth(System.Drawing.Graphics,System.Int32)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Windows.Forms.TableColumn.GetPreferredWidth(System.Drawing.Graphics,System.Int32)">TableColumn.GetPreferredWidth</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.ImageTableColumn.GetToolTipAreas(System.Int32)">
            <summary>
            Returns the areas where tooltips can be displayed at the specified row index.
            </summary>
            <param name="rowIndex">The row index.</param>
            <returns>An array of <see cref="T:System.Drawing.Rectangle" /> structures representing the areas
            of the specified cell where tooltips can be displayed.</returns>
            <remarks>The coordinates of the rectangles are relative to the table cell.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.ImageTableColumn.IsRowEditable(System.Int32)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Windows.Forms.TableColumn.IsRowEditable(System.Int32)">TableColumn.IsRowEditable</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.ImageTableColumn.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Drawing.Brush,System.Drawing.Brush,System.Drawing.Font,System.Boolean)">
            <summary>
            Is called to paint a cell of the column.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> object used to paint.</param>
            <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> that represents the bounds of the cell to draw.</param>
            <param name="rowIndex">The zero-based index of the row to draw.</param>
            <param name="background">The background color of the table.</param>
            <param name="foreground">The foreground color of the table.</param>
            <param name="font">The font used for drawing the text.</param>
            <param name="isRightToLeft">A value indicating whether to paint in right-to-left.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.ImageTableColumn.PointToImage(System.Int32,System.Drawing.Point)">
            <summary>
            Returns the image located under the specific point at the specified row.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="p">The offset of the mouse location in the cell.</param>
            <returns>An <see cref="T:System.Drawing.Image" /> instance, or <see langword="null" /> if no
            image is located under the specified point.</returns>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.ImageTableColumn._margin">
            <summary>
            The margin between two images.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.ImageTableColumn.ImageMargin">
            <summary>
            Gets or sets the margin between two images.
            </summary>
            <value>The margin between two images.</value>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.DefaultRowFilter">
            <summary>
            A simple implementation of the <see cref="T:NickLee.Views.Windows.Forms.IRowFilter" /> interface that uses an expression
            to filter rows of a <see cref="T:NickLee.Views.Windows.Forms.TreeModelView" />.
            </summary>
            <remarks>
            The <see cref="P:NickLee.Views.Windows.Forms.DefaultRowFilter.Filter" /> property is an expression that will be evaluated to determine
            whether a row will be visible or not.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to create a <see cref="T:NickLee.Views.Windows.Forms.DefaultRowFilter" /> that
            filters rows whose property <strong>Value</strong> is less than <strong>10</strong>. The property <strong>Value</strong> must
            be defined on the nodes of the wrapped tree model.
            </para>
            <code lang="C#">
            TreeTable table = new TreeTable();
            table.TreeModelView.RowFilter = new DefaultRowFilter("Value &lt; 10");
            </code>
            <code lang="Visual Basic">
            Dim table as New TreeTable()
            table.TreeModelView.RowFilter = New DefaultRowFilter("Value &lt; 10")
            End Sub
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultRowFilter.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.DefaultRowFilter" /> class.
            </summary>
            <param name="filter">An expression that represents the filter.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultRowFilter.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.DefaultRowFilter" /> class.
            </summary>
            <param name="filter">An expression that represents the filter.</param>
            <param name="context">A context to evaluate the expression.</param>
            <remarks>
            If <paramref name="context" /> is <see langword="null" />, then a default
            context is created. This default context uses introspection to bind variables
            to values.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultRowFilter.FilterRow(NickLee.Views.Windows.Forms.TreeModelView,System.Object)">
            <summary>
            Filters a row of the specified <see cref="T:NickLee.Views.Windows.Forms.TreeModelView" />.
            </summary>
            <param name="view">The <see cref="T:NickLee.Views.Windows.Forms.TreeModelView" /> being filtered.</param>
            <param name="row">The row of the view being filtered.</param>
            <returns><see langword="true" /> if the row should be made visible in the view;
            <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultRowFilter.OnRowFilterChanged">
            <summary>
            Raises the <see cref="E:NickLee.Views.Windows.Forms.DefaultRowFilter.RowFilterChanged" /> event.
            </summary>
            <remarks>Called when the filter is changed.</remarks>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.DefaultRowFilter.RowFilterChanged">
            <summary>
            Occurs when the filter has changed.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.DefaultRowFilter.Context">
            <summary>
            Gets or sets the context of evaluation for the filter expression.
            </summary>
            <value>An object that represents an evaluation context.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.DefaultRowFilter.Filter">
            <summary>
            Gets or sets an expression that represents the filter.
            </summary>
            <value>A <see cref="T:System.String" /> that represents a Boolean expression.
            The default value is "" meaning that the filter will let all the rows pass
            through it.
            </value>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to create a <see cref="T:NickLee.Views.Windows.Forms.DefaultRowFilter" /> that
            filters rows whose property <strong>Value</strong> is less than <strong>10</strong>. The property <strong>Value</strong> must
            be defined on the nodes of the wrapped tree model.
            </para>
            <code lang="C#">
            TreeTable table = new TreeTable();
            table.TreeModelView.RowFilter = new DefaultRowFilter("Value &lt; 10");
            </code>
            <code lang="Visual Basic">
            Dim table as New TreeTable()
            table.TreeModelView.RowFilter = New DefaultRowFilter("Value &lt; 10")
            End Sub
            </code>
            </example>
        </member>
        <member name="T:NickLee.Views.Util.FloatPercentConverter">
            <summary>
            Provides a type converter to convert to and from <see cref="T:System.Single" /> objects.
            </summary>
            <remarks>This converter can only convert a <see cref="T:System.Single" /> object
            to and from a string. It converts a string containing a percent character such as <strong>50 %</strong> to
            <strong>0.5</strong>. It also converts a float value to a string representation using the percent symbol as well.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Util.FloatPercentConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)">TypeConverter.CanConvertFrom</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Util.FloatPercentConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)">TypeConverter.CanConvertTo</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Util.FloatPercentConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)">TypeConverter.ConvertFrom</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Util.FloatPercentConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)">TypeConverter.ConvertTo</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Util.FloatPercentConverter.ParsePercent(System.String,System.Globalization.CultureInfo)">
            <summary>
            Parses the specified string into a <see cref="T:System.Single" />.
            </summary>
            <param name="s">The string to parse.</param>
            <param name="info">The culture.</param>
            <returns>A <see cref="T:System.Single" /> number.</returns>
            <remarks>The percent symbol is removed from the specified string. Then the string is converted to a
            float, and the result is divided by <strong>100</strong>.</remarks>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.TableColumnDialog">
            <summary>
            Displays a dialog window from which the user can edit the values of a <see cref="T:NickLee.Views.Windows.Forms.TableColumn" />.
            </summary>
            <remarks>
            <p>Use the <see cref="P:NickLee.Views.Windows.Forms.TableColumnDialog.TableColumn" /> property to access the edited table column.</p>
            <p>Use the <see cref="P:NickLee.Views.Windows.Forms.TableColumnDialog.TableRowType" /> property to let the dialog know the type of objects
            displayed by the table column.</p>
            <p><img src="tablecolumndialog.png" /></p>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to initialize and display a <strong>TableColumnDialog</strong>.
            </para>
            <code lang="C#">
            private void EditTableColumn(TableColumn column) {
            TableColumnDialog dialog = new TableColumnDialog();
            dialog.TableRowType = typeof(MyType);
            dialog.TableColumn = column;
            dialog.ShowDialog();
            }
            </code>
            <code lang="Visual Basic">
            Private Sub EditTableColumn(ByVal column As TableColumn)
            Dim dialog as New TableColumnDialog()
            dialog.TableRowType = GetType(MyType)
            dialog.TableColumn = column
            dialog.ShowDialog()
            End Sub
            </code>
            </example>
            </remarks>
            <seealso cref="P:NickLee.Views.Windows.Forms.TableColumnDialog.TableColumn" />
            <seealso cref="P:NickLee.Views.Windows.Forms.TableColumnDialog.TableRowType" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnDialog.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.TableColumnDialog" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnDialog.Dispose(System.Boolean)">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnDialog.FillDialog">
            <summary>
            Is called to initialize the dialog controls using the column being edited.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnDialog.GetBrowsableProperties">
            <summary>
            Gets the list of properties that will be proposed to the user for choosing the mapping name of the column.
            </summary>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnDialog.GetFormatDescriptions(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Gets the descriptions of the format for the specified property descriptor.
            </summary>
            <param name="pd">An instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class.</param>
            <returns>An array of <see cref="T:System.String" /> objects containing the descriptions of the available
            formats for the specified property descriptor.</returns>
            <remarks>When overriding this method, be sure to override <see cref="M:NickLee.Views.Windows.Forms.TableColumnDialog.GetFormats(System.ComponentModel.PropertyDescriptor)" /> as well.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnDialog.GetFormats(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Gets the formats for the specified property descriptor.
            </summary>
            <param name="pd">An instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class.</param>
            <returns>An array of <see cref="T:System.String" /> objects containing the available
            formats for the specified property descriptor.</returns>
            <remarks>When overriding this method, be sure to override <see cref="M:NickLee.Views.Windows.Forms.TableColumnDialog.GetFormatDescriptions(System.ComponentModel.PropertyDescriptor)" /> as well.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnDialog.OnTableRowTypeChanged">
            <summary>
            Is called when the type of rows displayed by the table has changed.
            </summary>
            <remarks>This method is called when setting the <see cref="P:NickLee.Views.Windows.Forms.TableColumnDialog.TableRowType" />
            property.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnDialog.ValidateDialog">
            <summary>
            Is called to validate the dialog box.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TableColumnDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumnDialog.AutoScaleBaseSize">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Form.AutoScaleBaseSize">Form.AutoScaleBaseSize</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumnDialog.ClientSize">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Form.ClientSize">Form.ClientSize</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumnDialog.TableColumn">
            <summary>
            Gets or sets the <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> being edited by the dialog box.
            </summary>
            <value>An instance of the <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> class.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumnDialog.TableRowType">
            <summary>
            Gets or sets the type of object displayed by the table rows.
            </summary>
            <value>An instance of the <see cref="T:System.Type" /> class.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumnDialog.Text">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.Text">Control.Text</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.Design.TreeTableAutoFormatDialog">
            <summary>
            A dialog box to choose predefined styles for a <see cref="T:NickLee.Views.Windows.Forms.TreeTable" />.
            </summary>
            <remarks>This dialog is used by the <see cref="T:NickLee.Views.Windows.Forms.Design.TreeTableDesigner" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Design.TreeTableAutoFormatDialog.#ctor(NickLee.Views.Windows.Forms.TreeTable)">
            <summary>
            Creates and initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.Design.TreeTableAutoFormatDialog" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Design.TreeTableAutoFormatDialog.#ctor(NickLee.Views.Windows.Forms.TreeTable,System.Type)">
            <summary>
            Creates and initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.Design.TreeTableAutoFormatDialog" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Design.TreeTableAutoFormatDialog.Dispose(System.Boolean)">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.ClipControl">
            <summary>
            The control that clips the internal controls.
            </summary>
        </member>
        <member name="T:NickLee.Views.Web.UI.FlatStyle">
            <summary>
            Specifies the appearance of a control.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.Printing.NamespaceDoc">
            <summary>
            The <strong>NickLee.Views.Windows.Forms.Printing</strong> contains classes that
            extends the .NET Framework printing classes. The namespace contains for example
            the <see cref="T:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument" /> class that extends the <see cref="T:System.Drawing.Printing.PrintDocument" /> class
            and adds the notion of header and footer.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.NamespaceDoc">
            <summary>
            The <strong>NickLee.Views.Windows.Forms</strong> namespace contains all purpose Windows Forms controls. The
            namespace contains for example the <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> control class.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.ValueChangedReason">
            <summary>
            Describes the reason of a value change in a <see cref="T:NickLee.Views.Windows.Forms.GenericValueEditor" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.TableColumnCollection">
            <summary>
            A collection that stores <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> objects for a <see cref="T:NickLee.Views.Windows.Forms.TreeTable" />.
            </summary>
            <remarks><p>A <strong>TableColumnCollection</strong> can be retrieved from a
            <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> using the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.Columns" /> property.</p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.#ctor(NickLee.Views.Windows.Forms.TreeTable)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.TableColumnCollection" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.Add(NickLee.Views.Windows.Forms.TableColumn)">
            <summary>
            Adds a <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> to the collection.
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> to add.</param>
            <returns>
            The index at which the new element was inserted.
            </returns>
            <seealso cref="M:NickLee.Views.Windows.Forms.TableColumnCollection.AddRange(NickLee.Views.Windows.Forms.TableColumn[])" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.AddRange(NickLee.Views.Windows.Forms.TableColumn[])">
            <summary>
            Copies the elements of an array to the end of the <see cref="T:NickLee.Views.Windows.Forms.TableColumnCollection" />.
            </summary>
            <param name="value">
            An array of type <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> containing the objects to add to the collection.
            </param>
            <seealso cref="M:NickLee.Views.Windows.Forms.TableColumnCollection.Add(NickLee.Views.Windows.Forms.TableColumn)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.AddRange(NickLee.Views.Windows.Forms.TableColumnCollection)">
            <summary>
            Adds the contents of another <see cref="T:NickLee.Views.Windows.Forms.TableColumnCollection" /> to the end of the collection.
            </summary>
            <param name="value">
            A <see cref="T:NickLee.Views.Windows.Forms.TableColumnCollection" /> containing the objects to add to the collection.
            </param>
            <seealso cref="M:NickLee.Views.Windows.Forms.TableColumnCollection.Add(NickLee.Views.Windows.Forms.TableColumn)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.Contains(NickLee.Views.Windows.Forms.TableColumn)">
            <summary>
            Gets a value indicating whether the <see cref="T:NickLee.Views.Windows.Forms.TableColumnCollection" />
            contains the specified <see cref="T:NickLee.Views.Windows.Forms.TableColumn" />.
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> to locate.</param>
            <returns>
            <see langword="true" /> if the <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> is contained in the collection;
            <see langword="false" /> otherwise.
            </returns>
            <seealso cref="M:NickLee.Views.Windows.Forms.TableColumnCollection.IndexOf(NickLee.Views.Windows.Forms.TableColumn)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.CopyTo(NickLee.Views.Windows.Forms.TableColumn[],System.Int32)">
            <summary>
            Copies the <see cref="T:NickLee.Views.Windows.Forms.TableColumnCollection" /> values to a one-dimensional <see cref="T:System.Array" />
            instance at the specified index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from <see cref="T:NickLee.Views.Windows.Forms.TableColumnCollection" />.</param>
            <param name="index">The index in <paramref name="array" /> where the copying starts.</param>
            <exception cref="T:System.ArgumentException"><paramref name="array" /> is multidimensional. The number of elements in the <see cref="T:NickLee.Views.Windows.Forms.TableColumnCollection" /> is greater than the available space between <paramref name="arrayIndex" /> and the end of <paramref name="array" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />. </exception>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index" /> is less than <paramref name="array" /> lowbound. </exception>
            <seealso cref="T:System.Array" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.FindColumnsByMappingName(System.String)">
            <summary>
            Retrieves an array of <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> objects whose mapping name
            matches the specified one.
            </summary>
            <param name="name">A <see cref="T:System.String" /> that represents the mapping name.</param>
            <returns>An array of <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> objects.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.IndexOf(NickLee.Views.Windows.Forms.TableColumn)">
            <summary>
            Returns the index of a <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> in
            the <see cref="T:NickLee.Views.Windows.Forms.TableColumnCollection" />.
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> to locate.</param>
            <returns>
            The index of the <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> of <paramref name="value" /> in the
            <see cref="T:NickLee.Views.Windows.Forms.TableColumnCollection" />, if found; <strong>-1</strong> otherwise.
            </returns>
            <seealso cref="M:NickLee.Views.Windows.Forms.TableColumnCollection.Contains(NickLee.Views.Windows.Forms.TableColumn)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.Insert(System.Int32,NickLee.Views.Windows.Forms.TableColumn)">
            <summary>
            Inserts a <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> into the <see cref="T:NickLee.Views.Windows.Forms.TableColumnCollection" /> at the specified index.
            </summary>
            <param name="index">The zero-based index where <paramref name="value" /> should be inserted.</param>
            <param name="value">The <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> to insert.</param>
            <seealso cref="M:NickLee.Views.Windows.Forms.TableColumnCollection.Add(NickLee.Views.Windows.Forms.TableColumn)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.InsertRange(System.Int32,NickLee.Views.Windows.Forms.TableColumn[])">
            <summary>
            Inserts the elements of an array at the specified index of the <see cref="T:NickLee.Views.Windows.Forms.TableColumnCollection" />.
            </summary>
            <param name="index">The zero-based starting index of the range of elements to insert.</param>
            <param name="value">
            An array of type <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> containing the objects to add to the collection.
            </param>
            <seealso cref="M:NickLee.Views.Windows.Forms.TableColumnCollection.Add(NickLee.Views.Windows.Forms.TableColumn)" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.Move(System.Int32,System.Int32)">
            <summary>
            Moves an element of the collection to a new index.
            </summary>
            <param name="oldIndex">The zero-based index of the element to move.</param>
            <param name="newIndex">The zero-based index of the element after moving it.</param>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="oldIndex" /> or
            <paramref name="newIndex" /> are not a valid indices.</exception>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.OnClear">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnClear">CollectionBase.OnClear</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.OnClearComplete">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnClearComplete">CollectionBase.OnClearComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.OnCollectionChanged(NickLee.Views.Windows.Forms.TableColumnsChangeEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Windows.Forms.TableColumnCollection.CollectionChanged" /> events.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Windows.Forms.TableColumnsChangeEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.OnCollectionChanging(NickLee.Views.Windows.Forms.TableColumnsChangeEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Windows.Forms.TableColumnCollection.CollectionChanging" /> events.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Windows.Forms.TableColumnsChangeEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">CollectionBase.OnInsert</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">CollectionBase.OnInsertComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.OnInsertRange(System.Int32,System.Collections.ICollection)">
            <summary>
            Performs additional custom processes before inserting new <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> objects
            into the collection instance.
            </summary>
            <param name="index">The zero-based index at which insertion will start.</param>
            <param name="objects">A collection of <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> objects to add.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.OnInsertRangeComplete(System.Int32,NickLee.Views.Windows.Forms.TableColumn[])">
            <summary>
            Performs additional custom processes after inserting new <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> objects
            into the collection instance.
            </summary>
            <param name="index">The zero-based index at which insertion will start.</param>
            <param name="objects">A collection of <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> objects to add.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.OnMove(System.Int32,System.Int32)">
            <summary>
            Performs additional custom processes before moving an element into the collection.
            </summary>
            <param name="oldIndex">The zero-based index of the element to move.</param>
            <param name="newIndex">The zero-based index of the element after moving it.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.OnMoveComplete(System.Int32,System.Int32)">
            <summary>
            Performs additional custom processes after moving an element into the collection.
            </summary>
            <param name="oldIndex">The zero-based index of the element to move.</param>
            <param name="newIndex">The zero-based index of the element after moving it.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.OnRemove(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">CollectionBase.OnRemove</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">CollectionBase.OnRemoveComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.OnRemoveRange(System.Int32,System.Collections.ICollection)">
            <summary>
            Performs additional custom processes before removing <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> objects from the
            collection instance.
            </summary>
            <param name="index">The zero-based index at which deletion will start.</param>
            <param name="objects">The <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> objects to remove from the collection.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.OnRemoveRangeComplete(System.Int32,NickLee.Views.Windows.Forms.TableColumn[])">
            <summary>
            Performs additional custom processes after removing <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> objects from the
            collection instance.
            </summary>
            <param name="index">The zero-based index at which deletion will start.</param>
            <param name="objects">The <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> objects to remove from the collection.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">CollectionBase.OnSet</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">CollectionBase.OnSetComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.Remove(NickLee.Views.Windows.Forms.TableColumn)">
            <summary>
            Removes a specific <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> from the <see cref="T:NickLee.Views.Windows.Forms.TableColumnCollection" />.
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> to remove from the <see cref="T:NickLee.Views.Windows.Forms.TableColumnCollection" />.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is not found in the collection. </exception>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes a range of <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> objects from the
            <see cref="T:NickLee.Views.Windows.Forms.TableColumnCollection" />.
            </summary>
            <param name="index">The zero-based starting index of the range of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException"><paramref name="index" /> is not a valid index.</exception>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TableColumnCollection.CollectionChanged">
            <summary>
            Occurs when the collection has changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TableColumnCollection.CollectionChanging">
            <summary>
            Occurs when the collection is changing.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumnCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> at the specified index.
            </summary>
            <param name="index">The zero-based index of the entry to locate in the collection.</param>
            <value>
            The entry at the specified index of the collection.
            </value>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index" /> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.ITreeTableCellEditor">
            <summary>
            Defines the methods that must be implemented
            by a class that can edit cells of the tree table (<see cref="T:NickLee.Views.Windows.Forms.TreeTable" />).
            </summary>
            <seealso cref="T:NickLee.Views.Windows.Forms.TreeTable" />
            <seealso cref="T:NickLee.Views.Windows.Forms.DefaultTreeTableCellEditor" />
            <seealso cref="P:NickLee.Views.Windows.Forms.TableColumn.CellEditor" />
            <seealso cref="T:NickLee.Views.Windows.Forms.TreeTableEditorAttribute" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.ITreeTableCellEditor.GetEditorControl(NickLee.Views.Windows.Forms.TreeTable,System.Object,System.Boolean,System.Int32,System.Int32)">
            <summary>
            When implemented by a class, returns a control to edit the value.
            </summary>
            <param name="table">The <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> currently edited.</param>
            <param name="value">The current value in the edited cell.</param>
            <param name="isSelected">Indicates whether the edited cell is selected.</param>
            <param name="row">The zero-based row index of the edited cell.</param>
            <param name="column">The zero-based column index of the edited cell.</param>
            <remarks>The control returned by the method must be initialized with
            <paramref name="value" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.ITreeTableCellEditor.StopEditing">
            <summary>
            When implemented by a class, tells the editor to stop editing without validating.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.ITreeTableCellEditor.ValidateEditing">
            <summary>
            When implemented by a class, tells the editor to validate editing.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.ITreeTableCellEditor.EditingStopped">
            <summary>
            Occurs when the editor stops editing without validating.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.ITreeTableCellEditor.EditingValidated">
            <summary>
            Occurs when the editor validates editing without stopping the editing.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.ITreeTableCellEditor.Value">
            <summary>
            When implemented by a class, gets the value edited by the editor.
            </summary>
            <value>The <see cref="T:System.Object" /> edited by the editor.</value>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.ITreeModel">
            <summary>
            Represents a hierarchical collection of objects.
            </summary>
            <remarks>
            <p>The <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" /> interface is the base interface for classes that need
            to be displayed in a <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> windows form component.</p>
            <p>When the model is modified, you should raise the appropriate event using the
            <see cref="E:NickLee.Views.Windows.Forms.ITreeModel.TreeModelChanged" /> event.</p>
            <p>In the interface many methods take a parent node as parameter. If
            <see langword="null" /> is passed as a parent node value, the root of the tree will be
            used.</p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.ITreeModel.Contains(System.Object)">
            <summary>
            When implemented by a class, returns a value indicating whether the specified node is part of the model.
            </summary>
            <param name="node">The tree node.</param>
            <returns><see langword="true" /> if the <paramref name="node" /> parameter is part of the model; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.ITreeModel.GetChild(System.Object,System.Int32)">
            <summary>
            When implemented by a class, retrieves the node child corresponding to the specified index.
            </summary>
            <param name="node">The tree node.</param>
            <param name="index">The zero-based index of the child.</param>
            <returns>The child of <strong>node</strong> whose index is <strong>index</strong>.</returns>
            <remarks>If <paramref name="node" /> is <see langword="null" />, the root of the tree model is used.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.ITreeModel.GetChildCount(System.Object)">
            <summary>
            When implemented by a class, retrieves the number of children belonging to a node.
            </summary>
            <param name="node">The tree node.</param>
            <returns>The number of children of the specified node.</returns>
            <remarks>If <paramref name="node" /> is <see langword="null" />, the root of the tree model is used.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.ITreeModel.GetIndexOfChild(System.Object,System.Object)">
            <summary>
            When implemented by a class, returns the zero-based index of the specified child in the specified node.
            </summary>
            <param name="parent">The parent tree node.</param>
            <param name="child">The child node.</param>
            <returns>A zero-based index, or <strong>-1</strong> if the child node is not a child of <strong>parent</strong>.</returns>
            <remarks>If <paramref name="parent" /> is <see langword="null" />, the root of the tree model is used.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.ITreeModel.GetParent(System.Object)">
            <summary>
            When implemented by a class, retrieves the parent of the specified node.
            </summary>
            <param name="node">The tree node.</param>
            <returns>The parent of the specified node, or <see langword="null" />
            if <strong>node</strong> has no parent.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.ITreeModel.IsLeaf(System.Object)">
            <summary>
            When implemented by a class, returns a value indicating whether the specified node is a leaf.
            </summary>
            <param name="node">The tree node.</param>
            <returns><see langword="true" /> if the <paramref name="node" /> parameter is a leaf; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.ITreeModel.TreeModelChanged">
            <summary>
            Occurs when the tree model changes.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.Design.TableColumnsSerializer">
            <summary>
            A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> for the <strong>Columns</strong> property of the <see cref="T:NickLee.Views.Windows.Forms.TreeTable" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Design.TableColumnsSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
            <summary>
            The default serializer can handle the deserialization just fine.  We override this
            because it is an <see langword="abstract" /> member.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Design.TableColumnsSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">CodeDomSerializer.Serialize</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Web.UI.ImageControl">
            <summary>
            A control that displays an image and responds to mouse clicks on the image.
            </summary>
            <remarks>Unlike the <see cref="T:System.Web.UI.WebControls.Image">System.Web.UI.WebControls.Image</see> control
            that references its image using a static URL, the <see cref="T:NickLee.Views.Web.UI.ImageControl" /> can display any kind of
            <see cref="T:System.Drawing.Image" />. To set the image of the <strong>ImageControl</strong>,
            use the <see cref="P:NickLee.Views.Web.UI.ImageControl.Image" /> property.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Web.UI.ImageControl.AddToolTipMapArea(System.Web.UI.HtmlTextWriter,System.Drawing.Rectangle,System.String,System.String)">
            <summary>
            Call this method to create a rectangle image map area with a tooltip.
            </summary>
            <param name="writer">The writer in which the area will be put.</param>
            <param name="rect">The bounds of the image map area.</param>
            <param name="tooltip">The tooltip.</param>
            <param name="href">The href associated with the area.</param>
        </member>
        <member name="M:NickLee.Views.Web.UI.ImageControl.Dispose">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.Dispose">WebControl.Dispose</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.ImageControl.FilterViewStateProperties(System.Collections.IDictionary)">
            <summary>
            Is called to filter the properties that will be serialized into the view state.
            </summary>
            <param name="properties">The properties that will be serialized into the view state.</param>
            <remarks><p>This method is called from the <see cref="M:NickLee.Views.Web.UI.ImageControl.SaveViewState" /> method to filter
            the properties that will be inserted into the view state.</p>
            <p>You can add or remove items to <paramref name="properties" />. The keys in the
            dictionary of properties are the names of the properties. The objects are of type
            <see cref="T:System.ComponentModel.PropertyDescriptor" />.</p>
            <p>The default implementation does nothing.</p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Web.UI.ImageControl.GenerateImageURL">
            <summary>
            Is called to generate the image URL from the <see cref="P:NickLee.Views.Web.UI.ImageControl.Image" /> property.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.ImageControl.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Processes post back data for the control.
            </summary>
            <param name="postDataKey">The key identifier for the control.</param>
            <param name="postCollection">The collection of all incoming name values.</param>
            <returns><see langword="true" /> if the server control state changes as a result of
            the post back; otherwise <see langword="false" />.
            </returns>
        </member>
        <member name="M:NickLee.Views.Web.UI.ImageControl.LoadViewState(System.Object)">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.LoadViewState(System.Object)">Control.LoadViewState</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.ImageControl.OnClick(System.Web.UI.ImageClickEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Web.UI.ImageControl.Click" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Web.UI.ImageClickEventArgs" />
            that contains the event data.</param>
        </member>
        <member name="M:NickLee.Views.Web.UI.ImageControl.OnLoad(System.EventArgs)">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)">Control.OnLoad</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.ImageControl.OnPreRender(System.EventArgs)">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)">Control.OnPreRender</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.ImageControl.RaisePostBackEvent(System.String)">
            <summary>
            Enables a control to process an event raised when a form is posted to the server.
            </summary>
            <param name="arg">A <see cref="T:System.String" /> that represents an optional
            event argument to be passed to the event handler.</param>
            <remarks>The implementation of this method calls the <see cref="M:NickLee.Views.Web.UI.ImageControl.OnClick(System.Web.UI.ImageClickEventArgs)" />
            method.</remarks>
        </member>
        <member name="M:NickLee.Views.Web.UI.ImageControl.RaisePostDataChangedEvent">
            <summary>
            Signals the control object to notify the ASP.NET application that the state of the control
            has changed.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.ImageControl.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)">Control.Render</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.ImageControl.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)">Control.RenderContents</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.ImageControl.RenderImageMap(System.Web.UI.HtmlTextWriter)">
            <summary>
            Is called to render an image map for the image rendered by this control.
            </summary>
            <param name="writer">The writer in which to put the image map description.</param>
            <returns>A <see cref="T:System.String" /> that represents the name of the image map that was created; If <see langword="null" />
            is returned, no image map has been created.</returns>
            <remarks>The default implementation calls the <see cref="M:NickLee.Views.Web.UI.ImageControl.RenderImageMapAreas(System.Web.UI.HtmlTextWriter)" /> method to
            fill the image map with areas.</remarks>
        </member>
        <member name="M:NickLee.Views.Web.UI.ImageControl.RenderImageMapAreas(System.Web.UI.HtmlTextWriter)">
            <summary>
            Is called to render image map areas.
            </summary>
            <param name="writer">The writer in which to put the image map areas.</param>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:NickLee.Views.Web.UI.ImageControl.SaveViewState">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.SaveViewState">Control.SaveViewState</see>.
            </summary>
        </member>
        <member name="E:NickLee.Views.Web.UI.ImageControl.Click">
            <summary>
            Occurs when the control is clicked.
            </summary>
        </member>
        <member name="P:NickLee.Views.Web.UI.ImageControl.Image">
            <summary>
            Gets or sets the image rendered by the control.
            </summary>
            <value>A <see cref="T:System.Drawing.Image" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Web.UI.ImageControl.ImageFormat">
            <summary>
            Gets or sets the image format used by the control.
            </summary>
            <value>A <see cref="T:System.Drawing.Imaging.ImageFormat" />
            instance.</value>
            <remarks>The default value is <strong>Png</strong>.</remarks>
        </member>
        <member name="P:NickLee.Views.Web.UI.ImageControl.IsInteractive">
            <summary>
            Returns a value indicating whether the control should react or not
            to mouse clicks.
            </summary>
            <value><see langword="true" /> if the control is interactive; otherwise,
            <see langword="false" />.</value>
            <remarks>The default behavior is to return <see langword="true" /> if the
            control is enabled (see the <see cref="P:System.Web.UI.WebControls.WebControl.Enabled" /> property) and if
            a <see cref="E:NickLee.Views.Web.UI.ImageControl.Click" /> handler has been installed.</remarks>
        </member>
        <member name="P:NickLee.Views.Web.UI.ImageControl.IsLoaded">
            <summary>
            Gets a value indicating whether the control has been loaded.
            </summary>
            <value><see langword="true" /> if the <see cref="M:NickLee.Views.Web.UI.ImageControl.OnLoad(System.EventArgs)" /> method
            has already been called; otherwise, <see langword="false" /></value>.
        </member>
        <member name="T:NickLee.Views.Windows.Forms.TreeModelChangeEventHandler">
            <summary>
            Represents the method that handles an <see cref="E:NickLee.Views.Windows.Forms.ITreeModel.TreeModelChanged" /> event of an <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.QueryNodeIndexEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Windows.Forms.TreeModelView.QueryNodeIndex" /> event of the <see cref="T:NickLee.Views.Windows.Forms.TreeModelView" /> class.
            </summary>
            <remarks>A <see cref="E:NickLee.Views.Windows.Forms.TreeModelView.QueryNodeIndex" /> event is raised when a node is being added to
            the tree model view. It lets you control the index where the node will be inserted using the
            <see cref="P:NickLee.Views.Windows.Forms.QueryNodeIndexEventArgs.Index" /> property.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.QueryNodeIndexEventArgs.Initialize(System.Object,System.Object,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.QueryNodeIndexEventArgs" /> class.
            </summary>
            <param name="parent">The parent node of the node being added.</param>
            <param name="child">The node being added.</param>
            <param name="index">The index where <paramref name="child" /> will be added.</param>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.QueryNodeIndexEventArgs.Child">
            <summary>
            Gets the node being added.
            </summary>
            <value>An <see cref="T:System.Object" /> representing the node being added.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.QueryNodeIndexEventArgs.Index">
            <summary>
            Gets or sets the zero-based index where the node will be added.
            </summary>
            <value>A zero-based integer representing the index where the node will be
            added. If the value is negative, the node will be appended to the parent
            child collection.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.QueryNodeIndexEventArgs.Parent">
            <summary>
            Gets the parent node where the node will be added.
            </summary>
            <value>An <see cref="T:System.Object" /> representing the parent node where the node
            will be added.</value>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.Printing.DocumentPageSetupDialog">
            <summary>
            Defines a dialog box that allows you to setup the parameters of a <see cref="T:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument" />.
            </summary>
            <remarks>
            This dialog box allows you to edit the page format, the header and the footer.
            This dialog box is composed of a <see cref="T:System.Windows.Forms.TabControl" />
            with two tab pages: one to edit the page format and one to edit the header and footer.
            You may add a new tab if you need to edit additional parameters for a specialized class of document.
            </remarks>
            <seealso cref="T:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.DocumentPageSetupDialog.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:NickLee.Views.Windows.Forms.Printing.DocumentPageSetupDialog" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.DocumentPageSetupDialog.Dispose(System.Boolean)">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.DocumentPageSetupDialog.FooterPanel_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the footer preview panel.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.DocumentPageSetupDialog.HeaderPanel_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the header preview panel.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.DocumentPageSetupDialog.Initialize">
            <summary>
            Initializes the dialog box fields according to the current document.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.DocumentPageSetupDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.DocumentPageSetupDialog.SetUpDocument">
            <summary>
            Updates the document properties when validating the dialog box.
            </summary>
            <remarks>
            This function is called when the "OK" button is pressed.
            If you have overwritten this class to edit properties specific to your document,
            you have to overwrite this method to set the new properties in the document.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.DocumentPageSetupDialog.UpdateFields">
            <summary>
            Updates the value of the fields of the dialog box.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.Printing.DocumentPageSetupDialog.tabControl">
            <summary>
            The tab control of the dialog box.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.DocumentPageSetupDialog.CanSpecifyPageOrder">
            <summary>
            Gets or sets a value that indicates if the user can specify
            the page order of the document.
            </summary>
            <value><see langword="true" /> if the user can specify the page order
            of the document; <see langword="false" /> otherwise. The default value
            is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.DocumentPageSetupDialog.Document">
            <summary>
            Gets or sets the document.
            </summary>
            <value>An <see cref="T:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument" /> object that represents the
            document that is edited by the dialog box.</value>
        </member>
        <member name="T:NickLee.Views.Web.UI.TypeControlBuilder">
            <summary>
            Control builder for <strong>ImageControl</strong>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.TypeControlBuilder.GetChildControlType(System.String,System.Collections.IDictionary)">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.ControlBuilder.GetChildControlType(System.String,System.Collections.IDictionary)" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Web.UI.TreeTable">
            <summary>
            Defines a Web Form table that displays a hierarchical tree of nodes
            exposed through an <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" /> model.
            </summary>
            <remarks>
            <p>The <see cref="T:NickLee.Views.Web.UI.TreeTable" /> control displays a hierarchical tree of nodes in a
            table.</p>
            <p>To display data in a <strong>TreeTable</strong> use the <see cref="P:NickLee.Views.Web.UI.TreeTable.TreeModel" />
            property. You can use the default <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" /> implementation
            (<see cref="T:NickLee.Views.Windows.Forms.DefaultTreeModel" />) or define your own by implementing the
            <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" /> interface.</p>
            <p>The table is initially created without any columns. You can add columns
            (instances of <see cref="T:NickLee.Views.Windows.Forms.TableColumn" />) to the table by using the
            <see cref="P:NickLee.Views.Web.UI.TreeTable.Columns" /> property. The <see cref="T:NickLee.Views.Windows.Forms.TreeColumn" /> class
            defines a column that displays the hierarchy of nodes of the tree model with
            (+) and (-) signs that allows you to collapse or expand the hierarchy.</p>
            <p>Each column can display a property of a node of the tree model.
            The name of the displayed property is defined by the
            <see cref="P:NickLee.Views.Windows.Forms.TableColumn.MappingName" /> property of the
            <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> class.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to create a <see cref="T:NickLee.Views.Web.UI.TreeTable" /> with some columns.
            The <strong>TreeTable</strong> is connected to a <see cref="T:NickLee.Views.Windows.Forms.DefaultTreeModel" /> that wraps
            an <see cref="T:System.Collections.ICollection" />. We suppose that the object located in the collection have the
            <strong>Name</strong> and <strong>Value</strong> properties defined.
            </para>
            <code lang="C#">
            private TreeTable CreateTable(ICollection collection) {

            // Creates a DefaultTreeModel that wraps the collection
            ITreeModel model = new DefaultTreeModel(collection);

            // Creates a TreeTable with no columns.
            TreeTable table = new TreeTable(model);

            // Creates a tree column mapped to the "Name" property of the tree model.
            // This column is read-only
            TreeColumn column1 = new TreeColumn("Name", "Name");
            column1.ReadOnly = true;

            // Creates a column mapped to the "Value" property of the tree model.
            TableColumn column2 = new TableColumn("Value", "Value");

            // Adds the columns to the table.
            table.Columns.AddRange(new TableColumn[] { column1, column2 });

            // Returns the table
            return table;
            }
            </code>
            <code lang="Visual Basic">
            Private Function CreateTable(ByVal collection As ICollection) As TreeTable

            ' Creates a DefaultTreeModel that wraps the collection
            Dim model As New DefaultTreeModel(collection)

            ' Creates a TreeTable with no columns.
            Dim table As New TreeTable(model)

            ' Creates a tree column mapped to the "Name" property of the tree model.
            ' This column is read-only
            Dim column1 As New TreeColumn("Name", "Name")
            column1.ReadOnly = true

            ' Creates a column mapped to the "Value" property of the tree model.
            Dim column2 As New TableColumn ("Value", "Value")

            ' Adds the columns to the table.
            table.Columns.AddRange(New TableColumn() { column1, column2 })

            ' Returns the table
            Return table
            End Function
            </code>
            </example>
            <seealso cref="T:NickLee.Views.Windows.Forms.ITreeModel" />
            <seealso cref="T:NickLee.Views.Windows.Forms.TableColumn" />
            <seealso cref="T:NickLee.Views.Windows.Forms.TreeColumn" />
            <seealso cref="T:NickLee.Views.Windows.Forms.ImageTableColumn" />
            <seealso cref="T:NickLee.Views.Windows.Forms.TreeModelView" />
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Web.UI.TreeTable" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.#ctor(NickLee.Views.Windows.Forms.TreeTable)">
            <summary>
            This constructor is for internal use only and is not intended to be used by your code.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.AddParsedSubObject(System.Object)">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.AddParsedSubObject(System.Object)">Control.AddParsedSubObject</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.AddSelectionInterval(System.Int32,System.Int32)">
            <summary>
            Adds the rows in the specified range to the selection.
            </summary>
            <param name="index0">The first index to add to the selection.</param>
            <param name="index1">The last index to add to the selection.</param>
            <remarks>The method selects the rows in the range defined by the
            two indeces. It is not necessary that <paramref name="index0" /> is smaller than
            <paramref name="index1" />. The rows at <paramref name="index0" /> and
            <paramref name="index1" /> are also selected.</remarks>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index0" /> or
            <paramref name="index1" /> are not valid indices.</exception>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.ClearSelection">
            <summary>
            Deselects all the rows.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.CollapseAll">
            <summary>
            Collapses recursively the whole tree.
            </summary>
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.IsRowExpanded(System.Int32)" />
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.ExpandRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.CollapseRow(System.Object)" />
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.CollapseAll(System.Int32)">
            <summary>
            Collapses the specified row and all its descendant nodes.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.IsRowExpanded(System.Int32)" />
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.ExpandRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.CollapseRow(System.Object)" />
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.CollapseAll(System.Object)">
            <summary>
            Collapses the specified node and all its descendant nodes.
            </summary>
            <param name="node">The tree node.</param>
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.IsRowExpanded(System.Int32)" />
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.ExpandRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.CollapseRow(System.Object)" />
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.CollapseRow(System.Int32)">
            <summary>
            Collapses the specified row.
            </summary>
            <param name="row">The zero-based index of the row to collapse.</param>
            <remarks>The <see cref="E:NickLee.Views.Web.UI.TreeTable.NodeStateChanging" /> and <see cref="E:NickLee.Views.Web.UI.TreeTable.NodeStateChanged" /> events are
            raised when a row is collapsed.</remarks>
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.IsRowExpanded(System.Int32)" />
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.ExpandRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.CollapseAll(System.Object)" />
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.CollapseRow(System.Object)">
            <summary>
            Collapses the specified node.
            </summary>
            <param name="node">The tree node to collapse.</param>
            <remarks>The <see cref="E:NickLee.Views.Web.UI.TreeTable.NodeStateChanging" /> and <see cref="E:NickLee.Views.Web.UI.TreeTable.NodeStateChanged" /> events are
            raised when a row is collapsed.</remarks>
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.IsRowExpanded(System.Int32)" />
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.ExpandRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.CollapseAll(System.Object)" />
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.ColumnFromPoint(System.Int32)">
            <summary>
            Checks if the specified point is on a column.
            </summary>
            <param name="x">The coordinate to test.</param>
            <returns>The column index or <strong>-1</strong> if the point is not on a column.</returns>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.Dispose">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.Dispose">Control.Dispose</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.EnsureRowVisible(System.Int32)">
            <summary>
            Scrolls the table so that the specified row becomes
            visible.
            </summary>
            <param name="rowIndex">The row index.</param>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.ExpandAll">
            <summary>
            Expands recursively the whole tree.
            </summary>
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.IsRowExpanded(System.Int32)" />
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.ExpandRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.CollapseRow(System.Object)" />
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.ExpandAll(System.Int32)">
            <summary>
            Expands the specified row and all its descendant nodes.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.IsRowExpanded(System.Int32)" />
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.ExpandRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.CollapseRow(System.Object)" />
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.ExpandAll(System.Object)">
            <summary>
            Expands the specified node and all its descendant nodes.
            </summary>
            <param name="node">The tree node to expand.</param>
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.IsRowExpanded(System.Int32)" />
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.ExpandRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.CollapseRow(System.Object)" />
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.ExpandRow(System.Int32)">
            <summary>
            Expands the specified row.
            </summary>
            <param name="row">The zero-based index of the row to expand.</param>
            <remarks>The <see cref="E:NickLee.Views.Web.UI.TreeTable.NodeStateChanging" /> and <see cref="E:NickLee.Views.Web.UI.TreeTable.NodeStateChanged" /> events are
            raised when a row is expanded.</remarks>
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.IsRowExpanded(System.Int32)" />
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.CollapseRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.ExpandAll(System.Object)" />
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.ExpandRow(System.Object)">
            <summary>
            Expands the specified node.
            </summary>
            <param name="node">The tree node to expand.</param>
            <remarks>The <see cref="E:NickLee.Views.Web.UI.TreeTable.NodeStateChanging" /> and <see cref="E:NickLee.Views.Web.UI.TreeTable.NodeStateChanged" /> events are
            raised when a row is expanded.</remarks>
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.IsRowExpanded(System.Int32)" />
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.CollapseRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.ExpandAll(System.Object)" />
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.FilterViewStateProperties(System.Collections.IDictionary)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Web.UI.ImageControl.FilterViewStateProperties(System.Collections.IDictionary)">ImageControl.FilterViewStateProperties</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.GenerateImageURL">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Web.UI.ImageControl.GenerateImageURL">ImageControl.GenerateImageURL</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.GetCellBounds(System.Int32,System.Int32)">
            <summary>
            Gets the bounding rectangle of the specified cell.
            </summary>
            <param name="rowIndex">The row index of the cell.</param>
            <param name="columnIndex">The column index of the cell.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding
            rectangle of the cell.</returns>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.GetChild(System.Object,System.Int32)">
            <summary>
            Retrieves the child node corresponding to the specified index.
            </summary>
            <param name="node">The tree node.</param>
            <param name="index">The zero-based index of the child.</param>
            <returns>The child of <paramref name="node" /> whose index is
            <paramref name="index" />.</returns>
            <remarks>If <paramref name="node" /> is <see langword="null" />, the root of the tree
            model is used.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.GetChildCount(System.Object)">
            <summary>
            Retrieves the number of children belonging to a node.
            </summary>
            <param name="node">The tree node.</param>
            <returns>The number of children of <paramref name="node" />.</returns>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.GetColumnBounds(System.Int32)">
            <summary>
            Gets the bounding rectangle of the specified column.
            </summary>
            <param name="column">The column index.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle of the column.</returns>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.GetIndexOfChild(System.Object,System.Object)">
            <summary>
            Returns the zero-based index of the specified child in the specified node.
            </summary>
            <param name="node">The parent tree node.</param>
            <param name="child">The child node.</param>
            <returns>A zero-based index, or <strong>-1</strong> if the <paramref name="child" /> is not a child of
            <paramref name="parent" />.</returns>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.GetParent(System.Object)">
            <summary>
            Retrieves the parent of the specified node.
            </summary>
            <param name="node">The tree node.</param>
            <returns>The parent node of the <paramref name="node" />, or <see langword="null" />
            if <paramref name="node" /> has no parent.</returns>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.GetRowBounds(System.Int32)">
            <summary>
            Gets the bounding rectangle of the specified row.
            </summary>
            <param name="row">The row index.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle of the row.</returns>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.GetRowBounds(System.Int32,System.Int32)">
            <summary>
            Gets the bounding rectangle of the specified rows.
            </summary>
            <param name="fromIndex">The first row index.</param>
            <param name="toIndex">The last row index.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle" /> structure that represents the bounding rectangle of the rows.</returns>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.GetRowHeight(System.Int32)">
            <summary>
            Gets the height of the specified row.
            </summary>
            <param name="rowIndex">The row index.</param>
            <returns>The height of the specified row.</returns>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="rowIndex" /> is not
            a valid index.</exception>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.GetRowHeight(System.Object)">
            <summary>
            Gets the height of the row corresponding to the specified node.
            </summary>
            <param name="node">The tree node.</param>
            <returns>The height of the row corresponding to <paramref name="node" />.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="node" /> is not
            a node that belongs to the tree table.</exception>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.GetRowPosition(System.Int32)">
            <summary>
            Gets the position of the specified row.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <returns>The position of the specified row.</returns>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.GetSelectedRows">
            <summary>
            Gets the selected nodes of the table.
            </summary>
            <returns>An array containing the selected nodes of the table.</returns>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.GetSelection">
            <summary>
            Gets the selected rows of the table.
            </summary>
            <returns>An array of zero-based indeces of the selected rows.</returns>
            <remarks>The returned array is sorted using the row indices.</remarks>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.GetValueAt(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Object" /> at the specified row index.
            </summary>
            <param name="rowIndex">The zero-based row index.</param>
            <returns>The node value at the specified row index.</returns>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="rowIndex" /> is not
            a valid index.</exception>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.HitTest(System.Drawing.Point)">
            <summary>
            Gets information about the <see cref="T:NickLee.Views.Web.UI.TreeTable" /> control at a specified point on the screen.
            </summary>
            <param name="point">A <see cref="T:System.Drawing.Point" /> that represents single x,y coordinates.
            </param>
            <returns>A <see cref="T:NickLee.Views.Windows.Forms.TreeTable.HitTestInfo" /> that contains specific information
            about the table.
            </returns>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.IndexOfRow(System.Object)">
            <summary>
            Gets the zero-based index of the specified node in the table.
            </summary>
            <param name="node">The tree node.</param>
            <returns>The zero-based row index of <paramref name="node" /> in the table, or
            <strong>-1</strong> if <paramref name="node" /> is not displayed by the table.</returns>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.IsLeaf(System.Int32)">
            <summary>
            Gets a value indicating whether the specified row is a leaf.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <returns>A value indicating whether the specified row is a leaf.</returns>
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.ExpandRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.CollapseRow(System.Object)" />
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.IsLeaf(System.Object)">
            <summary>
            Returns a value indicating whether the specified node is a leaf.
            </summary>
            <param name="node">The tree node.</param>
            <returns><see langword="true" /> if <paramref name="node" /> is a leaf;
            <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.IsRowExpanded(System.Int32)">
            <summary>
            Gets a value indicating whether the specified row is expanded.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <returns>A value indicating whether the specified node is expanded.</returns>
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.ExpandRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.CollapseRow(System.Object)" />
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.IsRowExpanded(System.Object)">
            <summary>
            Gets a value indicating whether the specified node is expanded.
            </summary>
            <param name="node">The tree node.</param>
            <returns>A value indicating whether the specified node is expanded.</returns>
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.ExpandRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.CollapseRow(System.Object)" />
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.IsRowVisible(System.Object)">
            <summary>
            Gets a value indicating whether the specified node is visible.
            </summary>
            <param name="node">The tree node.</param>
            <returns><see langword="true" /> if the <paramref name="node" /> is visible in the table;
            otherwise <see langword="false" />.</returns>
            <remarks>
            A tree node is said to be visible when all its ancestors are expanded.
            </remarks>
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.ExpandRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.IsRowExpanded(System.Int32)" />
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.IsSelected(System.Int32)">
            <summary>
            Gets a value indicating whether a specified row is selected.
            </summary>
            <param name="rowIndex">The row index to test.</param>
            <returns><see langword="true" /> if the row is selected; <see langword="false" /> otherwise.</returns>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="rowIndex" /> is not a
            valid index.</exception>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.IsSelectionEmpty">
            <summary>
            Gets a value that indicates if the selection is empty.
            </summary>
            <returns><see langword="true" /> if the table does not have any selected rows;
            <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.LoadViewState(System.Object)">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.LoadViewState(System.Object)">Control.LoadViewState</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.OnClick(System.Web.UI.ImageClickEventArgs)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Web.UI.ImageControl.OnClick(System.Web.UI.ImageClickEventArgs)">ImageControl.OnClick</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.OnInit(System.EventArgs)">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)">Control.OnInit</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.PageDown">
            <summary>
            Scrolls down the table of a whole page.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.PageUp">
            <summary>
            Scrolls up the table of a whole page.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.RemoveSelectionInterval(System.Int32,System.Int32)">
            <summary>
            Deselects the rows in the specified range.
            </summary>
            <remarks>The method deselects the rows in the range defined by the
            two indeces. It is not necessary that <strong>index0</strong> is smaller than <strong>index1</strong>. The
            rows at <strong>index0</strong> and <strong>index1</strong> are also deselected.</remarks>
            <param name="index0">The first index to remove from the selection.</param>
            <param name="index1">The last index to remove from the selection.</param>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.RenderImageMapAreas(System.Web.UI.HtmlTextWriter)">
            <summary>
            Is called to render image map areas.
            </summary>
            <param name="writer">The writer in which to put the image map areas.</param>
            <remarks>The implementation of this method create image map areas to display
            tooltips for table cells.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.ResetColumns">
            <summary>
            Resets the <see cref="P:NickLee.Views.Web.UI.TreeTable.Columns" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.ScrollDown">
            <summary>
            Scrolls down the table of one row.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.ScrollUp">
            <summary>
            Scrolls up the table of one row.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.SetRowHeight(System.Int32,System.Int32)">
            <summary>
            Sets the height of the specified row.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="newHeight">The new height.</param>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="rowIndex" /> is not
            a valid index.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="newHeight" /> is
            negative.</exception>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.SetRowHeight(System.Object,System.Int32)">
            <summary>
            Sets the height of the row corresponding to the specified node.
            </summary>
            <param name="node">The node.</param>
            <param name="height">The new height.</param>
            <exception cref="T:System.ArgumentException"><paramref name="node" /> is not
            a node that belongs to the tree table.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="height" /> is
            negative.</exception>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.SetRowHeights(System.Int32)">
            <summary>
            Sets the height of all the rows.
            </summary>
            <param name="height">The new height.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="height" /> is
            negative.</exception>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.SetSelected(System.Int32,System.Boolean)">
            <summary>
            Selects or deselects the specified row.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="value"><see langword="true" /> to select, <see langword="false" /> to deselect.</param>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="rowIndex" /> is not a
            valid index.</exception>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.SetSelectionInterval(System.Int32,System.Int32)">
            <summary>
            Sets the selection to the specified range.
            </summary>
            <param name="index0">The first index to select.</param>
            <param name="index1">The last index to select.</param>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index0" /> or
            <paramref name="index1" /> are not valid indices.</exception>
            <remarks>The method sets the selection to the range defined by the
            two indeces. It is not necessary that <paramref name="index0" /> is smaller than
            <paramref name="index1" />. The rows at <paramref name="index0" /> and
            <paramref name="index1" /> are also selected.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.ShouldSerializeColumns">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Web.UI.TreeTable.Columns" /> property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Web.UI.TreeTable.ShowOutlineLevel(System.Int32)">
            <summary>
            Displays a specified outline level.
            </summary>
            <remarks>The method will collapse and expand nodes so that only the
            specified outline level is visible. The level must be greater than or equal to <strong>1</strong>.</remarks>
            <param name="level">The outline level to display.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="level" /> is less
            than <strong>1</strong>.</exception>
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.IsRowExpanded(System.Int32)" />
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.ExpandRow(System.Object)" />
            <seealso cref="M:NickLee.Views.Web.UI.TreeTable.CollapseRow(System.Object)" />
        </member>
        <member name="E:NickLee.Views.Web.UI.TreeTable.DrawTableCell">
            <summary>
            Occurs when the table draw cells in owner draw mode.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Web.UI.TreeTable.OwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows an event handler
            listening to the <see cref="E:NickLee.Views.Web.UI.TreeTable.DrawTableCell" /> event. The event handler draws
            expanded nodes with children using a specific font. Other nodes are painted using the default
            painting algorithm.
            </para>
            <code lang="C#">
            // Attach the event handler
            TreeTable table = new TreeTable();
            table.OwnerDraw = true;
            table.DrawTableCell += new DrawTableCellEventHandler(OnDrawTableCell);

            // The code of the event handler
            private void OnDrawTableCell(object sender, DrawTableCellArgs e) {
            TreeTable table = e.TreeTable;
            object value = table.GetValueAt(e.Row);
            // If the node being drawn has children and is expanded, draw it using
            // an italic font.
            if (table.TreeModel.GetChildCount(value) != 0 &amp;&amp; table.IsRowExpanded(value)) {
            Font font = new Font(e.Font, e.Font.Style | FontStyle.Italic);
            e.DrawCell(e.Bounds, e.BackBrush, e.ForeBrush, font);
            } else
            e.DrawCell();
            }
            </code>
            <code lang="Visual Basic">
            ' Attach the event handler
            Dim table As New TreeTable()
            table.OwnerDraw = True

            ' The code of the event handler
            Private Sub OnDrawTableCell(ByVal sender As Object, ByVal e As DrawTableCellArgs) Handles table.DrawTableCell
            Dim table As TreeTable = e.TreeTable
            Dim value As Object = table.GetValueAt(e.Row)
            ' If the node being drawn has children and is expanded, draw it using
            ' an italic font.
            If table.TreeModel.GetChildCount(value) &lt;&gt; 0 And table.IsRowExpanded(value)) Then
            Dim font As New Font(e.Font, e.Font.Style | FontStyle.Italic)
            e.DrawCell(e.Bounds, e.BackBrush, e.ForeBrush, font)
            Else
            e.DrawCell()
            End If
            End Sub
            </code>
            </example>
            <seealso cref="P:NickLee.Views.Web.UI.TreeTable.OwnerDraw" />
        </member>
        <member name="E:NickLee.Views.Web.UI.TreeTable.NodeStateChanged">
            <summary>
            Event fired after a node has been expanded or collapsed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Web.UI.TreeTable.NodeStateChanging">
            <summary>
            Occurs when a node is being expanded or collapsed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Web.UI.TreeTable.RowControllerChanged">
            <summary>
            Occurs when the row controller changes.
            </summary>
        </member>
        <member name="E:NickLee.Views.Web.UI.TreeTable.SelectionChanged">
            <summary>
            Occurs when the selection has changed on the control.
            </summary>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.AlternatingBackColor">
            <summary>
            Gets or sets the background color of alternating rows for a ledger appearance.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the alternating background color.
            The default value is the system color for windows (<see cref="P:System.Drawing.SystemColors.Window">SystemColors.Window</see>).
            </value>
            <remarks>
            By default, all rows have the same color (the <see cref="P:NickLee.Views.Web.UI.TreeTable.BackColor" /> property of the control).
            When you set the <strong>AlternatingBackColor</strong> to a new color, all the other rows are set to the new color.
            To reset the alternating background color
            to its default value, set the property to <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.BackColor">
            <summary>
            Gets or sets the background color of the table.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of rows in the grid.
            The default value is the system color for windows (<see cref="P:System.Drawing.SystemColors.Window">SystemColors.Window</see>).
            </value>
            <remarks>
            Whereas the <see cref="P:NickLee.Views.Web.UI.TreeTable.BackColor" /> property determines the color of rows
            in the grid, the <see cref="P:NickLee.Views.Web.UI.TreeTable.BackgroundColor" /> determines
            the color of the nonrow area, which is only visible when the grid
            is scrolled to the bottom, or if only a few rows
            are contained in the grid.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.BackgroundColor">
            <summary>
            Gets or sets the color of the nonrow area of the grid.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the grid background.
            The default value is the <see cref="P:System.Drawing.SystemColors.AppWorkspace">SystemColors.AppWorkspace</see> color.
            </value>
            <remarks>
            The background color determines the color of the nonrow area
            of the grid, which is only visible when no table is displayed
            by the <see cref="T:NickLee.Views.Web.UI.TreeTable" />, or if the grid is scrolled to the bottom,
            or if only a few rows are contained in the grid.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.BorderColor">
            <summary>
            Overridden. See <see cref="P:System.Web.UI.WebControls.WebControl.BorderColor">WebControl.BorderColor</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.CellsRectangle">
            <summary>
            Gets the <see cref="T:System.Drawing.Rectangle" /> where table cells are drawn.
            </summary>
            <value>A <see cref="T:System.Drawing.Rectangle" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.ColumnHeaderHeight">
            <summary>
            Gets or sets the height of column headers.
            </summary>
            <value>
            The height of column headers.
            </value>
            <remarks>
            The column header may be not visible if the property
            <see cref="P:NickLee.Views.Web.UI.TreeTable.ColumnHeadersVisible" /> is set to <see langword="false" />.
            By default, this property uses the size of the <see cref="P:NickLee.Views.Web.UI.TreeTable.HeaderFont" />.
            To reset this property to its default value, set it to <strong>-1</strong>.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">The property value is negative.
            </exception>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.ColumnHeadersVisible">
            <summary>
            Gets or sets the visibility of column headers.
            </summary>
            <value>
            <see langword="true" /> if the column headers are visible,
            <see langword="false" /> otherwise.
            The default value is <see langword="true" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.Columns">
            <summary>
            Gets the collection of columns of this table.
            </summary>
            <value>A <see cref="T:NickLee.Views.Windows.Forms.TableColumnCollection" /> that represents the collection of columns displayed by the table.</value>
            <remarks>By default the table is built without any columns.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to create a <see cref="T:NickLee.Views.Web.UI.TreeTable" /> with some columns.
            </para>
            <code lang="C#">
            private TreeTable CreateTable(ITreeModel model) {
            // Creates a TreeTable with no columns.
            TreeTable table = new TreeTable(model);

            // Creates a tree column mapped to the "Name" property of the tree model.
            // This column is read-only
            TreeColumn column1 = new TreeColumn("Name", "Name");
            column1.ReadOnly = true;

            // Creates a column mapped to the "Value" property of the tree model.
            TableColumn column2 = new TableColumn("Value", "Value");

            // Adds the columns to the table.
            table.Columns.AddRange(new TableColumn[] { column1, column2 });

            // Returns the table
            return table;
            }
            </code>
            <code lang="Visual Basic">
            Private Function CreateTable(ByVal model As ITreeModel) As TreeTable
            ' Creates a TreeTable with no columns.
            Dim table As New TreeTable(model)

            ' Creates a tree column mapped to the "Name" property of the tree model.
            ' This column is read-only
            Dim column1 As New TreeColumn("Name", "Name")
            column1.ReadOnly = true

            ' Creates a column mapped to the "Value" property of the tree model.
            Dim column2 As New TableColumn ("Value", "Value")

            ' Adds the columns to the table.
            table.Columns.AddRange(New TableColumn() { column1, column2 })

            ' Returns the table
            Return table
            End Function
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.CurrentRow">
            <summary>
            Gets or sets the current row of the table.
            </summary>
            <value>The zero-based index of the current row.
            </value>
            <remarks>The current row is the row marked with an arrow in
            the row headers. Note that when the table does not contain any row, the value of the
            property is <strong>0</strong>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.EnableColumnViewState">
            <summary>
            Gets or sets a value indicating whether the <see cref="P:NickLee.Views.Web.UI.TreeTable.Columns" /> property
            should be serialized into the view state.
            </summary>
            <value><see langword="true" /> if the <strong>Columns</strong> property should
            be serialized into the view state; otherwise, <see langword="false" />.
            The default value is <see langword="true" />.</value>
            <remarks>If you do not modify the columns of the table during round-trips,
            you should set this property to <see langword="false" /> to speed up page loading.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.FirstVisibleRow">
            <summary>
            Gets or sets the index of the first visible row.
            </summary>
            <value>The index of the first visible row.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The property value is not
            between <strong>0</strong> and <strong>RowCount-1</strong>.</exception>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.FlatStyle">
            <summary>
            Gets or sets the flat style appearance of the control.
            </summary>
            <value>One of the <see cref="T:System.Windows.Forms.FlatStyle" /> values.
            The default value is <strong>Standard</strong>.</value>
            <remarks>Setting this property to either <strong>Flat</strong> or <strong>Popup</strong>
            has the same effect.</remarks>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.Font">
            <summary>
            Overridden. See <see cref="P:System.Web.UI.WebControls.WebControl.Font">WebControl.Font</see>.
            </summary>
            <remarks>This property is not used to render the table.
            Use the <see cref="P:NickLee.Views.Web.UI.TreeTable.TextFont" /> property instead.</remarks>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.ForeColor">
            <summary>
            Gets or sets the foreground color used for rows.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of cells.
            The default value is the value for window text (<see cref="P:System.Drawing.SystemColors.WindowText">SystemColors.WindowText</see>).</value>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.GridLineColor">
            <summary>
            Gets or sets the color of the grid line.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the grid lines.
            The default value is the system color for controls (<see cref="P:System.Drawing.SystemColors.Control">SystemColors.Control</see>).
            </value>
            <remarks>
            No grid line is displayed if the <see cref="P:NickLee.Views.Web.UI.TreeTable.GridLineStyle" /> property
            is set to <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle">None</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.GridLineStyle">
            <summary>
            Gets or sets the style of grid lines.
            </summary>
            <value>
            One of the <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle" /> values.
            The default value is <see cref="F:NickLee.Views.Windows.Forms.GridLineStyle.Solid" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.GroupBackColor">
            <summary>
            Gets or sets the background color of rows that represent groups of rows.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the background color for rows
            that represent groups of rows. The default value inherits from the <see cref="P:NickLee.Views.Web.UI.TreeTable.BackColor" /> property.
            </value>
            <remarks>
            To reset the group background color to its default value, set the
            property to <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.HeaderBackColor">
            <summary>
            Gets or sets the background color used for
            row and column headers.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the background
            color of row and column headers. The default value is
            the color used for
            controls (<see cref="P:System.Drawing.SystemColors.Control">SystemColors.Control</see>).</value>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.HeaderFont">
            <summary>
            Gets or sets the font used for column headers.
            </summary>
            <value>
            The <see cref="T:System.Drawing.Font" /> object that represents the header text.
            </value>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.HeaderForeColor">
            <summary>
            Gets or sets the color used for text
            in column and row headers.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground
            color in column and row headers.
            The default value is the value used
            for controls (<see cref="P:System.Drawing.SystemColors.ControlText">SystemColors.ControlText</see>).</value>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.Height">
            <summary>
            Overridden. See <see cref="P:System.Web.UI.WebControls.WebControl.Height">WebControl.Height</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.HorizontalOffset">
            <summary>
            Gets or sets the horizontal scrolling offset of the tree table in pixels.
            </summary>
            <value>The horizontal scrolling offset of the tree table in pixels.</value>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.HScrollBar">
            <summary>
            Gets or sets the visibility of the horizontal scrollbar.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Windows.Forms.ScrollBarVisibility" /> values.
            The default value is <see cref="F:NickLee.Views.Windows.Forms.ScrollBarVisibility.AsNeeded" />.</value>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.InnerControl">
            <summary>
            Gets the Windows form control wrapped by this Web form control.
            </summary>
            <value>A <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> control.</value>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.IsInteractive">
            <summary>
            Overridden. See <see cref="P:NickLee.Views.Web.UI.ImageControl.IsInteractive">ImageControl.IsInteractive</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.OwnerDraw">
            <summary>
            Gets or sets a value indicating whether the code that you
            provide draws the table cells or not.
            </summary>
            <value>
            <see langword="true" /> if table cells are to be drawn using custom user
            code; <see langword="false" /> otherwise.
            </value>
            <remarks>
            <p>When the <strong>OwnerDraw</strong> property is set to <see langword="true" />,
            you need to handle all drawing of table cells. You can use
            this capability to create your own special table cells
            displays. Use the <see cref="E:NickLee.Views.Web.UI.TreeTable.DrawTableCell" /> event to handle the drawing of
            table cells.</p>
            <p>When the <strong>OwnerDraw</strong> property is set to <see langword="false" />,
            the <strong>DrawTableCell</strong> event is not raised.</p>
            </remarks>
            <seealso cref="E:NickLee.Views.Web.UI.TreeTable.DrawTableCell" />
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.PreferredRowHeight">
            <summary>
            Gets or sets the preferred height for new rows.
            </summary>
            <value>The preferred value in pixel of a row height.</value>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.RowCount">
            <summary>
            Gets the number of rows.
            </summary>
            <value>The number of rows in the table.</value>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.RowHeadersVisible">
            <summary>
            Gets or sets the visibility of row headers.
            </summary>
            <value>
            <see langword="true" /> if the row headers are visible,
            <see langword="false" /> otherwise. The default value is <see langword="true" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.RowHeaderWidth">
            <summary>
            Gets or sets the width of row headers.
            </summary>
            <value>The width of row headers.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The property value is negative.
            </exception>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.SelectionBackColor">
            <summary>
            Gets or sets the background color of selected cells.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the background color of selected cells.</value>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.SelectionForeColor">
            <summary>
            Gets or sets the foreground color of selected cells.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of selected cells.</value>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.TextFont">
            <summary>
            Gets or sets the font used by the control to draw text.
            </summary>
            <value>A <see cref="T:System.Drawing.Font" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.TreeModel">
            <summary>
            Gets or sets the <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" /> object that represents the data displayed in the table.
            </summary>
            <value>The <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" /> object that represents the data displayed in the table.</value>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.TreeModelView">
            <summary>
            Gets the <see cref="T:NickLee.Views.Windows.Forms.TreeModelView" /> that wraps the <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" /> connected
            to the table.
            </summary>
            <value>A <see cref="T:NickLee.Views.Windows.Forms.TreeModelView" /> instance.</value>
            <remarks>The <see cref="T:NickLee.Views.Windows.Forms.TreeModelView" /> can be used to sort,
            group or filter rows of the table.
            </remarks>
            <seealso cref="T:NickLee.Views.Windows.Forms.TreeModelView" />
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.VScrollBar">
            <summary>
            Gets or sets the visibility of the vertical scrollbar.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Windows.Forms.ScrollBarVisibility" /> values.
            The default value is <strong>AsNeeded</strong>. </value>
        </member>
        <member name="P:NickLee.Views.Web.UI.TreeTable.Width">
            <summary>
            Overridden. See <see cref="P:System.Web.UI.WebControls.WebControl.Width">WebControl.Width</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Util.NamespaceDoc">
            <summary>
            The <strong>NickLee.Views.Util</strong> namespace contains utility classes used
            inside the library. The namespace contains for example classes for formatting
            <see cref="T:System.DateTime" /> and <see cref="T:System.TimeSpan" /> objects.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.TreeTableValidationException">
            <summary>
            The exception that is thrown when the <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> cannot validate an edited cell.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTableValidationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.TreeTableValidationException" /> class with a specified error message.
            </summary>
            <param name="str">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTableValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.TreeTableValidationException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="str">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.
            If the <paramref name="innerException" /> parameter is not a <see langword="null" /> reference,
            the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.TableColumnsChangeEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Windows.Forms.TableColumnCollection.CollectionChanged" /> and <see cref="E:NickLee.Views.Windows.Forms.TableColumnCollection.CollectionChanging" /> event of
            the <see cref="T:NickLee.Views.Windows.Forms.TableColumnCollection" /> interface.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnsChangeEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of <see cref="T:NickLee.Views.Windows.Forms.TableColumnsChangeEventArgs" />.
            </summary>
            <param name="index">The index of the column.</param>
            <param name="oldIndex">The old index of the column.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TableColumnsChangeEventArgs.#ctor(NickLee.Views.Windows.Forms.TableColumnsChangeAction,System.Int32,NickLee.Views.Windows.Forms.TableColumn[])">
            <summary>
            Initializes a new instance of <see cref="T:NickLee.Views.Windows.Forms.TableColumnsChangeEventArgs" />.
            </summary>
            <param name="type">One value of <see cref="T:NickLee.Views.Windows.Forms.TableColumnsChangeAction" />.</param>
            <param name="index">The index of the column.</param>
            <param name="objects">An array of <see cref="T:NickLee.Views.Windows.Forms.TableColumn" />.</param>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumnsChangeEventArgs.Action">
            <summary>
            Gets the action that has occurred on the collection.
            </summary>
            <value>
            One of the <see cref="T:NickLee.Views.Windows.Forms.TableColumnsChangeAction" /> values.
            </value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumnsChangeEventArgs.Columns">
            <summary>
            Gets the array of <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> that is affected by the
            change in the collection.
            </summary>
            <value>An array of <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> that is affected by the
            change in the collection.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumnsChangeEventArgs.Index">
            <summary>
            Gets the index of the first column that has changed.
            </summary>
            <value>A zero-based index of the first column that has changed.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumnsChangeEventArgs.NewColumn">
            <summary>
            Gets the new column after a column was replaced.
            </summary>
            <value>The new <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> after a column was replaced.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumnsChangeEventArgs.OldColumn">
            <summary>
            Gets the previous column after a column was replaced.
            </summary>
            <value>The old <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> after a column was replaced.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TableColumnsChangeEventArgs.OldIndex">
            <summary>
            Gets the index of the column before it has moved.
            </summary>
            <value>The zero-based index of the column before it has moved.</value>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.Printing.Header">
            <summary>
            Defines the header of a document.
            </summary>
            <remarks>
            <p>Describes the header of an <see cref="T:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument" />. You can set the
            header of an <see cref="T:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument" /> using the
            <see cref="P:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.Header" /> property.</p>
            <p>A header is defined by three text sections. The texts will be drawn on the left,
            center and right area of the header. Each text can have several lines and may
            contain some predefined patterns that will be translated to values of the document
            that is printed. For example, the following header:<br></br>
            <code>
            new Header("Page " + HeaderFooter.PagePattern, null, null);
            </code>
            will print 'Page 1' on the left section of the first page.</p>
            <p>Such patterns exist for the page number, the number of pages in the document,
            the file name, the document name, the author, the date and time.</p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.Header.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:NickLee.Views.Windows.Forms.Printing.Header" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.Header.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:NickLee.Views.Windows.Forms.Printing.Header" /> class.
            </summary>
            <param name="left">
            The text printed on the left of the page.
            </param>
            <param name="center">
            The text printed on the center of the page.
            </param>
            <param name="right">
            The text printed on the right of the page.
            </param>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.PaintValueBox">
            <summary>
            The small rectangle that paints the value.
            </summary>
        </member>
        <member name="T:NickLee.Views.Web.UI.DocumentServer">
            <summary>
            The <see cref="T:NickLee.Views.Web.UI.DocumentServer" /> class simulates dynamically generated
            Web Form pages.
            </summary>
            <remarks>The <see cref="M:NickLee.Views.Web.UI.DocumentServer.StoreDocument(System.Web.UI.Page,System.String,System.String,System.Byte[])" /> method allows a page to store the
            contents of a Web document into the cache of that page. The URL returned
            by this method can be used to retrieve the document.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to store an instance
            of the <see cref="T:System.Drawing.Image" /> class into the document server, and how to retrieve it.
            </para>
            <code lang="C#">
            MemoryStream memoryStream = new MemoryStream();
            image.Save(memoryStream, ImageFormat.Png);
            memoryStream.Close();
            string url = DocumentServer.StoreDocument(page, "image", "png", memoryStream.ToArray());
            // url can be referenced as the source of an IMG tag in an html page.
            </code>
            <code lang="Visual Basic">
            Dim memoryStream As New MemoryStream
            image.Save(memoryStream, ImageFormat.Png)
            memoryStream.Close()
            Dim url As String = DocumentServer.StoreDocument(page, "image", "png", memoryStream.ToArray())
            ' url can be referenced as the source of an IMG tag in an html page.
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Web.UI.DocumentServer.GetDocument(System.Web.UI.Page)">
            <summary>
            This method is not intended to be used by users.
            </summary>
        </member>
        <member name="M:NickLee.Views.Web.UI.DocumentServer.StoreDocument(System.Web.UI.Page,System.String,System.String,System.Byte[])">
            <summary>
            Stores data in the cache of the specified page.
            </summary>
            <param name="page">The page.</param>
            <param name="type">The type of the data.</param>
            <param name="format">The format of the data.</param>
            <param name="buffer">The data.</param>
            <returns>A URL that can be used to retrieve the data.</returns>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to store an instance
            of the <see cref="T:System.Drawing.Image" /> class into the document server, and how to retrieve it.
            </para>
            <code lang="C#">
            MemoryStream memoryStream = new MemoryStream();
            image.Save(memoryStream, ImageFormat.Png);
            memoryStream.Close();
            string url = DocumentServer.StoreDocument(page, "image", "png", memoryStream.ToArray());
            // url can be referenced as the source of an IMG tag in an html page.
            </code>
            <code lang="Visual Basic">
            Dim memoryStream As New MemoryStream
            image.Save(memoryStream, ImageFormat.Png)
            memoryStream.Close()
            Dim url As String = DocumentServer.StoreDocument(page, "image", "png", memoryStream.ToArray())
            ' url can be referenced as the source of an IMG tag in an html page.
            </code>
            </example>
        </member>
        <member name="T:NickLee.Views.Util.Collections.SimpleCollectionBase">
            <summary>
            Extends the behavior of the <see cref="T:System.Collections.CollectionBase" /> class.
            </summary>
            <remarks>Compared to the <see cref="T:System.Collections.CollectionBase" /> class, this collection
            adds the following methods: <see cref="M:NickLee.Views.Util.Collections.SimpleCollectionBase.AddRange(System.Collections.ICollection)" />, <see cref="M:NickLee.Views.Util.Collections.SimpleCollectionBase.InsertRange(System.Int32,System.Collections.ICollection)" />,
            <see cref="M:NickLee.Views.Util.Collections.SimpleCollectionBase.RemoveRange(System.Int32,System.Int32)" /> and <see cref="M:NickLee.Views.Util.Collections.SimpleCollectionBase.Move(System.Int32,System.Int32)" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Util.Collections.SimpleCollectionBase.AddRange(System.Collections.ICollection)">
            <summary>
            Adds the elements of an <see cref="T:System.Collections.ICollection" /> to the end of the collection.
            </summary>
            <param name="value">The <see cref="T:System.Collections.ICollection" /> whose elements should be added
            at the end of the collection.</param>
        </member>
        <member name="M:NickLee.Views.Util.Collections.SimpleCollectionBase.InsertRange(System.Int32,System.Collections.ICollection)">
            <summary>
            Inserts the elements of an <see cref="T:System.Collections.ICollection" /> into the collection at the
            specified index.
            </summary>
            <param name="index">The zero-based index at which the new elements should be
            inserted.</param>
            <param name="value">The <see cref="T:System.Collections.ICollection" /> whose elements should be inserted
            into the collection.</param>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index" /> is not
            a valid index.</exception>
        </member>
        <member name="M:NickLee.Views.Util.Collections.SimpleCollectionBase.Move(System.Int32,System.Int32)">
            <summary>
            Moves an element of the collection to a new index.
            </summary>
            <param name="oldIndex">The zero-based index of the element to move.</param>
            <param name="newIndex">The zero-based index of the element after moving it.</param>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="oldIndex" /> or
            <paramref name="newIndex" /> are not a valid indices.</exception>
        </member>
        <member name="M:NickLee.Views.Util.Collections.SimpleCollectionBase.OnInsertRange(System.Int32,System.Collections.ICollection)">
            <summary>
            Performs additional custom processes before inserting new elements into the <see cref="T:NickLee.Views.Util.Collections.SimpleCollectionBase" /> instance.
            </summary>
            <param name="index">The zero-based index at which the new elements should be
            inserted.</param>
            <param name="value">The <see cref="T:System.Collections.ICollection" /> whose elements should be inserted
            into the collection.</param>
        </member>
        <member name="M:NickLee.Views.Util.Collections.SimpleCollectionBase.OnInsertRangeComplete(System.Int32,System.Collections.ICollection)">
            <summary>
            Performs additional custom processes after inserting new elements into the <see cref="T:NickLee.Views.Util.Collections.SimpleCollectionBase" /> instance.
            </summary>
            <param name="index">The zero-based index at which the new elements have been
            inserted.</param>
            <param name="value">The <see cref="T:System.Collections.ICollection" /> whose elements have been inserted
            into the collection.</param>
        </member>
        <member name="M:NickLee.Views.Util.Collections.SimpleCollectionBase.OnMove(System.Int32,System.Int32)">
            <summary>
            Performs additional custom processes before moving an element into the <see cref="T:NickLee.Views.Util.Collections.SimpleCollectionBase" /> instance.
            </summary>
            <param name="oldIndex">The zero-based index of the element to move.</param>
            <param name="newIndex">The zero-based index of the element after moving it.</param>
        </member>
        <member name="M:NickLee.Views.Util.Collections.SimpleCollectionBase.OnMoveComplete(System.Int32,System.Int32)">
            <summary>
            Performs additional custom processes after moving an element into the <see cref="T:NickLee.Views.Util.Collections.SimpleCollectionBase" /> instance.
            </summary>
            <param name="oldIndex">The zero-based index of the element to move.</param>
            <param name="newIndex">The zero-based index of the element after moving it.</param>
        </member>
        <member name="M:NickLee.Views.Util.Collections.SimpleCollectionBase.OnRemoveRange(System.Int32,System.Collections.ICollection)">
            <summary>
            Performs additional custom processes before removing elements from the <see cref="T:NickLee.Views.Util.Collections.SimpleCollectionBase" /> instance.
            </summary>
            <param name="index">The zero-based starting index of the range of elements to
            remove.</param>
            <param name="value">The <see cref="T:System.Collections.ICollection" /> whose elements should be removed
            from the collection.</param>
        </member>
        <member name="M:NickLee.Views.Util.Collections.SimpleCollectionBase.OnRemoveRangeComplete(System.Int32,System.Collections.ICollection)">
            <summary>
            Performs additional custom processes after removing elements from the <see cref="T:NickLee.Views.Util.Collections.SimpleCollectionBase" /> instance.
            </summary>
            <param name="index">The zero-based starting index of the range of elements removed.</param>
            <param name="value">The <see cref="T:System.Collections.ICollection" /> whose elements have been removed
            from the collection.</param>
        </member>
        <member name="M:NickLee.Views.Util.Collections.SimpleCollectionBase.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes a range of elements from the collection.
            </summary>
            <param name="index">The zero-based starting index of the range of elements to
            remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index" /> is not
            a valid index.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="count" /> is too
            big.</exception>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.ValueChangedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:NickLee.Views.Windows.Forms.GenericValueEditor.ValueChanged" /> event of
            a <see cref="T:NickLee.Views.Windows.Forms.GenericValueEditor" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.Design.DialogDesigner">
            <summary>
            Defines a designer for the <strong>Dialog</strong> classes.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Design.DialogDesigner.PostFilterProperties(System.Collections.IDictionary)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)">ComponentDesigner.PostFilterProperties</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.DefaultTreeModel">
            <summary>
            Defines a default implementation of the <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" /> interface.
            </summary>
            <remarks>
            <p>This implementation of the <strong>ITreeModel</strong> interface lets you manage
            your own hierarchy of objects. To modify this hierarchy, use the <see cref="M:NickLee.Views.Windows.Forms.DefaultTreeModel.Add(System.Object,System.Object)" />,
            <see cref="M:NickLee.Views.Windows.Forms.DefaultTreeModel.Insert(System.Object,System.Object,System.Int32)" />, <see cref="M:NickLee.Views.Windows.Forms.DefaultTreeModel.Remove(System.Object,System.Object)" /> and <see cref="M:NickLee.Views.Windows.Forms.DefaultTreeModel.RemoveAt(System.Object,System.Int32)" /> methods.
            </p>
            <p>This implementation can also can be used to wrap existing collections or hierarchical
            structures. See the <see cref="M:NickLee.Views.Windows.Forms.DefaultTreeModel.AddRange(System.Object,System.Collections.ICollection)" /> method and the <see cref="P:NickLee.Views.Windows.Forms.DefaultTreeModel.ChildProperty" />
            property for details.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to create a
            <strong>DefaultTreeModel</strong> that wraps a <see cref="T:System.Windows.Forms.TreeNodeCollection" />.
            Using the <see cref="P:NickLee.Views.Windows.Forms.DefaultTreeModel.ChildProperty" />, the model can re-create the same hierarchy
            existing in the wrapped <see cref="T:System.Windows.Forms.TreeNodeCollection" />.
            </para>
            <code lang="C#">
            private ITreeModel WrapTreeNodeCollection(TreeNodeCollection nodes) {
            // Creates the model
            DefaultTreeModel model = new DefaultTreeModel(nodes);

            // Sets the ChildProperty to create the hierarchy
            model.ChildProperty = "Nodes";

            // Returns the model
            return model;
            }
            </code>
            <code lang="Visual Basic">
            Private Function WrapTreeNodeCollection(ByVal nodes As TreeNodeCollection) As ITreeModel
            ' Creates the model
            Dim model as New DefaultTreeModel(nodes)

            ' Sets the ChildProperty to create the hierarchy
            model.ChildProperty = "Nodes"

            ' Returns the model
            Return model
            End Function
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultTreeModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.DefaultTreeModel" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultTreeModel.#ctor(System.Collections.ICollection)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.DefaultTreeModel" /> class using the specified collection.
            </summary>
            <param name="collection">The collection used to initialize the tree model.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultTreeModel.#ctor(System.Collections.ICollection,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.DefaultTreeModel" /> class using the specified
            collection and child property.
            </summary>
            <param name="collection">The collection used to initialize the tree model.</param>
            <param name="childProperty">The name of the property that will be used to look
            for the children of a node inside the <paramref name="collection" />.
            If the <paramref name="childProperty" /> denotes a property whose type is
            <see cref="T:System.Collections.ICollection" />, then the objects inside the collection are considered
            as the children of the node.
            </param>
            <seealso cref="P:NickLee.Views.Windows.Forms.DefaultTreeModel.ChildProperty" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultTreeModel.Add(System.Object,System.Object)">
            <summary>
            Adds a child node to an existing node.
            </summary>
            <param name="parent">The parent node.</param>
            <param name="child">The child node.</param>
            <remarks>If <see cref="P:NickLee.Views.Windows.Forms.DefaultTreeModel.ChildProperty" /> is set, and if <paramref name="child" />
            contains child nodes, the child nodes will be automatically added to the
            tree model.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultTreeModel.AddRange(System.Object,System.Collections.ICollection)">
            <summary>
            Add the elements of an <see cref="T:System.Collections.ICollection" /> to the child nodes of an existing node.
            </summary>
            <param name="parent">The parent node.</param>
            <param name="children">The child nodes collection.</param>
            <remarks>If <see cref="P:NickLee.Views.Windows.Forms.DefaultTreeModel.ChildProperty" /> is set, and if <paramref name="children" />
            contains nodes that also contain child nodes, the child nodes will be automatically added
            to the tree model.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultTreeModel.Contains(System.Object)">
            <summary>
            Returns a value indicating whether the specified node is part of the model.
            </summary>
            <param name="node">The tree node.</param>
            <returns><see langword="true" /> if the <paramref name="node" /> parameter is part of the model; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultTreeModel.GetChild(System.Object,System.Int32)">
            <summary>
            Retrieves the node child corresponding to the specified index.
            </summary>
            <param name="node">The tree node.</param>
            <param name="index">The zero-based index of the child.</param>
            <returns>The child of <strong>node</strong> whose index is <strong>index</strong>.</returns>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index" /> is not a valid index.</exception>
            <remarks>If <strong>node</strong> is <see langword="null" />, the root of the tree model is used.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultTreeModel.GetChildCount(System.Object)">
            <summary>
            Retrieves the number of children belonging to a node.
            </summary>
            <param name="node">The tree node.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultTreeModel.GetIndexOfChild(System.Object,System.Object)">
            <summary>
            Returns the zero-based index of the specified child in the specified node.
            </summary>
            <param name="parent">The parent tree node.</param>
            <param name="child">The child node.</param>
            <returns>A zero-based index, or <strong>-1</strong> if the child node is not a child of <strong>parent</strong>.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultTreeModel.GetParent(System.Object)">
            <summary>
            Retrieves the parent of the specified node.
            </summary>
            <param name="node">The tree node.</param>
            <returns>The parent of the specified node, or <see langword="null" />
            if <strong>node</strong> has no parent.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultTreeModel.Insert(System.Object,System.Object,System.Int32)">
            <summary>
            Inserts a child node into an existing node using the specified index.
            </summary>
            <param name="parent">The parent node.</param>
            <param name="child">The child node.</param>
            <param name="index">A zero-based index where the child will be inserted. If <strong>-1</strong>
            is used, then the child will be added at the end of the child nodes list.</param>
            <remarks>If <see cref="P:NickLee.Views.Windows.Forms.DefaultTreeModel.ChildProperty" /> is set, and if <paramref name="child" />
            contains child nodes, the child nodes will be automatically added to the
            tree model.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultTreeModel.InsertRange(System.Object,System.Collections.ICollection,System.Int32)">
            <summary>
            Inserts the elements of an <see cref="T:System.Collections.ICollection" /> to the child nodes of an existing node
            using the specified index.
            </summary>
            <param name="parent">The parent node.</param>
            <param name="children">The child nodes collection.</param>
            <param name="index">A zero-based index where the children will be inserted. If <strong>-1</strong>
            is used, then the child will be added at the end of the child nodes list.</param>
            <remarks>If <see cref="P:NickLee.Views.Windows.Forms.DefaultTreeModel.ChildProperty" /> is set, and if <paramref name="children" />
            contains nodes that also contain child nodes, the child nodes will be automatically added
            to the tree model.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultTreeModel.IsLeaf(System.Object)">
            <summary>
            Returns a value indicating whether the specified node is a leaf.
            </summary>
            <param name="node">The tree node.</param>
            <returns><see langword="true" /> if the <strong>node</strong> parameter is a leaf; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultTreeModel.OnModelChanged(NickLee.Views.Windows.Forms.TreeModelChangeEventArgs)">
            <summary>
            Raises the <strong>TreeModelChanged</strong> event.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs" /> that contains the event data.</param>
            <remarks>Called when the tree model is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultTreeModel.Remove(System.Object,System.Object)">
            <summary>
            Removes the child of the specified parent.
            </summary>
            <param name="parent">The parent node.</param>
            <param name="child">The child to remove.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultTreeModel.RemoveAt(System.Object,System.Int32)">
            <summary>
            Removes the child of the specified parent at the specified index.
            </summary>
            <param name="parent">The parent node.</param>
            <param name="index">A zero-based index of the child to remove.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultTreeModel.RemoveRange(System.Object,System.Int32,System.Int32)">
            <summary>
            Removes a range of child from the specified parent at the specified index.
            </summary>
            <param name="parent">The parent node.</param>
            <param name="index">A zero-based index of the first child to remove.</param>
            <param name="count">The number of children to remove.</param>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.DefaultTreeModel.TreeModelChanged">
            <summary>
            Occurs when the tree model changes.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.DefaultTreeModel.ChildProperty">
            <summary>
            Gets or sets the property used to retrieve the children of a node.
            </summary>
            <value>The property used to retrieve the children of a node.</value>
            <remarks>This value is used when adding nodes to the tree model so that subnodes of added nodes will be automatically added
            to the model. When this value is set, the tree is rebuild to reflect the new child property.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to create a
            <strong>DefaultTreeModel</strong> that wraps a <see cref="T:System.Windows.Forms.TreeNodeCollection" />.
            Using the <see cref="P:NickLee.Views.Windows.Forms.DefaultTreeModel.ChildProperty" />, the model can re-create the same hierarchy
            existing in the wrapped <see cref="T:System.Windows.Forms.TreeNodeCollection" />.
            </para>
            <code lang="C#">
            private ITreeModel WrapTreeNodeCollection(TreeNodeCollection nodes) {
            // Creates the model
            DefaultTreeModel model = new DefaultTreeModel(nodes);

            // Sets the ChildProperty to create the hierarchy
            model.ChildProperty = "Nodes";

            // Returns the model
            return model;
            }
            </code>
            <code lang="Visual Basic">
            Private Function WrapTreeNodeCollection(ByVal nodes As TreeNodeCollection) As ITreeModel
            ' Creates the model
            Dim model as New DefaultTreeModel(nodes)

            ' Sets the ChildProperty to create the hierarchy
            model.ChildProperty = "Nodes"

            ' Returns the model
            Return model
            End Function
            </code>
            </example>
        </member>
        <member name="T:NickLee.Views.Util.ExtendedTimeSpanFormatInfo">
            <summary>
            Defines how <see cref="T:System.TimeSpan" /> values are formatted and displayed, depending on
            the culture.
            </summary>
            <remarks>
            <p><see cref="T:System.TimeSpan" /> values are formatted using standard or custom patterns stored in
            the properties of a <see cref="T:NickLee.Views.Util.ExtendedTimeSpanFormatInfo" />.</p>
            <p>The following table lists the standard format characters for each standard pattern.
            The format characters are case-sensitive; for example, 'g' and 'G' represent slightly different
            patterns.</p>
            <list type="table">
            <listheader>
            <term>Format character.</term>
            <description>Description</description>
            </listheader>
            <item>
            <term>d</term>
            <description>Short day format.</description>
            </item>
            <item>
            <term>D</term>
            <description>Full day format.</description>
            </item>
            <item>
            <term>t</term>
            <description>Short time format.</description>
            </item>
            <item>
            <term>T</term>
            <description>Long time format.</description>
            </item>
            <item>
            <term>m</term>
            <description>Medium day and time format.</description>
            </item>
            <item>
            <term>f</term>
            <description>Full day and time format, using ':' as field separator.</description>
            </item>
            <item>
            <term>F</term>
            <description>Full day and time format.</description>
            </item>
            <item>
            <term>g</term>
            <description>General medium day and time format.</description>
            </item>
            <item>
            <term>G</term>
            <description>General day and time format.</description>
            </item>
            </list>
            The following table lists the patterns that can be combined to construct
            custom patterns. The patterns are case-sensitive; if the custom pattern contains white-space
            characters or characters enclosed in single quotation marks, the output
            string will also contain those characters. Characters not defined as part of a format pattern or as
            format characters are reproduced literally.
            <list type="table">
            <listheader>
            <term>Format character.</term>
            <description>Description</description>
            </listheader>
            <item>
            <term>d</term>
            <description>Number of days.</description>
            </item>
            <item>
            <term>dd</term>
            <description>Number of days, formatted on two digits.</description>
            </item>
            <item>
            <term>h</term>
            <description>Number of hours.</description>
            </item>
            <item>
            <term>hh</term>
            <description>Number of hours, formatted on two digits.</description>
            </item>
            <item>
            <term>m</term>
            <description>Number of hours.</description>
            </item>
            <item>
            <term>mm</term>
            <description>Number of minutes, formatted on two digits.</description>
            </item>
            <item>
            <term>s</term>
            <description>Number of seconds.</description>
            </item>
            <item>
            <term>ss</term>
            <description>Number of seconds, formatted on two digits.</description>
            </item>
            <item>
            <term>l</term>
            <description>Number of milliseconds.</description>
            </item>
            <item>
            <term>llll</term>
            <description>Number of milliseconds, formatted on four digits.</description>
            </item>
            <item>
            <term>D</term>
            <description>Day separator.</description>
            </item>
            <item>
            <term>DD</term>
            <description>Small day designator.</description>
            </item>
            <item>
            <term>DDD</term>
            <description>Long day designator.</description>
            </item>
            <item>
            <term>H</term>
            <description>Hour separator.</description>
            </item>
            <item>
            <term>HH</term>
            <description>Small hour designator.</description>
            </item>
            <item>
            <term>HHH</term>
            <description>Long hour designator.</description>
            </item>
            <item>
            <term>M</term>
            <description>Minute separator.</description>
            </item>
            <item>
            <term>MM</term>
            <description>Small minute designator.</description>
            </item>
            <item>
            <term>MMM</term>
            <description>Long minute designator.</description>
            </item>
            <item>
            <term>S</term>
            <description>Second separator.</description>
            </item>
            <item>
            <term>SS</term>
            <description>Small second designator.</description>
            </item>
            <item>
            <term>SSS</term>
            <description>Long second designator.</description>
            </item>
            <item>
            <term>L</term>
            <description>Millisecond separator.</description>
            </item>
            <item>
            <term>LL</term>
            <description>Small millisecond designator.</description>
            </item>
            <item>
            <term>LLL</term>
            <description>Long millisecond designator.</description>
            </item>
            </list>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to format a
            <see cref="T:System.TimeSpan" /> using the <strong>ExtendedTimeSpanFormatInfo</strong>
            class.
            </para>
            <code lang="C#">
            TimeSpan duration = TimeSpan.FromDays(1);
            IFormatProvider formatProvider = ExtendedTimeSpanFormatInfo.GetInstance(null);
            string str = String.Format(formatProvider, "{0:D}", duration);
            </code>
            <code lang="Visual Basic">
            Dim duration As TimeSpan = TimeSpan.FromDays(1)
            Dim formatProvider As IFormatProvider = ExtendedTimeSpanFormatInfo.GetInstance(Nothing)
            Dim str as String = String.Format(formatProvider, "{0:D}", duration)
            </code>
            </example>
            <seealso cref="T:NickLee.Views.Util.ExtendedDateTimeFormatInfo" />
        </member>
        <member name="M:NickLee.Views.Util.ExtendedTimeSpanFormatInfo.Format(System.String,System.Object,System.IFormatProvider)">
            <summary>
            Implements <see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">ICustomFormatter.Format</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Util.ExtendedTimeSpanFormatInfo.GetFormat(System.Type)">
            <summary>
            Gets an object that defines how to format the specified type.
            </summary>
            <param name="formatType">The <see cref="T:System.Type" /> for which to get a formatting object.
            This method only supports the <see cref="T:System.ICustomFormatter" />, <see cref="T:NickLee.Views.Util.ExtendedTimeSpanFormatInfo" />,
            and <see cref="P:NickLee.Views.Util.ExtendedTimeSpanFormatInfo.CultureInfo" /> types.</param>
        </member>
        <member name="M:NickLee.Views.Util.ExtendedTimeSpanFormatInfo.GetInstance(System.IFormatProvider)">
            <summary>
            Returns the <see cref="T:NickLee.Views.Util.ExtendedTimeSpanFormatInfo" /> associated with the specified <see cref="T:System.IFormatProvider" />.
            </summary>
            <param name="provider">The <see cref="T:System.IFormatProvider" /> that gets the <see cref="T:NickLee.Views.Util.ExtendedTimeSpanFormatInfo" />.</param>
            <returns>An instance of the <strong>ExtendedTimeSpanFormatInfo</strong> class.</returns>
        </member>
        <member name="T:NickLee.Views.Util.ExtendedDateTimeFormatInfo">
            <summary>
            Defines how <see cref="T:System.DateTime" /> values are formatted and displayed, depending on the culture.
            </summary>
            <remarks>
            The format used is the same as the one used to format dates with
            <see cref="T:System.Globalization.DateTimeFormatInfo" />. In addition, new format characters have been
            added:
            <list type="table">
            <listheader>
            <term>Format character.</term>
            <description>Description</description>
            </listheader>
            <item>
            <term>YY</term>
            <description>The half-year of the year, in its abbreviated form.</description>
            </item>
            <item>
            <term>YYY</term>
            <description>The half-year of the year.</description>
            </item>
            <item>
            <term>QQ</term>
            <description>The quarter of the year, in its abbreviated form.</description>
            </item>
            <item>
            <term>QQQ</term>
            <description>The quarter of the year.</description>
            </item>
            <item>
            <term>WW</term>
            <description>The week of the year, in its abbreviated form.</description>
            </item>
            <item>
            <term>WWW</term>
            <description>The week of the year.</description>
            </item>
            <item>
            <term>TT</term>
            <description>The half-day designator, in its abbreviated form.</description>
            </item>
            <item>
            <term>TTT</term>
            <description>The half-day designator.</description>
            </item>
            </list>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to format a
            <see cref="T:System.DateTime" /> using the <strong>ExtendedDateTimeFormatInfo</strong>
            class.
            </para>
            <code lang="C#">
            DateTime date = DateTime.Now;
            IFormatProvider formatProvider = ExtendedDateTimeFormatInfo.GetInstance(null);
            string str = String.Format(formatProvider, "{0:YYY}", date);
            </code>
            <code lang="Visual Basic">
            Dim date As DateTime = DateTime.Now
            Dim formatProvider As IFormatProvider = ExtendedDateTimeFormatInfo.GetInstance(Nothing)
            Dim str as String = String.Format(formatProvider, "{0:YYY}", date)
            </code>
            </example>
            <seealso cref="T:NickLee.Views.Util.ExtendedTimeSpanFormatInfo" />
        </member>
        <member name="M:NickLee.Views.Util.ExtendedDateTimeFormatInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Util.ExtendedDateTimeFormatInfo" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Util.ExtendedDateTimeFormatInfo.Format(System.String,System.Object,System.IFormatProvider)">
            <summary>
            Implements <see cref="M:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider)">ICustomFormatter.Format</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Util.ExtendedDateTimeFormatInfo.GetFormat(System.Type)">
            <summary>
            Gets an object that defines how to format the specified type.
            </summary>
            <param name="formatType">The <see cref="T:System.Type" /> for which to get a formatting object.
            This method only supports the <see cref="T:System.ICustomFormatter" />, <see cref="T:NickLee.Views.Util.ExtendedDateTimeFormatInfo" />,
            and <see cref="P:NickLee.Views.Util.ExtendedDateTimeFormatInfo.CultureInfo" /> types.</param>
        </member>
        <member name="M:NickLee.Views.Util.ExtendedDateTimeFormatInfo.GetInstance(System.IFormatProvider)">
            <summary>
            Returns the <see cref="T:NickLee.Views.Util.ExtendedDateTimeFormatInfo" /> associated with the specified <see cref="T:System.IFormatProvider" />.
            </summary>
            <param name="provider">The <see cref="T:System.IFormatProvider" /> that gets the <see cref="T:NickLee.Views.Util.ExtendedDateTimeFormatInfo" />.</param>
            <returns>An instance of the <strong>ExtendedDateTimeFormatInfo</strong> class.</returns>
        </member>
        <member name="M:NickLee.Views.Util.ExtendedDateTimeFormatInfo.PostFormatDate(System.String,System.DateTime,System.Globalization.CultureInfo)">
            <summary>
            Is called after the date has been formatted.
            </summary>
            <param name="text">The string representation of the date.</param>
            <param name="time">The <see cref="T:System.DateTime" /> structure to format.</param>
            <param name="culture">The culture used to format the date.</param>
            <returns>The string representation of the date.</returns>
            <remarks>
            The default implementation handles specific formats added by
            the <strong>ExtendedDateTimeFormatInfo</strong> class.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Util.ExtendedDateTimeFormatInfo.PreFormatDate(System.String,System.DateTime,System.Globalization.CultureInfo)">
            <summary>
            Is called before formatting the date.
            </summary>
            <param name="format">The format string used to format the date.</param>
            <param name="time">The <see cref="T:System.DateTime" /> structure to format.</param>
            <param name="culture">The culture used to format the date.</param>
            <returns>The new format string.</returns>
            <remarks>
            The default implementation simply returns the <paramref name="format" /> parameter.
            </remarks>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.UpDownButton">
            <summary>
            Up-down Buttons.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.TreeTableEditorAttribute">
            <summary>
            Specifies the editor that will be used when editing a property in a
            <see cref="T:NickLee.Views.Windows.Forms.TreeTable" />.
            </summary>
            <remarks>
            <p>When editing a property through a <see cref="T:NickLee.Views.Windows.Forms.TreeTable" />, the tree table
            tries to locate this attribute on the edited property to create the editor.</p>
            <p>This attribute supports the following types: <see cref="T:NickLee.Views.Windows.Forms.ITreeTableCellEditor" />
            and <see cref="T:NickLee.Views.Windows.Forms.GenericValueEditor" />. If the type specified implements
            <b>ITreeTableCellEditor</b>, then the default constructor of this class will
            be used to create the editor. If the type specified is a subclass of
            <b>GenericValueEditor</b>, the default constructor of this class will be used
            to create an instance of <b>GenericValueEditor</b>. Then, a new
            <see cref="T:NickLee.Views.Windows.Forms.DefaultTreeTableCellEditor" /> instance will be created and returned
            using the <b>GenericValueEditor</b> instance.
            </p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to set this attribute
            on a property.
            </para>
            <code lang="C#">
            [TreeTableEditor(typeof(MyGenericValueEditor))]
            public int MyProperty
            {
            ...
            }

            public class MyGenericValueEditor : GenericValueEditor
            {
            ...
            }
            </code>
            <code lang="Visual Basic">
            &lt;TreeTableEditor(GetType(MyGenericValueEditor))&gt;
            Public Property MyProperty() As int
            ...
            End Property

            Public Class MyGenericValueEditor Inherits GenericValueEditor
            ...
            End Class
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTableEditorAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.TreeTableEditorAttribute" /> class.
            </summary>
            <param name="typeName">The name of the editor type to create.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeTableEditorAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.TreeTableEditorAttribute" /> class.
            </summary>
            <param name="type">The type of editor to create.</param>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeTableEditorAttribute.TypeName">
            <summary>
            Gets the name of the editor type to create.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the type name of the
            editor to create.</value>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.Printing.PrintPageContentEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.PrintPageContent">PrintPageContent</see>
            event of an <see cref="T:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument">ExtendedPrintDocument</see>.
            </summary>
            <param>
            The declaration of your event handler must have the same parameters
            as the <see cref="T:NickLee.Views.Windows.Forms.Printing.PrintPageContentEventHandler">PrintPageContentEventHandler</see> delegate declaration.
            </param>
            <param name="sender">The source of the event.</param>
            <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs">PrintPageEventArgs</see> that contains the event data.</param>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument">
            <summary>
            Defines a document that can be sent to a printer.
            </summary>
            <remarks>Derives from the <see cref="T:System.Drawing.Printing.PrintDocument" /> class and adds the notion
            of header and footer. Typically you create an instance of the <see cref="T:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument" /> class,
            set the properties that describe how to print, such as the header and footer, and use the <see cref="M:System.Drawing.Printing.PrintDocument.Print">Print</see>
            method to start the printing process. Handle the <see cref="E:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.PrintPageContent" /> event where
            you specify the content to print in a page by using the <see cref="T:System.Drawing.Graphics" /> object in
            the <see cref="T:System.Drawing.Printing.PrintPageEventArgs" />.
            </remarks>
            <seealso cref="P:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.Header" />
            <seealso cref="P:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.Footer" />
            <seealso cref="T:NickLee.Views.Windows.Forms.Printing.DocumentPageSetupDialog" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument" />
            class using the default <see cref="T:System.Drawing.Printing.PageSettings" />.
            </summary>
            <remarks>
            By default, there is no header, no footer, and the order of the
            page is over, then down.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.#ctor(System.Drawing.Printing.PageSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument" />
            class using the specified <see cref="T:System.Drawing.Printing.PageSettings" />.
            </summary>
            <param name="settings">A <see cref="T:System.Drawing.Printing.PageSettings" /> object.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)">PrintDocument.OnBeginPrint</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)">PrintDocument.OnPrintPage</see>.
            </summary>
            <remarks>This method is sealed. In order to print the content of a page
            you must override <see cref="M:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.OnPrintPageContent(System.Drawing.Printing.PrintPageEventArgs)" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.OnPrintPageContent(System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.PrintPageContent" /> event. It is called before the actual
            content of the current page is printed.
            </summary>
            <param name="e">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs">PrintPageEventArgs</see> that contains the event
            data that was received by <see cref="M:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)" />.
            </param>
            <remarks>
            This method allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.<br></br>
            When a derived class calls the <strong>OnPrintPageContent</strong> method, it raises the <strong>PrintPageContent</strong> event by invoking the event handler through a delegate. For more information, see Raising an Event.<br></br>
            <note type="inheritinfo">When overriding <strong>OnPrintPageContent</strong> in a derived class,
            be sure to call the <strong>OnPrintPageContent</strong> method of the base class
            so that registered delegates receive the event.</note>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.SetPages(System.Int32)">
            <summary>
            Sets the number of pages of the document.
            </summary>
            <param name="pages">
            The new number of pages of the document.
            </param>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.PrintPageContent">
            <summary>
            Occurs when the output to print for the content of the current page is needed.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.Author">
            <summary>
            Gets or sets the author of the document.
            </summary>
            <value> A <see cref="T:System.String" /> that represents the author of the document.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.ClientPrintingArea">
            <summary>
            Gets the client printing area (in 1/100 inch).
            </summary>
            <value>A <see cref="T:System.Drawing.RectangleF" /> that represents the client printing area. The printing area
            without the header and footer.</value>
            <remarks>
            This area is the printing area without the header and footer
            areas.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.File">
            <summary>
            Gets or sets the name of the file associated with the document.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the name of the file
            associated with the document.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.Footer">
            <summary>
            Gets or sets the footer.
            </summary>
            <value>
            A <see cref="T:NickLee.Views.Windows.Forms.Printing.Footer" /> object that represents the text to print
            in the footer of the document.
            </value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.FrameSize">
            <summary>
            Gets or sets the size of the frame to print around the client area.
            </summary>
            <value>A <see cref="T:System.Drawing.RectangleF" /> that represents the size of
            the frame to print around the client area.</value>
            <remarks>
            When the property <see cref="P:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.MustPrintFrame" /> is <see langword="true" />
            a frame will be drawn around the printing area of each page. This
            property can be used to control the position and size of this frame.
            The default value is the client printing area.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.Header">
            <summary>
            Gets or sets the header.
            </summary>
            <value>
            A <see cref="T:NickLee.Views.Windows.Forms.Printing.Header" /> object that represents the text to print
            in the header of the document.
            </value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.IsOverThenDownOrder">
            <summary>
            Gets or sets a Boolean value to indicate in which order the pages are
            numbered.
            </summary>
            <value>A <see cref="T:System.Boolean" /> value to indicate in which order the pages are
            numbered.</value>
            <remarks>
            The pages are numbered horizontally then vertically when this
            property is <see langword="true" />, otherwise they are numbered vertically then
            horizontally.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.MustPrintFrame">
            <summary>
            Gets or sets a Boolean value to indicate whether a frame must be printed
            around the client printing area of each page.
            </summary>
            <value><see langword="true" /> if a frame must be printed around the
            client area of each page; <see langword="false" /> otherwise. The default
            value is <see langword="false" />.</value>
            <remarks>When the value is <see langword="true" /> a frame will be
            printed around the client area of the page. You can control the size
            of this frame by using the <see cref="P:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.FrameSize" /> property.</remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.PageIndex">
            <summary>
            Gets the zero-based index of the current page being
            printed.
            </summary>
            <value>An integer that represents the zero-based
            index of the page currently being printed.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.Pages">
            <summary>
            Gets the number of pages of the document.
            </summary>
            <value>The number of pages in the document.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.PrintingArea">
            <summary>
            Gets the printing area (in 1/100 inch).
            </summary>
            <value>A <see cref="T:System.Drawing.RectangleF" /> that represents the printing area.</value>
            <remarks>This area is computed according to the margins given
            by the user.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.PrintingDate">
            <summary>
            Gets the date and time of the printing.
            </summary>
            <value>A <see cref="T:System.DateTime" /> object that represents the date and time of the
            printing.</value>
        </member>
        <member name="T:NickLee.Views.Web.UI.NamespaceDoc">
            <summary>
            The <strong>NickLee.Views.Web.UI</strong> namespace contains all purpose Web Forms controls. The
            namespace contains for example the <see cref="T:NickLee.Views.Web.UI.TreeTable" /> control class.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Windows.Forms.ITreeModel.TreeModelChanged" /> event of the <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" /> interface.
            </summary>
            <remarks>An <see cref="E:NickLee.Views.Windows.Forms.ITreeModel.TreeModelChanged" /> event is raised when the data in an <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" /> changes.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs" /> class that resets the whole model.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs" /> class with the node that was reset.
            </summary>
            <param name="node">The node that has changed.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs" /> class, with the property that has changed for all the nodes.
            </summary>
            <param name="propertyName">The property that has changed.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs.#ctor(System.Object[],System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs" /> class, with the property of the specified nodes that have changed.
            </summary>
            <param name="nodes">An array of the nodes that have changed.</param>
            <param name="propertyName">The property that has changed.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs.#ctor(System.Object,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs" /> class, with the property of the specified node that has changed.
            </summary>
            <param name="node">The node that has changed.</param>
            <param name="propertyName">The property of the node that has changed.</param>
            <param name="value">The new value for the property specified by the parameter <paramref name="property" />.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs.#ctor(NickLee.Views.Windows.Forms.TreeModelAction,System.Object,System.Int32,System.Object[])">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs" /> class.
            </summary>
            <param name="action">Valid values are <strong>TreeModelAction.Add</strong> and <strong>TreeModelAction.Remove</strong>.</param>
            <param name="node">The node that has changed.</param>
            <param name="index">The index of the first child.</param>
            <param name="children">An array of the children that have been added or removed.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs.#ctor(System.Object,System.Object,System.Int32,System.Object,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs" /> class, with the node that has moved.
            </summary>
            <param name="node">The node that was moved.</param>
            <param name="oldParent">The previous parent of the node that was moved.</param>
            <param name="oldIndex">The previous index of the node that was moved.</param>
            <param name="newParent">The new parent of the node that was moved.</param>
            <param name="index">The new index of the node that was moved.</param>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs.Action">
            <summary>
            Gets the action that has occurred on a node.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Windows.Forms.TreeModelAction" /> values.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs.Children">
            <summary>
            Gets an array that represents the children of the node.
            </summary>
            <value>An array of <see cref="T:System.Object" /> that represents the children of the
            node.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs.Index">
            <summary>
            Gets the index of the node in the parent list.
            </summary>
            <value>The zero-based index of the <see cref="P:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs.Node" /> in its parent child
            collection.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs.NewParent">
            <summary>
            Gets the new parent of the node that was moved.
            </summary>
            <value>The new parent of the node that was moved.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs.Node">
            <summary>
            Gets the node on which an action has occurred.
            </summary>
            <value>The node on which an action has occurred.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs.Nodes">
            <summary>
            Gets the nodes on which an action has occurred.
            </summary>
            <value>The nodes on which an action has occurred.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs.OldIndex">
            <summary>
            Gets the previous index of the node in the parent list.
            </summary>
            <value>The zero-based index of the <see cref="P:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs.Node" /> in its parent child
            collection before it was moved.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs.OldParent">
            <summary>
            Gets the previous parent of the node that was moved.
            </summary>
            <value>The previous parent of the node that was moved.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs.Property">
            <summary>
            Gets the property that was changed on the node.
            </summary>
            <value>The property that was changed on the node.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs.Value">
            <summary>
            Gets the new value of the property that was changed on the node.
            </summary>
            <value>The new value of the property that was changed on the node.</value>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.Printing.CustomizeHeaderFooter">
            <summary>
            Represents a dialog box to customize header or footer settings of a <see cref="T:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.CustomizeHeaderFooter.#ctor">
            <summary>
            The constructor.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.CustomizeHeaderFooter.Dispose(System.Boolean)">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Printing.CustomizeHeaderFooter.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.Printing.CustomizeHeaderFooter.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.CustomizeHeaderFooter.CenterFont">
            <summary>
            Gets or sets the font for the center section.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.CustomizeHeaderFooter.CenterSection">
            <summary>
            Gets or sets the text for the center section.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.CustomizeHeaderFooter.LeftFont">
            <summary>
            Gets or sets the font for the left section.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.CustomizeHeaderFooter.LeftSection">
            <summary>
            Gets or sets the text for the left section.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.CustomizeHeaderFooter.RightFont">
            <summary>
            Gets or sets the font for the right section.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.Printing.CustomizeHeaderFooter.RightSection">
            <summary>
            Gets or sets the text for the right section.
            </summary>
        </member>
        <member name="T:NickLee.Views.Util.Collections.NamespaceDoc">
            <summary>
            The <strong>NickLee.Views.Util.Collections</strong> contains utility classes that extends
            the .NET Framework collections.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.TreeModelView">
            <summary>
            Represents a view of an <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" /> that includes filtering and sorting
            capabilities.
            </summary>
            <remarks>
            <p>A tree model view wraps a tree model and allows filtering and sorting.</p>
            <p>The filtering is controlled by the <see cref="P:NickLee.Views.Windows.Forms.TreeModelView.RowFilter" /> property, and is
            applied each time the tree model changes.</p>
            <p>To sort the rows of the tree model view, use the <see cref="M:NickLee.Views.Windows.Forms.TreeModelView.SortRows(System.Object,System.String,System.Boolean,System.Int32)" /> method.
            Sorting is performed on demand.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to create a <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> with some columns.
            The <strong>TreeTable</strong> is connected to a <see cref="T:NickLee.Views.Windows.Forms.DefaultTreeModel" /> that wraps
            an <see cref="T:System.Collections.ICollection" />. We suppose that the object located in the collection have the
            <strong>Name</strong> and <strong>Value</strong> properties defined. A <strong>TreeModelView</strong>
            is then created to wrap the <see cref="T:NickLee.Views.Windows.Forms.DefaultTreeModel" />. The filter of the view is set
            so that only rows having their <strong>Name</strong> property not empty will be displayed.
            </para>
            <code lang="C#">
            private TreeTable CreateTable(ICollection collection) {

            // Creates a DefaultTreeModel that wraps the collection
            ITreeModel model = new DefaultTreeModel(collection);

            // Wraps the DefaultTreeModel to filter rows
            TreeModelView view = new TreeModelView(model);
            view.RowFilter = new DefaultRowFilter("Name != ''");

            // Creates a TreeTable with no columns.
            TreeTable table = new TreeTable(view);

            // Creates a tree column mapped to the "Name" property of the tree model.
            // This column is read-only
            TreeColumn column1 = new TreeColumn("Name", "Name");
            column1.ReadOnly = true;

            // Creates a column mapped to the "Value" property of the tree model.
            TableColumn column2 = new TableColumn("Value", "Value");

            // Adds the columns to the table.
            table.Columns.AddRange(new TableColumn[] { column1, column2 });

            // Returns the table
            return table;
            }
            </code>
            <code lang="Visual Basic">
            Private Function CreateTable(ByVal collection As ICollection) As TreeTable

            ' Creates a DefaultTreeModel that wraps the collection
            Dim model As New DefaultTreeModel(collection)

            ' Wraps the DefaultTreeModel to filter rows
            Dim view As New TreeModelView(model)
            view.RowFilter = New DefaultRowFilter("Name != ''")

            ' Creates a TreeTable with no columns.
            Dim table As New TreeTable(view)

            ' Creates a tree column mapped to the "Name" property of the tree model.
            ' This column is read-only
            Dim column1 As New TreeColumn("Name", "Name")
            column1.ReadOnly = true

            ' Creates a column mapped to the "Value" property of the tree model.
            Dim column2 As New TableColumn ("Value", "Value")

            ' Adds the columns to the table.
            table.Columns.AddRange(New TableColumn() { column1, column2 })

            ' Returns the table
            Return table
            End Function
            </code>
            </example>
            <seealso cref="T:NickLee.Views.Windows.Forms.TreeTable" />
            <seealso cref="T:NickLee.Views.Windows.Forms.ITreeModel" />
            <seealso cref="T:NickLee.Views.Windows.Forms.TableColumn" />
            <seealso cref="T:NickLee.Views.Windows.Forms.ImageTableColumn" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelView.#ctor(NickLee.Views.Windows.Forms.ITreeModel)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.TreeModelView" /> class.
            </summary>
            <param name="model">The tree model to wrap.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelView.#ctor(NickLee.Views.Windows.Forms.ITreeModel,NickLee.Views.Windows.Forms.IRowFilter)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.TreeModelView" /> class.
            </summary>
            <param name="model">The tree model to wrap.</param>
            <param name="filter">The filter to apply to the view.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelView.#ctor(NickLee.Views.Windows.Forms.ITreeModel,NickLee.Views.Windows.Forms.IRowGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.TreeModelView" /> class.
            </summary>
            <param name="model">The tree model to wrap.</param>
            <param name="group">The group to apply to the view.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelView.#ctor(NickLee.Views.Windows.Forms.ITreeModel,NickLee.Views.Windows.Forms.IRowGroup,NickLee.Views.Windows.Forms.IRowFilter)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.TreeModelView" /> class.
            </summary>
            <param name="model">The tree model to wrap.</param>
            <param name="group">The group to apply to the view.</param>
            <param name="filter">The filter to apply to the view.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelView.AddNode(System.Object,System.Object)">
            <summary>
            Adds a child node to a parent node.
            </summary>
            <remarks>If the parent is not yet in the tree, it's automatically added.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelView.Contains(System.Object)">
            <summary>
            Returns a value indicating whether the specified node is part of the model.
            </summary>
            <param name="node">The tree node.</param>
            <returns><see langword="true" /> if the <paramref name="node" /> parameter is part of the model; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelView.FilterRow(System.Object)">
            <summary>
            Is called to filter the specified row.
            </summary>
            <param name="row">The row being filtered.</param>
            <returns><see langword="true" /> if the row should be visible in the view;
            <see langword="false" /> otherwise.</returns>
            <remarks>If no filter has been set on the view, the method returns <see langword="true" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelView.FindGroup(System.String)">
            <summary>
            This method is used internally and should not be called by users.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelView.GetChild(System.Object,System.Int32)">
            <summary>
            Retrieves the node child corresponding to the specified index.
            </summary>
            <param name="node">The tree node.</param>
            <param name="index">The zero-based index of the child.</param>
            <returns>The child of <strong>node</strong> whose index is <strong>index</strong>.</returns>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index" /> is not
            a valid index.</exception>
            <remarks>If <strong>node</strong> is <see langword="null" />, the root of the tree model is used.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelView.GetChildCount(System.Object)">
            <summary>
            Retrieves the number of children belonging to a node.
            </summary>
            <param name="node">The tree node.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelView.GetFirstFilteredParent(System.Object)">
            <summary>
            Returns the top most node that will not be removed if node is removed
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelView.GetFirstVisibleParent(System.Object)">
            <summary>
            Search the first visible parent of node in the tree, knowing that nodes
            has not already been added to the tree.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelView.GetGroup(System.Object)">
            <summary>
            Is called to find the group of the specified row.
            </summary>
            <param name="row">The row being handled.</param>
            <returns>An <see cref="T:System.Object" /> that represents the group in which
            <paramref name="row" /> will be put.</returns>
            <remarks>If no group has been set on the view, the method returns the parent
            of <paramref name="row" /> in the tree model.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelView.GetIndexOfChild(System.Object,System.Object)">
            <summary>
            Returns the zero-based index of the specified child in the specified node.
            </summary>
            <param name="parent">The parent tree node.</param>
            <param name="child">The child node.</param>
            <returns>A zero-based index, or <strong>-1</strong> if the child node is not a child of <strong>parent</strong>.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelView.GetParent(System.Object)">
            <summary>
            Retrieves the parent of the specified node.
            </summary>
            <param name="node">The tree node.</param>
            <returns>The parent of the specified node, or <see langword="null" />
            if <strong>node</strong> has no parent.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelView.InvalidateView">
            <summary>
            Invalidates the view by resetting the tree model.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelView.InvalidateView(System.Boolean)">
            <summary>
            Invalidates the view by resetting the tree model.
            </summary>
            <param name="forceMapping">A value indicating whether to force or not the filtering, even
            though no filter has been set on the view. In this case, all the rows of the wrapped tree
            model will be visible in this view.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelView.IsLeaf(System.Object)">
            <summary>
            Returns a value indicating whether the specified node is a leaf.
            </summary>
            <param name="node">The tree node.</param>
            <returns><see langword="true" /> if the <strong>node</strong> parameter is a leaf; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelView.MoveNode(System.Object,System.Int32)">
            <summary>
            Moves a node to the specified index.
            </summary>
            <param name="node">The node to move.</param>
            <param name="newIndex">The new index for the node.</param>
            <exception cref="T:System.ArgumentException"><paramref name="node" /> has no children.</exception>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="newIndex" /> is
            not a valid index.</exception>
            <remarks>
            If <paramref name="node" /> is already in the model, it is moved. Otherwise,
            the index for the node is recorded so that when the node will be added later to the tree model,
            its index will be <paramref name="newIndex" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelView.NodesReset(NickLee.Views.Windows.Forms.TreeModelChangeEventArgs)">
            <summary>
            Called when a reset event has been received from the wrapped model
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelView.OnQueryNodeIndex(NickLee.Views.Windows.Forms.QueryNodeIndexEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Windows.Forms.TreeModelView.QueryNodeIndex" /> event.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Windows.Forms.QueryNodeIndexEventArgs" /> that contains the event data.</param>
            <remarks>Called when a node is added to the view.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelView.OnTreeModelChanged(NickLee.Views.Windows.Forms.TreeModelChangeEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Windows.Forms.TreeModelView.TreeModelChanged" /> event.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Windows.Forms.TreeModelChangeEventArgs" /> that contains the event data.</param>
            <remarks>Called when the tree model is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelView.ResetView">
            <summary>
            Resets the view by removing the filter.
            </summary>
            <remarks>
            After calling this method, the <see cref="P:NickLee.Views.Windows.Forms.TreeModelView.NeedsMapping" /> property returns
            <see langword="false" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelView.SortRows(System.Object,System.Collections.IComparer,System.Int32)">
            <summary>
            Sorts the children of the specified node using an <see cref="T:System.Collections.IComparer" />.
            </summary>
            <param name="node">The parent of the nodes to sort.</param>
            <param name="comparer">The <see cref="T:System.Collections.IComparer" /> implementation to use when
            comparing elements. </param>
            <param name="depth">A depth of <strong>0</strong> will only sort the children of the specified node.
            A negative depth will sort the specified node and its children recursively. Any other value
            specifies the depth of the sort algorithm.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelView.SortRows(System.Object,System.String,System.Boolean,System.Int32)">
            <summary>
            Sorts the children of the specified node using a mapping name.
            </summary>
            <param name="node">The parent of the nodes to sort.</param>
            <param name="mappingName">The name of the property that will be used to sort
            the nodes.</param>
            <param name="ascending"><see langword="true" /> if the sort should be ascending; otherwise,
            <see langword="false" />.</param>
            <param name="depth">A depth of <strong>0</strong> will only sort the children of the specified node.
            A negative depth will sort the specified node and its children recursively. Any other value
            specifies the depth of the sort algorithm.</param>
            <exception cref="T:System.ArgumentException"><paramref name="mappingName" /> cannot be
            mapped to a node property.</exception>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeModelView.QueryNodeIndex">
            <summary>
            Occurs when a node is being added to the tree model view.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.TreeModelView.TreeModelChanged">
            <summary>
            Occurs when the tree model changes.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeModelView.NeedsMapping">
            <summary>
            Gets a value indicating whether the view is currently filtering or sorting
            the original tree model.
            </summary>
            <value><see langword="true" /> if the view has a row filter, or sorting has been made
            on the view; otherwise, <see langword="false" />.</value>
            <seealso>RowFilter</seealso>
            <seealso>SortRows</seealso>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeModelView.RowFilter">
            <summary>
            Gets or sets the row filter of the view.
            </summary>
            <value>An object implementing the <see cref="T:NickLee.Views.Windows.Forms.IRowFilter" /> interface.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeModelView.RowGroup">
            <summary>
            Gets or sets the row filter of the view.
            </summary>
            <value>An object implementing the <see cref="T:NickLee.Views.Windows.Forms.IRowFilter" /> interface.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TreeModelView.TreeModel">
            <summary>
            Gets or sets the tree model wrapped by the view.
            </summary>
            <value>An object implementing the <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" /> interface.</value>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.TreeModelView.MappingNameComparer">
            <summary>
            A comparer that uses a <strong>PropertyDescriptor</strong>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.DropDownButton">
            <summary>
            The button that drops <see cref="T:System.Drawing.Design.UITypeEditor" /> controls.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DropDownButton.OnGotFocus(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)">Control.OnGotFocus</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DropDownButton.OnLostFocus(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnLostFocus(System.EventArgs)">Control.OnLostFocus</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DropDownButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">Control.OnPaint</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DropDownButton.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">Control.SetBoundsCore</see>.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.DropDownButton.dialog">
            <summary>
            Indicates whether the button should be displayed as a
            drop-down arrow or as a dialog button.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.DropDownButton.IsDialog">
            <summary>
            Gets or sets a value indicating if the button should be
            drawn as a drop dialog button or as a drop button.
            </summary>
            <value><see langword="true" /> if the button should be
            drawn as a drop dialog button; <see langword="false" /> otherwise.</value>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.Design.TableColumnConverter">
            <summary>
            A <see cref="T:System.ComponentModel.TypeConverter" /> that can describe instances of <see cref="T:NickLee.Views.Windows.Forms.TableColumn" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Design.TableColumnConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)">TypeConverter.CanConvertTo</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Design.TableColumnConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)">TypeConverter.ConvertTo</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.TimeSpanUpDown">
            <summary>
            Represents a windows up-down control that displays <see cref="T:System.TimeSpan" /> values.
            </summary>
            <remarks>
            A <strong>TimeSpanUpDown</strong> control contains a single <see cref="T:System.TimeSpan" /> value
            that can be incremented or decremented by clicking the up or down buttons
            of the control. The user may also enter a value,
            unless the <see cref="P:System.Windows.Forms.UpDownBase.ReadOnly" /> property is set to <see langword="true" />.
            Sets the <see cref="P:NickLee.Views.Windows.Forms.TimeSpanUpDown.Increment" /> property to specify the value to be incremented or decremented to
            the <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.Value" /> property when the user clicks the up or down arrow buttons.
            </remarks>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.GenericValueEditor">
            <summary>
            Represents a Windows control that allows you to edit a value of any type.
            </summary>
            <remarks>
            <p>The <strong>GenericValueEditor</strong> control allows the user to edit
            values of a specific type. Use the <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.Value" /> property to access
            the edited value.</p>
            <p>The type of objects to edit is defined by the
            <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.EditedType" /> property of this control. The
            <strong>GenericValueEditor</strong> uses the <see cref="T:System.Drawing.Design.UITypeEditor" /> and
            <see cref="T:System.ComponentModel.TypeConverter" /> installed on that type to edit and validate values.</p>
            <p>When the <see cref="T:System.Drawing.Design.UITypeEditor" /> associated with the edited type has the style
            <strong>DropDown</strong> (see <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />), then
            this control will display a down arrow button that drops the custom editor.
            When the <see cref="T:System.Drawing.Design.UITypeEditor" /> associated with the edited type has the style
            <strong>Modal</strong>, then this control will display a <strong>...</strong> button
            that opens the modal dialog.</p>
            <p>When no <see cref="T:System.Drawing.Design.UITypeEditor" /> is associated with the edited type or the
            associated editor is of style <strong>None</strong>, then the behavior of the
            control depends on the edited type. If the type is enumerated, then the control acts
            like a combo box of the enumerated values. If the type is not an enumerated type,
            then the control acts like a text box.</p>
            <p>If the editor associated with the edited type can display a representation of
            the edited value (see
            <see cref="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported">UITypeEditor.GetPaintValueSupported</see>),
            then a small rectangle showing this representation will be displayed in addition to the
            textual value.</p>
            <p>You can decide to transform this control into an <strong>UpDownControl</strong>
            by setting the <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.ShowUpDownButton" /> property to <see langword="true" />. In
            this case, if the edited type is an enumerated type then the Up and Down buttons
            will allow you to navigate into the enumerated values of this type, otherwise you may
            handle the <see cref="E:NickLee.Views.Windows.Forms.GenericValueEditor.UpButtonClick" /> and <see cref="E:NickLee.Views.Windows.Forms.GenericValueEditor.DownButtonClick" /> events.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to create a <strong>GenericValueEditor</strong> for editing
            a <see cref="T:System.Drawing.Color" /> stucture.
            </para>
            <code lang="C#">
            private GenericValueEditor GetColorEditor(Color startColor) {
            GenericValueEditor editor = new GenericValueEditor();
            editor.EditedType = typeof(Color);
            editor.Value = startColor;
            return editor;
            }
            </code>
            <code lang="Visual Basic">
            Private Funtion GetColorEditor(ByVal startColor As Color) as GenericValueEditor
            Dim editor as GenericValueEditor = New GenericValueEditor()
            editor.EditedType = GetType(Color)
            editor.Value = startColor
            Return editor
            End Function
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.GenericValueEditor" /> class.
            </summary>
            <remarks>The default edited type is <see cref="T:System.String" />.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to create a <strong>GenericValueEditor</strong> for editing
            a <see cref="T:System.Drawing.Color" /> stucture.
            </para>
            <code lang="C#">
            private GenericValueEditor GetColorEditor(Color startColor) {
            GenericValueEditor editor = new GenericValueEditor();
            editor.EditedType = typeof(Color);
            editor.Value = startColor;
            return editor;
            }
            </code>
            <code lang="Visual Basic">
            Private Funtion GetColorEditor(ByVal startColor As Color) as GenericValueEditor
            Dim editor as GenericValueEditor = New GenericValueEditor()
            editor.EditedType = GetType(Color)
            editor.Value = startColor
            Return editor
            End Function
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.GenericValueEditor" /> class using
            the specified type.
            </summary>
            <param name="editedType">The <see cref="T:System.Type" /> of object that can be edited by this control.</param>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to create a <strong>GenericValueEditor</strong> for editing
            a <see cref="T:System.Drawing.Color" /> stucture.
            </para>
            <code lang="C#">
            private GenericValueEditor GetColorEditor(Color startColor) {
            GenericValueEditor editor = new GenericValueEditor();
            editor.EditedType = typeof(Color);
            editor.Value = startColor;
            return editor;
            }
            </code>
            <code lang="Visual Basic">
            Private Funtion GetColorEditor(ByVal startColor As Color) as GenericValueEditor
            Dim editor as GenericValueEditor = New GenericValueEditor()
            editor.EditedType = GetType(Color)
            editor.Value = startColor
            Return editor
            End Function
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.CommitText">
            <summary>
            Is called to commit the text that is currently edited by the control.
            </summary>
            <returns><see langword="true" /> if the string has been successfully converted into
            the type defined by the property <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.EditedType" />; <see langword="false" /> otherwise.
            </returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.CommitText(NickLee.Views.Windows.Forms.ValueChangedReason)">
            <summary>
            Is called to commit the text that is currently edited by the control.
            </summary>
            <param name="reason">One of the <see cref="T:NickLee.Views.Windows.Forms.ValueChangedReason" /> values.</param>
            <returns><see langword="true" /> if the string has been successfully converted into
            the type defined by the property <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.EditedType" />; <see langword="false" /> otherwise.
            </returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.DownButtonClicked(System.Object,System.EventArgs)">
            <summary>
            Invoked when clicking the down button.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.DropDownButtonClicked(System.Object,System.EventArgs)">
            <summary>
            Invoked when clicking the drop button.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.DropEditor">
            <summary>
            Drops the <see cref="T:System.Drawing.Design.UITypeEditor" /> associated with the edited value.
            </summary>
            <remarks>The method may also drop a list box if the edited value does not
            have any editor and the type proposes standard values.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.FireEvent(System.Object,System.EventArgs)">
            <summary>
            Fires an event based on key in the Events list.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.IsEnumerable">
            <summary>
            Indicates whether the values of the edited type can be enumerated.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">Control.IsInputKey</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.OnAutoCompletionChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.AutoCompletion" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>AutoCompletion</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.OnAutoSizeChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.AutoSize" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>AutoSize</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.OnBorderStyleChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.BorderStyle" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>BorderStyle</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.OnCursorChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)">Control.OnCursorChanged</see>.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.OnDownButtonClick(System.EventArgs)">
            <summary>
            Is called when the down button of the control is clicked.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
            <remarks>Called when the down button of the control is clicked.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.OnDropDownButtonClick(System.EventArgs)">
            <summary>
            Is called when the drop button of the control is clicked.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
            <remarks>Called when the drop down button of the control is clicked.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.OnEnabledChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)">Control.OnEnabledChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.OnEnter(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnEnter(System.EventArgs)">Control.OnEnter</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.OnFontChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">Control.OnFontChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.OnGotFocus(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnGotFocus(System.EventArgs)">Control.OnGotFocus</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.OnHandleCreated(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)">Control.OnHandleCreated</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">Control.OnKeyDown</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">Control.OnKeyPress</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.OnLeave(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnLeave(System.EventArgs)">Control.OnLeave</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">Control.OnMouseDown</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">Control.OnMouseWheel</see>.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the data.</param>
            <remarks>The default implementation iterates on the standard values proposed by
            the edited type, if any.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">Control.OnPaint</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.OnPictureBoxClick(System.EventArgs)">
            <summary>
            Is called when the picture box of the control is clicked.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
            <remarks>Called when the picture box of the control is clicked.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.OnReadOnlyChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.ReadOnly" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>ReadOnly</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.OnRightToLeftChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">Control.OnRightToLeftChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            This members overrides <see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)">Control.OnSystemColorsChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.OnTextAlignChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.TextAlign" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>TextAlign</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.OnTextEditableChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.TextEditable" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>TextEditable</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.OnUpButtonClick(System.EventArgs)">
            <summary>
            Is called when the up button of the control is clicked.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
            <remarks>Called when the up button of the control is clicked.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.OnValidating(System.ComponentModel.CancelEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)">Control.OnValidating</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.OnValueChanged(NickLee.Views.Windows.Forms.ValueChangedEventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.Value" /> property is changed on the control.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Windows.Forms.ValueChangedEventArgs" /> that contains the event data.</param>
            <remarks>Called when the <strong>Value</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.PictureBoxClicked(System.Object,System.EventArgs)">
            <summary>
            Invoked when clicking the picture box.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)">Control.ProcessDialogKey</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.ResetBackColor">
            <summary>
            Resets the <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.BackColor" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.ResetForeColor">
            <summary>
            Resets the <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.ForeColor" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.ScaleCore(System.Single,System.Single)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)">Control.ScaleCore</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">Control.SetBoundsCore</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.UpButtonClicked(System.Object,System.EventArgs)">
            <summary>
            Invoked when clicking the up button.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.UpdateTextWithValue">
            <summary>
            Resets the text of the control to the string representation of the <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.Value" /> property.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.GenericValueEditor._autoCompletion">
            <summary>
            Indicates whether the control is in auto completion mode.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.GenericValueEditor._autoSize">
            <summary>
            Indicates whether the control is in auto size mode.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.GenericValueEditor._borderStyle">
            <summary>
            The border style. Note that initialization must be done here.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.GenericValueEditor._context">
            <summary>
            A Context that can be used to help type converters....
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.GenericValueEditor._converter">
            <summary>
            The type converter for the edited type.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.GenericValueEditor._dropDownButton">
            <summary>
            A button used to drop UI type editors, if any.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.GenericValueEditor._dropDownListBox">
            <summary>
            A <strong>ListBox</strong> to drop standard values of a type.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.GenericValueEditor._editControl">
            <summary>
            The text box for editing text.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.GenericValueEditor._editor">
            <summary>
            The editor for the currently edited type.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.GenericValueEditor._editorService">
            <summary>
            The <strong>IWindowsFormsEditorService</strong> that allows you to drop UI type
            editors.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.GenericValueEditor._format">
            <summary>
            Format for the text.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.GenericValueEditor._formatInfo">
            <summary>
            Format provider to format the text.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.GenericValueEditor._hasDropButton">
            <summary>
            Indicates whether a button should be displayed to drop a <strong>UITypeEditor</strong>
            or the standard value list box.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.GenericValueEditor._paintValueBox">
            <summary>
            A <strong>PictureBox</strong> used to paint the value.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.GenericValueEditor._showUpDownButton">
            <summary>
            Indicates whether the control should display an up-down button.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.GenericValueEditor._textEditable">
            <summary>
            Indicates whether the text can be edited.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.GenericValueEditor._textOffset">
            <summary>
            The text offset.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.GenericValueEditor._type">
            <summary>
            Edited type.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.GenericValueEditor._upDownButton">
            <summary>
            A button used to modify the edited value.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.GenericValueEditor._value">
            <summary>
            Current value of the editor.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.GenericValueEditor.AutoCompletionChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.AutoCompletion" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.GenericValueEditor.AutoSizeChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.AutoSize" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.GenericValueEditor.BorderStyleChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.BorderStyle" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.GenericValueEditor.DownButtonClick">
            <summary>
            Occurs when the down button of the control is clicked.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.GenericValueEditor.DropDownButtonClick">
            <summary>
            Occurs when the drop-down button of the control is clicked.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.GenericValueEditor.PictureBoxClick">
            <summary>
            Occurs when the picture box of the control is clicked.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.GenericValueEditor.ReadOnlyChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.ReadOnly" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.GenericValueEditor.TextAlignChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.TextAlign" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.GenericValueEditor.TextEditableChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.TextEditable" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.GenericValueEditor.UpButtonClick">
            <summary>
            Occurs when the up button of the control is clicked.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.GenericValueEditor.ValueChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.Value" /> property is changed on the control.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.AutoCompletion">
            <summary>
            Gets or sets a value indicating whether auto-completion is enabled.
            </summary>
            <value><see langword="true" /> if auto-completion is enabled; Otherwise, <see langword="false" />.
            The default value is <see langword="true" />.</value>
            <remarks>Auto-completion is used when the <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.Converter" /> sets on this
            control supports standard values.</remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.AutoSize">
            <summary>
            Gets or sets a value indicating whether the control automatically adjusts its height to the font height.
            </summary>
            <value><see langword="true" /> if the control adjusts its height to closely fit
            its contents; <see langword="false" /> otherwise. The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.BackColor">
            <summary>
            Gets or sets the background color of the control.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the background color of the control.
            The default value is the value for window text (<see cref="P:System.Drawing.SystemColors.Window">SystemColors.Window</see>).</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.BackgroundImage">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.BackgroundImage">Control.BackgroundImage</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.BorderStyle">
            <summary>
            Gets or sets the border style of the control.
            </summary>
            <value>One of the <see cref="T:System.Windows.Forms.BorderStyle" /> values. The default value
            is <see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" />.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.ClipControl">
            <summary>
            Gets the control that contains the <strong>TextBox</strong>, the Button, and the Picture box.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.Context">
            <summary>
            Gets or sets the context that will be used to convert the edited value
            using type converters.
            </summary>
            <value>An instance of <see cref="T:System.ComponentModel.ITypeDescriptorContext" />. The default value
            is <see langword="null" />.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.Converter">
            <summary>
            Gets or sets the type converter used by the editor.
            </summary>
            <value>A <see cref="T:System.ComponentModel.TypeConverter" /> instance that is used to convert the edited value from and to text.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.DefaultSize">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.DefaultSize">Control.DefaultSize</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.DropDownButton">
            <summary>
            Gets the button that drops the <strong>UITypeEditor</strong>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.DropDownListBox">
            <summary>
            Gets the <strong>ListBox</strong> used for dropping standard values of a type.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.EditControl">
            <summary>
            Gets the <strong>TextBox</strong> used for editing text.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.EditedType">
            <summary>
            Gets or sets the <see cref="T:System.Type" /> this control can edit.
            </summary>
            <value>A <see cref="T:System.Type" /> instance that represents the type of object that can be edited
            by the editor.</value>
            <exception cref="T:System.ArgumentNullException">The property value is
            <see langword="null" />.</exception>
            <remarks>Changing this property also changes the <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.Value" />,
            <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.Converter" />, and <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.Editor" /> properties.</remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.Editor">
            <summary>
            Gets or sets the type editor for this control.
            </summary>
            <value>A <see cref="T:System.Drawing.Design.UITypeEditor" /> instance that defines the way this control will edit the value.</value>
            <remarks>
            <p>When the editor has the style <strong>DropDown</strong>
            (see <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" />), then this control will display a
            down-arrow button that drops the custom editor. When the editor has the style
            <strong>Modal</strong>, then this control will display a <strong>...</strong>
            button that opens the modal dialog.</p>
            <p>When no editor is set or the editor is of style <strong>None</strong>, then
            the behavior of the control depends on the edited type. If the type is enumerated
            then the control acts like a combo box of the enumerated values. If the type is
            not an enumerated type, then the control acts like a text box.</p>
            <p>If the editor can display a representation of the edited value
            (see <see cref="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported">UITypeEditor.GetPaintValueSupported</see>),
            then a small rectangle showing this representation will be displayed in addition
            to the textual value.</p>
            </remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.Focused">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.Focused">Control.Focused</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.ForeColor">
            <summary>
            Gets or sets the foreground color of the control.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of the control.
            The default value is the value for window text (<see cref="P:System.Drawing.SystemColors.WindowText">SystemColors.WindowText</see>).</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.Format">
            <summary>
            Gets or sets the format that specifies how text is formatted in this control.
            </summary>
            <value>A string that specifies how text is formatted.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.FormatInfo">
            <summary>
            Gets or sets the culture specific information used to determine how values are formatted.
            </summary>
            <value>An <see cref="T:System.IFormatProvider" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.PaintValueBox">
            <summary>
            Gets the picture box of the control.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.PaintValueFrame">
            <summary>
            Gets or sets a value indicating whether a frame around the
            area that previews the edited value is displayed or not.
            </summary>
            <value><see langword="true" /> if the control displays a frame around the area that previews
            the edited value; <see langword="false" /> otherwise.</value>
            <remarks>
            Not all editors can paint a representation of the edited value. If the
            editor cannot paint the edited value, then the value
            of this property is meaningless.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.PaintValueOnly">
            <summary>
            Gets or sets a value indicating whether to show only the rectangle
            that displays a representation of the edited value.
            </summary>
            <value><see langword="true" /> if the control shows only the rectangle that displays
            a representation of the edited value; <see langword="false" /> otherwise. The textual value is then not visible.</value>
            <remarks>
            When the editor can paint a representation of the value
            (see <see cref="M:System.Drawing.Design.UITypeEditor.GetPaintValueSupported">UITypeEditor.GetPaintValueSupported</see>)
            this control will show both a textual value and a rectangle that displays a
            representation of the value.
            Setting this property to <see langword="true" /> will hide the textual value.
            Not all editors can paint a representation of the edited value. If the
            editor cannot paint the edited value, then the value
            of this property is meaningless.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.ReadOnly">
            <summary>
            Gets or sets a value indicating whether text in the text box is read-only.
            </summary>
            <value><see langword="true" /> if the text box is read-only; <see langword="false" /> otherwise. The default value is
            <see langword="false" />.</value>
            <remarks>When this property is set to <see langword="true" />, the contents of the control cannot be
            changed by the user at runtime. With this property set to <see langword="true" />, you can still set
            the value of the <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.Text" /> property in code. You can use this feature instead of disabling
            the control with the <see cref="P:System.Windows.Forms.Control.Enabled" /> property to allow the contents to be copied.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.SelectionLength">
            <summary>
            Gets or sets the number of characters selected in the control.
            </summary>
            <value>The number of characters selected in the control.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.SelectionStart">
            <summary>
            Gets or sets the starting point of text selected in the control.
            </summary>
            <value>The starting position of text selected in the control.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.ShowUpDownButton">
            <summary>
            Gets or sets a value indicating whether the control should display an up-down button to
            modify the edited value.
            </summary>
            <value><see langword="true" /> if the control should display an up-down button;
            <see langword="false" /> otherwise.</value>
            <remarks>When this property is set to <see langword="true" />, the editor set by the
            <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.Editor" /> property is no longer used.</remarks>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.Text">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.Text">Control.Text</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.TextAlign">
            <summary>
            Gets or sets the way text is aligned in a <see cref="T:NickLee.Views.Windows.Forms.GenericValueEditor" /> control.
            </summary>
            <value>One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> enumeration values that specifies
            how text is aligned in the control. The default value is <see cref="F:System.Windows.Forms.HorizontalAlignment.Left" />.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.TextEditable">
            <summary>
            Gets or sets a value indicating whether the text in the text box is editable.
            </summary>
            <value><see langword="true" /> if the text in the text box is editable; Otherwise, <see langword="false" />.
            The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.TextOffset">
            <summary>
            Gets or sets the offset used to display the text.
            </summary>
            <value>A <see cref="T:System.Drawing.Point" /> object that defines an offset used to display the text.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.UpDownButton">
            <summary>
            Gets the button that drops the <strong>UITypeEditor</strong>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.Value">
            <summary>
            Gets or sets the value edited by the control.
            </summary>
            <value>The current value of the editor.</value>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.GenericValueEditor.DropDownHolder">
            <summary>
            The form that holds the dropped down editor.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.DropDownHolder.#ctor(NickLee.Views.Windows.Forms.GenericValueEditor.EditorService)">
            <summary>
            Creates a <strong>DropDownHolder</strong>.
            </summary>
            <param name="service">The service that drops this holder.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.DropDownHolder.DoModalLoop">
            <summary>
            Waits until the control is made invisible.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.DropDownHolder.FocusComponent">
            <summary>
            Gives the focus to the embedded control.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.DropDownHolder.OnClosed(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Form.OnClosed(System.EventArgs)">Form.OnClosed</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.DropDownHolder.OnCurrentControlResize(System.Object,System.EventArgs)">
            <summary>
            Invoked when the dropped control is resized.
            This resizes the holder and realigns it to the right or to the left.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.DropDownHolder.OnDeactivate(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)">Form.OnDeactivate</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.DropDownHolder.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">Control.OnMouseDown</see>.
            </summary>
            <remarks>
            Closes the holder when the left button is clicked.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.DropDownHolder.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            Invoked when the holder is resized.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.DropDownHolder.SetComponent(System.Windows.Forms.Control)">
            <summary>
            Sets the control displayed by the form.
            </summary>
            <param name="ctl">A <see cref="T:System.Windows.Forms.Control" /> instance.</param>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.GenericValueEditor.DropDownHolder.currentControl">
            <summary>
            Currently dropped control.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.GenericValueEditor.DropDownHolder.service">
            <summary>
            The service that dropped this holder.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.GenericValueEditor.DropDownHolder.Component">
            <summary>
            Gets the control displayed by the form.
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Control" /> instance.</value>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.GenericValueEditor.EditorService">
            <summary>
            The <strong>IWindowsFormsEditorService</strong> that allows you to
            drop dialog and UI type editors for a <see cref="T:NickLee.Views.Windows.Forms.GenericValueEditor" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.EditorService.#ctor(NickLee.Views.Windows.Forms.GenericValueEditor)">
            <summary>
            Creates the editor service.
            </summary>
            <param name="editor">The cell editor.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.EditorService.CloseDropDown">
            <summary>
            Closes the dropped editor.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.EditorService.DropDownControl(System.Windows.Forms.Control)">
            <summary>
            Drops the editor control.
            </summary>
            <param name="ctl">The control to drop.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.EditorService.GetService(System.Type)">
            <summary>
            Gets the service object of the specified type.
            </summary>
            <param name="serviceType">An object that specifies the type of service object to get.</param>
            <returns>A service object of type <paramref name="serviceType" />.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.EditorService.HideHolder">
            <summary>
            Hides the drop-down editor.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.EditorService.ShowDialog(System.Windows.Forms.Form)">
            <summary>
            Opens a dialog editor.
            </summary>
            <param name="dialog">The dialog to open.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.GenericValueEditor.EditorService.SystemColorsChanged">
            <summary>
            Is Called when the SystemColorsChanged event is received
            by the GenericValueEditor.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.GenericValueEditor.EditorService._closingDropDown">
            <summary>
            Indicates whether we are currently closing the drop-down holder.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.GenericValueEditor.EditorService._dropDownHolder">
            <summary>
            A control that holds the dropped editors.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.GenericValueEditor.EditorService.editor">
            <summary>
            The control that uses this service.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TimeSpanUpDown.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.TimeSpanUpDown" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TimeSpanUpDown.OnDownButtonClick(System.EventArgs)">
            <summary>
            Decrements the value of the up-down control.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TimeSpanUpDown.OnUpButtonClick(System.EventArgs)">
            <summary>
            Increments the value of the up-down control.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TimeSpanUpDown.ResetIncrement">
            <summary>
            Resets the <see cref="P:NickLee.Views.Windows.Forms.TimeSpanUpDown.Increment" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TimeSpanUpDown.ShouldSerializeIncrement">
            <summary>
            Checks if the <see cref="P:NickLee.Views.Windows.Forms.TimeSpanUpDown.Increment" /> property should be serialized.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TimeSpanUpDown._defaultIncrement">
            <summary>
            Default increment.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TimeSpanUpDown._defaultValue">
            <summary>
            Default value.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TimeSpanUpDown._increment">
            <summary>
            Value for incrementing and decrementing.
            </summary>
        </member>
        <member name="F:NickLee.Views.Windows.Forms.TimeSpanUpDown._userEdit">
            <summary>
            A bool indicating whether the user edited the text value.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.TimeSpanUpDown.Increment">
            <summary>
            Gets or sets the value to increment or decrement the up-down control when the up
            or down buttons are clicked.
            </summary>
            <value>
            A <see cref="T:System.TimeSpan" /> object that represents the value to increment or decrement when the up
            or down buttons are clicked.
            </value>
            <remarks>
            Clicking the up button causes the <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.Value" /> property to increment by the
            amount specified by the <see cref="P:NickLee.Views.Windows.Forms.TimeSpanUpDown.Increment" /> property. Clicking the down button
            causes the <see cref="P:NickLee.Views.Windows.Forms.GenericValueEditor.Value" /> property to be decremented by the amount specified
            by the <see cref="P:NickLee.Views.Windows.Forms.TimeSpanUpDown.Increment" /> property.
            </remarks>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.TableColumnsChangeAction">
            <summary>
            Specifies how the collection of columns of a <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> is changed.
            </summary>
            <remarks>
            Use the members of this enumeration to determine the action that has occurred on a
            <see cref="T:NickLee.Views.Windows.Forms.TableColumnCollection" /> object.
            The <see cref="T:NickLee.Views.Windows.Forms.TableColumnsChangeEventArgs" /> class uses this enumeration.
            </remarks>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.RowControllerAction">
            <summary>
            Describes an action performed on an <see cref="T:NickLee.Views.Windows.Forms.IRowController" /> object.
            </summary>
            <remarks>Uses the members of this enumeration to determine the action that has occurred on an <see cref="T:NickLee.Views.Windows.Forms.IRowController" /> object.</remarks>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.DefaultTreeTableCellEditor">
            <summary>
            Defines the editor used by default to edit values in a cell of a <see cref="T:NickLee.Views.Windows.Forms.TreeTable" />.
            </summary>
            <remarks>
            This class is the default editor used to edit values in a <see cref="T:NickLee.Views.Windows.Forms.TreeTable" />.
            The editor uses a <see cref="T:NickLee.Views.Windows.Forms.GenericValueEditor" /> to edit the table values.
            </remarks>
            <seealso cref="T:NickLee.Views.Windows.Forms.TreeTable" />
            <seealso cref="T:NickLee.Views.Windows.Forms.GenericValueEditor" />
            <seealso cref="T:NickLee.Views.Windows.Forms.ITreeTableCellEditor" />
            <seealso cref="P:NickLee.Views.Windows.Forms.TableColumn.CellEditor">TableColumn.CellEditor</seealso>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultTreeTableCellEditor.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:NickLee.Views.Windows.Forms.DefaultTreeTableCellEditor" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultTreeTableCellEditor.#ctor(NickLee.Views.Windows.Forms.GenericValueEditor)">
            <summary>
            Initializes a new instance of <see cref="T:NickLee.Views.Windows.Forms.DefaultTreeTableCellEditor" /> class using the
            specified <see cref="T:NickLee.Views.Windows.Forms.GenericValueEditor" />.
            </summary>
            <param name="editor">The <see cref="T:NickLee.Views.Windows.Forms.GenericValueEditor" /> that will be used
            to edit values of a tree table column.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultTreeTableCellEditor.GetEditorControl(NickLee.Views.Windows.Forms.TreeTable,System.Object,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Returns a control to edit the value of the specified cell.
            </summary>
            <param name="table">The edited <see cref="T:NickLee.Views.Windows.Forms.TreeTable" />.</param>
            <param name="value">The initial value of the edited cell.</param>
            <param name="isSelected">A value indicating whether the cell is selected.</param>
            <param name="row">The zero-based index of the edited row.</param>
            <param name="column">The zero-based index of the edited column.</param>
            <returns>A control to edit the value of the specified cell.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultTreeTableCellEditor.OnEditingStopped(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Windows.Forms.DefaultTreeTableCellEditor.EditingStopped" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
            <remarks>Called when the edition is being stopped.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultTreeTableCellEditor.OnEditingValidated(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Windows.Forms.DefaultTreeTableCellEditor.EditingValidated" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
            <remarks>Called when the edition is being validated.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultTreeTableCellEditor.StopEditing">
            <summary>
            Tells the editor to stop the editing.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DefaultTreeTableCellEditor.ValidateEditing">
            <summary>
            Tells the editor to validate the editing.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.DefaultTreeTableCellEditor.EditingStopped">
            <summary>
            Occurs when the editor stops the editing without validating.
            </summary>
        </member>
        <member name="E:NickLee.Views.Windows.Forms.DefaultTreeTableCellEditor.EditingValidated">
            <summary>
            Occurs when the editor validates the editing without stopping the editing.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.DefaultTreeTableCellEditor.Editor">
            <summary>
            Gets the <see cref="T:NickLee.Views.Windows.Forms.GenericValueEditor" /> used to edit cells.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.DefaultTreeTableCellEditor.Value">
            <summary>
            Gets the value edited by the editor.
            </summary>
            <value>The edited object.</value>
        </member>
        <member name="T:NickLee.Views.Util.PrettyTimeSpanConverter">
            <summary>
            Provides a type converter to convert <see cref="T:System.TimeSpan" /> objects
            to and from other representations.
            </summary>
            <remarks>This converter can only convert a <see cref="T:System.TimeSpan" /> object
            to and from a string.</remarks>
        </member>
        <member name="M:NickLee.Views.Util.PrettyTimeSpanConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)">TypeConverter.CanConvertFrom</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Util.PrettyTimeSpanConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)">TypeConverter.CanConvertTo</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Util.PrettyTimeSpanConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)">TypeConverter.ConvertFrom</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Util.PrettyTimeSpanConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)">TypeConverter.ConvertTo</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Util.PrettyTimeSpanConverter.ParsePrettyTimeSpan(System.String,System.Globalization.CultureInfo)">
            <summary>
            Parses the specified string into a <see cref="T:System.TimeSpan" /> structure.
            </summary>
            <param name="s">The string to parse.</param>
            <param name="info">The culture.</param>
            <returns>A new <see cref="T:System.TimeSpan" /> structure.</returns>
        </member>
        <member name="M:NickLee.Views.Util.PrettyTimeSpanConverter.PrettyTimeSpan(System.TimeSpan,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified <see cref="T:System.TimeSpan" /> structure to a string.
            </summary>
            <param name="ts">The <see cref="T:System.TimeSpan" /> structure.</param>
            <param name="info">The culture.</param>
            <returns>A string that represents <paramref name="ts" />.</returns>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.QueryNodeIndexEventHandler">
            <summary>
            Represents the method that handles an <see cref="E:NickLee.Views.Windows.Forms.TreeModelView.QueryNodeIndex" /> event of an <see cref="T:NickLee.Views.Windows.Forms.TreeModelView" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.Design.TableColumnCollectionEditor">
            <summary>
            Defines a collection editor for the collection of columns in a
            <see cref="T:NickLee.Views.Windows.Forms.TreeTable" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Design.TableColumnCollectionEditor.#ctor(System.Type)">
            <summary>
            Creates the collection editor.
            </summary>
            <param name="type">The collection type.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Design.TableColumnCollectionEditor.CreateCollectionItemType">
            <summary>
            The edited type is <see cref="T:NickLee.Views.Windows.Forms.TableColumn" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.Design.TableColumnCollectionEditor.CreateNewItemTypes">
            <summary>
            Allows you to create <see cref="T:NickLee.Views.Windows.Forms.TableColumn" /> and
            <see cref="T:NickLee.Views.Windows.Forms.TreeColumn" /> classes.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.ValueChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Windows.Forms.GenericValueEditor.ValueChanged" /> event of the
            <see cref="T:NickLee.Views.Windows.Forms.GenericValueEditor" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.ValueChangedEventArgs.#ctor(NickLee.Views.Windows.Forms.ValueChangedReason)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.ValueChangedEventArgs" /> class using the
            specified reason.
            </summary>
            <param name="reason">The reason of the value change.</param>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.ValueChangedEventArgs.Reason">
            <summary>
            Gets the reason of the value change.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Windows.Forms.ValueChangedReason" /> values.</value>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.DropListBox">
            <summary>
            <strong>ListBox</strong> which is dropped when the type contains standard values.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DropListBox.#ctor(NickLee.Views.Windows.Forms.GenericValueEditor)">
            <summary>
            Creates a <strong>DropListBox</strong>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DropListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.ListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">ListBox.OnDrawItem</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DropListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.ListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)">ListBox.OnMeasureItem</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.DropListBox.CreateParams">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.CreateParams">Control.CreateParams</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.DrawTableCellEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Windows.Forms.TreeTable.DrawTableCell" />
            event of the <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> class.
            </summary>
            <remarks>A <see cref="E:NickLee.Views.Windows.Forms.TreeTable.DrawTableCell" /> event is raised to draw
            the cells of owner draw <strong>TreeTable</strong> objects.
            It contains all the information needed for the user to paint the
            specified cell, including the cell location, the cell bounding box,
            and the <see cref="T:System.Drawing.Graphics" /> object on which the drawing should
            be done.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows an event handler
            listening to the <see cref="E:NickLee.Views.Windows.Forms.TreeTable.DrawTableCell" /> event. The event handler draws
            expanded nodes with children using an specific font. Other nodes are painted using the default
            painting algorithm.
            </para>
            <code lang="C#">
            private void OnDrawTableCell(object sender, DrawTableCellEventArgs e) {
            TreeTable table = e.TreeTable;
            object value = table.GetValueAt(e.Row);
            // If the node being drawn has children and is expanded, draw it using
            // an italic font.
            if (table.TreeModel.GetChildCount(value) != 0 &amp;&amp; table.IsRowExpanded(value)) {
            Font font = new Font(e.Font, e.Font.Style | FontStyle.Italic);
            e.DrawCell(e.Bounds, e.BackBrush, e.ForeBrush, font);
            } else
            e.DrawCell();
            }
            </code>
            <code lang="Visual Basic">
            Private Sub OnDrawTableCell(ByVal sender As Object, ByVal e As DrawTableCellEventArgs)
            Dim table As TreeTable = e.TreeTable
            Dim value As Object = table.GetValueAt(e.Row)
            ' If the node being drawn has children and is expanded, draw it using
            ' an italic font.
            If table.TreeModel.GetChildCount(value) &lt;&gt; 0 And table.IsRowExpanded(value)) Then
            Dim font As New Font(e.Font, e.Font.Style | FontStyle.Italic)
            e.DrawCell(e.Bounds, e.BackBrush, e.ForeBrush, font)
            Else
            e.DrawCell()
            End If
            End Sub
            </code>
            </example>
            <seealso cref="E:NickLee.Views.Windows.Forms.TreeTable.DrawTableCell" />
            <seealso cref="P:NickLee.Views.Windows.Forms.TreeTable.OwnerDraw" />
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DrawTableCellEventArgs.Clean">
            <summary>
            Cleans references to avoid memory leaks.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DrawTableCellEventArgs.DrawCell">
            <summary>
            Draws the table cell using the information provided in this instance.
            </summary>
            <remarks>Call this method to draw the table cell if you want to keep
            the original drawing of the cell, that is, as if the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.OwnerDraw" />
            property was set to <see langword="false" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DrawTableCellEventArgs.DrawCell(System.Drawing.Rectangle,System.Drawing.Brush,System.Drawing.Brush,System.Drawing.Font)">
            <summary>
            Draws the table cell with the specified parameters.
            </summary>
            <param name="bounds">The bounds of the table cell being drawn.</param>
            <param name="backBrush">The background <see cref="T:System.Drawing.Brush" /> to
            draw the table cell with.</param>
            <param name="foreBrush">The foreground <see cref="T:System.Drawing.Brush" /> to
            draw the table cell with.</param>
            <param name="font">The <see cref="T:System.Drawing.Font" /> to use.</param>
            <remarks><p>To draw only the foreground, set <paramref name="backBrush" /> to
            <see langword="null" />.</p>
            <p>To draw only the background, set <paramref name="foreBrush" /> to
            <see langword="null" />.</p></remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DrawTableCellEventArgs.DrawFocusRectangle">
            <summary>
            Draws the focus rectangle around the table cell being drawn.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DrawTableCellEventArgs.DrawFocusRectangle(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Draws the focus rectangle around the table cell being drawn using the
            specified bounds and colors.
            </summary>
            <param name="bounds">The bouns of the cell being drawn.</param>
            <param name="backColor">The background color for the focused rectangle.</param>
            <param name="foreColor">The foreground color for the focused rectangle.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DrawTableCellEventArgs.Initialize(System.Drawing.Graphics,NickLee.Views.Windows.Forms.TreeTable,System.Int32,System.Int32,System.Drawing.Rectangle,System.Drawing.Brush,System.Drawing.Brush,System.Drawing.Font,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Windows.Forms.DrawTableCellEventArgs" /> class for the
            specified table cell with the specified font, background color,
            foreground color, surface to draw on, and the bounds to draw within.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> surface on which to draw.</param>
            <param name="treeTable">The <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> being drawn.</param>
            <param name="row">The zero-based index of the row being drawn.</param>
            <param name="column">The zero-based index of the column being drawn.</param>
            <param name="bounds">The bounds of the table cell being drawn.</param>
            <param name="backBrush">The background <see cref="T:System.Drawing.Brush" /> to
            draw the table cell with.</param>
            <param name="foreBrush">The foreground <see cref="T:System.Drawing.Brush" /> to
            draw the table cell with.</param>
            <param name="font">The <see cref="T:System.Drawing.Font" /> to use.</param>
            <param name="rightToLeft"><see langword="true" /> if the table cell being
            painted is in right-to-left mode; <see langword="false" /> otherwise.</param>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.DrawTableCellEventArgs.ShouldDrawFocusRectangle">
            <summary>
            Indicates whether the focus rectangle should be drawn when painting the
            table cell.
            </summary>
            <returns><see langword="true" /> if the table cell being drawn should show
            the focus rectangle; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.DrawTableCellEventArgs.BackBrush">
            <summary>
            Gets the background Brush used to paint the table cell.
            </summary>
            <value>The background <see cref="T:System.Drawing.Brush" /> of the table cell being draw.
            </value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.DrawTableCellEventArgs.Bounds">
            <summary>
            Gets the bounds of the table cell being drawn.
            </summary>
            <value>A <see cref="T:System.Drawing.Rectangle" /> structure that contains the bounds of
            the table cell being drawn.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.DrawTableCellEventArgs.Column">
            <summary>
            Gets the zero-based index of the table column being drawn.
            </summary>
            <value>The zero-based index of the table column being drawn.</value>
            <seealso cref="P:NickLee.Views.Windows.Forms.DrawTableCellEventArgs.Row" />
            <seealso cref="P:NickLee.Views.Windows.Forms.DrawTableCellEventArgs.TreeTable" />
        </member>
        <member name="P:NickLee.Views.Windows.Forms.DrawTableCellEventArgs.Font">
            <summary>
            Gets the font used to paint the table cell.
            </summary>
            <value>The <see cref="T:System.Drawing.Font" /> used to paint the table cell.
            </value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.DrawTableCellEventArgs.ForeBrush">
            <summary>
            Gets the foreground Brush used to paint the table cell.
            </summary>
            <value>The foreground <see cref="T:System.Drawing.Brush" /> of the table cell being draws.
            </value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.DrawTableCellEventArgs.Graphics">
            <summary>
            Gets the graphics surface to draw the table cell on.
            </summary>
            <value>
            The <see cref="T:System.Drawing.Graphics" /> surface to draw the table cell on.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.DrawTableCellEventArgs.IsRightToLeft">
            <summary>
            Indicates whether the table cell is being painted in right-to-left mode.
            </summary>
            <value><see langword="true" /> if the table cell is being painted
            in right-to-left mode; <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Windows.Forms.DrawTableCellEventArgs.Row">
            <summary>
            Gets the zero-based index of the table row being drawn.
            </summary>
            <value>The zero-based index of the table row being drawn.</value>
            <seealso cref="P:NickLee.Views.Windows.Forms.DrawTableCellEventArgs.Column" />
            <seealso cref="P:NickLee.Views.Windows.Forms.DrawTableCellEventArgs.TreeTable" />
        </member>
        <member name="P:NickLee.Views.Windows.Forms.DrawTableCellEventArgs.TreeTable">
            <summary>
            Gets the <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> being drawn.
            </summary>
            <value>The <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> being drawn.</value>
        </member>
        <member name="T:NickLee.Views.Util.Collections.SimpleBindingCollectionBase">
            <summary>
            A simple implementation of the <see cref="T:System.ComponentModel.IBindingList" /> interface.
            </summary>
            <remarks>This implementation of <see cref="T:System.ComponentModel.IBindingList" /> only supports the creation
            of new elements, through the <see cref="M:NickLee.Views.Util.Collections.SimpleBindingCollectionBase.AddNew" /> method.</remarks>
        </member>
        <member name="M:NickLee.Views.Util.Collections.SimpleBindingCollectionBase.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Util.Collections.SimpleBindingCollectionBase" />.
            </summary>
            <param name="allowNew"><see langword="true" /> if the list allows you to create new elements;
            otherwise <see langword="false" />.</param>
        </member>
        <member name="M:NickLee.Views.Util.Collections.SimpleBindingCollectionBase.AddNew">
            <summary>
            Implementation of <see cref="M:System.ComponentModel.IBindingList.AddNew">IBindingList.AddNew</see>.
            </summary>
            <returns><see langword="null" />.</returns>
        </member>
        <member name="M:NickLee.Views.Util.Collections.SimpleBindingCollectionBase.OnClearComplete">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnClearComplete">CollectionBase.OnClearComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Util.Collections.SimpleBindingCollectionBase.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">CollectionBase.OnInsertComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Util.Collections.SimpleBindingCollectionBase.OnInsertRangeComplete(System.Int32,System.Collections.ICollection)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Util.Collections.SimpleCollectionBase.OnInsertRangeComplete(System.Int32,System.Collections.ICollection)">SimpleCollectionBase.OnInsertRangeComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Util.Collections.SimpleBindingCollectionBase.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Util.Collections.SimpleBindingCollectionBase.ListChanged" /> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.ListChangedEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:NickLee.Views.Util.Collections.SimpleBindingCollectionBase.OnMoveComplete(System.Int32,System.Int32)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Util.Collections.SimpleCollectionBase.OnMoveComplete(System.Int32,System.Int32)">SimpleCollectionBase.OnMoveComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Util.Collections.SimpleBindingCollectionBase.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">CollectionBase.OnRemoveComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Util.Collections.SimpleBindingCollectionBase.OnRemoveRangeComplete(System.Int32,System.Collections.ICollection)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Util.Collections.SimpleCollectionBase.OnRemoveRangeComplete(System.Int32,System.Collections.ICollection)">SimpleCollectionBase.OnRemoveRangeComplete</see>.
            </summary>
        </member>
        <member name="E:NickLee.Views.Util.Collections.SimpleBindingCollectionBase.ListChanged">
            <summary>
            Occurs when the list has changed.
            </summary>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.TreeModelUtil">
            <summary>
            Provides <see langword="static" /> methods common to <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" /> objects.
            </summary>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelUtil.GetCommonAncestor(NickLee.Views.Windows.Forms.ITreeModel,System.Object,System.Object)">
            <summary>
            Returns the common ancestor of the specified nodes.
            </summary>
            <param name="model">The tree model.</param>
            <param name="node1">The first node.</param>
            <param name="node2">The second node.</param>
            <returns>The first common ancestor of the specified nodes.</returns>
            <remarks>If <paramref name="node1" /> and <paramref name="node2" /> are the same,
            the method returns <paramref name="node2" />. If <paramref name="node1" /> and <paramref name="node2" /> don't
            have a common ancestor, the method returns <see langword="null" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelUtil.GetDepth(NickLee.Views.Windows.Forms.ITreeModel,System.Object)">
            <summary>
            Gets the depth of the specified node giving its tree model.
            </summary>
            <param name="model">The tree model.</param>
            <param name="node">The tree node.</param>
            <returns>The depth of <strong>node</strong> in the tree model. A depth of <strong>0</strong> means
            that the node has no parent.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelUtil.GetFirstChild(NickLee.Views.Windows.Forms.ITreeModel,System.Object)">
            <summary>
            Gets the first child of the specified node.
            </summary>
            <param name="model">The tree model.</param>
            <param name="node">The tree node.</param>
            <returns>The first child of the specified node, or <see langword="null" />
            if <strong>node</strong> has no children.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelUtil.GetLastChild(NickLee.Views.Windows.Forms.ITreeModel,System.Object)">
            <summary>
            Gets the last child of the specified node.
            </summary>
            <param name="model">The tree model.</param>
            <param name="node">The tree node.</param>
            <returns>The last child of the specified node, or <see langword="null" />
            if <strong>node</strong> has no children.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelUtil.GetSibling(NickLee.Views.Windows.Forms.ITreeModel,System.Object)">
            <summary>
            Gets the next sibling node of the specified node.
            </summary>
            <param name="model">The tree model.</param>
            <param name="node">The tree node.</param>
            <returns>The next sibling node of <strong>node</strong>, or <see langword="null" />
            if <strong>node</strong> has no sibling node.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelUtil.GetTotalChildCount(NickLee.Views.Windows.Forms.ITreeModel,System.Object)">
            <summary>
            Returns the total number of nodes contained in the specified <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" /> starting
            at the specified node.
            </summary>
            <param name="model">The tree model.</param>
            <param name="node">The starting node.</param>
            <returns>The total number of nodes contained in the specified <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" />
            starting the specified node.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelUtil.GetUpSibling(NickLee.Views.Windows.Forms.ITreeModel,System.Object)">
            <summary>
            Gets the previous sibling node of the specified node.
            </summary>
            <param name="model">The tree model.</param>
            <param name="node">The tree node.</param>
            <returns>The previous sibling node of <strong>node</strong>, or <see langword="null" />
            if <strong>node</strong> has no previous sibling node.</returns>
        </member>
        <member name="M:NickLee.Views.Windows.Forms.TreeModelUtil.IsAnAncestor(NickLee.Views.Windows.Forms.ITreeModel,System.Object,System.Object)">
            <summary>
            Returns a value indicating whether the specified parent is an ancestor of the specified child node.
            </summary>
            <param name="model">The tree model.</param>
            <param name="parent">The parent node.</param>
            <param name="node">The child node.</param>
            <returns><see langword="true" /> if <strong>node</strong> is an ancestor of <strong>node</strong>; <see langword="false" /> otherwise.</returns>
            <remarks>If <strong>node</strong> is the same reference as <strong>node</strong>, <see langword="false" /> is returned.</remarks>
        </member>
        <member name="T:NickLee.Views.Windows.Forms.ScrollBarVisibility">
            <summary>
            Specifies how scrollbars will be displayed in a <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> control.
            </summary>
        </member>
    </members>
</doc>
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NickLee.Views.Gantt</name>
    </assembly>
    <members>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowPolicy">
            <summary>
            Specifies how a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> handles its rows when the zoom factor changes
            on the time scale.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.Lag">
            <summary>
            Private struct for editing Lag information on DetailConstaint
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.HierarchyChart">
            <summary>
            Defines the <see langword="abstract" /> base class for the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttChart" />, <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleChart" /> and <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationChart" /> classes.
            </summary>
            <remarks>The <strong>HierarchyChart</strong> is the base class for the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttChart" />, <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleChart" /> and
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationChart" /> classes.
            The left part is a <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttTable" /> that displays the activities or resources of
            a given <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />; the right part contains a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> and a
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> that displays the activities or reservations.</remarks>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.GanttChart" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleChart" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationChart" />
        </member>
        <member name="T:NickLee.Views.Gantt.ITimeScrollable">
            <summary>
            An interface that is implemented by controls that are displaying time information.
            </summary>
            <remarks>
            <p>This interface is implemented by controls that are displaying time information such
            as the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> control or the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttChart" /> control.</p>
            <p>The interface extends the <see cref="T:NickLee.Views.Gantt.ITimeLine" /> interface so that a control that
            implements this interface can convert time information to pixels on the screen. The
            <see cref="T:NickLee.Views.Gantt.ITimeLine" /> interface also defines the <see cref="P:NickLee.Views.Gantt.ITimeLine.FirstVisibleTime" />
            that will be used by the control to define the first visible time.</p>
            </remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.ITimeLine">
            <summary>
            Defines a model to synchronize the representation of time for control displaying time information.
            </summary>
            <remarks>
            <p>The <see cref="T:NickLee.Views.Gantt.ITimeLine" /> interface defines a model used to synchronize the representation of time
            for several controls displaying time information.</p>
            <p>Controls displaying time information, such as the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> or
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> can be synchronized in time by using the same time
            line object.</p>
            <p>The time line defines the <see cref="P:NickLee.Views.Gantt.ITimeLine.FirstVisibleTime" /> property that represents the
            first visible time of the time line.</p>
            <p>A time line also enables conversion between <see cref="T:System.DateTime" /> structures and <see cref="T:System.Double" />. The methods
            responsible for these conversions are the <see cref="M:NickLee.Views.Gantt.ITimeLine.GetUnits(System.DateTime,System.DateTime)" /> and <see cref="M:NickLee.Views.Gantt.ITimeLine.GetTime(System.DateTime,System.Double)" /> methods.
            The time line is used by Gantt component to transform date information into pixels on the screen.</p>
            </remarks>
            <seealso>LinearTimeLine</seealso>
        </member>
        <member name="M:NickLee.Views.Gantt.ITimeLine.GetNextTime(System.DateTime)">
            <summary>
            When implemented by a class, gets the next valid time after the specified time.
            </summary>
            <param name="time">A <see cref="T:System.DateTime" /> structure.</param>
            <returns>The next valid time after the specified time</returns>
            <remarks>
            When the <see cref="P:NickLee.Views.Gantt.ITimeLine.IsLinear" /> property returns <see langword="true" />, the time
            line is said to be linear. In this case, the implementation of this method should simply return
            the <paramref name="time" /> parameter. If the time line is not linear, some dates might not
            be part of it, and thus this method should return the next valid date after <paramref name="time" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.ITimeLine.GetPreviousTime(System.DateTime)">
            <summary>
            When implemented by a class, gets the previous valid time before the specified time.
            </summary>
            <param name="time">A <see cref="T:System.DateTime" /> structure.</param>
            <returns>The previous valid time before the specified time</returns>
            <remarks>
            When the <see cref="P:NickLee.Views.Gantt.ITimeLine.IsLinear" /> property returns <see langword="true" />, the time
            line is said to be linear. In this case, the implementation of this method should simply return
            the <paramref name="time" /> parameter. If the time line is not linear, some dates might not
            be part of it, and thus this method should return the previous valid date before <paramref name="time" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.ITimeLine.GetSizeOf(System.TimeSpan)">
            <summary>
            When implemented by a class, computes the size of the specified duration when the time line is linear.
            </summary>
            <param name="duration">a <see cref="T:System.TimeSpan" /> structure. Only null or positive duration are
            allowed. Using a negative duration should raise an exception.</param>
            <returns>The size of the specified duration when the time line is linear.</returns>
            <remarks>When the <see cref="P:NickLee.Views.Gantt.ITimeLine.IsLinear" /> property returns <see langword="true" />, the time
            line is said to be linear. In this case, the implementation of this method can be straightforward
            by calling the <see cref="M:NickLee.Views.Gantt.ITimeLine.GetUnits(System.DateTime,System.DateTime)" /> method. If the time line is not linear, this method should
            return the size of <paramref name="duration" /> as if the time was linear.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.ITimeLine.GetTime(System.DateTime,System.Double)">
            <summary>
            When implemented by a class, converts the specified distance to a date.
            </summary>
            <param name="reference">The reference time.</param>
            <param name="units">The double value to convert.</param>
            <returns>A <see cref="T:System.DateTime" /> structure that corresponds to the conversion
            of <paramref name="units" /> when the reference of the time is
            <paramref name="reference" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.ITimeLine.GetUnits(System.DateTime,System.DateTime)">
            <summary>
            When implemented by a class, gets the distance in pixels between two dates.
            </summary>
            <param name="startTime">The first time.</param>
            <param name="endTime">The second time.</param>
            <returns>A <see cref="T:System.Double" /> that corresponds to the
            distance in pixels between the two dates.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.ITimeLine.SetTimeInterval(System.DateTime,System.DateTime,System.Single)">
            <summary>
            When implemented by a class, changes the conversion of the time line to match the specified time interval.
            </summary>
            <param name="startTime">The start time of the time range.</param>
            <param name="endTime">The end time of the time range.</param>
            <param name="width">The width of the time line.</param>
            <remarks>After calling this method, the <see cref="P:NickLee.Views.Gantt.ITimeLine.FirstVisibleTime" /> should be
            <paramref name="startTime" />, and calling <see cref="M:NickLee.Views.Gantt.ITimeLine.GetUnits(System.DateTime,System.DateTime)" /> with
            <paramref name="startTime" /> and <paramref name="endTime" /> as parameters
            should return <paramref name="width" />.</remarks>
        </member>
        <member name="E:NickLee.Views.Gantt.ITimeLine.TimeLineChanged">
            <summary>
            Occurs when the time line has changed.
            </summary>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to handle the
            <strong>ITimeLine.TimeLineChanged</strong> event.
            </para>
            <code lang="C#">
            LinearTimeLine timeLine = new LinearTimeLine();
            timeLine.TimeLineChanged += new TimeLineChangeEventHandler(TimeLineChanged);

            private void TimeLineHasChanged(object sender, TimeLineChangeEventArgs args) {
            if (args.EventType == TimeLineEventType.FirstVisibleTimeChanged) {
            Console.WriteLine("The new first visible time is : " + args.FirstVisibleTime.ToString());
            } else {
            Console.WriteLine("The time line conversion has changed");
            }
            }
            </code>
            <code lang="Visual Basic">
            Dim WithEvents timeLine As new LinearTimeLine

            Private Sub TimeLineHasChanged(ByVal sender As Object, ByVal args As NickLee.Views.Gantt.TimeLineChangeEventArgs) Handles timeLine.TimeLineChanged
            If args.EventType = NickLee.Views.Gantt.TimeLineEventType.FirstVisibleTimeChanged Then
            Console.WriteLine("The new first visible time is : " + args.FirstVisibleTime.ToString())
            Else
            Console.WriteLine("The time line conversion has changed")
            End If
            End Sub
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.ITimeLine.TimeLineChanging">
            <summary>
            Occurs when the time line is changing.
            </summary>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to handle the
            <strong>ITimeLine.TimeLineChanged</strong> event.
            </para>
            <code lang="C#">
            LinearTimeLine timeLine = new LinearTimeLine();
            timeLine.TimeLineChanged += new TimeLineChangeEventHandler(TimeLineChanged);

            private void TimeLineHasChanged(object sender, TimeLineChangeEventArgs args) {
            if (args.EventType == TimeLineEventType.FirstVisibleTimeChanged) {
            Console.WriteLine("The new first visible time is : " + args.FirstVisibleTime.ToString());
            } else {
            Console.WriteLine("The time line conversion has changed");
            }
            }
            </code>
            <code lang="Visual Basic">
            Dim WithEvents timeLine As new LinearTimeLine

            Private Sub TimeLineHasChanged(ByVal sender As Object, ByVal args As NickLee.Views.Gantt.TimeLineChangeEventArgs) Handles timeLine.TimeLineChanged
            If args.EventType = NickLee.Views.Gantt.TimeLineEventType.FirstVisibleTimeChanged Then
            Console.WriteLine("The new first visible time is : " + args.FirstVisibleTime.ToString())
            Else
            Console.WriteLine("The time line conversion has changed")
            End If
            End Sub
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.ITimeLine.Adjusting">
            <summary>
            When implemented by a class, gets or sets a value indicating whether the time line is being adjusted.
            </summary>
            <value><see langword="true" /> if the time line is being adjusted; otherwise
            <see langword="false" />.</value>
            <remarks>A time line is said to be adjusting when its values are changing continuously over the time.
            For example, a control that is scrolling its time line using a scroll bar should set this property to
            <see langword="true" />. This will allow listeners of the time line to be informed that the time line
            is subject to futur changes.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.ITimeLine.FirstVisibleTime">
            <summary>
            When implemented by a class, gets or sets the first visible time of the time line.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure that represents the first visible time of the time line.</value>
            <remarks>
            <p>When the first visible time is changing, the corresponding events should be raised:
            before changing the value, the <see cref="E:NickLee.Views.Gantt.ITimeLine.TimeLineChanging" /> event must be raised;
            if the operation has not been canceled, the <see cref="E:NickLee.Views.Gantt.ITimeLine.TimeLineChanged" /> event must be
            raised after changing the value.</p>
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.ITimeLine.IsLinear">
            <summary>
            When implemented by a class, gets a value indicating whether the time line is linear.
            </summary>
            <value><see langword="true" /> if the time line is linear; Otherwise,
            <see langword="false" />.</value>
            <remarks>A time line that is linear uses a linear transformation to
            convert pixels to time and time to pixels.</remarks>
        </member>
        <member name="E:NickLee.Views.Gantt.ITimeScrollable.VisibleWidthChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.ITimeScrollable.VisibleWidth" /> property has changed.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.ITimeScrollable.VisibleWidth">
            <summary>
            When implemented by a class, gets the width of the visible area of the object.
            </summary>
            <value>An <see cref="T:System.Int32" /> that represents the width of the visible
            area.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.IGanttRowController">
            <summary>
            A specialization of the <see cref="T:NickLee.Views.Windows.Forms.IRowController" /> interface that handles
            an <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />.
            </summary>
            <remarks>To access the Gantt data model wrapped by this row controller,
            use the <see cref="P:NickLee.Views.Gantt.Windows.Forms.IGanttRowController.GanttModel" /> property.</remarks>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.IGanttRowController.GanttModelChanged">
            <summary>
            Occurs when <see cref="P:NickLee.Views.Gantt.Windows.Forms.IGanttRowController.GanttModel" /> has changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.IGanttRowController.GanttModelChanging">
            <summary>
            Occurs when <see cref="P:NickLee.Views.Gantt.Windows.Forms.IGanttRowController.GanttModel" /> is changing.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.IGanttRowController.GanttModel">
            <summary>
            When implemented by a class, gets or sets the Gantt model of the row controller.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> of the row controller.</value>
            <remarks>Before modifying the property, the <see cref="E:NickLee.Views.Gantt.Windows.Forms.IGanttRowController.GanttModelChanging" />
            event should be raised. After the modification has been done, the
            <see cref="E:NickLee.Views.Gantt.Windows.Forms.IGanttRowController.GanttModelChanged" /> event should be raised.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.HierarchyChart" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.AddSelectionInterval(System.Int32,System.Int32)">
            <summary>
            Adds the rows in the specified range to the selection.
            </summary>
            <remarks>The method selects the rows in the range defined by the
            two indexes. It is not necessary that <strong>index0</strong> is smaller that <strong>index1</strong>. The
            rows at index0 and index1 are also selected.</remarks>
            <param name="index0">The first index to add to the selection.</param>
            <param name="index1">The last index to add to the selection.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.BeginInit">
            <summary>
            Begins the initialization of a <strong>HierarchyChart</strong> that is used on a form or used
            by another component. The initialization occurs at runtime.
            </summary>
            <remarks>The Visual Studio .NET design environment uses this method
            to start the initialization of a component that is used on a form
            or used by another component. The <see cref="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.EndInit" /> method ends the
            initialization. The use of <strong>BeginInit</strong> and <strong>EndInit</strong> methods prevents the
            control from being used before it is fully initialized.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.BeginUpdate">
            <summary>
            Disables any redrawing of the control.
            </summary>
            <remarks>
            To maintain performance while several modifications are occuring on the control,
            call the <strong>BeginUpdate</strong> method. The <strong>BeginUpdate</strong> method
            prevents the control from painting until the <see cref="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.EndUpdate" /> method is called.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ClearSelection">
            <summary>
            Removes all the selected rows from the selection.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.CollapseAll">
            <summary>
            Collapses recursively the whole tree.
            </summary>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ExpandAll(System.Int32)" />
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ShowOutlineLevel(System.Int32)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.CollapseAll(System.Int32)">
            <summary>
            Collapses the specified row and all its descendant nodes.
            </summary>
            <param name="row">The zero-based index of the row.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.CollapseRow(System.Int32)">
            <summary>
            Collapses the specified row.
            </summary>
            <param name="row">The zero-based index of the row.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.CopyToClipboard">
            <summary>
            Copies the selected rows into the clipboard.
            </summary>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.GanttClipboard" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.CreateGanttTable">
            <summary>
            Creates the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttTable" /> contained in this chart.
            </summary>
            <returns>A new <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttTable" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.CreateScrollGanttSheet">
            <summary>
            Creates the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ScrollGanttSheet" /> contained in this chart.
            </summary>
            <returns>A new <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ScrollGanttSheet" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.CutToClipboard">
            <summary>
            Cuts the selected rows and places them into the clipboard.
            </summary>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.GanttClipboard" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.Dispose(System.Boolean)">
            <summary>
            Cleans up any resources being used by the <see cref="T:NickLee.Views.Windows.Forms.TreeTable" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.EndInit">
            <summary>
            Ends the initialization of a <strong>HierarchyChart</strong> that is used on a form or
            used by another component. The initialization occurs at runtime.
            </summary>
            <remarks>
            The Visual Studio .NET design environment uses this method to end
            the initialization of a component that is used on a form or used by
            another component. The <see cref="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.BeginInit" /> method starts the initialization.
            The use of <strong>BeginInit</strong> and <strong>EndInit</strong> methods prevents the control
            from being used before it is fully initialized.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.EndUpdate">
            <summary>
            Enables the redrawing of the control.
            </summary>
            <remarks>
            To maintain performance while several modifications are occuring on the control,
            call the <strong>BeginUpdate</strong> method. The <strong>BeginUpdate</strong> method
            prevents the control from painting until the <see cref="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.EndUpdate" /> method is called.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.EnsureRowVisible(System.Int32)">
            <summary>
            Scrolls the sheet vertically so that the specified row becomes
            visible.
            </summary>
            <param name="rowIndex">The row index.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ExpandAll">
            <summary>
            Expands recursively the whole tree.
            </summary>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.CollapseAll(System.Int32)" />
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ShowOutlineLevel(System.Int32)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ExpandAll(System.Int32)">
            <summary>
            Expands the specified row and all its descendant nodes.
            </summary>
            <param name="row">The zero-based index of the row.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ExpandRow(System.Int32)">
            <summary>
            Expands the specified row.
            </summary>
            <param name="row">The zero-based index of the row.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GetRowHeight(System.Int32)">
            <summary>
            Gets the height of the specified row.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <returns>The size of the specified row.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GetRowPosition(System.Int32)">
            <summary>
            Gets the vertical offset of the specified row.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <returns>The vertical offset of the specified row.</returns>
            <remarks>The <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.FirstVisibleRow" /> row position is <c>0</c>.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GetSelection">
            <summary>
            Gets the selected rows of the chart.
            </summary>
            <returns>An array of zero-based indexes of the selected rows.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GetValueAt(System.Int32)">
            <summary>
            Gets the value of the specified row.
            </summary>
            <param name="index">The zero-based index of the row.</param>
            <returns>The value of the specified row.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.IndexOfRow(System.Object)">
            <summary>
            Gets the zero-based index of the specified value in the row controller.
            </summary>
            <param name="row">The value.</param>
            <returns>The zero-based index of the specified value in the chart, or
            <c>-1</c> if <paramref name="row" /> is not in the chart.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.IsRowExpanded(System.Int32)">
            <summary>
            Gets a value indicating whether the specified row is expanded.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <returns>A value indicating whether the specified node is expanded.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.IsSelected(System.Int32)">
            <summary>
            Returns a value indicating whether the specified row is selected or not.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <returns>A value indicating whether the specified row is selected or not.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.OnFontChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">Control.OnFontChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.OnGanttModelChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttModelChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
            <remarks>Called when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttModel" /> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.OnGanttModelChanging(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttModelChanging" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
            <remarks>Called before the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttModel" /> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">Control.OnMouseWheel</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.OnResize(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)">Control.OnResize</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.OnRightToLeftChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">Control.OnRightToLeftChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.OnSplitterPositionChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SplitterPositionChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
            <remarks>Called when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SplitterPosition" /> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.PageDown">
            <summary>
            Scrolls down the chart of a whole page.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.PageUp">
            <summary>
            Scrolls up the chart of a whole page.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.PasteFromClipboard">
            <summary>
            Pastes the clipboard contents at the current selected row.
            </summary>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.GanttClipboard" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.RemoveSelectedRows">
            <summary>
            Deletes the selected rows.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.RemoveSelectionInterval(System.Int32,System.Int32)">
            <summary>
            Deselects the rows in the specified range.
            </summary>
            <remarks>The method deselects the rows in the range defined by the
            two indexes. It is not necessary that <strong>index0</strong> is smaller that <strong>index1</strong>. The
            rows at <strong>index0</strong> and <strong>index1</strong> are also deselected.</remarks>
            <param name="index0">The first index to remove from the selection.</param>
            <param name="index1">The last index to remove from the selection.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ResetActivityBarStyles">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ActivityBarStyles" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ResetActivityToolTip">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ActivityToolTip" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ResetBackColor">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.BackColor" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ResetForeColor">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ForeColor" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ResetGanttTableView">
            <summary>
            Resets the table view of this chart by removing the filter.
            </summary>
            <remarks>
            After calling this method, the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttTableNeedsMapping" /> property returns
            <see langword="false" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ResetMoveActivityCursor">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.MoveActivityCursor" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ResetMoveCursor">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.MoveCursor" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ResetSizeEastCursor">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SizeEastCursor" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ResetSizeWestCursor">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SizeWestCursor" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ResetTimeBounds">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeBounds" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ScrollDown">
            <summary>
            Scrolls down the chart of one row.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ScrollLeft">
            <summary>
            Scrolls the time line to the left.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ScrollRight">
            <summary>
            Scrolls the time line to the right.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ScrollUp">
            <summary>
            Scrolls up the chart of one row.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SetRowFilter(NickLee.Views.Windows.Forms.IRowFilter)">
            <summary>
            Sets the row filter used by the table of this chart.
            </summary>
            <param name="filter">An object implementing the <see cref="T:NickLee.Views.Windows.Forms.IRowFilter" /> interface.</param>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.RowFilter" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SetRowGroup(NickLee.Views.Windows.Forms.IRowGroup)">
            <summary>
            Sets the row group used by this chart.
            </summary>
            <param name="group">An object implementing the <see cref="T:NickLee.Views.Windows.Forms.IRowGroup" /> interface.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SetRowHeight(System.Int32,System.Int32)">
            <summary>
            Sets the height of the specified row.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <param name="height">The height of the row.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SetRowHeights(System.Int32)">
            <summary>
            Sets the height of all the rows.
            </summary>
            <param name="height">The new height.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="height" /> is
            negative.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SetSelected(System.Int32,System.Boolean)">
            <summary>
            Sets the selection state of a single row of the chart.
            </summary>
            <param name="row">The zero-based index of the row whose selection is being changed.</param>
            <param name="value">A value indicating whether the specified row should be selected or not.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SetSelectionInterval(System.Int32,System.Int32)">
            <summary>
            Sets the selection to the specified range.
            </summary>
            <remarks>The method sets the selection to the range defined by the
            two indexes. It is not necessary that <strong>index0</strong> is smaller that <strong>index1</strong>. The
            rows at <strong>index0</strong> and <strong>index1</strong> are also selected.</remarks>
            <param name="index0">The first index to select.</param>
            <param name="index1">The last index to select.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ShouldSerializeActivityBarStyles">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ActivityBarStyles" />
            property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ShouldSerializeAlternatingBackColor">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.AlternatingBackColor" />
            property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ShouldSerializeGroupBackColor">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GroupBackColor" />
            property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ShouldSerializeMoveActivityCursor">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.MoveActivityCursor" /> property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ShouldSerializeMoveCursor">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.MoveCursor" /> property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ShouldSerializePreferredRowHeight">
            <summary>
            Do not serialize when no value is set.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ShouldSerializeSizeEastCursor">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SizeEastCursor" /> property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ShouldSerializeSizeWestCursor">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SizeWestCursor" /> property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ShouldSerializeTimeBounds">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeBounds" />
            property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ShouldSerializeTimeScaleRows">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeScaleRows" />
            property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ShowOutlineLevel(System.Int32)">
            <summary>
            Displays a specified outline level.
            </summary>
            <remarks>The method will collapse and expand nodes so that only the
            specified outline level is visible. The level must be greater or equal to <strong>1</strong>.</remarks>
            <param name="level">The outline level to display.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SortRows(System.Collections.IComparer)">
            <summary>
            Sorts the table rows using an <see cref="T:System.Collections.IComparer" />.
            </summary>
            <param name="comparer">The <see cref="T:System.Collections.IComparer" /> implementation to use when
            comparing elements. </param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SortRows(System.String,System.Boolean)">
            <summary>
            Sorts the table rows using a mapping name.
            </summary>
            <param name="mappingName">The name of the property that will be used to sort
            the nodes.</param>
            <param name="ascending"><see langword="true" /> if the sort is ascending; <see langword="false" />
            otherwise.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SortRows(System.Object,System.Collections.IComparer,System.Int32)">
            <summary>
            Sorts the children rows of the specified node using an <see cref="T:System.Collections.IComparer" />.
            </summary>
            <param name="node">The parent of the nodes to sort.</param>
            <param name="comparer">The <see cref="T:System.Collections.IComparer" /> implementation to use when
            comparing elements. </param>
            <param name="depth">A depth of <strong>0</strong> will only sort the children of the specified node.
            A negative depth will sort the specified node and its children recursively. Any other value
            specifies the depth of the sort algorithm.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SortRows(System.Object,System.String,System.Boolean,System.Int32)">
            <summary>
            Sorts the children rows of the specified node using a mapping name.
            </summary>
            <param name="node">The parent of the nodes to sort.</param>
            <param name="mappingName">The name of the property that will be used to sort
            the nodes.</param>
            <param name="ascending"><see langword="true" /> if the sort is ascending; <see langword="false" />
            otherwise.</param>
            <param name="depth">A depth of <strong>0</strong> will only sort the children of the specified node.
            A negative depth will sort the specified node and its children recursively. Any other value
            specifies the depth of the sort algorithm.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SplitterDoubleClick(System.Object,System.EventArgs)">
            <summary>
            Invoked when the splitter was double clicked.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SplitterHasMoved(System.Object,System.Windows.Forms.SplitterEventArgs)">
            <summary>
            Invoked when the splitter moved.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ToImage">
            <summary>
            Creates and returns an <see cref="T:System.Drawing.Image" /> that represents the control.
            </summary>
            <returns>A <see cref="T:System.Drawing.Image" />.</returns>
            <remarks>The format of the returned image is
            <see cref="F:System.Drawing.Imaging.PixelFormat.Format32bppArgb" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ToImage(System.Drawing.Imaging.PixelFormat)">
            <summary>
            Creates and returns an <see cref="T:System.Drawing.Image" /> that represents the control.
            </summary>
            <param name="format">The format of the returned image.</param>
            <returns>A <see cref="T:System.Drawing.Image" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ZoomIn">
            <summary>
            Zooms in the time line.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ZoomOut">
            <summary>
            Zooms out the time line.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ZoomToFit(System.Boolean)">
            <summary>
            Zooms in or zooms out the sheet so that the time bounds fit the sheet.
            </summary>
            <remarks>This method zooms in or zooms out the sheet so
            that the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeBounds" /> fit the sheet. If the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeBounds" /> property has its default value, then the time
            bounds are computed dynamically to contain all the activities of the Gantt
            model. Calling this method will ensure that all activities of the Gantt model
            are displayed.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeBounds" />
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.HierarchyChart._scrollSheet">
            <summary>
            The scroll Gantt sheet.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.HierarchyChart._splitter">
            <summary>
            The splitter.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.HierarchyChart._table">
            <summary>
            The Gantt table.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ActivityBarHeightChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ActivityBarHeight" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ActivityToolTipChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ActivityToolTip" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.AdjustTimeScaleRows">
            <summary>
            Occurs when the rows of the time scale must be recomputed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.AlternatingBackColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.AlternatingBackColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.BackgroundColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.BackgroundColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.BeforeEditActivity">
            <summary>
            Event fired before the time interval of an activity is changed using the mouse pointer.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.BorderStyleChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.BorderStyle" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.CanEditActivitiesChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.CanEditActivities" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.CanMoveTableColumnsChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.CanMoveTableColumns" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.CanResizeRowsChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.CanResizeRows" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.CanResizeTableColumnsChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.CanResizeTableColumns" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.DrawGanttSheetRow">
            <summary>
            Occurs when the Gantt sheet draws rows in owner draw mode.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttSheetOwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows an event handler
            listening to the <see cref="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.DrawGanttSheetRow" /> event. The event handler draws
            selected rows using a specific font. Other rows are painted using the default
            painting algorithm.
            </para>
            <code lang="C#">
            // Attach the event handler
            GanttChart chart = new GanttChart();
            chart.GanttSheetOwnerDraw = true;
            chart.DrawGanttSheetRow += new DrawGanttSheetRowEventHandler(OnDrawSheetRow);

            // The code of the event handler
            private void OnDrawSheetRow(object sender, DrawGanttSheetRowArgs e) {
            if (!e.IsRowSelected)
            e.DrawRow();
            else {
            if (e.IsPaintingBackground)
            e.Graphics.FillRectangle(e.BackBrush, e.Bounds);
            else {
            Font font = new Font(e.GanttSheet.Font, FontStyle.Italic);
            e.DrawRow(e.Bounds, e.BackBrush, e.ForeBrush, font);
            font.Dispose();
            }
            }
            }
            </code>
            <code lang="Visual Basic">
            ' Attach the event handler
            Dim chart As New GanttChart()
            chart.GanttSheetOwnerDraw = True

            ' The code of the event handler
            Private Sub OnDrawSheetRow(ByVal sender As Object, ByVal e As DrawGanttSheetRowArgs) Handles chart.DrawGanttSheetRow
            If Not e.IsRowSelected Then
            e.DrawRow()
            Else
            If e.IsPaintingBackground Then
            e.Graphics.FillRectangle(e.BackBrush, e.Bounds)
            Else
            Dim font As New Font(e.GanttSheet.Font, FontStyle.Italic)
            e.DrawRow(e.Bounds, e.BackBrush, e.ForeBrush, font)
            font.Dispose()
            End If
            End If
            End Sub
            </code>
            </example>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttSheetOwnerDraw" />
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.DrawGanttTableCell">
            <summary>
            Occurs when the table draw cells in owner draw mode.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttTableOwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows an event handler
            listening to the <see cref="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.DrawGanttTableCell" /> event. The event handler draws
            expanded nodes with children using an specific font. Other nodes are painted using the default
            painting algorithm.
            </para>
            <code lang="C#">
            // Attach the event handler
            GanttChart chart = new GanttChart();
            chart.GanttTableOwnerDraw = true;
            chart.DrawGanttTableCell += new DrawTableCellEventHandler(OnDrawTableCell);

            // The code of the event handler
            private void OnDrawTableCell(object sender, DrawTableCellArgs e) {
            TreeTable table = e.TreeTable;
            object value = table.GetValueAt(e.Row);
            // If the node being drawn has children and is expanded, draw it using
            // an italic font.
            if (table.TreeModel.GetChildCount(value) != 0 &amp;&amp; table.IsRowExpanded(value)) {
            Font font = new Font(e.Font, e.Font.Style | FontStyle.Italic);
            e.DrawCell(e.Bounds, e.BackBrush, e.ForeBrush, font);
            } else
            e.DrawCell();
            }
            </code>
            <code lang="Visual Basic">
            ' Attach the event handler
            Dim chart As New GanttChart()
            chart.GanttTableOwnerDraw = True

            ' The code of the event handler
            Private Sub OnDrawTableCell(ByVal sender As Object, ByVal e As DrawTableCellArgs) Handles table.DrawGanttTableCell
            Dim table As TreeTable = e.TreeTable
            Dim value As Object = table.GetValueAt(e.Row)
            ' If the node being drawn has children and is expanded, draw it using
            ' an italic font.
            If table.TreeModel.GetChildCount(value) &lt;&gt; 0 And table.IsRowExpanded(value)) Then
            Dim font As New Font(e.Font, e.Font.Style | FontStyle.Italic)
            e.DrawCell(e.Bounds, e.BackBrush, e.ForeBrush, font)
            Else
            e.DrawCell()
            End If
            End Sub
            </code>
            </example>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttTableOwnerDraw" />
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.DrawTimeScaleRow">
            <summary>
            Occurs when the time scale draws rows in owner draw mode.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeScaleOwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeScaleOwnerDraw" />
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.EnableStyleToolTipsChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.EnableStyleToolTips" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttModelChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttModel" /> property has changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttModelChanging">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttModel" /> property is changing on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttSheetClick">
            <summary>
            Occurs when the Gantt sheet is clicked.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttSheetDoubleClick">
            <summary>
            Occurs when the Gantt sheet is double-clicked.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttSheetMouseDown">
            <summary>
            Occurs when the mouse pointer is over the Gantt sheet and the mouse button is pressed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttSheetMouseEnter">
            <summary>
            Occurs when the mouse pointer enters the Gantt sheet.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttSheetMouseHover">
            <summary>
            Occurs when the mouse pointer enters hovers over the Gantt sheet.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttSheetMouseLeave">
            <summary>
            Occurs when the mouse pointer leaves the Gantt sheet.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttSheetMouseMove">
            <summary>
            Occurs when the mouse pointer is moved over the Gantt sheet.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttSheetMouseUp">
            <summary>
            Occurs when the mouse pointer is over the Gantt sheet and a mouse button is released.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttSheetOwnerDrawChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttSheetOwnerDraw" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttTableClick">
            <summary>
            Occurs when the Gantt table is clicked.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttTableDoubleClick">
            <summary>
            Occurs when the Gantt table is double-clicked.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttTableMouseDown">
            <summary>
            Occurs when the mouse pointer is over the Gantt table and the mouse button is pressed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttTableMouseEnter">
            <summary>
            Occurs when the mouse pointer enters the Gantt table.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttTableMouseHover">
            <summary>
            Occurs when the mouse pointer enters hovers over the Gantt table.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttTableMouseLeave">
            <summary>
            Occurs when the mouse pointer leaves the Gantt table.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttTableMouseMove">
            <summary>
            Occurs when the mouse pointer is moved over the Gantt table.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttTableMouseUp">
            <summary>
            Occurs when the mouse pointer is over the Gantt table and a mouse button is released.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttTableOwnerDrawChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttTableOwnerDraw" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GridLineColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GridLineColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GridLineStyleChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GridLineStyle" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GroupBackColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GroupBackColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.HeaderBackColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.HeaderBackColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.HeaderFontChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.HeaderFont" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.HeaderForeColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.HeaderForeColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.InstantEditingChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.InstantEditing" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.MoveCursorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.MoveCursor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.MultiSelectChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.MultiSelect" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.NodeStateChanged">
            <summary>
            Event fired after a node has been expanded or collapsed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.NodeStateChanging">
            <summary>
            Occurs when a node is being expanded or collapsed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.QueryActivityEditable">
            <summary>
            Event fired before the time interval of an activity is changed using the mouse pointer to check
            if the activity can be edited.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.RowControllerChanged">
            <summary>
            Occurs when the row controller changes.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.RowHeadersVisibleChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.RowHeadersVisible" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.RowHeaderWidthChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.RowHeaderWidth" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SelectionBackColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SelectionBackColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SelectionChanged">
            <summary>
            Occurs when the selection has changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SelectionForeColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SelectionForeColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ShowSelectedRowsOnGanttSheetChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ShowSelectedRowsOnGanttSheet" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ShowToolTipsChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ShowTooltips" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SizeEastCursorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SizeEastCursor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SizeWestCursorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SizeWestCursor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SplitterPositionChanged">
            <summary>
            Occurs when the position of the splitter is changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeLineChanged">
            <summary>
            Occurs when the time line has changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeLineChanging">
            <summary>
            Occurs when the time line is changing.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeScaleClick">
            <summary>
            Occurs when the time scale is clicked.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeScaleDoubleClick">
            <summary>
            Occurs when the time scale is double-clicked.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeScaleMouseDown">
            <summary>
            Occurs when the mouse pointer is over the time scale and the mouse button is pressed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeScaleMouseEnter">
            <summary>
            Occurs when the mouse pointer enters the time scale.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeScaleMouseHover">
            <summary>
            Occurs when the mouse pointer enters hovers over the time scale.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeScaleMouseLeave">
            <summary>
            Occurs when the mouse pointer leaves the time scale.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeScaleMouseMove">
            <summary>
            Occurs when the mouse pointer is moved over the time scale.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeScaleMouseUp">
            <summary>
            Occurs when the mouse pointer is over the time scale and a mouse button is released.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeScaleRowsChanged">
            <summary>
            Occurs when the rows of the time scale have changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.VerticalGridToBottomChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.VerticalGridToBottom" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.VisibleDurationChanged">
            <summary>
            Occurs when the visible time duration has changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.VisibleWidthChanged">
            <summary>
            Occurs when the visible width has changed.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ActivityBarHeight">
            <summary>
            Gets or sets the height of activity bars.
            </summary>
            <value>The height of activity bars.</value>
            <remarks>The default value of this property is inherited from the font height
            of the control. To reset this property to its default value, set it to <strong>-1</strong>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ActivityBarStyles">
            <summary>
            Gets the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> that defines the graphical representation
            of activities in the sheet.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" /> that defines the graphical representation
            of activities in the sheet.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ActivityToolTip">
            <summary>
            Gets or sets the tooltip format for activities in the Gantt sheet.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the format of the tooltip that
            will be displayed when the mouse hovers activities in the Gantt sheet.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.AlternatingBackColor">
            <summary>
            Gets or sets the background color of alternating rows for a ledger appearance.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the alternating background color.
            The default value is the system color for windows (<see cref="P:System.Drawing.SystemColors.Window">SystemColors.Window</see>).
            </value>
            <remarks>
            By default, all rows have the same color (the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.BackColor" /> property of the control).
            When you set the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.AlternatingBackColor" /> to a new color, every other row is set to the new color.
            To reset the alternating background color
            to its default value, set the property to <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.AutoGrid">
            <summary>
            Indicates whether the grid of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> should be synchronized
            with the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" />.
            </summary>
            <value><see langword="true" /> if the grid of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> should be synchronized
            with the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" />; <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.BackColor">
            <summary>
            Gets or sets the background color of the chart.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of rows in the chart.
            The default value is the system color for windows (<see cref="P:System.Drawing.SystemColors.Window">SystemColors.Window</see>).
            </value>
            <remarks>
            Whereas the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.BackColor" /> property determines the color of rows
            in the chart, the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.BackgroundColor" /> determines
            the color of the non-row area, which is only visible when the chart
            is scrolled to the bottom, or if only a few rows
            are contained in the grid.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.BackgroundColor">
            <summary>
            Gets or sets the color of the non-row area of the chart.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the chart background.
            The default value is the <see cref="P:System.Drawing.SystemColors.AppWorkspace">SystemColors.AppWorkspace</see> color.
            </value>
            <remarks>
            The background color determines the color of the non-row area
            of the chart, which is only visible when no table is displayed
            by the <strong>TreeTable</strong>, or if the chart is scrolled to the bottom,
            or if only a few rows are contained in the chart.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.BackgroundImage">
            <summary>
            Gets or sets the background image of the control.
            </summary>
            <value>
            The background image of the control.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.BorderStyle">
            <summary>
            Gets or sets the border style of the control.
            </summary>
            <value>
            One of the <see cref="T:System.Windows.Forms.BorderStyle" /> values. The default value is <strong>Fixed3D</strong>.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.CanEditActivities">
            <summary>
            Indicates whether the user can modify the start time, end time or duration
            of the displayed activities using the mouse pointer.
            </summary>
            <value><see langword="true" /> if the user can modify the start time,
            end time or duration of the displayed activities with the mouse
            pointer; <see langword="false" /> otherwise. The default value is <see langword="true" />.</value>
            <remarks>
            When the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.CanEditActivities" /> property is set to <see langword="true" />, the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> allows the user to change the time interval
            (<see cref="P:NickLee.Views.Gantt.Data.IActivity.TimeInterval">IActivity.TimeInterval</see>, <see cref="P:NickLee.Views.Gantt.Data.IActivity.StartTime">IActivity.StartTime</see>
            or <see cref="P:NickLee.Views.Gantt.Data.IActivity.EndTime">IActivity.EndTime</see> properties) of the displayed activity using
            the mouse pointer. Dragging an activity bar allows you to move an activity
            in time. Clicking at the beginning or at the end allows you to resize the activity bar.
            When the value of this <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.InstantEditing" /> property is <see langword="true" />,
            the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> will make the modification of the time interval
            for each mouse move event.
            If the value of the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.InstantEditing" /> property is <see langword="false" />,
            then the modification of the time interval will be done when the user releases the mouse button.
            Until the user releases the mouse button a rectangle is
            displayed showing the new position in time of the activity.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.CanMoveTableColumns">
            <summary>
            Gets or sets a value indicating whether the user can move the columns of the table.
            </summary>
            <value><see langword="true" /> if the user can move the columns of the table,
            <see langword="false" /> otherwise.
            The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.CanPanTimeScale">
            <summary>
            Indicates whether the user can pan the time scale using the mouse pointer.
            </summary>
            <value><see langword="true" /> if the user can pan the time scale
            with the mouse pointer; <see langword="false" /> otherwise.
            The default value is <see langword="true" />.</value>
            <remarks>
            To perform a translation in the time scale, the user can click and drag the time scale.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.CanResizeRows">
            <summary>
            Gets or sets a value indicating whether the user can resize rows.
            </summary>
            <value><see langword="true" /> if the user can resize rows,
            <see langword="false" /> otherwise.
            The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.CanResizeTableColumns">
            <summary>
            Gets or sets a value indicating whether the user can resize the columns of the table.
            </summary>
            <value><see langword="true" /> if the user can resize columns,
            <see langword="false" /> otherwise.
            The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.CanZoomTimeScale">
            <summary>
            Indicates whether the user can zoom the time scale using the mouse pointer.
            </summary>
            <value><see langword="true" /> if the user can zoom the time scale
            with the mouse pointer; <see langword="false" /> otherwise.
            The default value is <see langword="true" />.</value>
            <remarks>
            To perform a zoom in the time scale, the user can double click
            the time scale, or press the control key while dragging the mouse over a time
            interval of the time scale.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.Controls">
            <summary>
            Redefines <see cref="P:System.Windows.Forms.Control.Controls">Control.Controls</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.CurrentRow">
            <summary>
            Gets or sets the current row of the row controller.
            </summary>
            <value>The zero-based index of the current row of the row controller.</value>
            <remarks>When changing its <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.CurrentRow" />, a row controller should raise the
            appropriate <see cref="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.RowControllerChanged" /> event.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.DateIndicators">
            <summary>
            Gets the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> displayed in the Gantt sheet.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection" /> that defines the date indicators displayed on the sheet.</value>
            <example>
            <para lang="C#,Visual Basic">
            The following example adds a <see cref="T:NickLee.Views.Gantt.Windows.Forms.CurrentDateIndicator" /> in a <see cref="T:NickLee.Views.Gantt.Windows.Forms.HierarchyChart" />.
            </para>
            <code lang="C#">
            public void AddDateIndicator(HierarchyChart chart) {
            CurrentDateIndicator dateIndicator = new CurrentDateIndicator();
            chart.DateIndicators.Add(dateIndicator);
            }
            </code>
            <code lang="Visual Basic">
            Sub AddDateIndicator(ByVal chart As HierarchyChart)
            Dim dateIndicator As CurrentDateIndicator = New CurrentDateIndicator
            chart.DateIndicators.Add(dateIndicator)
            End Sub
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
            <value>The default <see cref="T:System.Drawing.Size" /> of the control.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.EnableStyleToolTips">
            <summary>
            Indicates whether the tooltips should be taken from activity bar styles.
            </summary>
            <value><see langword="true" /> if the tooltips should be taken from activity bar styles;
            <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.FirstVisibleRow">
            <summary>
            Gets or sets the first visible row of the chart.
            </summary>
            <value>The zero-based index of the first visible row of the chart.</value>
            <remarks>When changing its <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.FirstVisibleRow" />, a row controller should raise the
            appropriate <see cref="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.RowControllerChanged" /> event.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.FirstVisibleTime">
            <summary>
            Gets or sets the first visible time of the chart.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure that represents the first visible time of the chart.</value>
            <remarks>The first visible time is the first date displayed by the control. When the value is changed
            a <see cref="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeLineChanging" /> and a <see cref="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeLineChanged" /> events are raised.</remarks>
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeLineChanging" />
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeLineChanged" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeLine" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.FlatStyle">
            <summary>
            Gets or sets the flat style appearance of the control.
            </summary>
            <value>One of the <see cref="T:System.Windows.Forms.FlatStyle" /> values.
            The default value is <b>Standard</b>.</value>
            <remarks>Setting this property to either <b>Flat</b> or <b>Popup</b>
            has the same effect.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.Font">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.Font">Control.Font</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ForeColor">
            <summary>
            Gets or sets the foreground color used for rows.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of rows.
            The default value is the value for window text (<see cref="P:System.Drawing.SystemColors.WindowText">SystemColors.WindowText</see>).</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttModel">
            <summary>
            Gets or sets the Gantt data model for the hierarchy chart.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> that contains the scheduling data to display in
            the chart.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttSheet">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> used to display the activity or
            reservations of the Gantt model.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> control used
            to display the activities or reservations of the Gantt model.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttSheetOwnerDraw">
            <summary>
            Gets or sets a value indicating whether the code that you
            provide draws the Gantt sheet rows or not.
            </summary>
            <value>
            <see langword="true" /> if Gantt sheet rows are to be drawn using custom user
            code; <see langword="false" /> otherwise.
            </value>
            <remarks>
            <p>When the <strong>GanttSheetOwnerDraw</strong> property is set to <see langword="true" />,
            you need to handle all the drawing of Gantt sheet rows. You can use
            this capability to create your own special display of Gantt sheet rows.
            Use the <see cref="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.DrawGanttSheetRow" /> event to handle the drawing of
            Gantt sheet rows.</p>
            <p>When the <strong>GanttSheetOwnerDraw</strong> property is set to <see langword="false" />,
            the <strong>DrawGanttSheetRow</strong> event is not raised.</p>
            </remarks>
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.DrawGanttSheetRow" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttTable">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttTable" /> used to display the activity or
            resource hierarchy of the Gantt model.
            </summary>
            <value>
            A <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttTable" /> control used to display the properties
            of the activities or resources of the Gantt model.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttTableNeedsMapping">
            <summary>
            Gets a value indicating whether the table of this chart is currently filtering or sorting
            the Gantt model.
            </summary>
            <value><see langword="true" /> if the table of this chart has a row filter, or sorting has been made
            on the table.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttTableOwnerDraw">
            <summary>
            Gets or sets a value indicating whether the code that you
            provide draws the table cells or not.
            </summary>
            <value>
            <see langword="true" /> if table cells are to be drawn using custom user
            code; <see langword="false" /> otherwise.
            </value>
            <remarks>
            <p>When the <strong>GanttTableOwnerDraw</strong> property is set to <see langword="true" />,
            you need to handle all drawing of table cells. You can use
            this capability to create your own special table cells
            displays. Use the <see cref="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.DrawGanttTableCell" /> event to handle the drawing of
            table cells.</p>
            <p>When the <strong>GanttTableOwnerDraw</strong> property is set to <see langword="false" />,
            the <strong>DrawGanttTableCell</strong> event is not raised.</p>
            </remarks>
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.DrawGanttTableCell" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GridLineColor">
            <summary>
            Gets or sets the color of the grid line.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the grid lines.
            The default value is the system color for controls (<see cref="P:System.Drawing.SystemColors.Control">SystemColors.Control</see>).
            </value>
            <remarks>
            No grid line is displayed if the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GridLineStyle" /> property
            is set to <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle">None</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GridLineStyle">
            <summary>
            Gets or sets the style of horizontal grid lines.
            </summary>
            <value>
            One of the <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle" /> values.
            The default value is <strong>Solid</strong>.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GroupBackColor">
            <summary>
            Gets or sets the background color of rows that represent groups of rows.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the background color for rows
            that represent groups of rows. The default value inherits from the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.BackColor" /> property.
            </value>
            <remarks>
            To reset the group background color to its default value, set the
            property to <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.HeaderBackColor">
            <summary>
            Gets or sets the background color used for
            row headers, column headers and time scale.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the background
            color of row headers, column headers and time scale. The default value is
            the color used for
            controls (<see cref="P:System.Drawing.SystemColors.Control">SystemColors.Control</see>).</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.HeaderFont">
            <summary>
            Gets or sets the font used for the column headers of the table and for the time scale.
            </summary>
            <value>
            The <see cref="T:System.Drawing.Font" /> object that represents the text of the
            column headers of the table and of the time scale.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.HeaderForeColor">
            <summary>
            Gets or sets the color used for text
            in column headers, row headers and time scale.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground
            color in column header, row headers and time scale.
            The default value is the value used
            for controls (<see cref="P:System.Drawing.SystemColors.ControlText">SystemColors.ControlText</see>).</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.InstantEditing">
            <summary>
            Indicates whether the modification of the time interval of an activity with the mouse
            pointer is instantaneous.
            </summary>
            <value>
            <see langword="true" /> if the modification of the time interval of an activity with the mouse
            pointer is done at each mouse move event; otherwise, <see langword="false" /> when the
            modification is done when the user releases the mouse button.
            The default value is <see langword="true" />.
            </value>
            <remarks>
            When the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.CanEditActivities" /> property is set to <see langword="true" />, the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> allows the user to change the time interval
            (<see cref="P:NickLee.Views.Gantt.Data.IActivity.TimeInterval">IActivity.TimeInterval</see>, <see cref="P:NickLee.Views.Gantt.Data.IActivity.StartTime">IActivity.StartTime</see>
            or <see cref="P:NickLee.Views.Gantt.Data.IActivity.EndTime">IActivity.EndTime</see> properties) of the displayed activity using
            the mouse pointer. Dragging an activity bar allows you to move an activity
            in time. Clicking at the beginning or at the end allows you to resize the activity bar.
            When the value of this property is <see langword="true" />, the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> will make the
            modification of the time interval for each mouse move event.
            If the value is <see langword="false" /> then the modification of the
            time interval will be done when the user releases the mouse button.
            Until the user releases the mouse button a rectangle is
            displayed showing the new position in time of the activity.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.InstantTimeScrolling">
            <summary>
            Gets or sets a value that indicates if scrolling with the time scrollbar or the time scale
            is instantaneous or delayed until the user releases the mouse.
            </summary>
            <value>
            A value that indicates whether the scrolling of the sheet by using
            the horizontal time scrollbar or the time scale is done
            every time the user moves the mouse or only when the
            user releases the mouse. The default value is <see langword="true" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.LastVisibleTime">
            <summary>
            Gets or sets the last visible time of the chart.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.MoveActivityCursor">
            <summary>
            Gets or sets the cursor used to move an activity.
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Cursor" /> displayed when the user moves an activity in the Gantt sheet.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.MoveCursor">
            <summary>
            Gets or sets the cursor used to indicate that an activity can be moved in the Gantt sheet.
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Cursor" /> used to indicate that an activity can be moved in the Gantt sheet.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.MultiSelect">
            <summary>
            Gets or sets a value indicating whether the user can select several rows.
            </summary>
            <value><see langword="true" /> if the user can select several rows;
            <see langword="false" /> otherwise.</value>
            <remarks>When this property is set to <see langword="true" />,
            the user cannot select several table rows interactively anymore.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.PaintTimeScaleTicks">
            <summary>
            Indicates whether the time scale displays ticks.
            </summary>
            <value><see langword="true" /> if the time scale displays ticks;
            <see langword="false" /> otherwise. The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.PreferredRowHeight">
            <summary>
            Gets or sets the preferred height for new rows.
            </summary>
            <value>The preferred value in pixel of a row height.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.RowCount">
            <summary>
            Gets the number of rows in the chart.
            </summary>
            <value>The number of rows in the chart.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.RowFilter">
            <summary>
            Gets or sets the row filter expression used by the table of this chart.
            </summary>
            <value>A <see cref="T:System.String" /> that represents a Boolean expression based on a Gantt
            entity to check if the table should include that specific entity. The default value
            is "" meaning that the table displays all the Gantt entities of the model.
            </value>
            <remarks>
            For details about the syntax of the expression used by this property, see XXXX.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to set a row filter
            that filters activities using different expressions.
            </para>
            <code lang="C#">
            GanttChart chart = new GanttChart();

            // To show activities whose start time is before the 1/1/2001
            chart.RowFilter = "StartTime &lt; #1/1/2001#";

            // To show milestone activities whose start time is before the 1/1/2001
            chart.RowFilter = "Milestone &amp;&amp; StartTime &lt; #1/1/2001#";

            // To show activities whose ID starts with "A"
            chart.RowFilter = "MID(ID, 0, 1) == 'A'";

            // To show activities whose completion is greater than 0.5
            chart.RowFilter = "WorkComplete &gt; 0.5";
            </code>
            <code lang="Visual Basic">
            Dim chart As New GanttChart

            ' To show activities whose start time is before the 1/1/2001
            chart.RowFilter = "StartTime &lt; #1/1/2001#"

            ' To show milestone activities whose start time is before the 1/1/2001
            chart.RowFilter = "Milestone &amp;&amp; StartTime &lt; #1/1/2001#"

            ' To show activities whose ID starts with "A"
            chart.RowFilter = "MID(ID, 0, 1) == 'A'"

            ' To show activities whose completion is greater than 0.5
            chart.RowFilter = "WorkComplete &gt; 0.5"
            </code>
            </example>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SetRowFilter(NickLee.Views.Windows.Forms.IRowFilter)" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.RowHeadersVisible">
            <summary>
            Gets or sets the visibility of row headers.
            </summary>
            <value>
            <see langword="true" /> if the row headers are visible,
            <see langword="false" /> otherwise.
            The default value is <see langword="true" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.RowHeaderWidth">
            <summary>
            Gets or sets the width of the row headers of the table.
            </summary>
            <value>The width of the row headers of the table.</value>
            <exception cref="T:System.ArgumentException">If the value is not a positive integer.</exception>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SelectionAdjusting">
            <summary>
            Gets or sets a value that indicates if the selection is currently being
            adjusted.
            </summary>
            <value><see langword="true" /> if the selection is currently being
            adjusted; <see langword="false" /> otherwise.
            </value>
            <remarks>The value is <see langword="true" /> when the mouse is dragged over the
            table to select rows.</remarks>
            <seealso cref="P:NickLee.Views.Windows.Forms.TableSelectionChangedEventArgs.IsAdjusting" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SelectionBackColor">
            <summary>
            Gets or sets the background color of selected rows.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the background color of selected rows.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SelectionForeColor">
            <summary>
            Gets or sets the foreground color of selected rows.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of selected rows.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ShowSelectedRowsOnGanttSheet">
            <summary>
            Indicates whether the selected rows should be painted on the Gantt sheet using the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SelectionBackColor" />.
            </summary>
            <value><see langword="true" /> if the selection should be painted on the Gantt sheet; otherwise, <see langword="false" />.
            The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ShowTooltips">
            <summary>
            Indicates whether the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> should display tooltips on activities.
            </summary>
            <value><see langword="true" /> if the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />
            must display tooltips on activities; <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SizeEastCursor">
            <summary>
            Gets or sets the cursor used to resize an activity to the east.
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Cursor" /> displayed when the user resizes the activity to the east.</value>
            <remarks>
            The cursor is used when the user resizes the activity to the east using the mouse pointer.
            Resizing the activity to the east means changing the end time of the activity, except if the
            control is in <strong>RightToLeft</strong> mode in which case it means changing the start time.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SizeWestCursor">
            <summary>
            Gets or sets the cursor used to resize an activity to the west.
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Cursor" /> displayed when the user resizes the activity to the west.</value>
            <remarks>
            The cursor is used when the user resizes the activity to the west using the mouse pointer.
            Resizing the activity to the west means changing the start time of the activity, except if the
            control is in <strong>RightToLeft</strong> mode in which case it means changing the end time.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SnapUnit">
            <summary>
            Gets or sets the time unit used for snapping date and time values.
            </summary>
            <value>
            A <see cref="T:NickLee.Views.Gantt.TimeUnit" /> that is used for snapping date and time values
            when the user changes the time interval of an activity using the mouse pointer.
            The default value is <strong>Hour</strong>.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SplitterPosition">
            <summary>
            Gets or sets the position of the splitter.
            </summary>
            <value>The position in pixels of the splitter.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The property value is negative.</exception>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.SplitterWidth">
            <summary>
            Gets or sets the width of the splitter.
            </summary>
            <value>The width in pixels of the splitter.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The property value is negative.</exception>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TableColumns">
            <summary>
            Gets the collection of columns of this table.
            </summary>
            <value>The collection of columns.</value>
            <remarks>By default, the table is built without any columns.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.Text">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.Text">Control.Text</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeBounds">
            <summary>
            Gets or sets the time bounds of the Gantt sheet.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.ITimeRange" /> that represents the maximum and minimum date-time value
            that the user can scroll in the Gantt sheet. The default value is dynamically computed
            using the minimum start time and maximum end time of activities in the
            Gantt data model attached to the Gantt sheet.
            </value>
            <remarks>Although this property sets the limit of time
            scrolling in the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />, some pixels can be added to this
            scrolling range using the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeMargin" /> property.
            Note that the user will still be able to scroll outside the value of this time
            range using the right and left arrows of the time scrollbar.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeMargin" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeGrids">
            <summary>
            Gets the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> displayed in the Gantt sheet.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection" /> that defines the grids displayed on the Gantt sheet.</value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.VerticalGridToBottom" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeLine">
            <summary>
            Gets or sets the <see cref="T:NickLee.Views.Gantt.ITimeLine" /> object that controls how the object is displaying time.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.ITimeLine" /> instance that controls how the object is displaying time.</value>
            <exception cref="T:System.ArgumentException">The propety value is not valid because it would
            create a circular list of <see cref="T:NickLee.Views.Gantt.ITimeLine" /> objects leading to a stack
            overflow.</exception>
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeLineChanging" />
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeLineChanged" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.FirstVisibleTime" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeMargin">
            <summary>
            Gets or sets the right and left margin added to the interval of the time range.
            </summary>
            <value>A integer value that represents the margin in pixels that will be added
            to the scrolling time bounds. The default value is <strong>50</strong>.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeBounds" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeScale">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> of the chart.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> object that
            represents the time scale of the chart.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeScaleOwnerDraw">
            <summary>
            Gets or sets a value indicating whether the code that you
            provide draws the time scale rows or not.
            </summary>
            <value>
            <see langword="true" /> if time scale rows are to be drawn using custom user
            code; <see langword="false" /> otherwise.
            </value>
            <remarks>
            <p>When the <strong>TimeScaleOwnerDraw</strong> property is set to <see langword="true" />,
            you need to handle all drawing of time scale rows. You can use
            this capability to create your own special display of time scale rows.
            Use the <see cref="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.DrawTimeScaleRow" /> event to handle the drawing of
            time scale rows.</p>
            <p>When the <strong>TimeScaleOwnerDraw</strong> property is set to <see langword="false" />,
            the <strong>DrawTimeScaleRow</strong> event is not raised.</p>
            </remarks>
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.DrawTimeScaleRow" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeScaleRowPolicy">
            <summary>
            Gets or sets the policy used to handle the time scale rows.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowPolicy" /> values. The default value is
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowPolicy">TwoRows</see>.</value>
            <remarks>This property is used each time the zoom factor of the time scale changes to recompute
            the new rows of the time scale.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.TimeScaleRows">
            <summary>
            Gets the rows of the time scale.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection" /> reference.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.VerticalGridToBottom">
            <summary>
            Gets or sets a value indicating if the vertical grid of the sheet should be painted on non-row
            area of the sheet.
            </summary>
            <value><see langword="true" /> if the vertical grid is also
            painted in non-row area of the sheet; <see langword="false" /> otherwise.
            The default value is <see langword="false" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.VisibleDuration">
            <summary>
            Gets the visible time duration displayed by the chart.
            </summary>
            <value>A <see cref="T:System.TimeSpan" /> that represents the visible time duration displayed
            by the chart.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.VisibleTimeInterval">
            <summary>
            Gets or sets the visible time interval of the control.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.VScrollBar">
            <summary>
            Gets or sets the visibility of the vertical scrollbar.
            </summary>
            <value>
            One of the <see cref="T:NickLee.Views.Windows.Forms.ScrollBarVisibility" /> values.
            The default value is <see cref="F:NickLee.Views.Windows.Forms.ScrollBarVisibility.AsNeeded" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ZoomAnimationSteps">
            <summary>
            Gets or sets the number of steps used for zoom animation.
            </summary>
            <value>The number of steps used for animation. The default value is
            <strong>0</strong> which means that there is no animation.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.DrawConstraintLinkEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.DrawConstraintLink" /> event
            of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" /> class.
            </summary>
            <remarks>A <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.DrawConstraintLink" /> event is raised to draw
            the links representing constraints between activities when the activity sheet is using owner drawing for constraints (see
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintsOwnerDraw" /> for details).
            It contains all the information needed for the user to paint the
            specified constraint.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows an event handler
            listening to the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.DrawConstraintLink" /> event. The event handler draws
            constraint links using a specific pen that depends on the constraint.
            </para>
            <code lang="C#">
            private void OnDrawConstraintLink(object sender, DrawConstraintLinkEventArgs e) {
            Pen pen = ComputePen(e.Constraint);
            e.DrawConstraintLink(pen, e.Brush);
            }
            </code>
            <code lang="Visual Basic">
            Private Sub OnDrawSheetRow(ByVal sender As Object, ByVal e As DrawConstraintLinkEventArgs)
            Dim pen as Pen = ComputePen(e.Constraint)
            e.DrawConstraintLink(pen, e.Brush)
            End Sub
            </code>
            </example>
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.DrawConstraintLink" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintsOwnerDraw" />
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ConstraintLinkEventArgs">
            <summary>
            A base class for the <see cref="T:NickLee.Views.Gantt.Windows.Forms.DrawConstraintLinkEventArgs" />
            and <see cref="T:NickLee.Views.Gantt.Windows.Forms.HitTestConstraintLinkEventArgs" /> classes.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ConstraintLinkEventArgs.ActivitySheet">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" /> that generated the event.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" /> being drawn.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ConstraintLinkEventArgs.Constraint">
            <summary>
            Gets the constraint that generated the event.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ConstraintLinkEventArgs.Points">
            <summary>
            Gets the default points of the constraint link.
            </summary>
            <value>An array of <see cref="T:System.Drawing.PointF" />.</value>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DrawConstraintLinkEventArgs.DrawConstraintLink">
            <summary>
            Draws the constraint link using the information provided in this instance.
            </summary>
            <remarks>Call this method to draw the constraint link if you want to keep
            the original drawing of the link, that is, as if the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintsOwnerDraw" />
            property was set to <see langword="false" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DrawConstraintLinkEventArgs.DrawConstraintLink(System.Drawing.Pen,System.Drawing.Brush)">
            <summary>
            Draws the constraint link with the specified parameters.
            </summary>
            <param name="pen">The <see cref="P:NickLee.Views.Gantt.Windows.Forms.DrawConstraintLinkEventArgs.Pen" /> that will be used to paint
            the constraint link. If this parameter is <see langword="null" />, the link will
            not be painted.</param>
            <param name="brush">The <see cref="P:NickLee.Views.Gantt.Windows.Forms.DrawConstraintLinkEventArgs.Brush" /> that will be used to paint the
            constraint link arrow. If this parameter is <see langword="null" />, the link arrow will
            not be painted.</param>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DrawConstraintLinkEventArgs.Brush">
            <summary>
            Gets the brush used to paint the constraint link arrow.
            </summary>
            <value>A <see cref="P:NickLee.Views.Gantt.Windows.Forms.DrawConstraintLinkEventArgs.Brush" /> instance.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DrawConstraintLinkEventArgs.Graphics">
            <summary>
            Gets the graphics surface to draw the constraint link on.
            </summary>
            <value>
            The <see cref="T:System.Drawing.Graphics" /> surface to draw the constraint link on.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DrawConstraintLinkEventArgs.Pen">
            <summary>
            Gets the pen used to paint the constraint link.
            </summary>
            <value>A <see cref="P:NickLee.Views.Gantt.Windows.Forms.DrawConstraintLinkEventArgs.Pen" /> instance.
            </value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.DrawBarStyleEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.DrawBarStyle" /> event of an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.DrawBarStyleEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.DrawBarStyle" /> event of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> class.
            </summary>
            <remarks>A <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.DrawBarStyle" /> event is
            raised to draw the bar style of owner draw <strong>ActivityBarStyle</strong> objects.
            It contains all the information needed for the user to paint the specified bar style,
            including the bar bounding box, and the <see cref="T:System.Drawing.Graphics" /> object on which
            the drawing should be done.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows an event handler
            listening to the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.DrawBarStyle" /> event. The event handler draws
            selected activities using a specific font. Other activities are painted using the default
            painting algorithm.
            </para>
            <code lang="C#">
            private void OnDrawStyle(object sender, DrawStyleEventArgs e) {
            if (e.IsRowSelected) {
            e.DrawBar();
            e.DrawStartSymbol();
            e.DrawEndSymbol();
            using (Font font = new Font(e.Context.Font, FontStyle.Italic)) {
            e.DrawLeftText(font, null);
            e.DrawRightText(font, null);
            e.DrawInsideText(font, null);
            e.DrawTopText(font, null);
            e.DrawBottomText(font, null);
            }
            } else
            e.DrawBarStyle();
            }
            </code>
            <code lang="Visual Basic">
            Private Sub OnDrawStyle(ByVal sender As Object, ByVal e As DrawStyleArgs)
            If e.IsRowSelected Then
            e.DrawBar()
            e.DrawStartSymbol()
            e.DrawEndSymbol()
            Dim font As New Font(e.Context.Font, FontStyle.Italic)
            e.DrawLeftText(font, Nothing)
            e.DrawRightText(font, Nothing)
            e.DrawInsideText(font, Nothing)
            e.DrawTopText(font, Nothing)
            e.DrawBottomText(font, Nothing)
            font.Dispose()
            Else
            e.DrawBarStyle()
            End If
            End Sub
            </code>
            </example>
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.DrawBarStyle" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.OwnerDraw" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DrawBarStyleEventArgs.DrawBar">
            <summary>
            Draws the activity bar using the information provided in this instance.
            </summary>
            <remarks>Call this method to draw the activity bar if you want to keep
            its original drawing.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DrawBarStyleEventArgs.DrawBarStyle">
            <summary>
            Draws the bar style using the information provided in this instance.
            </summary>
            <remarks>Call this method to draw the bar style if you want to keep
            the original drawing of the bar style, that is, as if the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.OwnerDraw" />
            property was set to <see langword="false" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DrawBarStyleEventArgs.DrawBottomText">
            <summary>
            Draws the activity bottom text using the information provided in this instance.
            </summary>
            <remarks>Call this method to draw the activity bottom text if you want to keep
            its original drawing.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DrawBarStyleEventArgs.DrawBottomText(System.Drawing.Font,System.Drawing.Brush)">
            <summary>
            Draws the activity bottom text using the specified parameters.
            </summary>
            <param name="font">The font that will be used to draw the text.</param>
            <param name="brush">The brush that will be used to draw the text.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DrawBarStyleEventArgs.DrawEndSymbol">
            <summary>
            Draws the activity end symbol using the information provided in this instance.
            </summary>
            <remarks>Call this method to draw the activity end symbol if you want to keep
            its original drawing.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DrawBarStyleEventArgs.DrawInsideText">
            <summary>
            Draws the activity inside text using the information provided in this instance.
            </summary>
            <remarks>Call this method to draw the activity inside text if you want to keep
            its original drawing.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DrawBarStyleEventArgs.DrawInsideText(System.Drawing.Font,System.Drawing.Brush)">
            <summary>
            Draws the activity inside text using the specified parameters.
            </summary>
            <param name="font">The font that will be used to draw the text.</param>
            <param name="brush">The brush that will be used to draw the text.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DrawBarStyleEventArgs.DrawLeftText">
            <summary>
            Draws the activity left text using the information provided in this instance.
            </summary>
            <remarks>Call this method to draw the activity left text if you want to keep
            its original drawing.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DrawBarStyleEventArgs.DrawLeftText(System.Drawing.Font,System.Drawing.Brush)">
            <summary>
            Draws the activity left text using the specified parameters.
            </summary>
            <param name="font">The font that will be used to draw the text.</param>
            <param name="brush">The brush that will be used to draw the text.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DrawBarStyleEventArgs.DrawRightText">
            <summary>
            Draws the activity right text using the information provided in this instance.
            </summary>
            <remarks>Call this method to draw the activity right text if you want to keep
            its original drawing.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DrawBarStyleEventArgs.DrawRightText(System.Drawing.Font,System.Drawing.Brush)">
            <summary>
            Draws the activity right text using the specified parameters.
            </summary>
            <param name="font">The font that will be used to draw the text.</param>
            <param name="brush">The brush that will be used to draw the text.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DrawBarStyleEventArgs.DrawStartSymbol">
            <summary>
            Draws the activity start symbol using the information provided in this instance.
            </summary>
            <remarks>Call this method to draw the activity start symbol if you want to keep
            its original drawing.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DrawBarStyleEventArgs.DrawTopText">
            <summary>
            Draws the activity top text using the information provided in this instance.
            </summary>
            <remarks>Call this method to draw the activity top text if you want to keep
            its original drawing.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DrawBarStyleEventArgs.DrawTopText(System.Drawing.Font,System.Drawing.Brush)">
            <summary>
            Draws the activity top text using the specified parameters.
            </summary>
            <param name="font">The font that will be used to draw the text.</param>
            <param name="brush">The brush that will be used to draw the text.</param>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DrawBarStyleEventArgs.ActivityBarStyle">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> being drawn.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> being drawn.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DrawBarStyleEventArgs.BarBounds">
            <summary>
            Gets the bounds of the activity bar being painted.
            </summary>
            <value>A <see cref="T:System.Drawing.RectangleF" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DrawBarStyleEventArgs.Context">
            <summary>
            Gets the context used to draw the bar style.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DrawBarStyleEventArgs.EndSymbolBounds">
            <summary>
            Gets the end symbol bounds of the activity bar being painted.
            </summary>
            <value>A <see cref="T:System.Drawing.RectangleF" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DrawBarStyleEventArgs.Graphics">
            <summary>
            Gets the graphics surface to draw the bar style on.
            </summary>
            <value>
            The <see cref="T:System.Drawing.Graphics" /> surface to draw the bar style on.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DrawBarStyleEventArgs.IsRowSelected">
            <summary>
            Indicates whether the row of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> being drawn is selected or not.
            </summary>
            <value><see langword="true" /> if the row being painted is selected; otherwise
            <see langword="false" />.
            </value>&gt;
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DrawBarStyleEventArgs.StartSymbolBounds">
            <summary>
            Gets the start symbol bounds of the activity bar being painted.
            </summary>
            <value>A <see cref="T:System.Drawing.RectangleF" /> structure.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.Design.GanttChartDesigner">
            <summary>
            Defines a designer for the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttChart" /> class.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.Design.HierarchyChartDesigner">
            <summary>
            Defines a designer for the <see cref="T:NickLee.Views.Gantt.Windows.Forms.HierarchyChart" /> control.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.HierarchyChartDesigner.#ctor">
            <summary>
            Creates and initializes a new instance
            of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.Design.HierarchyChartDesigner" /> class.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.Design.HierarchyChartDesigner.AssociatedComponents">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Design.ControlDesigner.AssociatedComponents">ControlDesigner.AssociatedComponents</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.Design.HierarchyChartDesigner.Verbs">
            <summary>
            This member overrides <see cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs">ComponentDesigner.Verbs</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.BeforeCreateConstraintEventHandler">
            <summary>
            Represents the method that handles an <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.BeforeCreateConstraint" /> event of an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Web.UI.ScrollReservationSheet">
            <summary>
            Defines a control that contains a <strong>TimeScale</strong> and an <strong>ReservationSheet</strong>.
            </summary>
            <remarks>
            <p>This control displays a <see cref="T:NickLee.Views.Gantt.Web.UI.TimeScale" /> control and
            a <see cref="T:NickLee.Views.Gantt.Web.UI.ReservationSheet" /> control.</p>
            <p><img src="scrollreservationsheet.png" /></p>
            </remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet">
            <summary>
            A component containing a <strong>TimeScale</strong> and a <strong>GanttSheet</strong>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.AddParsedSubObject(System.Object)">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.AddParsedSubObject(System.Object)">Control.AddParsedSubObject</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.Dispose">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.Dispose">Control.Dispose</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.EnsureRowVisible(System.Int32)">
            <summary>
            Scrolls the sheet so that the specified row becomes
            visible.
            </summary>
            <param name="rowIndex">The row index.</param>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="rowIndex" />
            is not between <strong>0</strong> and <strong>RowCount-1</strong>.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.FilterViewStateProperties(System.Collections.IDictionary)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Web.UI.ImageControl.FilterViewStateProperties(System.Collections.IDictionary)">ImageControl.FilterViewStateProperties</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.GenerateImageURL">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Web.UI.ImageControl.GenerateImageURL">ImageControl.GenerateImageURL</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.GetTime(System.DateTime,System.Double)">
            <summary>
            Converts the specified <see cref="T:System.Double" /> value to a date.
            </summary>
            <param name="reference">The reference time.</param>
            <param name="units">The double value to convert.</param>
            <returns>A <see cref="T:System.DateTime" /> structure that corresponds to the conversion
            of <paramref name="units" /> when the reference of the time is
            <paramref name="reference" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.GetUnits(System.DateTime,System.DateTime)">
            <summary>
            Gets the distance in pixels between two dates.
            </summary>
            <param name="startTime">The first time.</param>
            <param name="endTime">The second time.</param>
            <returns>A <see cref="T:System.Double" /> that corresponds to the
            distance in pixels between the two dates.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.LoadViewState(System.Object)">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.LoadViewState(System.Object)">Control.LoadViewState</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.OnClick(System.Web.UI.ImageClickEventArgs)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Web.UI.ImageControl.OnClick(System.Web.UI.ImageClickEventArgs)">ImageControl.OnClick</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.OnInit(System.EventArgs)">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)">Control.OnInit</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.OnLoad(System.EventArgs)">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)">Control.OnLoad</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.RenderImageMap(System.Web.UI.HtmlTextWriter)">
            <summary>
            This method overrides <see cref="M:NickLee.Views.Web.UI.ImageControl.RenderImageMap(System.Web.UI.HtmlTextWriter)">ImageControl.RenderImageMap</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.ResetActivityBarStyles">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.ActivityBarStyles" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.ScrollLeft">
            <summary>
            Scrolls the time line to the left.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.ScrollRight">
            <summary>
            Scrolls the time line to the right.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.SetTimeInterval(System.DateTime,System.DateTime,System.Single)">
            <summary>
            Changes the time conversion of the control to match the specified time range.
            </summary>
            <param name="startTime">The start time of the time range.</param>
            <param name="endTime">The end time of the time range.</param>
            <param name="width">The width of the time line.</param>
            <remarks>After calling this method, the <see cref="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.FirstVisibleTime" /> should be
            <paramref name="startTime" />, and calling <see cref="M:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.GetTime(System.DateTime,System.Double)" /> with
            <paramref name="startTime" /> and <paramref name="endTime" /> as parameters
            should return <paramref name="width" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.ZoomIn">
            <summary>
            Zooms in the time line.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.ZoomOut">
            <summary>
            Zooms out the time line.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.ZoomToFit">
            <summary>
            Zooms in or zooms out the sheet so that the time bounds fit the sheet.
            </summary>
            <remarks>This method zooms in or zooms out the sheet so
            that the <see cref="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TimeBounds" /> fit the sheet. If the
            <see cref="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TimeBounds" /> property has its default value, then the time
            bounds are computed dynamically to contain all the activities of the Gantt
            model. Calling this method will ensure that all activities of the Gantt model
            are displayed.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.TimeBounds" />
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.AdjustTimeScaleRows">
            <summary>
            Occurs when the rows of the time scale must be recomputed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.DrawGanttSheetRow">
            <summary>
            Occurs when the Gantt sheet draws rows in owner draw mode.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.GanttSheetOwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows an event handler
            listening to the <see cref="E:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.DrawGanttSheetRow" /> event. The event handler draws
            selected rows using a specific font. Other rows are painted using the default
            painting algorithm.
            </para>
            <code lang="C#">
            // Attach the event handler
            ScrollActivitySheet sheet = new ScrollActivitySheet();
            sheet.GanttSheetOwnerDraw = true;
            sheet.DrawGanttSheetRow += new DrawGanttSheetRowEventHandler(OnDrawSheetRow);

            // The code of the event handler
            private void OnDrawSheetRow(object sender, DrawGanttSheetRowArgs e) {
            if (!e.IsRowSelected)
            e.DrawRow();
            else {
            if (e.IsPaintingBackground)
            e.Graphics.FillRectangle(e.BackBrush, e.Bounds);
            else {
            Font font = new Font(e.GanttSheet.Font, FontStyle.Italic);
            e.DrawRow(e.Bounds, e.BackBrush, e.ForeBrush, font);
            font.Dispose();
            }
            }
            }
            </code>
            <code lang="Visual Basic">
            ' Attach the event handler
            Dim sheet As New ScrollActivitySheet()
            sheet.GanttSheetOwnerDraw = True

            ' The code of the event handler
            Private Sub OnDrawSheetRow(ByVal sender As Object, ByVal e As DrawGanttSheetRowArgs) Handles sheet.DrawGanttSheetRow
            If Not e.IsRowSelected Then
            e.DrawRow()
            Else
            If e.IsPaintingBackground Then
            e.Graphics.FillRectangle(e.BackBrush, e.Bounds)
            Else
            Dim font As New Font(e.GanttSheet.Font, FontStyle.Italic)
            e.DrawRow(e.Bounds, e.BackBrush, e.ForeBrush, font)
            font.Dispose()
            End If
            End If
            End Sub
            </code>
            </example>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.GanttSheetOwnerDraw" />
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.DrawTimeScaleRow">
            <summary>
            Occurs when the time scale draws rows in owner draw mode.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TimeScaleOwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TimeScaleOwnerDraw" />
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TimeLineChanged">
            <summary>
            Occurs when the time line has changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TimeLineChanging">
            <summary>
            Occurs when the time line is changing.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TimeScaleRowsChanged">
            <summary>
            Occurs when the rows of the time scale have changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.VisibleDurationChanged">
            <summary>
            Occurs when the visible time duration has changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.VisibleWidthChanged">
            <summary>
            Occurs when the visible width has changed.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.ActivityBarHeight">
            <summary>
            Gets or sets the height of activity bars.
            </summary>
            <value>The height of activity bars.</value>
            <remarks>The default value of this property is inherited from the font height
            of the control. To reset this property to its default value, set it to <strong>-1</strong>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.ActivityBarStyles">
            <summary>
            Gets the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> that defines the graphical representation
            of activities in the sheet.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" /> that defines the graphical representation
            of activities in the sheet.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.ActivityToolTip">
            <summary>
            Gets or sets the tooltip format for activities.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the format of the tooltip that
            will be displayed when the mouse hovers activities.</value>
            <remarks>The value of this property is an expression that enables an easy customization of the
            tooltip.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample sets the string displayed by the tooltip as the concatenation of
            the activity name, the activity start time and the activity duration.
            </para>
            <code lang="C#">
            GanttSheet sheet = ...
            sheet.ActivityToolTip = "'Name : ' + Name + '\\n' + {StartTime:m} + '(' + Duration + ')'";
            </code>
            <code lang="Visual Basic">
            Dim sheet As GanttSheet = ...
            sheet.ActivityToolTip = "'Name : ' + Name + '\\n' + {StartTime:m} + '(' + Duration + ')'"
            </code>
            <para lang="C#,Visual Basic">
            Note the use of the '{' and '}' characters to specify a format for the <strong>StartTime</strong>
            property (see <see cref="T:System.Globalization.DateTimeFormatInfo" /> for details about date formats).
            </para>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.AlternatingBackColor">
            <summary>
            Gets or sets the background color of alternating rows for a ledger appearance.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the alternating background color.
            The default value is the system color for windows (<see cref="P:System.Drawing.SystemColors.Window">SystemColors.Window</see>).
            </value>
            <remarks>
            By default, all rows have the same color (the <see cref="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.BackColor" /> property of the control).
            When you set the <see cref="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.AlternatingBackColor" /> to a new color, every other row is set to the new color.
            To reset the alternating background color
            to its default value, set the property to <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.AutoGrid">
            <summary>
            Indicates whether the grid of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> should be synchronized
            with the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" />.
            </summary>
            <value><see langword="true" /> if the grid of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> should be synchronized
            with the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" />; <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.BackColor">
            <summary>
            Gets or sets the background color of the chart.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of rows in the chart.
            The default value is the system color for windows (<see cref="P:System.Drawing.SystemColors.Window">SystemColors.Window</see>).
            </value>
            <remarks>
            While the <see cref="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.BackColor" /> property determines the color of rows
            in the chart, the <see cref="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.BackgroundColor" /> determines
            the color of the nonrow area, which is only visible when the chart
            is scrolled to the bottom, or if only a few rows
            are contained in the grid.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.BackgroundColor">
            <summary>
            Gets or sets the color of the nonrow area of the chart.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the chart background.
            The default value is the <see cref="P:System.Drawing.SystemColors.AppWorkspace">SystemColors.AppWorkspace</see> color.
            </value>
            <remarks>
            The background color determines the color of the nonrow area
            of the chart, which is only visible when no table is displayed
            by the <strong>TreeTable</strong>, or if the chart is scrolled to the bottom,
            or if only a few rows are contained in the chart.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.BorderColor">
            <summary>
            Overridden. See <see cref="P:System.Web.UI.WebControls.WebControl.BorderColor">WebControl.BorderColor</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.DateIndicators">
            <summary>
            Gets the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> displayed in the Gantt sheet.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection" /> that defines the date indicators displayed on the sheet.</value>
            <remarks>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> object is used to draw a vertical line on the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> to indicate a particular date, for example the current date.
            The <see cref="T:NickLee.Views.Gantt.Windows.Forms.CurrentDateIndicator" /> class is a subclass of <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" />
            that displays an auto-updated current date and time.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">
            The following example adds a <see cref="T:NickLee.Views.Gantt.Windows.Forms.CurrentDateIndicator" />
            in a <see cref="T:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet" />.
            </para>
            <code lang="C#">
            public void AddDateIndicator(ScrollGanttSheet sheet) {
            CurrentDateIndicator dateIndicator = new CurrentDateIndicator();
            sheet.DateIndicators.Add(dateIndicator);
            }
            </code>
            <code lang="Visual Basic">
            Sub AddDateIndicator(ByVal sheet As ScrollGanttSheet)
            Dim dateIndicator As CurrentDateIndicator = New CurrentDateIndicator
            sheet.DateIndicators.Add(dateIndicator)
            End Sub
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.EnableBarStyleViewState">
            <summary>
            Gets or sets a value indicating whether the <see cref="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.ActivityBarStyles" /> property
            should be serialized into the view state.
            </summary>
            <value><see langword="true" /> if the <strong>ActivityBarStyles</strong> property should
            be serialized into the view state; otherwise, <see langword="false" />.
            The default value is <see langword="true" />.</value>
            <remarks>If you do not modify the bar styles of the Gantt sheet during round-trips,
            you should set this property to <see langword="false" /> to speed up page loading.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.EnableDateIndicatorsViewState">
            <summary>
            Gets or sets a value indicating whether the <see cref="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.DateIndicators" /> property
            should be serialized into the view state.
            </summary>
            <value><see langword="true" /> if the <strong>DateIndicators</strong> property should
            be serialized into the view state; otherwise, <see langword="false" />.
            The default value is <see langword="true" />.</value>
            <remarks>If you do not modify the date indicators of the Gantt sheet during round-trips,
            you should set this property to <see langword="false" /> to speed up page loading.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.EnableStyleToolTips">
            <summary>
            Indicates whether the tooltips should be taken from activity bar styles.
            </summary>
            <value><see langword="true" /> if the tooltips should be taken from activity bar styles;
            <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.EnableTimeGridViewState">
            <summary>
            Gets or sets a value indicating whether the <see cref="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TimeGrids" /> property
            should be serialized into the view state.
            </summary>
            <value><see langword="true" /> if the <strong>TimeGrids</strong> property should
            be serialized into the view state; otherwise, <see langword="false" />.
            The default value is <see langword="true" />.</value>
            <remarks>If you do not modify the time grids of the Gantt sheet during round-trips,
            you should set this property to <see langword="false" /> to speed up page loading.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.EnableTimeScaleRowViewState">
            <summary>
            Gets or sets a value indicating whether the <see cref="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TimeScaleRows" /> property
            should be serialized into the view state.
            </summary>
            <value><see langword="true" /> if the <strong>TimeScaleRows</strong> property should
            be serialized into the view state; otherwise, <see langword="false" />.
            The default value is <see langword="true" />.</value>
            <remarks>If you do not modify the rows of the time scale during round-trips,
            you should set this property to <see langword="false" /> to speed up page loading.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.FirstVisibleTime">
            <summary>
            Gets or sets the first visible time of the control.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure that represents the first visible time of the control.</value>
            <remarks>The first visible time is the first date displayed by the control. When the value is changed,
            the <see cref="E:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TimeLineChanging" /> and <see cref="E:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TimeLineChanged" /> events are raised.</remarks>
            <seealso cref="E:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TimeLineChanging" />
            <seealso cref="E:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TimeLineChanged" />
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TimeLine" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.FlatStyle">
            <summary>
            Gets or sets the flat style appearance of the control.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Web.UI.FlatStyle" /> values.
            The default value is <strong>Standard</strong>.</value>
            <remarks>Setting this property to either <strong>Flat</strong> or <strong>Popup</strong>
            has the same effect.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.Font">
            <summary>
            Overridden. See <see cref="P:System.Web.UI.WebControls.WebControl.Font">WebControl.Font</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.ForeColor">
            <summary>
            Gets or sets the foreground color used for rows.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of rows.
            The default value is the value for window text (<see cref="P:System.Drawing.SystemColors.WindowText">SystemColors.WindowText</see>).</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.GanttModel">
            <summary>
            Gets the Gantt data model displayed by this control.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> that is displayed by this
            <see cref="T:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet" /> or <see langword="null" /> if the control
            is not connected to a row controller (<see cref="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.RowController" />).</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.GanttSheetOwnerDraw">
            <summary>
            Gets or sets a value indicating whether the code that you
            provide draws the Gantt sheet rows or not.
            </summary>
            <value>
            <see langword="true" /> if Gantt sheet rows are to be drawn using custom user
            code; <see langword="false" /> otherwise.
            </value>
            <remarks>
            <p>When the <strong>GanttSheetOwnerDraw</strong> property is set to <see langword="true" />,
            you need to handle all drawing of Gantt sheet rows. You can use
            this capability to create your own special Gantt sheet rows
            displays. Use the <see cref="E:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.DrawGanttSheetRow" /> event to handle the drawing of
            Gantt sheet rows.</p>
            <p>When the <strong>GanttSheetOwnerDraw</strong> property is set to <see langword="false" />,
            the <strong>DrawGanttSheetRow</strong> event is not raised.</p>
            </remarks>
            <seealso cref="E:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.DrawGanttSheetRow" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.GridLineColor">
            <summary>
            Gets or sets the color of the grid line.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the grid lines.
            The default value is the system color for controls (<see cref="P:System.Drawing.SystemColors.Control">SystemColors.Control</see>).
            </value>
            <remarks>
            No grid line is displayed if the <see cref="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.GridLineStyle" /> property
            is set to <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle">None</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.GridLineStyle">
            <summary>
            Gets or sets the style of horizontal grid lines.
            </summary>
            <value>
            One of the <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle" /> values.
            The default value is <strong>Solid</strong>.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.Height">
            <summary>
            Overridden. See <see cref="P:System.Web.UI.WebControls.WebControl.Height">WebControl.Height</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.HScrollBar">
            <summary>
            Gets or sets the visibility of the horizontal scrollbar.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Windows.Forms.ScrollBarVisibility" /> values.
            The default value is <see cref="F:NickLee.Views.Windows.Forms.ScrollBarVisibility.AsNeeded" />.
            </value>
            <remarks>When the property value is <strong>ScrollBarVisibility.AsNeeded</strong>,
            the scrollbar will always be visible.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.IsInteractive">
            <summary>
            Overridden. See <see cref="P:NickLee.Views.Web.UI.ImageControl.IsInteractive">ImageControl.IsInteractive</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.LastVisibleTime">
            <summary>
            Gets or sets the last visible time of the control.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.PaintTimeScaleTicks">
            <summary>
            Indicates whether the time scale displays ticks.
            </summary>
            <value><see langword="true" /> if the time scale displays ticks;
            <see langword="false" /> otherwise. The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.RowController">
            <summary>
            Gets or sets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.IGanttRowController" /> object used to handle the Gantt rows.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.IGanttRowController" /> object used to handle the Gantt rows.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.SelectionBackColor">
            <summary>
            Gets or sets the background color of selected rows.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the background color of selected rows.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.SelectionForeColor">
            <summary>
            Gets or sets the foreground color of selected rows.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of selected rows.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.ShowSelectedRowsOnGanttSheet">
            <summary>
            Indicates whether the selected rows should be painted on the Gantt sheet using the <see cref="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.SelectionBackColor" />.
            </summary>
            <value><see langword="true" /> if the selection should be painted on the Gantt sheet; <see langword="false" /> otherwise.
            The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.ShowTooltips">
            <summary>
            Indicates whether the <see cref="T:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet" /> should display tooltips on activities.
            </summary>
            <value><see langword="true" /> if the <see cref="T:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet" />
            must display tooltips on activities; <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TextFont">
            <summary>
            Gets or sets the font used by the control to draw text.
            </summary>
            <value>A <see cref="T:System.Drawing.Font" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TimeBounds">
            <summary>
            Gets or sets the time bounds of the Gantt sheet.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.ITimeRange" /> that represents the maximum and minimum date-time value
            that the user can scroll in the Gantt sheet. The default value is dynamically computed
            using the minimum start time and maximum end time of activities in the
            Gantt data model attached to the Gantt sheet.
            </value>
            <remarks>Although this property sets the limit of time
            scrolling in the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />, some pixels can be added to this
            scrolling range using the <see cref="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TimeMargin" /> property.
            Note that the user will still be able to scroll outside the value of this time
            range using the right and left arrows of the time scrollbar.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TimeMargin" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TimeGrids">
            <summary>
            Gets the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> displayed in the Gantt sheet.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection" /> that defines the grids displayed on the Gantt sheet.</value>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.VerticalGridToBottom" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TimeLine">
            <summary>
            Gets or sets the <see cref="T:NickLee.Views.Gantt.ITimeLine" /> object of the control.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.ITimeLine" /> object of the control.</value>
            <exception cref="T:System.ArgumentException">The property value is not valid because it would
            create a circular list of <see cref="T:NickLee.Views.Gantt.ITimeLine" /> objects leading to a stack
            overflow.</exception>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TimeMargin">
            <summary>
            Gets or sets the right and left margin added to the interval of the time range.
            </summary>
            <value>A integer value that represents the margin in pixels that will be added
            to the scrolling time bounds. The default value is <strong>50</strong>.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TimeBounds" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TimeScaleBackColor">
            <summary>
            Gets or sets the background color used for
            the time scale.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the background
            of the time scale. The default value is
            the color used for
            controls (<see cref="P:System.Drawing.SystemColors.Control">SystemColors.Control</see>).</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TimeScaleFont">
            <summary>
            Gets or sets the font used for the time scale.
            </summary>
            <value>
            The <see cref="T:System.Drawing.Font" /> object that represents the time scale text.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TimeScaleForeColor">
            <summary>
            Gets or sets the color used for the text in
            the time scale.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground
            color of the time scale.
            The default value is the value used
            for controls (<see cref="P:System.Drawing.SystemColors.ControlText">SystemColors.ControlText</see>).</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TimeScaleOwnerDraw">
            <summary>
            Gets or sets a value indicating whether the code that you
            provide draws the time scale rows or not.
            </summary>
            <value>
            <see langword="true" /> if time scale rows are to be drawn using custom user
            code; <see langword="false" /> otherwise.
            </value>
            <remarks>
            <p>When the <strong>TimeScaleOwnerDraw</strong> property is set to <see langword="true" />,
            you need to handle all drawing of time scale rows. You can use
            this capability to create your own special time scale rows
            displays. Use the <see cref="E:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.DrawTimeScaleRow" /> event to handle the drawing of
            time scale rows.</p>
            <p>When the <strong>TimeScaleOwnerDraw</strong> property is set to <see langword="false" />,
            the <strong>DrawTimeScaleRow</strong> event is not raised.</p>
            </remarks>
            <seealso cref="E:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.DrawTimeScaleRow" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TimeScaleRowPolicy">
            <summary>
            Gets or sets the policy used to handle the time scale rows.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowPolicy" /> values. The default value is
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowPolicy">TwoRows</see>.</value>
            <remarks>This property is used each time the zoom factor of the time scale changes to recompute
            the new rows of the time scale.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.TimeScaleRows">
            <summary>
            Gets the rows of the time scale.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection" /> reference.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.VerticalGridToBottom">
            <summary>
            Gets or sets a value indicating if the vertical grid of the sheet should be painted on the nonrow
            area of the sheet.
            </summary>
            <value><see langword="true" /> if the vertical grid is also
            painted in the nonrow area of the sheet; <see langword="false" /> otherwise.
            The default value is <see langword="false" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.VisibleDuration">
            <summary>
            Gets the visible time duration displayed by the control.
            </summary>
            <value>A <see cref="T:System.TimeSpan" /> structure that represents the visible time duration displayed by the control.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The property value is negative.</exception>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.VisibleTimeInterval">
            <summary>
            Gets or sets the visible time interval of the control.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.VScrollBar">
            <summary>
            Gets or sets the visibility of the vertical scrollbar.
            </summary>
            <value>
            One of the <see cref="T:NickLee.Views.Windows.Forms.ScrollBarVisibility" /> values.
            The default value is <see cref="F:NickLee.Views.Windows.Forms.ScrollBarVisibility.AsNeeded" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.Width">
            <summary>
            Overridden. See <see cref="P:System.Web.UI.WebControls.WebControl.Width">WebControl.Width</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScrollReservationSheet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Web.UI.ScrollScheduleSheet" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScrollReservationSheet.RenderImageMapAreas(System.Web.UI.HtmlTextWriter)">
            <summary>
            Is called to render image map areas.
            </summary>
            <param name="writer">The writer in which to put the image map areas.</param>
            <remarks>The implementation of this method create image map areas to display
            tooltips for visible reservations.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.ActivityToolTip" />
        </member>
        <member name="T:NickLee.Views.Gantt.Web.UI.Design.ScrollGanttSheetDesigner">
            <summary>
            Defines a designer for the <see cref="T:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet" /> class.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.Design.ScrollGanttSheetDesigner.Verbs">
            <summary>
            Overridden. See <see cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs">ComponentDesigner.Verbs</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Web.UI.Design.GanttSheetDesigner">
            <summary>
            Defines a designer for the <see cref="T:NickLee.Views.Gantt.Web.UI.GanttSheet" /> class.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.Design.GanttSheetDesigner.Verbs">
            <summary>
            Overridden. See <see cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs">ComponentDesigner.Verbs</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttModelAdapter">
            <summary>
            The <strong>GanttModelAdapter</strong> serves as a bridge between a <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet" />
            and a <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />.
            </summary>
            <remarks><p>A <strong>GanttModelAdapter</strong> is a subclass of <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModel" />
            dedicated to the <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet" /> class.</p>
            <p>As the table that represents activities in a <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet" /> contains both a <strong>Duration</strong>
            column and a <strong>EndTime</strong> column, the <see cref="P:NickLee.Views.Gantt.Data.GanttModelAdapter.UseDurationColumn" /> property can be used to specify which of
            these two columns must be used to compute the time interval of activities.</p>
            </remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.BaseGanttModelAdapter">
            <summary>
            The <strong>BaseGanttModelAdapter</strong> class is the base class for implementing bridges
            between a <see cref="T:System.Data.DataSet" /> and a <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />. It is marked as <see langword="abstract" />,
            and thus needs to be subclassed.
            </summary>
            <remarks><p>A <strong>BaseGanttModelAdapter</strong> is connected to a <strong>Gantt Data
            Model</strong> (see <see cref="P:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GanttModel" />). The <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.Fill(System.Data.DataSet)" /> method allows you to
            dump the data model into a <see cref="T:System.Data.DataSet" />. The <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.Update(System.Data.DataSet)" /> method updates the
            data model using the specified <strong>DataSet</strong>.</p>
            <p>The <strong>BaseGanttModelAdapter</strong> class can work with any <strong>DataSet</strong>,
            provided that you subclass it to override a set of methods that will allow the adapter to
            browse the dataset. The various overridables methods of the <strong>BaseGanttModelAdapter</strong>
            class have a default implementation that does nothing. This allow the user to implement only
            the methods that are required by its specific dataset schema. For example, if the user dataset doesn't
            use the concept of constraints between activities, it's not needed to override constraints related
            methods.</p>
            <p>Almost any kind of dataset can be used with the <strong>BaseGanttModelAdapter</strong> class. However,
            the dataset must respect the fact that the activities, resources, constraints or reservations of
            a gantt model must be located in different tables. Here are the methods that needs to be implemented
            to let the adapter know about the those tables: <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetTableForActivities(System.Data.DataSet)" />,
            <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetTableForResources(System.Data.DataSet)" />, <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetTableForConstraints(System.Data.DataSet)" />,
            <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetTableForReservations(System.Data.DataSet)" />. Note that the default implementation of these methods
            return <see langword="null" />, and thus, if your dataset contains only activities, you just have
            to override <strong>GetTableForActivities</strong>.</p>
            <p>Once the adapter knows about the tables, you need to override a few methods to fill the dataset rows
            and update the gantt model. Here are the methods that needs to be implemented to make the adapter
            able to fill rows and update the model: <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.FillActivity(System.Data.DataRow,NickLee.Views.Gantt.Data.IActivity,System.Int32)" />, <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.UpdateActivity(NickLee.Views.Gantt.Data.IActivity,System.Data.DataRow)" />,
            <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.FillResource(System.Data.DataRow,NickLee.Views.Gantt.Data.IResource,System.Int32)" />, <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.UpdateResource(NickLee.Views.Gantt.Data.IResource,System.Data.DataRow)" />, <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.FillConstraint(System.Data.DataRow,NickLee.Views.Gantt.Data.IConstraint)" />,
            <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.UpdateConstraint(NickLee.Views.Gantt.Data.IConstraint,System.Data.DataRow)" />, <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.FillReservation(System.Data.DataRow,NickLee.Views.Gantt.Data.IReservation)" />, <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.UpdateReservation(NickLee.Views.Gantt.Data.IReservation,System.Data.DataRow)" />.
            </p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows a simple implementation that
            only considers activities. The dataset must have a table named <strong>Tasks</strong>, with
            at least four columns: <strong>Id, Name, StartTime, Duration</strong>.
            </para>
            <code lang="C#">
            public class MyGanttModelAdapter : BaseGanttModelAdapter {
            protected override DataTable GetTableForActivities(DataSet dataset) {
            return dataset.Tables["Tasks"];
            }

            protected override void FillActivity(DataRow row, IActivity activity, int index) {
            row["Id"] = Int32.Parse(activity.ID);
            row["Name"] = activity.Name;
            row["StartTime"] = activity.StartTime;
            row["Duration"] = activity.Duration.Ticks;
            }

            protected override void UpdateActivity(IActivity activity, DataRow row) {
            activity.ID = row["Id"].ToString();
            activity.Name = row["Name"].ToString();
            activity.StartTime = (DateTime)row["StartTime"];
            activity.Duration = TimeSpan.FromTicks((long)row["Duration"]);
            }

            protected override string GetActivityID(DataRow row, DataRowVersion version) {
            return row["Id", version].ToString();
            }
            }
            </code>
            <code lang="Visual Basic">
            Public Class MyGanttModelAdapter
            Inherits BaseGanttModelAdapter

            Protected Overrides Function GetTableForActivities(ByVal dataset As DataSet) As DataTable
            Return dataset.Tables("Tasks")
            End Function

            Protected Overrides Sub FillActivity(ByVal row As DataRow, ByVal activity As IActivity, ByVal index As Integer)
            row("Id") = Int32.Parse(activity.ID)
            row("Name") = activity.Name
            row("StartTime") = activity.StartTime
            row("Duration") = activity.Duration.Ticks
            End Sub

            Protected Overrides Sub UpdateActivity(ByVal activity As IActivity, ByVal row As DataRow)
            activity.ID = row("Id").ToString()
            activity.Name = row("Name").ToString()
            activity.StartTime = CType(row("StartTime"), DateTime)
            activity.Duration = TimeSpan.FromTicks(CType(row("Duration"), Long))
            End Sub

            Protected Overrides Function GetActivityID(ByVal row As DataRow, ByVal version As DataRowVersion) As String
            Return row("Id",version).ToString()
            End Function
            End Class
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModelAdapter" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.CheckModifiedRows(System.Data.DataSet)">
            <summary>
            Check modified rows of the specified data set.
            </summary>
            <param name="dataset">A <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet" />.</param>
            <remarks>
            <p>Each row of the dataset whose <strong>RowState</strong> is <strong>Modified</strong>
            is checked to make sure the row is really modified. This is done by comparing the
            <strong>Original</strong> and <strong>Current</strong> versions of each row. If a row
            appears to be unchanged, its <see cref="M:System.Data.DataRow.AcceptChanges" /> method is called.</p>
            <p>Use this method after filling the dataset from a database. This will reduce the operations
            needed to update a data model.</p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.CheckUnchangedRows(System.Data.DataSet)">
            <summary>
            Deletes the rows whose <strong>RowState</strong> is <strong>Unchanged</strong>.
            </summary>
            <param name="dataset">A <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet" />.</param>
            <remarks>When filling a dataset using a <see cref="T:System.Data.Common.DbDataAdapter" />, the rows that were
            deleted from the database are still present in the dataset, with their <strong>RowState</strong> set to
            <see cref="F:System.Data.DataRowState.Unchanged" />. Calling this method will call <see cref="M:System.Data.DataRow.Delete" />
            for each row having its state set to <see cref="F:System.Data.DataRowState.Unchanged" />. As a result,
            you should use this method after filling a <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet" /> with a
            <see cref="T:System.Data.Common.DbDataAdapter" /> before calling <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.Update(System.Data.DataSet)" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.Fill(System.Data.DataSet)">
            <summary>
            Fills a <see cref="T:System.Data.DataSet" /> with the Gantt data model of the adapter.
            </summary>
            <param name="dataset">The <see cref="T:System.Data.DataSet" /> to fill.</param>
            <exception cref="T:System.NullReferenceException">The adapter is not connected to a
            Gantt data model.</exception>
            <remarks><p>You can use the <strong>Fill</strong> method multiple times on the
            same <strong>DataSet</strong>. In this case, existing rows will be merged
            with new rows.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to serialize and deserialize a <see cref="T:NickLee.Views.Gantt.Data.SimpleGanttModel" />
            in a <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet" />. Before calling the <strong>ReadDataSet</strong> method, the dataset
            should have be filled using a <see cref="T:System.Data.Common.DbDataAdapter" />. After calling the <strong>WriteDataSet</strong>
            method, the dataset should be used to update a database using a <see cref="T:System.Data.Common.DbDataAdapter" />.
            </para>
            <code lang="C#">
            public void ReadDataSet(IGanttModel model, GanttDataSet dataset) {
            GanttModelAdapter adapter = new GanttModelAdapter(model);
            adapter.Update(dataset);
            }

            public void WriteDataSet(IGanttModel model, GanttDataSet dataset) {
            GanttModelAdapter adapter = new GanttModelAdapter(model);
            adapter.Fill(dataset);
            }
            </code>
            <code lang="Visual Basic">
            Sub ReadDataSet(ByVal model As IGanttModel, ByVal dataset As GanttDataSet)
            Dim adapter As GanttModelAdapter  = New GanttModelAdapter(model)
            adapter.Update(dataset)
            End Sub

            Sub WriteDataSet(ByVal model As IGanttModel, ByVal dataset As GanttDataSet)
            Dim adapter As GanttModelAdapter  = New GanttModelAdapter(model)
            adapter.Fill(dataset)
            End Sub
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.FillActivity(System.Data.DataRow,NickLee.Views.Gantt.Data.IActivity,System.Int32)">
            <summary>
            Is called to fill a data row using the specified activity.
            </summary>
            <param name="row">The row that represents an activity.</param>
            <param name="activity">The activity.</param>
            <param name="index">The index of the activity.</param>
            <remarks>The default implementation throws an exception, and thus, you need
            to override this method when subclassing <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModelAdapter" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.FillConstraint(System.Data.DataRow,NickLee.Views.Gantt.Data.IConstraint)">
            <summary>
            Is called to fill a data row using the specified constraint.
            </summary>
            <param name="row">The row that represents a constraint.</param>
            <param name="constraint">The constraint.</param>
            <remarks>The default implementation throws an exception, and thus, you need
            to override this method when subclassing <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModelAdapter" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.FillReservation(System.Data.DataRow,NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Is called to fill a data row using the specified reservation.
            </summary>
            <param name="row">The row that represents a reservation.</param>
            <param name="reservation">The reservation.</param>
            <remarks>The default implementation throws an exception, and thus, you need
            to override this method when subclassing <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModelAdapter" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.FillResource(System.Data.DataRow,NickLee.Views.Gantt.Data.IResource,System.Int32)">
            <summary>
            Is called to fill a data row using the specified resource.
            </summary>
            <param name="row">The row that represents a resource.</param>
            <param name="resource">The resource.</param>
            <param name="index">The index of the resource.</param>
            <remarks>The default implementation throws an exception, and thus, you need
            to override this method when subclassing <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModelAdapter" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.FindActivity(System.Data.DataRow,System.Data.DataRowVersion)">
            <summary>
            Finds the activity of the gantt data model associated with the specified row.
            </summary>
            <param name="row">A row representing an activity.</param>
            <param name="version">The version of the row that should be used.</param>
            <returns>A reference to the activity associated with <paramref name="row" />,
            or <see langword="null" /> if no activity is associated with that row.</returns>
            <remarks>The default implementation calls the <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetActivityID(System.Data.DataRow,System.Data.DataRowVersion)" /> to
            retrieve the activity id.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.FindConstraint(System.Data.DataRow,System.Data.DataRowVersion)">
            <summary>
            Finds the constraint of the gantt data model associated with the specified row.
            </summary>
            <param name="row">A row representing a constraint.</param>
            <param name="version">The version of the row that should be used.</param>
            <returns>A reference to the constraint associated with <paramref name="row" />,
            or <see langword="null" /> if no constraint is associated with that row.</returns>
            <remarks>The default implementation calls the <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetConstraintFromActivityID(System.Data.DataRow,System.Data.DataRowVersion)" />
            and <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetConstraintToActivityID(System.Data.DataRow,System.Data.DataRowVersion)" /> to retrieve the source and destination
            activity ids.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.FindFromActivity(System.Data.DataRow,System.Data.DataRowVersion)">
            <summary>
            Finds the constraint source activity of the gantt data model associated with the specified row.
            </summary>
            <param name="row">A row representing a constraint.</param>
            <param name="version">The version of the row that should be used.</param>
            <returns>A reference to the constraint source activity associated with <paramref name="row" />.
            </returns>
            <remarks>The default implementation calls the <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetConstraintFromActivityID(System.Data.DataRow,System.Data.DataRowVersion)" />
            to retrieve the source activity id.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.FindReservation(System.Data.DataRow,System.Data.DataRowVersion)">
            <summary>
            Finds the reservation of the gantt data model associated with the specified row.
            </summary>
            <param name="row">A row representing a reservation.</param>
            <param name="version">The version of the row that should be used.</param>
            <returns>A reference to the reservation associated with <paramref name="row" />,
            or <see langword="null" /> if no reservation is associated with that row.</returns>
            <remarks>The default implementation calls the <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetReservationActivityID(System.Data.DataRow,System.Data.DataRowVersion)" />
            and <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetReservationResourceID(System.Data.DataRow,System.Data.DataRowVersion)" /> to retrieve the activity and resource ids.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.FindReservationActivity(System.Data.DataRow,System.Data.DataRowVersion)">
            <summary>
            Finds the reservation activity of the gantt data model associated with the specified row.
            </summary>
            <param name="row">A row representing a reservation.</param>
            <param name="version">The version of the row that should be used.</param>
            <returns>A reference to the reservation activity associated with <paramref name="row" />.
            </returns>
            <remarks>The default implementation calls the <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetReservationActivityID(System.Data.DataRow,System.Data.DataRowVersion)" />
            to retrieve the activity id.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.FindResource(System.Data.DataRow,System.Data.DataRowVersion)">
            <summary>
            Finds the resource of the gantt data model associated with the specified row.
            </summary>
            <param name="row">A row representing a resource.</param>
            <param name="version">The version of the row that should be used.</param>
            <returns>A reference to the resource associated with <paramref name="row" />,
            or <see langword="null" /> if no resource is associated with that row.</returns>
            <remarks>The default implementation calls the <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetResourceID(System.Data.DataRow,System.Data.DataRowVersion)" /> to
            retrieve the resource id.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.FindToActivity(System.Data.DataRow,System.Data.DataRowVersion)">
            <summary>
            Finds the constraint destination activity of the gantt data model associated with the specified row.
            </summary>
            <param name="row">A row representing a constraint.</param>
            <param name="version">The version of the row that should be used.</param>
            <returns>A reference to the constraint destination activity associated with <paramref name="row" />.
            </returns>
            <remarks>The default implementation calls the <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetConstraintToActivityID(System.Data.DataRow,System.Data.DataRowVersion)" />
            to retrieve the destination activity id.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetActivityID(System.Data.DataRow,System.Data.DataRowVersion)">
            <summary>
            Retrieves the activity id from the specified row.
            </summary>
            <param name="row">A row representing an activity.</param>
            <param name="version">The version of the row that should be used.</param>
            <returns>The id of the activity represented by <paramref name="row" />.</returns>
            <remarks>The default implementation throws an exception, and thus, you need
            to override this method when subclassing <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModelAdapter" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetActivityIndex(System.Data.DataRow,System.Data.DataRowVersion)">
            <summary>
            Retrieves the activity index from the specified row.
            </summary>
            <param name="row">A row representing an activity.</param>
            <param name="version">The version of the row that should be used.</param>
            <returns>The index of the activity represented by <paramref name="row" />.</returns>
            <remarks>The default implementation returns <strong>-1</strong>.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetComparerForActivities">
            <summary>
            Returns the comparer that will be used to sort activities according to
            their index.
            </summary>
            <returns>An <see cref="T:System.Collections.IComparer" /> instance.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetComparerForResources">
            <summary>
            Returns the comparer that will be used to sort resources according to
            their index.
            </summary>
            <returns>An <see cref="T:System.Collections.IComparer" /> instance.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetConstraintFromActivityID(System.Data.DataRow,System.Data.DataRowVersion)">
            <summary>
            Retrieves the source activity id from the specified row.
            </summary>
            <param name="row">A row representing a constraint.</param>
            <param name="version">The version of the row that should be used.</param>
            <returns>The source activity id of the constraint represented by <paramref name="row" />.</returns>
            <remarks>The default implementation throws an exception, and thus, you need
            to override this method when subclassing <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModelAdapter" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetConstraintToActivityID(System.Data.DataRow,System.Data.DataRowVersion)">
            <summary>
            Retrieves the destination activity id from the specified row.
            </summary>
            <param name="row">A row representing a constraint.</param>
            <param name="version">The version of the row that should be used.</param>
            <returns>The destination activity id of the constraint represented by <paramref name="row" />.</returns>
            <remarks>The default implementation throws an exception, and thus, you need
            to override this method when subclassing <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModelAdapter" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetParentActivityID(System.Data.DataRow,System.Data.DataRowVersion)">
            <summary>
            Retrieves the parent activity id from the specified row.
            </summary>
            <param name="row">A row representing an activity.</param>
            <param name="version">The version of the row that should be used.</param>
            <returns>The parent activity id of the activity represented by <paramref name="row" />.</returns>
            <remarks>The default implementation returns <see langword="null" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetParentResourceID(System.Data.DataRow,System.Data.DataRowVersion)">
            <summary>
            Retrieves the parent resource id from the specified row.
            </summary>
            <param name="row">A row representing a resource.</param>
            <param name="version">The version of the row that should be used.</param>
            <returns>The parent resource id of the resource represented by <paramref name="row" />.</returns>
            <remarks>The default implementation returns <see langword="null" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetReservationActivityID(System.Data.DataRow,System.Data.DataRowVersion)">
            <summary>
            Retrieves the activity id from the specified row.
            </summary>
            <param name="row">A row representing a reservation.</param>
            <param name="version">The version of the row that should be used.</param>
            <returns>The activity id of the reservation represented by <paramref name="row" />.</returns>
            <remarks>The default implementation throws an exception, and thus, you need
            to override this method when subclassing <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModelAdapter" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetReservationResourceID(System.Data.DataRow,System.Data.DataRowVersion)">
            <summary>
            Retrieves the resource id from the specified row.
            </summary>
            <param name="row">A row representing a reservation.</param>
            <param name="version">The version of the row that should be used.</param>
            <returns>The resource id of the reservation represented by <paramref name="row" />.</returns>
            <remarks>The default implementation throws an exception, and thus, you need
            to override this method when subclassing <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModelAdapter" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetResourceID(System.Data.DataRow,System.Data.DataRowVersion)">
            <summary>
            Retrieves the resource id from the specified row.
            </summary>
            <param name="row">A row representing a resource.</param>
            <param name="version">The version of the row that should be used.</param>
            <returns>The id of the resource represented by <paramref name="row" />.</returns>
            <remarks>The default implementation throws an exception, and thus, you need
            to override this method when subclassing <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModelAdapter" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetResourceIndex(System.Data.DataRow,System.Data.DataRowVersion)">
            <summary>
            Retrieves the resource index from the specified row.
            </summary>
            <param name="row">A row representing a resource.</param>
            <param name="version">The version of the row that should be used.</param>
            <returns>The index of the resource represented by <paramref name="row" />.</returns>
            <remarks>The default implementation returns <strong>-1</strong>.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetTableForActivities(System.Data.DataSet)">
            <summary>
            Returns the <see cref="T:System.Data.DataTable" /> that stores activities in the specified <see cref="T:System.Data.DataSet" />.
            </summary>
            <param name="dataset">A <see cref="T:System.Data.DataSet" /> instance.</param>
            <returns>The <see cref="T:System.Data.DataTable" /> that stores activities in <paramref name="dataset" />.</returns>
            <remarks>The default implementation returns null.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetTableForConstraints(System.Data.DataSet)">
            <summary>
            Returns the <see cref="T:System.Data.DataTable" /> that stores constraints in the specified <see cref="T:System.Data.DataSet" />.
            </summary>
            <param name="dataset">A <see cref="T:System.Data.DataSet" /> instance.</param>
            <returns>The <see cref="T:System.Data.DataTable" /> that stores constraints in <paramref name="dataset" />.</returns>
            <remarks>The default implementation returns null.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetTableForReservations(System.Data.DataSet)">
            <summary>
            Returns the <see cref="T:System.Data.DataTable" /> that stores reservations in the specified <see cref="T:System.Data.DataSet" />.
            </summary>
            <param name="dataset">A <see cref="T:System.Data.DataSet" /> instance.</param>
            <returns>The <see cref="T:System.Data.DataTable" /> that stores reservations in <paramref name="dataset" />.</returns>
            <remarks>The default implementation returns null.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetTableForResources(System.Data.DataSet)">
            <summary>
            Returns the <see cref="T:System.Data.DataTable" /> that stores resources in the specified <see cref="T:System.Data.DataSet" />.
            </summary>
            <param name="dataset">A <see cref="T:System.Data.DataSet" /> instance.</param>
            <returns>The <see cref="T:System.Data.DataTable" /> that stores resources in <paramref name="dataset" />.</returns>
            <remarks>The default implementation returns null.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.HasSameActivity(NickLee.Views.Gantt.Data.IReservation,System.Data.DataRow)">
            <summary>
            Indicates whether a <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> and a <see cref="T:System.Data.DataRow" /> representing a reservation
            have the same activity.
            </summary>
            <param name="reservation">A reservation.</param>
            <param name="row">A row.</param>
            <returns><see langword="true" /> if <paramref name="reservation" /> and
            <paramref name="row" /> have the same activity.</returns>
            <remarks>The default implementation calls the <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetReservationActivityID(System.Data.DataRow,System.Data.DataRowVersion)" />
            to retrieve the activity id.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.HasSameFromAndToActivities(NickLee.Views.Gantt.Data.IConstraint,System.Data.DataRow)">
            <summary>
            Indicates whether a <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> and a <see cref="T:System.Data.DataRow" /> representing a constraint
            have the same source and destination activities.
            </summary>
            <param name="constraint">A constraint.</param>
            <param name="row">A row.</param>
            <returns><see langword="true" /> if <paramref name="constraint" /> and
            <paramref name="row" /> have the same source and destination activities.</returns>
            <remarks>The default implementation calls the <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetConstraintFromActivityID(System.Data.DataRow,System.Data.DataRowVersion)" />
            and <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GetConstraintFromActivityID(System.Data.DataRow,System.Data.DataRowVersion)" /> to retrieve the activity ids.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.Update(System.Data.DataSet)">
            <summary>
            Updates the Gantt data model of the adapter using the specified <see cref="T:System.Data.DataSet" />.
            </summary>
            <param name="dataset">The <see cref="T:System.Data.DataSet" /> that will be used to fill the
            Gantt data model of the adapter.</param>
            <exception cref="T:System.NullReferenceException">The adapter is not connected to a
            Gantt data model.</exception>
            <remarks>
            <p>The <strong>Update</strong> method scans the rows of the specified dataset and updates the
            data model accordingly to the <see cref="P:System.Data.DataRow.RowState" /> property of each row.</p>
            <p>The following table describes the action taken regarding each row state:
            <list type="table">
            <listheader>
            <term>Row State</term>
            <description>Action</description>
            </listheader>
            <item>
            <term>Unchanged</term>
            <description>Nothing.</description>
            </item>
            <item>
            <term>Modified</term>
            <description>The row is modified, the adapter must find and update the corresponding
            Gantt object in the specified Gantt model.</description>
            </item>
            <item>
            <term>Added</term>
            <description>The row has been added to the table, the adapter must create the corresponding
            Gantt object in the specified Gantt model.</description>
            </item>
            <item>
            <term>Deleted</term>
            <description>The row has been deleted from the table, the adapter must find and delete
            the corresponding Gantt object in the specified Gantt model.</description>
            </item>
            </list></p>
            <p>Note that if <see cref="P:System.Data.DataRow.RowState" /> property of a row is <strong>Unchanged</strong>,
            the adapter will not handle the row. This is important because the default behavior of data adapters
            when filling datasets is to set their row states to <strong>Unchanged</strong>. To change this behavior,
            set the <see cref="P:System.Data.Common.DataAdapter.AcceptChangesDuringFill" /> property of the adapters to <see langword="false" />.</p>
            <p><see cref="M:System.Data.DataSet.AcceptChanges" /> is called after updating the data model. Because of this,
            a second call to this method with the same dataset will have no effect on the Gantt data model.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to serialize and deserialize a <see cref="T:NickLee.Views.Gantt.Data.SimpleGanttModel" />
            in a <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet" />. Before calling the <strong>ReadDataSet</strong> method, the dataset
            should have be filled using a <see cref="T:System.Data.Common.DbDataAdapter" />. After calling the <strong>WriteDataSet</strong>
            method, the dataset should be used to update a database using a <see cref="T:System.Data.Common.DbDataAdapter" />.
            </para>
            <code lang="C#">
            public void ReadDataSet(IGanttModel model, GanttDataSet dataset) {
            GanttModelAdapter adapter = new GanttModelAdapter(model);
            adapter.Update(dataset);
            }

            public void WriteDataSet(IGanttModel model, GanttDataSet dataset) {
            GanttModelAdapter adapter = new GanttModelAdapter(model);
            adapter.Fill(dataset);
            }
            </code>
            <code lang="Visual Basic">
            Sub ReadDataSet(ByVal model As IGanttModel, ByVal dataset As GanttDataSet)
            Dim adapter As GanttModelAdapter  = New GanttModelAdapter(model)
            adapter.Update(dataset)
            End Sub

            Sub WriteDataSet(ByVal model As IGanttModel, ByVal dataset As GanttDataSet)
            Dim adapter As GanttModelAdapter  = New GanttModelAdapter(model)
            adapter.Fill(dataset)
            End Sub
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.UpdateActivity(NickLee.Views.Gantt.Data.IActivity,System.Data.DataRow)">
            <summary>
            Is called to update an activity using the specified data row.
            </summary>
            <param name="activity">The activity to update.</param>
            <param name="row">The row that represents an activity.</param>
            <remarks>The default implementation throws an exception, and thus, you need
            to override this method when subclassing <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModelAdapter" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.UpdateConstraint(NickLee.Views.Gantt.Data.IConstraint,System.Data.DataRow)">
            <summary>
            Is called to update a constraint using the specified data row.
            </summary>
            <param name="constraint">The constraint to update.</param>
            <param name="row">The row that represents a constraint.</param>
            <remarks>The default implementation throws an exception, and thus, you need
            to override this method when subclassing <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModelAdapter" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.UpdateReservation(NickLee.Views.Gantt.Data.IReservation,System.Data.DataRow)">
            <summary>
            Is called to update a reservation using the specified data row.
            </summary>
            <param name="reservation">The reservation to update.</param>
            <param name="row">The row that represents a reservation.</param>
            <remarks>The default implementation throws an exception, and thus, you need
            to override this method when subclassing <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModelAdapter" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.UpdateResource(NickLee.Views.Gantt.Data.IResource,System.Data.DataRow)">
            <summary>
            Is called to update a resource using the specified data row.
            </summary>
            <param name="resource">The resource to update.</param>
            <param name="row">The row that represents a resource.</param>
            <remarks>The default implementation throws an exception, and thus, you need
            to override this method when subclassing <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModelAdapter" />.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.AcceptChangesDuringUpdate">
            <summary>
            Gets or sets a value indicating whether <see cref="M:System.Data.DataSet.AcceptChanges" /> is called on the dataset during Update operations.
            </summary>
            <value><see langword="true" /> if <see cref="M:System.Data.DataSet.AcceptChanges" /> is called on the dataset during Update operations;
            Otherwise, <see langword="false" />. The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.GanttModel">
            <summary>
            Gets or sets the Gantt data model connected to this adapter.
            </summary>
            <value>A Gantt data model.</value>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelAdapter.CheckModifiedRows(NickLee.Views.Gantt.Data.GanttDataSet)">
            <summary>
            Check modified rows of the specified data set.
            </summary>
            <param name="dataset">A <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet" />.</param>
            <remarks>
            <p>Each row of the dataset whose <strong>RowState</strong> is <strong>Modified</strong>
            is checked to make sure the row is really modified. This is done by comparing the
            <strong>Original</strong> and <strong>Current</strong> versions of each row. If a row
            appears to be unchanged, its <see cref="M:System.Data.DataRow.AcceptChanges" /> method is called.</p>
            <p>Use this method after filling the dataset from a database. This will reduce the operations
            needed to update a data model.</p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelAdapter.CheckUnchangedRows(NickLee.Views.Gantt.Data.GanttDataSet)">
            <summary>
            Deletes the rows whose <strong>RowState</strong> is <strong>Unchanged</strong>.
            </summary>
            <param name="dataset">A <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet" />.</param>
            <remarks>When filling a dataset using a <see cref="T:System.Data.Common.DbDataAdapter" />, the rows that were
            deleted from the database are still present in the dataset, with their <strong>RowState</strong> set to
            <see cref="F:System.Data.DataRowState.Unchanged" />. Calling this method will call <see cref="M:System.Data.DataRow.Delete" />
            for each row having its state set to <see cref="F:System.Data.DataRowState.Unchanged" />. As a result,
            you should use this method after filling a <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet" /> with a
            <see cref="T:System.Data.Common.DbDataAdapter" /> before calling <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModelAdapter.Update(System.Data.DataSet)" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelAdapter.FillActivity(System.Data.DataRow,NickLee.Views.Gantt.Data.IActivity,System.Int32)">
            <summary>
            Is called to fill a data row using the specified activity.
            </summary>
            <param name="row">The row that represents an activity.</param>
            <param name="activity">The activity.</param>
            <param name="index">The index of the activity.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelAdapter.FillConstraint(System.Data.DataRow,NickLee.Views.Gantt.Data.IConstraint)">
            <summary>
            Is called to fill a data row using the specified constraint.
            </summary>
            <param name="row">The row that represents a constraint.</param>
            <param name="constraint">The constraint.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelAdapter.FillReservation(System.Data.DataRow,NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Is called to fill a data row using the specified reservation.
            </summary>
            <param name="row">The row that represents a reservation.</param>
            <param name="reservation">The reservation.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelAdapter.FillResource(System.Data.DataRow,NickLee.Views.Gantt.Data.IResource,System.Int32)">
            <summary>
            Is called to fill a data row using the specified resource.
            </summary>
            <param name="row">The row that represents a resource.</param>
            <param name="resource">The resource.</param>
            <param name="index">The index of the resource.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelAdapter.GetActivityID(System.Data.DataRow,System.Data.DataRowVersion)">
            <summary>
            Retrieves the activity id from the specified row.
            </summary>
            <param name="row">A row representing an activity.</param>
            <param name="version">The version of the row that should be used.</param>
            <returns>The id of the activity represented by <paramref name="row" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelAdapter.GetActivityIndex(System.Data.DataRow,System.Data.DataRowVersion)">
            <summary>
            Retrieves the activity index from the specified row.
            </summary>
            <param name="row">A row representing an activity.</param>
            <param name="version">The version of the row that should be used.</param>
            <returns>The index of the activity represented by <paramref name="row" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelAdapter.GetConstraintFromActivityID(System.Data.DataRow,System.Data.DataRowVersion)">
            <summary>
            Retrieves the source activity id from the specified row.
            </summary>
            <param name="row">A row representing a constraint.</param>
            <param name="version">The version of the row that should be used.</param>
            <returns>The source activity id of the constraint represented by <paramref name="row" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelAdapter.GetConstraintToActivityID(System.Data.DataRow,System.Data.DataRowVersion)">
            <summary>
            Retrieves the destination activity id from the specified row.
            </summary>
            <param name="row">A row representing a constraint.</param>
            <param name="version">The version of the row that should be used.</param>
            <returns>The destination activity id of the constraint represented by <paramref name="row" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelAdapter.GetParentActivityID(System.Data.DataRow,System.Data.DataRowVersion)">
            <summary>
            Retrieves the parent activity id from the specified row.
            </summary>
            <param name="row">A row representing an activity.</param>
            <param name="version">The version of the row that should be used.</param>
            <returns>The parent activity id of the activity represented by <paramref name="row" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelAdapter.GetParentResourceID(System.Data.DataRow,System.Data.DataRowVersion)">
            <summary>
            Retrieves the parent resource id from the specified row.
            </summary>
            <param name="row">A row representing a resource.</param>
            <param name="version">The version of the row that should be used.</param>
            <returns>The parent resource id of the resource represented by <paramref name="row" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelAdapter.GetReservationActivityID(System.Data.DataRow,System.Data.DataRowVersion)">
            <summary>
            Retrieves the activity id from the specified row.
            </summary>
            <param name="row">A row representing a reservation.</param>
            <param name="version">The version of the row that should be used.</param>
            <returns>The activity id of the reservation represented by <paramref name="row" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelAdapter.GetReservationResourceID(System.Data.DataRow,System.Data.DataRowVersion)">
            <summary>
            Retrieves the resource id from the specified row.
            </summary>
            <param name="row">A row representing a reservation.</param>
            <param name="version">The version of the row that should be used.</param>
            <returns>The resource id of the reservation represented by <paramref name="row" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelAdapter.GetResourceID(System.Data.DataRow,System.Data.DataRowVersion)">
            <summary>
            Retrieves the resource id from the specified row.
            </summary>
            <param name="row">A row representing a resource.</param>
            <param name="version">The version of the row that should be used.</param>
            <returns>The id of the resource represented by <paramref name="row" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelAdapter.GetResourceIndex(System.Data.DataRow,System.Data.DataRowVersion)">
            <summary>
            Retrieves the resource index from the specified row.
            </summary>
            <param name="row">A row representing a resource.</param>
            <param name="version">The version of the row that should be used.</param>
            <returns>The index of the resource represented by <paramref name="row" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelAdapter.GetTableForActivities(System.Data.DataSet)">
            <summary>
            Returns the <see cref="T:System.Data.DataTable" /> that stores activities in the specified <see cref="T:System.Data.DataSet" />.
            </summary>
            <param name="dataset">A <see cref="T:System.Data.DataSet" /> instance.</param>
            <returns>The <see cref="T:System.Data.DataTable" /> that stores activities in <paramref name="dataset" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelAdapter.GetTableForConstraints(System.Data.DataSet)">
            <summary>
            Returns the <see cref="T:System.Data.DataTable" /> that stores constraints in the specified <see cref="T:System.Data.DataSet" />.
            </summary>
            <param name="dataset">A <see cref="T:System.Data.DataSet" /> instance.</param>
            <returns>The <see cref="T:System.Data.DataTable" /> that stores constraints in <paramref name="dataset" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelAdapter.GetTableForReservations(System.Data.DataSet)">
            <summary>
            Returns the <see cref="T:System.Data.DataTable" /> that stores reservations in the specified <see cref="T:System.Data.DataSet" />.
            </summary>
            <param name="dataset">A <see cref="T:System.Data.DataSet" /> instance.</param>
            <returns>The <see cref="T:System.Data.DataTable" /> that stores reservations in <paramref name="dataset" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelAdapter.GetTableForResources(System.Data.DataSet)">
            <summary>
            Returns the <see cref="T:System.Data.DataTable" /> that stores resources in the specified <see cref="T:System.Data.DataSet" />.
            </summary>
            <param name="dataset">A <see cref="T:System.Data.DataSet" /> instance.</param>
            <returns>The <see cref="T:System.Data.DataTable" /> that stores resources in <paramref name="dataset" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelAdapter.OnRowFilled(NickLee.Views.Gantt.Data.GanttModelAdapterEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Data.GanttModelAdapter.RowFilled" /> event.
            </summary>
            <param name="e">An <see cref="T:NickLee.Views.Gantt.Data.GanttModelAdapterEventArgs" /> that contains the event data.</param>
            <remarks><p>Called when a data row is filled.</p></remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelAdapter.OnRowUpdated(NickLee.Views.Gantt.Data.GanttModelAdapterEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Data.GanttModelAdapter.RowUpdated" /> event.
            </summary>
            <param name="e">An <see cref="T:NickLee.Views.Gantt.Data.GanttModelAdapterEventArgs" /> that contains the event data.</param>
            <remarks><p>Called when a data row is updated.</p></remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelAdapter.UpdateActivity(NickLee.Views.Gantt.Data.IActivity,System.Data.DataRow)">
            <summary>
            Is called to update an activity using the specified data row.
            </summary>
            <param name="activity">The activity to update.</param>
            <param name="row">The row that represents an activity.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelAdapter.UpdateConstraint(NickLee.Views.Gantt.Data.IConstraint,System.Data.DataRow)">
            <summary>
            Is called to update a constraint using the specified data row.
            </summary>
            <param name="constraint">The constraint to update.</param>
            <param name="row">The row that represents a constraint.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelAdapter.UpdateReservation(NickLee.Views.Gantt.Data.IReservation,System.Data.DataRow)">
            <summary>
            Is called to update a reservation using the specified data row.
            </summary>
            <param name="reservation">The reservation to update.</param>
            <param name="row">The row that represents a reservation.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelAdapter.UpdateResource(NickLee.Views.Gantt.Data.IResource,System.Data.DataRow)">
            <summary>
            Is called to update a resource using the specified data row.
            </summary>
            <param name="resource">The resource to update.</param>
            <param name="row">The row that represents a resource.</param>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.GanttModelAdapter.RowFilled">
            <summary>
            Occurs when a data row is being filled.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.GanttModelAdapter.RowUpdated">
            <summary>
            Occurs when the Gantt model has been updated using a table row.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttModelAdapter.UseDurationColumn">
            <summary>
            Indicates which column of the <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet" /> must be used to compute time interval of activities.
            </summary>
            <value><see langword="true" /> if the time interval of activities is computed using the StartTime and Duration columns
            of the <strong>GanttDataSet</strong>; <see langword="false" /> if the time interval of activities is computed using the StartTime and EndTime columns
            of the <strong>GanttDataSet</strong>. The default value is <see langword="true" />.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar">
            <summary>
            Defines a horizontal scrollbar that allows you to scroll over a period of time.
            </summary>
            <remarks>
            <p>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar" /> allows you to scroll over a period of time.
            An object that implements the <see cref="T:NickLee.Views.Gantt.ITimeScrollable" /> interface can be
            connected to a <strong>TimeScrollBar</strong> so that the scrollbar will control
            the position in time of the <see cref="T:NickLee.Views.Gantt.ITimeScrollable" /> object. For example a
            <strong>TimeScrollbar</strong> can be connected to a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> object
            so that moving the scrollbar thumb will scroll the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> over the
            time.</p>
            <p>To associate an <see cref="T:NickLee.Views.Gantt.ITimeScrollable" /> object with a
            <strong>TimeScrollBar</strong>, you will use the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.TimeScrollable" /> property.</p>
            <p>When an <see cref="T:NickLee.Views.Gantt.ITimeScrollable" /> is associated with the scrollbar, the
            position of the scrollbar reflects the value of the
            <see cref="P:NickLee.Views.Gantt.ITimeLine.FirstVisibleTime">ITimeLine.FirstVisibleTime</see>
            property. The thumb size reflects the value of the
            <see cref="P:NickLee.Views.Gantt.ITimeScrollable.VisibleWidth">ITimeScrollable.VisibleWidth</see>
            property which represents the visible width that the <see cref="T:NickLee.Views.Gantt.ITimeScrollable" />
            object is currently displaying.</p>
            <p>The <see cref="T:NickLee.Views.Gantt.ITimeScrollable" /> object does not define the minimum or the
            maximum scrolling times. To set the minimum and maximum scrolling time you can use
            the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.MinimumTime" /> and <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.MaximumTime" /> properties or set an
            <see cref="T:NickLee.Views.Gantt.ITimeRange" /> object using the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.TimeRange" /> property.</p>
            <p>The scrolling time bounds can also be extended by an additional margin on the
            right and left of the time bounds using the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.TimeMargin" /> property.</p>
            <p>Note that even if the <strong>TimeScrollBar</strong> defines a minimum and maximum
            scrolling time, the user can still scroll out of this time bounds by clicking in the
            scrollbar buttons.</p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.#ctor(NickLee.Views.Gantt.ITimeScrollable)">
            <summary>
            Creates and initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar" /> class.
            </summary>
            <param name="timeScrollable">An <see cref="T:NickLee.Views.Gantt.ITimeScrollable" /> object that defines the
            object that will be scrolled when moving the scrollbar.
            </param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.Dispose(System.Boolean)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.Component.Dispose(System.Boolean)">Component.Dispose</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.GetTime(System.Int32)">
            <summary>
            Returns the <see cref="T:System.DateTime" /> corresponding to the specified offset.
            </summary>
            <param name="value">The offset.</param>
            <returns>The <see cref="T:System.DateTime" /> corresponding to the specified offset.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.GetTooltipRectangle(System.String,System.Drawing.Font,System.DateTime)">
            <summary>
            Gets the tooltip location.
            </summary>
            <param name="tooltipText">The tooltip text.</param>
            <param name="font">The font used to draw the tooltip text.</param>
            <param name="time">The selected <see cref="T:System.DateTime" />.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle" /> structure that represents the location of the
            tooltip, in screen coordinates.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.GetTooltipText(System.DateTime)">
            <summary>
            Gets the text displayed in the tooltip when moving the thumb.
            </summary>
            <param name="time">A <see cref="T:System.DateTime" /> object that represents the current
            scrolling date to show in the tooltip.</param>
            <returns>A string that represents the text to display in the tooltip.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.GetValue(System.DateTime)">
            <summary>
            Returns the offset corresponding to the specified <see cref="T:System.DateTime" />.
            </summary>
            <param name="time">A <see cref="T:System.DateTime" /> structure.</param>
            <returns>The offset corresponding to the specified <see cref="T:System.DateTime" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.OnScroll(System.Windows.Forms.ScrollEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.ScrollBar.OnScroll(System.Windows.Forms.ScrollEventArgs)">ScrollBar.OnScroll</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.OnTimeMarginChanged">
            <summary>
            Is called when the time margins have changed.
            </summary>
            <remarks>Called when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.TimeMargin" /> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.OnTimeRangeChanged">
            <summary>
            Is called when the <see cref="T:NickLee.Views.Gantt.ITimeRange" /> connected the scrollbar
            has changed.
            </summary>
            <remarks>Called when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.TimeRange" /> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.OnTimeScrollableChanged">
            <summary>
            Is called when the <see cref="T:NickLee.Views.Gantt.ITimeScrollable" /> connected the scrollbar
            has changed.
            </summary>
            <remarks>Called when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.TimeScrollable" /> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.OnValueChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.ScrollBar.OnValueChanged(System.EventArgs)">ScrollBar.OnValueChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.ShouldSerializeMaximumTime">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.MaximumTime" /> property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.ShouldSerializeMinimumTime">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.MinimumTime" /> property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.ShouldSerializeTimeBounds">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.TimeBounds" /> property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.ShouldSerializeTimeRange">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.TimeRange" /> property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.WndProc(System.Windows.Forms.Message@)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">Control.WndProc</see>
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar._dateFormat">
            <summary>
            Date format for tooltips.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar._defaultTimeRange">
            <summary>
            Indicates if the scrollbar uses an internal time range.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar._instantScrolling">
            <summary>
            Indicates if scrolling is done for each thumb move.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar._interval">
            <summary>
            Caches the interval of time that contains time margins.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar._showTooltip">
            <summary>
            Indicates if tooltip should be displayed.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar._smallIncrement">
            <summary>
            The small increment.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar._timeMargin">
            <summary>
            The time margin in pixels.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar._timeRange">
            <summary>
            The <strong>ITimeRangle</strong> object that defines the scrolling bounds.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar._timeScrollable">
            <summary>
            The time scrollable object connected to this scrollbar.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.DateFormat">
            <summary>
            Gets or sets the date format for the tooltip.
            </summary>
            <value>A string that represents the format of the date that
            appears in the tooltip. The default value is <strong>"D"</strong>.</value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.ShowToolTip" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.InstantTimeScrolling">
            <summary>
            Gets or sets a value that indicates whether scrolling is instantaneous or delayed
            until the user stops the interaction.
            </summary>
            <value>
            A value that indicates whether scrolling is instantaneous or delayed
            until the user stops the interaction.
            The default value is <see langword="true" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.LargeChange">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.ScrollBar.LargeChange">ScrollBar.LargeChange</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.Maximum">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.ScrollBar.Maximum">ScrollBar.Maximum</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.MaximumTime">
            <summary>
            Gets or sets the maximum time of the time range for this scrollbar.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.Minimum">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.ScrollBar.Minimum">ScrollBar.Minimum</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.MinimumTime">
            <summary>
            Gets or sets the minimum time of the time range for this scrollbar.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.ShowToolTip">
            <summary>
            Gets or sets a value indicating whether a tooltip will be displayed when moving the thumb.
            </summary>
            <value><see langword="true" /> if a tooltip showing the current scrolling date
            will be displayed when moving the thumb;
            <see langword="false" /> otherwise.
            The default value is <see langword="true" />.</value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.DateFormat" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.SmallChange">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.ScrollBar.SmallChange">ScrollBar.SmallChange</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.SmallIncrement">
            <summary>
            Gets or sets the value in pixels added or removed to the current scrollbar value when
            the arrows are pressed.
            </summary>
            <value>The value in pixels added or removed to the current scrollbar value when
            the arrows are pressed.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The property value is negative.</exception>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.TimeBounds">
            <summary>
            Gets or sets the time interval that defines the minimum and maximum scrolling time.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> structure.</value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.MinimumTime" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.MaximumTime" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.TimeRange" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.TimeMargin">
            <summary>
            Gets or sets the margin in pixels added to the interval of the time range.
            </summary>
            <value>The margin in pixels that is added to the interval of the time range.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The property value is negative.</exception>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.TimeRange">
            <summary>
            Gets or sets the time range of this scrollbar.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.ITimeRange" /> object that defines the start time
            and end time for scrolling.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.MinimumTime" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.MaximumTime" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.TimeScrollable">
            <summary>
            Gets or sets the object that scrolls accordingly to the scrollbar.
            </summary>
            <value>
            An <see cref="T:NickLee.Views.Gantt.ITimeScrollable" /> object that represents the object to scroll
            in time when moving the scrollbar. The value may be <see langword="null" /> if
            no scrollable object is connected to the scrollbar.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar.Value">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.ScrollBar.Value">ScrollBar.Value</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow">
            <summary>
            Defines the basic row of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> control.
            </summary>
            <remarks>
            <p>A time scale row displays time values at regular intervals inside a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" />
            control. The <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.TimeUnit" /> property, or the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.UnitDuration" /> property can be set to choose this time
            interval.</p>
            <p>The output format can be set using the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.DisplayFormat" /> property. See this property for
            details about available display formats.</p>
            <p>Usually, <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> objects are automatically created by the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> using the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScale.RowPolicy" />
            However, users can manage their own time scale rows by listening to the <see cref="E:NickLee.Views.Gantt.Windows.Forms.TimeScale.AdjustRows" />
            event. This event is raised each time the time scale needs to refresh its rows.</p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> class.
            </summary>
            <remarks>The default <see cref="T:NickLee.Views.Gantt.TimeUnit" /> is <strong>Day</strong>.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.#ctor(NickLee.Views.Gantt.TimeUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> class using the
            specified <see cref="T:NickLee.Views.Gantt.TimeUnit" />.
            </summary>
            <param name="timeUnit">One of the <see cref="T:NickLee.Views.Gantt.TimeUnit" /> values.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.#ctor(NickLee.Views.Gantt.Windows.Forms.TimeScaleRow)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> class as a copy
            of the specified row.
            </summary>
            <param name="source">An instance of <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" />.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.#ctor(System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> class using the
            specified <see cref="T:System.TimeSpan" /> structure.
            </summary>
            <param name="duration">The duration between two ticks.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.#ctor(NickLee.Views.Gantt.TimeUnit,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> class using the
            specified <see cref="T:NickLee.Views.Gantt.TimeUnit" /> and number of steps.
            </summary>
            <param name="timeUnit">One of the <see cref="T:NickLee.Views.Gantt.TimeUnit" /> values.</param>
            <param name="steps">The number of steps to skip when iterating over dates.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.#ctor(NickLee.Views.Gantt.TimeUnit,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> class using the
            specified <see cref="T:NickLee.Views.Gantt.TimeUnit" /> and display format.
            </summary>
            <param name="timeUnit">One of the <see cref="T:NickLee.Views.Gantt.TimeUnit" /> values.</param>
            <param name="displayFormat">The format used to display the date.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.#ctor(System.TimeSpan,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> class using the
            specified <see cre="TimeSpan" /> structure and number of steps.
            </summary>
            <param name="duration">The duration between two ticks.</param>
            <param name="steps">The number of steps to skip when iterating over dates.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.#ctor(System.TimeSpan,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> class using the
            specified <see cref="T:System.TimeSpan" /> structure and display format.
            </summary>
            <param name="duration">The duration between two ticks.</param>
            <param name="displayFormat">The format used to display the date.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.#ctor(NickLee.Views.Gantt.TimeUnit,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> class using the
            specified <see cref="T:NickLee.Views.Gantt.TimeUnit" />, number of steps, and display format.
            </summary>
            <param name="timeUnit">One of the <see cref="T:NickLee.Views.Gantt.TimeUnit" /> values.</param>
            <param name="steps">The number of steps to skip when iterating over dates.</param>
            <param name="displayFormat">The format used to display the date.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.#ctor(System.TimeSpan,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> class using the
            specified <see cref="T:System.TimeSpan" /> structure, number of steps, and display format.
            </summary>
            <param name="duration">The duration between two ticks.</param>
            <param name="steps">The number of steps to skip when iterating over dates.</param>
            <param name="displayFormat">The format used to display the date.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.Clone">
            <summary>
            Creates a copy of this <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> object.
            </summary>
            <returns>The new <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> object that this method
            creates.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.ComputeDateText(System.DateTime)">
            <summary>
            Computes the text corresponding to the specified time.
            </summary>
            <param name="time">A <see cref="T:System.DateTime" /> structure.</param>
            <returns>A <see cref="T:System.String" /> that represents the <paramref name="time" /> formatted
            using the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.DisplayFormat" /> and <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.FormatInfo" /> properties.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.GetTimeSampler">
            <summary>
            Gets a time sampler used to iterate on the dates of the row.
            </summary>
            <returns>An <see cref="T:NickLee.Views.Gantt.ITimeSampler" /> that can iterate between the visible dates of the row.</returns>
            <exception cref="T:System.InvalidOperationException">The row is not connected to a time scale.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.GetTimeSampler(System.DateTime,System.DateTime)">
            <summary>
            Gets a time sampler used to iterate on the time scale row.
            </summary>
            <param name="startTime">The start time of the time sampler.</param>
            <param name="endTime">The end time of the time sampler.</param>
            <returns>An <see cref="T:NickLee.Views.Gantt.ITimeSampler" /> that can iterate between the specified dates.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.InvalidateDateTextCache">
            <summary>
            Invalidates the cache of the labels displayed by the row.
            </summary>
            <remarks>This method must be called when the labels of the row have changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.OnTimeScaleRowChanged">
            <summary>
            Is called when the row has changed.
            </summary>
            <remarks>Called when the row is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.Paint(System.Drawing.Graphics,System.Drawing.RectangleF)">
            <summary>
            Paints the row in the specified <see cref="T:System.Drawing.Graphics" /> object, at the specified location.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> in which drawing will be done.</param>
            <param name="rect">The <see cref="T:System.Drawing.RectangleF" /> structure where the row should be painted.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.PaintText(System.Drawing.Graphics,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringAlignment,System.String)">
            <summary>
            Paints the label of the row.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> in which drawing will be done.</param>
            <param name="brush">The <see cref="T:System.Drawing.Brush" /> to draw with.</param>
            <param name="rect">The <see cref="T:System.Drawing.RectangleF" /> structure where the label should be painted.</param>
            <param name="alignment">One of the <see cref="T:System.Drawing.StringAlignment" /> values.</param>
            <param name="text">The text to be painted.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.PaintTick(System.Drawing.Graphics,System.Drawing.Pen,System.Drawing.PointF,System.Single)">
            <summary>
            Paints the ticks between time intervals.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> in which drawing will be done.</param>
            <param name="pen">The <see cref="T:System.Drawing.Pen" /> to draw with.</param>
            <param name="pos">The x coordinate of the tick.</param>
            <param name="height">The height of the tick.</param>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.RowChanged">
            <summary>
            Occurs when the row has changed.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.AdditionalString">
            <summary>
            Gets or sets the string displayed before a truncated date.
            </summary>
            <value>A <see cref="T:System.String" /> that will be displayed before a truncated date.</value>
            <exception cref="T:System.ArgumentNullException">The property value is <see langword="null" />.
            </exception>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.BackColor">
            <summary>
            Gets or sets the color used to draw the background of the row.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> structure.</value>
            <remarks>The default value inherits from the background color of the
            time scale.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.DisplayFormat">
            <summary>
            Gets or sets the display format of the row.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the display format of the row.</value>
            <exception cref="T:System.ArgumentNullException">The property value is <see langword="null" />.
            </exception>
            <remarks>
            <p>The format used here is almost the same format used by the
            <see cref="T:NickLee.Views.Util.ExtendedDateTimeFormatInfo" /> class. In addition, the following
            formats are supported:
            <list type="table">
            <listheader>
            <term>Format Pattern.</term>
            <description>Description</description>
            </listheader>
            <item>
            <term>#Y, #y</term>
            <description>The number of years since the reference date.</description>
            </item>
            <item>
            <term>#H</term>
            <description>The number of half-years since the reference date.</description>
            </item>
            <item>
            <term>#Q, #q</term>
            <description>The number of quarters since the reference date.</description>
            </item>
            <item>
            <term>#M</term>
            <description>The number of months since the reference date.</description>
            </item>
            <item>
            <term>#W, #w</term>
            <description>The number of weeks since the reference date.</description>
            </item>
            <item>
            <term>#D, #d</term>
            <description>The number of days since the reference date.</description>
            </item>
            <item>
            <term>#T, #t</term>
            <description>The number of half-days since the reference date.</description>
            </item>
            <item>
            <term>#h</term>
            <description>The number of hours since the reference date.</description>
            </item>
            <item>
            <term>#m</term>
            <description>The number of minutes since the reference date.</description>
            </item>
            <item>
            <term>#s</term>
            <description>The number of seconds since the reference date.</description>
            </item>
            <item>
            <term>#l</term>
            <description>The number of milliseconds since the reference date.</description>
            </item>
            <item>
            <term>##</term>
            <description>The number of time units since the reference date. This
            format is only used when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.TimeUnit" /> property is set to
            <see cref="T:NickLee.Views.Gantt.TimeUnit">TimeUnit.None</see>.
            </description>
            </item>
            </list>
            The reference date can be accessed through the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.ReferenceDate" />
            property.
            </p>
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.FormatInfo">
            <summary>
            Gets or sets the <see cref="T:System.IFormatProvider" /> used to format dates in this row.
            </summary>
            <value>An <see cref="T:System.IFormatProvider" /> object. The default value is an
            instance of the <see cref="T:NickLee.Views.Util.ExtendedDateTimeFormatInfo" /> class.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.PaintTicks">
            <summary>
            Gets or sets a value indicating whether the row displays ticks.
            </summary>
            <value><see langword="true" /> if the row displays ticks;
            <see langword="false" /> otherwise.</value>
            <remarks>The default value inherits from the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScale.PaintTicks" /> property.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.Steps">
            <summary>
            Gets or sets the number of steps of the row.
            </summary>
            <value>An integer that represents the number of steps of <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.TimeUnit" /> to skip
            when iterating over dates.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.TextAlign">
            <summary>
            Gets or sets the alignment of the dates in the row.
            </summary>
            <value>One of the <see cref="T:System.Drawing.StringAlignment" /> values.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.TextAlignment">
            <summary>
            This property is obsolete. Please use the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.TextAlign" /> property.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.TextColor">
            <summary>
            Gets or sets the color used to draw the dates of the row.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> structure.</value>
            <remarks>The default value inherits from the foreground color of the
            time scale.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.TextFont">
            <summary>
            Gets or sets the font used to draw the dates of the row.
            </summary>
            <value>A <see cref="T:System.Drawing.Font" /> reference.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.TickColor">
            <summary>
            Gets or sets the color used to draw the ticks of the row.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> structure.</value>
            <remarks>The default value inherits from the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScale.TickColor" /> property.
            This value is only used when the <see cref="T:System.Windows.Forms.FlatStyle" /> property is set to
            <strong>FlatStyle.Flat</strong>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.TimeScale">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> that contains this row.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> instance, or <see langword="null" /> if the
            row has not been added to a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> yet.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.TimeUnit">
            <summary>
            Gets or sets the time unit of the row.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.TimeUnit" /> values.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.TruncateLabels">
            <summary>
            Indicates whether truncated labels should be visible.
            </summary>
            <value><see langword="true" /> if labels should be always visible, even when truncated;
            <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.UnitDuration">
            <summary>
            Gets or sets the unit duration of the row.
            </summary>
            <value>A <see cref="T:System.TimeSpan" /> structure.</value>
            <remarks>This property is used only if the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow.TimeUnit" /> property is
            set to <see cref="T:NickLee.Views.Gantt.TimeUnit">TimeUnit.None</see>.
            </remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ScrollReservationSheet">
            <summary>
            A component containing a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> and a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationSheet" />.
            </summary>
            <remarks>
            <p>This control contains a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> control and
            a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationSheet" /> control.</p>
            <p><img src="scrollreservationsheet.png" /></p>
            </remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet">
            <summary>
            A component containing a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> and a <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.BeginInit">
            <summary>
            Begins the initialization of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet" /> that is used on
            a form or used by another component. The initialization occurs at runtime.
            </summary>
            <remarks>The Visual Studio .NET design environment uses this method
            to start the initialization of a component that is used on a form
            or used by another component. The <see cref="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.EndInit" /> method ends the
            initialization. The use of the <strong>BeginInit</strong> and <strong>EndInit</strong> methods prevents the
            control from being used before it is fully initialized.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.BeginUpdate">
            <summary>
            Disables any redrawing of the control.
            </summary>
            <remarks>
            To maintain performance while several modifications are occuring on the control,
            call the <strong>BeginUpdate</strong> method. The <strong>BeginUpdate</strong> method
            prevents the control from painting until the <see cref="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.EndUpdate" /> method is called.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.CreateGanttSheet">
            <summary>
            Is called to create the instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> class.
            </summary>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> class.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.Dispose(System.Boolean)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.Dispose(System.Boolean)">Control.Dispose</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.EndInit">
            <summary>
            Ends the initialization of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet" /> that is used on a
            form or used by another component. The initialization occurs at runtime.
            </summary>
            <remarks>
            The Visual Studio .NET design environment uses this method to end
            the initialization of a component that is used on a form or used by
            another component. The <see cref="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.BeginInit" /> method starts the initialization.
            The use of the <strong>BeginInit</strong> and <strong>EndInit</strong> methods prevents the control
            from being used before it is fully initialized.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.EndUpdate">
            <summary>
            Enables the redrawing of the control.
            </summary>
            <remarks>
            To maintain performance while several modifications are occuring on the control,
            call the <strong>BeginUpdate</strong> method. The <strong>BeginUpdate</strong> method
            prevents the control from painting until the <see cref="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.EndUpdate" /> method is called.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.EnsureRowVisible(System.Int32)">
            <summary>
            Scrolls the sheet so that the specified row becomes
            visible.
            </summary>
            <param name="rowIndex">The row index.</param>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="rowIndex" />
            is not between <strong>0</strong> and <strong>RowCount-1</strong>.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.OnCreateControl">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnCreateControl">Control.OnCreateControl</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ResetActivityBarStyles">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ActivityBarStyles" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ResetActivityToolTip">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ActivityToolTip" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ResetMoveActivityCursor">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.MoveActivityCursor" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ResetMoveCursor">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.MoveCursor" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ResetSizeEastCursor">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.SizeEastCursor" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ResetSizeWestCursor">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.SizeWestCursor" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ResetTimeBounds">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeBounds" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ScrollLeft">
            <summary>
            Scrolls the time line to the left.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ScrollRight">
            <summary>
            Scrolls the time line to the right.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ShouldSerializeActivityBarStyles">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ActivityBarStyles" />
            property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ShouldSerializeAlternatingBackColor">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.AlternatingBackColor" />
            property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ShouldSerializeMoveActivityCursor">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.MoveActivityCursor" /> property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ShouldSerializeMoveCursor">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.MoveCursor" /> property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ShouldSerializeSizeEastCursor">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.SizeEastCursor" /> property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ShouldSerializeSizeWestCursor">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.SizeWestCursor" /> property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ShouldSerializeTimeBounds">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeBounds" />
            property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ShouldSerializeTimeScaleRows">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeScaleRows" />
            property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ToImage">
            <summary>
            Creates and returns an <see cref="T:System.Drawing.Image" /> that represents the control.
            </summary>
            <returns>A <see cref="T:System.Drawing.Image" />.</returns>
            <remarks>The format of the returned image is
            <see cref="F:System.Drawing.Imaging.PixelFormat.Format32bppArgb" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ToImage(System.Drawing.Imaging.PixelFormat)">
            <summary>
            Creates and returns an <see cref="T:System.Drawing.Image" /> that represents the control.
            </summary>
            <param name="format">The format of the returned image.</param>
            <returns>A <see cref="T:System.Drawing.Image" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ZoomIn">
            <summary>
            Zooms in the time line.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ZoomOut">
            <summary>
            Zooms out the time line.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ZoomToFit(System.Boolean)">
            <summary>
            Zooms in or zooms out the sheet so that the time bounds fit the sheet.
            </summary>
            <remarks>This method zooms in or zooms out the sheet so
            that the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeBounds" /> fit the sheet. If the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeBounds" /> property has its default value, then the time
            bounds are computed dynamically to contain all the activities of the Gantt
            model. Calling this method will ensure that all activities of the Gantt model
            are displayed.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeBounds" />
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ActivityBarHeightChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ActivityBarHeight" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ActivityToolTipChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ActivityToolTip" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.AdjustTimeScaleRows">
            <summary>
            Occurs when the rows of the time scale must be recomputed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.AlternatingBackColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.AlternatingBackColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.BackgroundColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.BackgroundColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.BeforeEditActivity">
            <summary>
            Event fired before the time interval of an activity is changed using the mouse pointer.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.CanEditActivitiesChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.CanEditActivities" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.DrawGanttSheetRow">
            <summary>
            Occurs when the Gantt sheet draws rows in owner draw mode.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.GanttSheetOwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows an event handler
            listening to the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.DrawGanttSheetRow" /> event. The event handler draws
            selected rows using a specific font. Other rows are painted using the default
            painting algorithm.
            </para>
            <code lang="C#">
            // Attach the event handler
            ScrollActivitySheet sheet = new ScrollActivitySheet();
            sheet.GanttSheetOwnerDraw = true;
            sheet.DrawGanttSheetRow += new DrawGanttSheetRowEventHandler(OnDrawSheetRow);

            // The code of the event handler
            private void OnDrawSheetRow(object sender, DrawGanttSheetRowArgs e) {
            if (!e.IsRowSelected)
            e.DrawRow();
            else {
            if (e.IsPaintingBackground)
            e.Graphics.FillRectangle(e.BackBrush, e.Bounds);
            else {
            Font font = new Font(e.GanttSheet.Font, FontStyle.Italic);
            e.DrawRow(e.Bounds, e.BackBrush, e.ForeBrush, font);
            font.Dispose();
            }
            }
            }
            </code>
            <code lang="Visual Basic">
            ' Attach the event handler
            Dim sheet As New ScrollActivitySheet()
            sheet.GanttSheetOwnerDraw = True

            ' The code of the event handler
            Private Sub OnDrawSheetRow(ByVal sender As Object, ByVal e As DrawGanttSheetRowArgs) Handles sheet.DrawGanttSheetRow
            If Not e.IsRowSelected Then
            e.DrawRow()
            Else
            If e.IsPaintingBackground Then
            e.Graphics.FillRectangle(e.BackBrush, e.Bounds)
            Else
            Dim font As New Font(e.GanttSheet.Font, FontStyle.Italic)
            e.DrawRow(e.Bounds, e.BackBrush, e.ForeBrush, font)
            font.Dispose()
            End If
            End If
            End Sub
            </code>
            </example>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.GanttSheetOwnerDraw" />
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.DrawTimeScaleRow">
            <summary>
            Occurs when the time scale draws rows in owner draw mode.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeScaleOwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeScaleOwnerDraw" />
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.EnableStyleToolTipsChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.EnableStyleToolTips" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.GanttSheetClick">
            <summary>
            Occurs when the Gantt sheet is clicked.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.GanttSheetDoubleClick">
            <summary>
            Occurs when the Gantt sheet is double-clicked.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.GanttSheetMouseDown">
            <summary>
            Occurs when the mouse pointer is over the Gantt sheet and the mouse button is pressed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.GanttSheetMouseEnter">
            <summary>
            Occurs when the mouse pointer enters the Gantt sheet.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.GanttSheetMouseHover">
            <summary>
            Occurs when the mouse pointer enters hovers over the Gantt sheet.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.GanttSheetMouseLeave">
            <summary>
            Occurs when the mouse pointer leaves the Gantt sheet.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.GanttSheetMouseMove">
            <summary>
            Occurs when the mouse pointer is moved over the Gantt sheet.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.GanttSheetMouseUp">
            <summary>
            Occurs when the mouse pointer is over the Gantt sheet and a mouse button is released.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.GanttSheetOwnerDrawChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.GanttSheetOwnerDraw" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.GridLineColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.GridLineColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.GridLineStyleChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.GridLineStyle" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.InstantEditingChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.InstantEditing" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.MoveCursorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.MoveCursor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.MultiSelectChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.MultiSelect" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.QueryActivityEditable">
            <summary>
            Event fired before the time interval of an activity is changed using the mouse pointer to check
            if the activity can be edited.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.SelectionBackColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.SelectionBackColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.SelectionForeColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.SelectionForeColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ShowSelectedRowsOnGanttSheetChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ShowSelectedRowsOnGanttSheet" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ShowToolTipsChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ShowTooltips" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.SizeEastCursorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.SizeEastCursor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.SizeWestCursorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.SizeWestCursor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeLineChanged">
            <summary>
            Occurs when the time line has changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeLineChanging">
            <summary>
            Occurs when the time line is changing.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeScaleBackColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeScaleBackColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeScaleClick">
            <summary>
            Occurs when the time scale is clicked.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeScaleColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeScaleForeColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeScaleDoubleClick">
            <summary>
            Occurs when the time scale is double-clicked.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeScaleMouseDown">
            <summary>
            Occurs when the mouse pointer is over the time scale and the mouse button is pressed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeScaleMouseEnter">
            <summary>
            Occurs when the mouse pointer enters the time scale.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeScaleMouseHover">
            <summary>
            Occurs when the mouse pointer enters hovers over the time scale.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeScaleMouseLeave">
            <summary>
            Occurs when the mouse pointer leaves the time scale.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeScaleMouseMove">
            <summary>
            Occurs when the mouse pointer is moved over the time scale.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeScaleMouseUp">
            <summary>
            Occurs when the mouse pointer is over the time scale and a mouse button is released.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeScaleRowsChanged">
            <summary>
            Occurs when the rows of the time scale have changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.VerticalGridToBottomChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.VerticalGridToBottom" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.VisibleDurationChanged">
            <summary>
            Occurs when the visible time duration has changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.VisibleWidthChanged">
            <summary>
            Occurs when the visible width has changed.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ActivityBarHeight">
            <summary>
            Gets or sets the height of activity bars.
            </summary>
            <value>The height of activity bars.</value>
            <remarks>The default value of this property is inherited from the font height
            of the control. To reset this property to its default value, set it to <strong>-1</strong>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ActivityBarStyles">
            <summary>
            Gets the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> that defines the graphical representation
            of activities in the sheet.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" /> that defines the graphical representation
            of activities in the sheet.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ActivityToolTip">
            <summary>
            Gets or sets the tooltip format for activities in the Gantt sheet.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the format of the tooltip that
            will be displayed when the mouse hovers activities in the Gantt sheet.</value>
            <remarks>
            No tooltip will be displayed if the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ShowTooltips" /> property
            is set to <see langword="false" />.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.AlternatingBackColor">
            <summary>
            Gets or sets the background color of alternating rows for a ledger appearance.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the alternating background color.
            The default value is the system color for windows (<see cref="P:System.Drawing.SystemColors.Window">SystemColors.Window</see>).
            </value>
            <remarks>
            By default, all rows have the same color (the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.BackColor" /> property of the control).
            When you set the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.AlternatingBackColor" /> to a new color, every other row is set to the new color.
            To reset the alternating background color
            to its default value, set the property to <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.AutoGrid">
            <summary>
            Indicates whether the grid of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> should be synchronized
            with the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" />.
            </summary>
            <value><see langword="true" /> if the grid of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> should be synchronized
            with the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" />; <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.BackColor">
            <summary>
            Gets or sets the background color of the chart.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of rows in the chart.
            The default value is the system color for windows (<see cref="P:System.Drawing.SystemColors.Window">SystemColors.Window</see>).
            </value>
            <remarks>
            While the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.BackColor" /> property determines the color of rows
            in the chart, the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.BackgroundColor" /> determines
            the color of the non-row area, which is only visible when the chart
            is scrolled to the bottom, or if only a few rows
            are contained in the grid.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.BackgroundColor">
            <summary>
            Gets or sets the color of the non-row area of the chart.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the chart background.
            The default value is the <see cref="P:System.Drawing.SystemColors.AppWorkspace">SystemColors.AppWorkspace</see> color.
            </value>
            <remarks>
            The background color determines the color of the non-row area
            of the chart, which is only visible when no table is displayed
            by the <strong>TreeTable</strong>, or if the chart is scrolled to the bottom,
            or if only a few rows are contained in the chart.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.BackgroundImage">
            <summary>
            Gets or sets the background image of the control.
            </summary>
            <value>
            The background image of the control.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.BorderStyle">
            <summary>
            Gets or sets the border style for the control.
            </summary>
            <value>One of the <see cref="T:System.Windows.Forms.BorderStyle" /> values. The default is
            <b>BorderStyle.None</b>.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.CanEditActivities">
            <summary>
            Indicates whether the user can modify the start time, end time or duration
            of the displayed activities using the mouse pointer.
            </summary>
            <value><see langword="true" /> if the user can modify the start time,
            end time or duration of the displayed activities with the mouse
            pointer; <see langword="false" /> otherwise. The default value is <see langword="true" />.</value>
            <remarks>
            When the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.CanEditActivities" /> property is set to <see langword="true" />, the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> allows the user to change the time interval
            (<see cref="P:NickLee.Views.Gantt.Data.IActivity.TimeInterval">IActivity.TimeInterval</see>, <see cref="P:NickLee.Views.Gantt.Data.IActivity.StartTime">IActivity.StartTime</see>
            or <see cref="P:NickLee.Views.Gantt.Data.IActivity.EndTime">IActivity.EndTime</see> properties) of the displayed activity using
            the mouse pointer. Dragging an activity bar allows you to move an activity
            in time. Clicking at the beginning or at the end allows you to resize the activity bar.
            When the value of this <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.InstantEditing" /> property is <see langword="true" />,
            the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> will make the modification of the time interval
            for each mouse move event.
            If the value of the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.InstantEditing" /> property is <see langword="false" />,
            then the modification of the time interval will be done when the user releases the mouse button.
            Until the user releases the mouse button, a rectangle is
            displayed showing the new position in time of the activity.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.CanPanTimeScale">
            <summary>
            Indicates whether the user can pan the time scale using the mouse pointer.
            </summary>
            <value><see langword="true" /> if the user can pan the time line
            with the mouse pointer; <see langword="false" /> otherwise.
            The default value is <see langword="true" />.</value>
            <remarks>
            To perform a translation in the time scale, the user can click and drag the time scale.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.CanZoomTimeScale">
            <summary>
            Indicates whether the user can zoom the time scale using the mouse pointer.
            </summary>
            <value><see langword="true" /> if the user can zoom the time scale
            with the mouse pointer; <see langword="false" /> otherwise.
            The default value is <see langword="true" />.</value>
            <remarks>
            To perform a zoom in the time scale, the user can double click
            the time scale, or press the control key while dragging the mouse over a time
            interval of the time scale.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.Controls">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.Controls">Control.Controls</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.DateIndicators">
            <summary>
            Gets the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> displayed in the Gantt sheet.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection" /> that defines the date indicators displayed on the sheet.</value>
            <remarks>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> object is used to draw a vertical line on the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> to indicate a particular date, for example the current date.
            The <see cref="T:NickLee.Views.Gantt.Windows.Forms.CurrentDateIndicator" /> class is a subclass of <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" />
            that displays an auto-updated current date and time.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">
            The following example adds a <see cref="T:NickLee.Views.Gantt.Windows.Forms.CurrentDateIndicator" />
            in a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet" />.
            </para>
            <code lang="C#">
            public void AddDateIndicator(ScrollGanttSheet sheet) {
            CurrentDateIndicator dateIndicator = new CurrentDateIndicator();
            sheet.DateIndicators.Add(dateIndicator);
            }
            </code>
            <code lang="Visual Basic">
            Sub AddDateIndicator(ByVal sheet As ScrollGanttSheet)
            Dim dateIndicator As CurrentDateIndicator = New CurrentDateIndicator
            sheet.DateIndicators.Add(dateIndicator)
            End Sub
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.DefaultSize">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.DefaultSize">Control.DefaultSize</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.EnableStyleToolTips">
            <summary>
            Indicates whether the tooltips should be taken from activity bar styles.
            </summary>
            <value><see langword="true" /> if the tooltips should be taken from activity bar styles;
            <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.FirstVisibleTime">
            <summary>
            Gets or sets the first visible time of the sheet.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure that represents the first visible time of the control.</value>
            <remarks>The first visible time is the first date displayed by the control. When the value is changed,
            a <see cref="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeLineChanging" /> and a <see cref="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeLineChanged" /> events are raised.</remarks>
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeLineChanging" />
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeLineChanged" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeLine" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.FlatStyle">
            <summary>
            Gets or sets the flat style appearance of the control.
            </summary>
            <value>One of the <see cref="T:System.Windows.Forms.FlatStyle" /> values.
            The default value is <b>Standard</b>.</value>
            <remarks>Setting this property to either <b>Flat</b> or <b>Popup</b>
            has the same effect.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.Font">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.Font">Control.Font</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ForeColor">
            <summary>
            Gets or sets the foreground color used for rows.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of rows.
            The default value is the value for window text (<see cref="P:System.Drawing.SystemColors.WindowText">SystemColors.WindowText</see>).</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.GanttModel">
            <summary>
            Gets the Gantt data model displayed by this control.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> that is displayed by this
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet" /> or <see langword="null" /> if the control
            is not connected to a row controller (<see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.RowController" />).</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.GanttSheet">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> used to display the activity or
            resource hierarchy in a Gantt model.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> used to display the activities or
            resources.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.GanttSheetOwnerDraw">
            <summary>
            Gets or sets a value indicating whether the code that you
            provide draws the Gantt sheet rows or not.
            </summary>
            <value>
            <see langword="true" /> if Gantt sheet rows are to be drawn using custom user
            code; <see langword="false" /> otherwise.
            </value>
            <remarks>
            <p>When the <strong>GanttSheetOwnerDraw</strong> property is set to <see langword="true" />,
            you need to handle all the drawing of Gantt sheet rows. You can use
            this capability to create your own special display of Gantt sheet rows.
            Use the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.DrawGanttSheetRow" /> event to handle the drawing of
            Gantt sheet rows.</p>
            <p>When the <strong>GanttSheetOwnerDraw</strong> property is set to <see langword="false" />,
            the <strong>DrawGanttSheetRow</strong> event is not raised.</p>
            </remarks>
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.DrawGanttSheetRow" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.GridLineColor">
            <summary>
            Gets or sets the color of the grid line.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the grid lines.
            The default value is the system color for controls (<see cref="P:System.Drawing.SystemColors.Control">SystemColors.Control</see>).
            </value>
            <remarks>
            No grid line is displayed if the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.GridLineStyle" /> property
            is set to <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle">None</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.GridLineStyle">
            <summary>
            Gets or sets the style of horizontal grid lines.
            </summary>
            <value>
            One of the <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle" /> values.
            The default value is <strong>Solid</strong>.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.HScrollBar">
            <summary>
            Gets or sets the visibility of the horizontal scrollbar.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Windows.Forms.ScrollBarVisibility" /> values.
            The default value is <see cref="F:NickLee.Views.Windows.Forms.ScrollBarVisibility.AsNeeded" />.
            </value>
            <remarks>When the property value is <strong>ScrollBarVisibility.AsNeeded</strong>,
            the scrollbar will always be visible.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.InstantEditing">
            <summary>
            Indicates whether the modification of the time interval of an activity with the mouse
            pointer is instantaneous.
            </summary>
            <value>
            <see langword="true" /> if the modification of the time interval of an activity with the mouse
            pointer is done at each mouse move event; otherwise, <see langword="false" /> when the
            modification is done when the user releases the mouse button.
            The default value is <see langword="true" />.
            </value>
            <remarks>
            When the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.CanEditActivities" /> property is set to <see langword="true" />, the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> allows the user to change the time interval
            (<see cref="P:NickLee.Views.Gantt.Data.IActivity.TimeInterval">IActivity.TimeInterval</see>, <see cref="P:NickLee.Views.Gantt.Data.IActivity.StartTime">IActivity.StartTime</see>
            or <see cref="P:NickLee.Views.Gantt.Data.IActivity.EndTime">IActivity.EndTime</see> properties) of the displayed activity using
            the mouse pointer. Dragging an activity bar allows you to move an activity
            in time. Clicking at the beginning or at the end allows you to resize the activity bar.
            When the value of this property is <see langword="true" />, the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> will make the
            modification of the time interval for each mouse move event.
            If the value is <see langword="false" />, then the modification of the
            time interval will be done when the user releases the mouse button.
            Until the user releases the mouse button a rectangle is
            displayed showing the new position in time of the activity.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.InstantTimeScrolling">
            <summary>
            Gets or sets a value that indicates whether scrolling is instantaneous or delayed
            until the user stops the interaction.
            </summary>
            <value>
            A value that indicates whether scrolling is instantaneous or delayed
            until the user stops the interaction.
            The default values is <see langword="true" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.LastVisibleTime">
            <summary>
            Gets or sets the last visible time of the chart.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.MoveActivityCursor">
            <summary>
            Gets or sets the cursor used to move an activity.
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Cursor" /> displayed when the user moves an activity in the Gantt sheet.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.MoveCursor">
            <summary>
            Gets or sets the cursor used to indicate that an activity can be moved in the Gantt sheet.
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Cursor" /> used to indicate that an activity can be moved in the Gantt sheet.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.MultiSelect">
            <summary>
            Gets or sets a value indicating whether the user can select several rows.
            </summary>
            <value><see langword="true" /> if the user can select several rows;
            <see langword="false" /> otherwise.</value>
            <remarks>When this property is set to <see langword="true" />,
            the user cannot select several table rows interactively anymore.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.PaintTimeScaleTicks">
            <summary>
            Indicates whether the time scale displays ticks.
            </summary>
            <value><see langword="true" /> if the time scale displays ticks;
            <see langword="false" /> otherwise. The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.RowController">
            <summary>
            Gets or sets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.IGanttRowController" /> object used to handle the Gantt rows.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.IGanttRowController" /> object used to handle the Gantt rows.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.SelectionBackColor">
            <summary>
            Gets or sets the background color of selected rows.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the background color of selected rows.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.SelectionForeColor">
            <summary>
            Gets or sets the foreground color of selected rows.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of selected rows.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ShowSelectedRowsOnGanttSheet">
            <summary>
            Indicates whether the selected rows should be painted on the Gantt sheet using the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.SelectionBackColor" />.
            </summary>
            <value><see langword="true" /> if the selection should be painted on the Gantt sheet; <see langword="false" /> otherwise.
            The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ShowTooltips">
            <summary>
            Indicates whether the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> should display tooltips on the information that it displays.
            </summary>
            <value><see langword="true" /> if the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />
            must display tooltips; <see langword="false" /> otherwise.</value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ActivityToolTip" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.SizeEastCursor">
            <summary>
            Gets or sets the cursor used to resize an activity to the east.
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Cursor" /> displayed when the user resizes the activity to the east.</value>
            <remarks>
            The cursor is used when the user resizes the activity to the east using the mouse pointer.
            Resizing the activity to the east means changing the end time of the activity, except if the
            control is in <strong>RightToLeft</strong> mode in which case it means changing the start time.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.SizeWestCursor">
            <summary>
            Gets or sets the cursor used to resize an activity to the west.
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Cursor" /> displayed when the user resizes the activity to the west.</value>
            <remarks>
            The cursor is used when the user resizes the activity to the west using the mouse pointer.
            Resizing the activity to the west means changing the start time of the activity, except if the
            control is in <strong>RightToLeft</strong> mode in which case it means changing the end time.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.SnapUnit">
            <summary>
            Gets or sets the time unit used for snapping date and time values.
            </summary>
            <value>
            A <see cref="T:NickLee.Views.Gantt.TimeUnit" /> that is used for snapping date and time values
            when the users changes the time interval of an activity using the mouse pointer.
            The default value is <strong>Hour</strong>.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeBounds">
            <summary>
            Gets or sets the time bounds of the Gantt sheet.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.ITimeRange" /> that represents the maximum and minimum date-time value
            that the user can scroll in the Gantt sheet. The default value is dynamically computed
            using the minimum start time and maximum end time of activities in the
            Gantt data model attached to the Gantt sheet.
            </value>
            <remarks>Although this property sets the limit of time
            scrolling in the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />, some pixels can be added to this
            scrolling range using the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeMargin" /> property.
            Note that the user will still be able to scroll outside the value of this time
            range using the right and left arrows of the time scrollbar.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeMargin" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeGrids">
            <summary>
            Gets the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> displayed in the Gantt sheet.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection" /> that defines the grids displayed on the Gantt sheet.</value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.VerticalGridToBottom" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeLine">
            <summary>
            Gets or sets the <see cref="T:NickLee.Views.Gantt.ITimeLine" /> object of the control.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.ITimeLine" /> object of the control.</value>
            <exception cref="T:System.ArgumentException">The propety value is not valid because it would
            create a circular list of <see cref="T:NickLee.Views.Gantt.ITimeLine" /> objects leading to a stack
            overflow.</exception>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeMargin">
            <summary>
            Gets or sets the right and left margin added to the interval of the time range.
            </summary>
            <value>A integer value that represents the margin in pixels that will be added
            to the scrolling time bounds. The default value is <strong>50</strong>.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeBounds" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeScale">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> of the control.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> object that
            represents the time scale of the control.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeScaleBackColor">
            <summary>
            Gets or sets the background color used for
            the time scale.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the background
            of the time scale. The default value is
            the color used for
            controls (<see cref="P:System.Drawing.SystemColors.Control">SystemColors.Control</see>).</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeScaleFont">
            <summary>
            Gets or sets the font used for the time scale.
            </summary>
            <value>
            The <see cref="T:System.Drawing.Font" /> object that represents the time scale text.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeScaleForeColor">
            <summary>
            Gets or sets the color used for the text in
            the time scale.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground
            color of the time scale.
            The default value is the value used
            for controls (<see cref="P:System.Drawing.SystemColors.ControlText">SystemColors.ControlText</see>).</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeScaleOwnerDraw">
            <summary>
            Gets or sets a value indicating whether the code that you
            provide draws the time scale rows or not.
            </summary>
            <value>
            <see langword="true" /> if time scale rows are to be drawn using custom user
            code; <see langword="false" /> otherwise.
            </value>
            <remarks>
            <p>When the <strong>TimeScaleOwnerDraw</strong> property is set to <see langword="true" />,
            you need to handle all drawing of time scale rows. You can use
            this capability to create your own special display of time scale rows.
            Use the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.DrawTimeScaleRow" /> event to handle the drawing of
            time scale rows.</p>
            <p>When the <strong>TimeScaleOwnerDraw</strong> property is set to <see langword="false" />,
            the <strong>DrawTimeScaleRow</strong> event is not raised.</p>
            </remarks>
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.DrawTimeScaleRow" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeScaleRowPolicy">
            <summary>
            Gets or sets the policy used to handle the time scale rows.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowPolicy" /> values. The default value is
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowPolicy">TwoRows</see>.</value>
            <remarks>This property is used each time the zoom factor of the time scale changes to recompute
            the new rows of the time scale.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.TimeScaleRows">
            <summary>
            Gets the rows of the time scale.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection" /> reference.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.VerticalGridToBottom">
            <summary>
            Gets or sets a value indicating if the vertical grid of the sheet should be painted on the non-row
            area of the sheet.
            </summary>
            <value><see langword="true" /> if the vertical grid is also
            painted in the non-row area of the sheet; <see langword="false" /> otherwise.
            The default value is <see langword="false" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.VisibleDuration">
            <summary>
            Gets the visible time duration displayed by the object.
            </summary>
            <value>A <see cref="T:System.TimeSpan" /> structure that represents the
            time duration displayed by the control.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The property value is negative.</exception>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.VisibleTimeInterval">
            <summary>
            Gets or sets the visible time interval of the control.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.VScrollBar">
            <summary>
            Gets or sets the visibility of the vertical scrollbar.
            </summary>
            <value>
            One of the <see cref="T:NickLee.Views.Windows.Forms.ScrollBarVisibility" /> values.
            The default value is <see cref="F:NickLee.Views.Windows.Forms.ScrollBarVisibility.AsNeeded" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.ZoomAnimationSteps">
            <summary>
            Gets or sets the number of steps used for zoom animation.
            </summary>
            <value>The number of steps used for animation. The default value is
            <strong>0</strong> which means that there is no animation.</value>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollReservationSheet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScrollReservationSheet" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollReservationSheet.CreateGanttSheet">
            <summary>
            Creates the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> subcontrol used by this control.
            </summary>
            <returns>A new <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationSheet" /> instance.</returns>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollReservationSheet.GanttSheet">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationSheet" /> used to display the resource hierarchy
            in a Gantt model.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationSheet" /> control that displays the resource hierarchy
            in a Gantt model.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollReservationSheet.RowController">
            <summary>
            Gets or sets the row controller for the Reservation sheet.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Windows.Forms.IReservationRowController" /> object that defines the
            data to display in the Reservation sheet. The default value is <see langword="null" />.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ReservationChart">
            <summary>
            A Reservation chart is a chart that displays reservations.
            </summary>
            <remarks>
            <p>The reservation chart is made up of rows, each containing one single reservation.
            The left part of the chart displays information related to reservations.
            The right part of the chart shows a graphical representation of reservations.</p>
            <p><img src="reservationchart.png" /></p>
            <p>The <strong>ReservationChart</strong> control will display the information
            contained in a Gantt data model. You will set the Gantt data model of a <strong>ReservationChart</strong>
            using the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttModel" /> property.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to create a <strong>ScheduleChart</strong>
            and assign a Gantt data model to it.
            </para>
            <code lang="C#">
            Form form = new Form();

            // Creates the schedule chart
            ScheduleChart chart = new ScheduleChart();
            chart.Dock = DockStyle.Fill;

            // Adds the control to the form
            form.Controls.Add(chart);

            // Creates a Gantt model
            IGanttModel model = new SimpleGanttModel();
            IActivity activity = model.NewActivity();
            activity.Name = "My Activity";
            activity.StartTime = DateTime.Now;
            activity.Duration = TimeSpan.FromDays(5);
            model.Activities.Add(activity);
            IResource resource = model.NewResource();
            resource.Name = "My Resource";
            model.Resources.Add(resource);
            model.Reservations.Add(model.NewReservation(activity, resource));

            // Assigns Gantt model to the chart
            chart.GanttModel = model;

            // Changes start visible time
            chart.FirstVisibleTime = DateTime.Now;

            Application.Run(form);
            </code>
            <code lang="Visual Basic">
            Dim form1 As Form = New Form

            'Creates the schedule chart
            Dim chart As ScheduleChart = New ScheduleChart
            chart.Dock = DockStyle.Fill
            form.Controls.Add(chart)

            'Creates a Gantt model
            Dim model As IGanttModel = New SimpleGanttModel
            Dim activity As IActivity = model.NewActivity
            activity.Name = "My Activity"
            activity.StartTime = DateTime.Now
            activity.Duration = TimeSpan.FromDays(5)
            model.Activities.Add(activity)
            Dim resource As IResource = model.NewResource
            resource.Name = "My Resource"
            model.Resources.Add(resource)
            model.Reservations.Add(model.NewReservation(activity, resource))

            'Assigns Gantt model to the chart
            chart.GanttModel = model

            'Changes start visible time
            chart.FirstVisibleTime = DateTime.Now
            Application.Run(form)
            </code>
            </example>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ResourceTable" />
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.IReservationRowController">
            <summary>
            A specialization of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.IGanttRowController" /> interface for
            reservations.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.IReservationRowController.GetCurrentReservation">
            <summary>
            When implemented by a class, retrieves the current reservation.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.IReservationRowController.GetReservationAt(System.Int32)">
            <summary>
            When implemented by a class, retrieves the <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> at the specified index.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.IReservationRowController.GetSelectedReservations">
            <summary>
            When implemented by a class, retrieves an array of the selected reservations.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationChart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationChart" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationChart.CreateGanttTable">
            <summary>
            Creates the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationTable" /> control displayed in this Schedule chart.
            </summary>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationTable" /> class.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationChart.CreateScrollGanttSheet">
            <summary>
            Creates the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet" /> control displayed in this Reservation chart.
            </summary>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScrollReservationSheet" /> class.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationChart.GetCurrentReservation">
            <summary>
            Returns the current reservation in the table.
            </summary>
            <returns>The current <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> in the table.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationChart.GetReservationAt(System.Int32)">
            <summary>
            Gets the reservation displayed at the specified row index.
            </summary>
            <param name="rowIndex">The row index.</param>
            <returns>The <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> displayed at the specified row index.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationChart.GetRowHeight(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Gets the height of the specified reservation.
            </summary>
            <param name="reservation">The reservation.</param>
            <returns>The height of <paramref name="reservation" />.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="reservation" /> is not
            part of the Gantt model.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationChart.GetSelectedReservations">
            <summary>
            Retrieves an array containing the selected reservations.
            </summary>
            <returns>An array containing the selected reservations.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationChart.IsRowVisible(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Gets a value indicating whether the specified reservation is visible.
            </summary>
            <param name="reservation">An <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> to test.</param>
            <returns>A value indicating whether the specified reservation is visible.</returns>
            <remarks>
            A reservation is said to be visible when all its ancestors are expanded.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationChart.MoveReservationDown(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Moves down the specified reservation.
            </summary>
            <param name="reservation">The reservation to move down.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationChart.MoveReservationUp(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Moves up the specified reservation.
            </summary>
            <param name="reservation">The reservation to move up.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationChart.SetRowHeight(NickLee.Views.Gantt.Data.IReservation,System.Int32)">
            <summary>
            Sets the height of the specified reservation.
            </summary>
            <param name="reservation">The reservation.</param>
            <param name="height">The new height.</param>
            <exception cref="T:System.ArgumentException"><paramref name="reservation" /> is not
            part of the Gantt model.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="height" /> is
            negative.</exception>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ReservationChart.GanttSheet">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> used to display the reservations of a Gantt model.
            </summary>
            <value>
            The <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> that displays the reservations of a Gantt model.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ReservationChart.GanttTable">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationTable" /> used to display the
            resource hierarchy in a Gantt model.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationTable" /> control that displays the
            resource hierarchy in a Gantt model.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.Design.DateIndicatorCollectionEditor">
            <summary>
            The collection editor for the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> in a
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.DateIndicatorCollectionEditor.#ctor(System.Type)">
            <summary>
            Creates the collection editor.
            </summary>
            <param name="type">The collection type</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.DateIndicatorCollectionEditor.CreateCollectionItemType">
            <summary>
            The edited type is <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.DateIndicatorCollectionEditor.CreateNewItemTypes">
            <summary>
            Allows to create <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> and
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.CurrentDateIndicator" /> instances.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.Design.CalendarAutoFormatDialog">
            <summary>
            A <c>Dialog</c> to choose predefined styles for a CalendarView.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.CalendarAutoFormatDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet">
            <summary>
            A chart that displays activities over the time.
            </summary>
            <remarks>
            <p>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" /> is made up of rows, each containing one single activity.
            The control displays a graphical representation of the duration of activities over time as
            well as constraints between activities.</p>
            <p><img src="activitysheet.png" /></p>
            <p>In order to display activities, the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" /> must be connected
            to a class that implements the <see cref="T:NickLee.Views.Gantt.Windows.Forms.IActivityRowController" /> interface such
            as the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityTable" /> or <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttChart" /> classes. To connect the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" /> use the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.RowController" /> property.</p>
            <p>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" /> inherits from the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" /> class that is
            the base class for controls displaying information over the time. In particular
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" /> defines the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.FirstVisibleTime" /> property
            that is the first visible time displayed by the control and the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.VisibleDuration" /> property that defines the period of time displayed by
            the control.</p>
            <p>In order to synchronize the time of several controls that are displaying time information,
            the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" /> control also defines the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeLine" />
            property. For example, to synchronize a <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> with a
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> object, you will set the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeLine" /> property
            of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> to the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> object.</p>
            <p>The base class <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> defines many appearence properties such as the
            back color, the color of selected rows, the font of the sheet, the vertical and horizontal
            grid lines.</p>
            <p>The appearance of an activity on a line depends on the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ActivityBarStyles" />
            property that defines the styles of bar to be used for activities depending on the type
            and current values of an activity. For more information of this topic see <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />.</p>
            <p>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" /> has several prebuilt interactions: the user can move or resize an activity bar
            using the mouse pointer to change the activity properties displayed by the bar. This interaction can be
            disabled by setting the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.CanEditActivities" /> property to
            <see langword="false" />. When modifying an activity property
            using the mouse pointer, the modification of the activity can be done at every mouse move or
            only when the user releases the mouse button. This is controlled by the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.InstantEditing" /> property. Before an activity is modified the
            <see cref="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.BeforeEditActivity" /> event is raised that allows you to cancel the
            modification or alert the user in some particular cases.</p>
            <p>The user can also create a constraint with the mouse by selecting the origin and
            destination activity of the constraint. To be in constraint creation mode, the user must
            first press the CTRL key. The creation of constraints can be disabled by setting the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.CanCreateConstraint" /> property to <see langword="false" />. Before a constraint
            is really created, the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.BeforeCreateConstraint" /> event is raised. It allows you
            to cancel the creation or alert the user in some particular cases.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to get the <strong>ActivitySheet</strong>
            from a <strong>GanttChart</strong>.
            </para>
            <code lang="C#">
            GanttChart gantt = new GanttChart();
            ActivitySheet sheet = gantt.GanttSheet;
            </code>
            <code lang="Visual Basic">
            Dim chart As New GanttChart
            Dim sheet As ActivitySheet = gantt.GanttSheet
            </code>
            </example>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to recreate a Gantt Chart
            using an <strong>ActivitySheet</strong>, an <strong>ActivityTable</strong>,
            a <strong>TimeScale</strong> and a <strong>Splitter</strong>.
            </para>
            <code lang="C#">
            Form form = new Form();

            // Creates the activity table
            ActivityTable table = new ActivityTable();
            table.Dock = DockStyle.Left;

            // Makes the column header height the same as the time scale height
            int scaleRowCount = 2;
            table.ColumnHeaderHeight = scaleRowCount * (6+Control.DefaultFont.Height) - 2;

            // Create a panel that will contain the
            // time scale and the Gantt sheet.
            Panel panel = new Panel();
            panel.BorderStyle = BorderStyle.Fixed3D;
            panel.Dock = DockStyle.Fill;

            // Creates the time scale
            TimeScale scale = new TimeScale();
            scale.Dock = DockStyle.Top;
            scale.BorderStyle = BorderStyle.None;

            // Create the Gantt sheet
            ActivitySheet sheet = new ActivitySheet();
            sheet.Dock = DockStyle.Fill;
            sheet.BorderStyle = BorderStyle.None;

            // Row synchonization between Gantt sheet and table
            sheet.RowController = table;

            // Time synchronization between Gantt sheet and time scale
            sheet.TimeLine = scale;

            // Adds the time scale and Gantt sheet
            panel.Controls.Add(sheet);
            panel.Controls.Add(scale);

            // Creates the splitter
            Splitter splitter = new Splitter();
            splitter.Dock = DockStyle.Left;

            // Adds the controls to the form
            form.Controls.AddRange(new Control[] {panel, splitter, table});

            // Creates a Gantt model
            IGanttModel model = new SimpleGanttModel();
            IActivity activity = model.NewActivity();
            activity.Name = "My Activity";
            activity.StartTime = DateTime.Now;
            activity.Duration = TimeSpan.FromDays(5);
            model.Activities.Add(activity);

            // Assign Gantt model to the table
            table.GanttModel = model;

            // Change start time of Gantt sheet
            sheet.FirstVisibleTime = DateTime.Now;

            Application.Run(form);
            </code>
            <code lang="Visual Basic">
            Dim f As Form = New Form

            ' Creates the activity table
            Dim table As ActivityTable = New ActivityTable
            table.Dock = DockStyle.Left

            ' Makes the column header height the same as the time scale height
            Dim scaleRowCount As Integer = 2
            table.ColumnHeaderHeight = ((scaleRowCount * (6 + Control.DefaultFont.Height)) - 2)

            ' Create a panel that will contain the
            ' time scale and the Gantt sheet.
            Dim panel As Panel = New Panel
            panel.BorderStyle = BorderStyle.Fixed3D
            panel.Dock = DockStyle.Fill

            ' Creates the time scale
            Dim scale As TimeScale = New TimeScale
            scale.Dock = DockStyle.Top
            scale.BorderStyle = BorderStyle.None

            ' Create the Gantt sheet
            Dim sheet As ActivitySheet = New ActivitySheet
            sheet.Dock = DockStyle.Fill
            sheet.BorderStyle = BorderStyle.None

            ' Row synchonization between Gantt sheet and table
            sheet.RowController = table

            ' Time synchronization between Gantt sheet and time scale
            sheet.TimeLine = scale

            ' Adds the time scale and Gantt sheet
            panel.Controls.Add(sheet)
            panel.Controls.Add(scale)

            ' Creates the splitter
            Dim splitter As Splitter = New Splitter
            splitter.Dock = DockStyle.Left

            ' Adds the controls to the form
            f.Controls.AddRange(New Control(3) {panel,splitter, table})

            ' Creates a Gantt model
            Dim model As IGanttModel = New SimpleGanttModel
            Dim activity As IActivity = model.NewActivity
            activity.Name = "My Activity"
            activity.StartTime = DateTime.Now
            activity.Duration = TimeSpan.FromDays(5)
            model.Activities.Add(activity)

            ' Assign Gantt model to the table
            table.GanttModel = model

            ' Change start time of Gantt sheet
            sheet.FirstVisibleTime = DateTime.Now
            Application.Run(f)
            </code>
            </example>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.GanttChart" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationSheet" />
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet">
            <summary>
            Defines an <see langword="abstract" /> base class for <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" />,
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" />, and <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationSheet" /> classes.
            </summary>
            <remarks>
            <p>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> class regroups functionalities that are common to the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" />, <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" /> and <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationSheet" /> classes.
            The control is made up of rows, the content of each row is defined by the subclasses.</p>
            <p>The information displayed in rows depends on time. The <strong>GanttSheet</strong> control
            inherits from the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" /> class that is the base class for the Gantt
            controls that are displaying information over time. In particular <strong>TimeControl</strong>
            defines the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.FirstVisibleTime" /> property that is the first visible time
            displayed by the control and the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.VisibleDuration" /> property that
            defines the period of time displayed by the control.</p>
            <p>In order to synchronize the time of several controls that are displaying time information,
            the <strong>TimeControl</strong> control also defines the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeLine" />
            property. For example, to synchronize a <strong>GanttSheet</strong> with a
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> object, you will set the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeLine" /> property
            of the <strong>GanttSheet</strong> to the <strong>TimeScale</strong> object.</p>
            <p>The control contains a horizontal scrollbar that allows you to scroll over the time. This
            scrollbar is an instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar" />
            class. The minimum and maximum scrolling time is defined by the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.TimeBounds" />
            property, by default the minimum and maximum scrolling time are computed by the bounds of the
            activities displayed in the <strong>GanttSheet</strong>.</p>
            <p>The class defines many appearance properties such as the color of rows, the color and
            appearance of horizontal grid lines between rows, the color of selected rows and the font.
            It also defines the vertical time grids through the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.TimeGrids" /> property that
            contains a collection of <strong>TimeGrid</strong> objects. The control can also display
            vertical lines displaying particular dates such as the current date through the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.DateIndicators" /> property.</p>
            <p>The control also defines the way activities will be rendered through the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ActivityBarStyles" /> property that defines the styles of bar to be used for
            activities depending on the type and current values of an activity. For more information of
            this topic see <strong>ActivityBarStyle</strong>.</p>
            </remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.TimeControl">
            <summary>
            Defines the <see langword="abstract" /> base class for controls that
            are displaying information on a time period.
            </summary>
            <remarks>
            <p>The <strong>TimeControl</strong> class is the base class
            for controls that are displaying information on a time period
            such as the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" />, <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> or
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.LoadChart" />.</p>
            <p>The displayed time period is defined by the
            properties <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.FirstVisibleTime" /> and <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.VisibleDuration" />.
            Changing the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.FirstVisibleTime" /> property will scroll the control
            in time. Changing the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.VisibleDuration" /> property will
            zoom in or out the time period.</p>
            <p>Time based data is displayed in the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeRectangle" /> area.
            This area can be customized by setting margins using the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeMargins" />
            property.</p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" /> class.
            </summary>
            <remarks>An instance of <see cref="T:NickLee.Views.Gantt.LinearTimeLine" /> is created and connected
            to this control.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.#ctor(NickLee.Views.Gantt.ITimeLine)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" /> class with the specified
            time line object.
            </summary>
            <param name="timeLine">An <see cref="T:NickLee.Views.Gantt.ITimeLine" /> instance.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.BeginInit">
            <summary>
            Begins the initialization of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" /> that is used on a form or used
            by another component. The initialization occurs at runtime.
            </summary>
            <remarks>The Visual Studio .NET design environment uses this method
            to start the initialization of a component that is used on a form
            or used by another component. The <see cref="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.EndInit" /> method ends the
            initialization. The use of <strong>BeginInit</strong> and <strong>EndInit</strong> methods prevents the
            control from being used before it is fully initialized.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.BeginUpdate">
            <summary>
            Disables any redrawing of the control.
            </summary>
            <remarks>
            To maintain performance while several modifications are occuring on the control,
            call the <strong>BeginUpdate</strong> method. The <strong>BeginUpdate</strong> method
            prevents the control from painting until the <see cref="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.EndUpdate" /> method is called.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.Dispose(System.Boolean)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.Dispose(System.Boolean)">Control.Dispose</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.EndInit">
            <summary>
            Ends the initialization of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" /> that is used on a form or
            used by another component. The initialization occurs at runtime.
            </summary>
            <remarks>
            The Visual Studio .NET design environment uses this method to end
            the initialization of a component that is used on a form or used by
            another component. The <see cref="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.BeginInit" /> method starts the initialization.
            The use of <strong>BeginInit</strong> and <strong>EndInit</strong> methods prevents the control
            from being used before it is fully initialized.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.EndUpdate">
            <summary>
            Enables the redrawing of the control.
            </summary>
            <remarks>
            To maintain performance while several modifications are occuring on the control,
            call the <strong>BeginUpdate</strong> method. The <strong>BeginUpdate</strong> method
            prevents the control from painting until the <see cref="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.EndUpdate" /> method is called.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.EnsureVisible(System.DateTime)">
            <summary>
            Scrolls the time line so that the specified date is visible.
            </summary>
            <param name="time">A <see cref="T:System.DateTime" /> structure.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.GetIntervalBounds(NickLee.Views.Gantt.DateTimeInterval)">
            <summary>
            Retrieves the bounds of the specified time interval.
            </summary>
            <param name="interval">The time interval.</param>
            <returns>A new <see cref="T:System.Drawing.RectangleF" /> structure.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.GetIntervalBounds(System.DateTime,System.DateTime)">
            <summary>
            Retrieves the bounds of the specified time interval.
            </summary>
            <param name="startTime">The start time of the interval.</param>
            <param name="endTime">The end time of the interval.</param>
            <returns>A new <see cref="T:System.Drawing.RectangleF" /> structure.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.GetLocation(System.DateTime)">
            <summary>
            Gets the pixel location of the specified <see cref="T:System.DateTime" /> structure.
            </summary>
            <param name="time">A <see cref="T:System.DateTime" /> structure.</param>
            <returns>A <see cref="T:System.Double" /> that corresponds to the pixel location of
            <paramref name="time" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.GetSizeOf(NickLee.Views.Gantt.DateTimeInterval)">
            <summary>
            Retrieves the width of the specified time interval.
            </summary>
            <param name="interval">The time interval.</param>
            <returns>A <see cref="T:System.Single" /> that represents the width of the time interval
            specified by <paramref name="interval" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.GetSizeOf(System.DateTime,System.DateTime)">
            <summary>
            Retrieves the width of the specified time interval.
            </summary>
            <param name="startTime">The start time of the interval.</param>
            <param name="endTime">The end time of the interval.</param>
            <returns>A <see cref="T:System.Single" /> that represents the width of the time interval
            specified by <paramref name="start" /> and <paramref name="end" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.GetTime(System.Int32)">
            <summary>
            Retrieves the <see cref="T:System.DateTime" /> structure corresponding to the specified pixel location.
            </summary>
            <param name="x">An <see cref="T:System.Int32" /> that represents a pixel location.</param>
            <returns>A new <see cref="T:System.DateTime" /> structure.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.GetTime(System.DateTime,System.Double)">
            <summary>
            Converts the specified <see cref="T:System.Double" /> value to a date.
            </summary>
            <param name="reference">The reference time.</param>
            <param name="units">The double value to convert.</param>
            <returns>A <see cref="T:System.DateTime" /> structure that corresponds to the conversion
            of <paramref name="units" /> when the reference of the time is
            <paramref name="reference" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.GetUnits(System.DateTime,System.DateTime)">
            <summary>
            Gets the distance in pixels between two dates.
            </summary>
            <param name="startTime">The first time.</param>
            <param name="endTime">The second time.</param>
            <returns>A <see cref="T:System.Double" /> that corresponds to the
            distance in pixels between the two dates.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.OnBackColorChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">Control.OnBackColorChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.OnBackgroundColorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.BackgroundColor" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>BackgroundColor</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.OnBorderStyleChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.TimeControl.BorderStyleChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
            <remarks>Called when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.BorderStyle" /> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.OnCreateControl">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnCreateControl">Control.OnCreateControl</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">Control.OnPaintBackground</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.OnReferenceDateChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.TimeControl.ReferenceDateChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
            <remarks>Called when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.ReferenceDate" /> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.OnResize(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnResize(System.EventArgs)">Control.OnResize</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.OnRightToLeftChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">Control.OnRightToLeftChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.OnTimeLineChanged">
            <summary>
            This method is called when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeLine" /> property has
            changed on the control.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.OnTimeLineChanged(NickLee.Views.Gantt.TimeLineChangeEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeLineChanged" /> event.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.TimeLineChangeEventArgs" /> that contains the event data.</param>
            <remarks>Called when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeLine" /> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.OnTimeLineChanging(NickLee.Views.Gantt.TimeLineChangeEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeLineChanging" /> event.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.TimeLineChangeEventArgs" /> that contains the event data.</param>
            <remarks>Called before the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeLine" /> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.OnTimeRectangleChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeRectangleChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
            <remarks>Called when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeRectangle" /> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.OnVisibleDurationChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.TimeControl.VisibleDurationChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
            <remarks>Called when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.VisibleDuration" /> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.OnVisibleWidthChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.TimeControl.VisibleWidthChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.ScrollLeft">
            <summary>
            Scrolls the time line to the left.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.ScrollRight">
            <summary>
            Scrolls the time line to the right.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.SetTimeInterval(System.DateTime,System.DateTime)">
            <summary>
            Zooms the control so that it displays the specified time range.
            </summary>
            <param name="startTime">The start time of the time range.</param>
            <param name="endTime">The end time of the time range.</param>
            <remarks>After calling this method, the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.FirstVisibleTime" /> is
            <paramref name="startTime" />, and the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.LastVisibleTime" /> is
            <paramref name="endTime" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.SetTimeInterval(System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            Zooms the control so that it displays the specified time range.
            </summary>
            <param name="startTime">The start time of the time range.</param>
            <param name="endTime">The end time of the time range.</param>
            <param name="animate">A Boolean value that indicates if zooming should be animated.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.SetTimeInterval(System.DateTime,System.DateTime,System.Single)">
            <summary>
            Changes the time conversion of the control to match the specified time range.
            </summary>
            <param name="startTime">The start time of the time range.</param>
            <param name="endTime">The end time of the time range.</param>
            <param name="width">The width of the time line.</param>
            <remarks>After calling this method, the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.FirstVisibleTime" /> should be
            <paramref name="startTime" />, and calling <see cref="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.GetTime(System.DateTime,System.Double)" /> with
            <paramref name="startTime" /> and <paramref name="endTime" /> as parameters
            should return <paramref name="width" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeLineHasChanged(System.Object,NickLee.Views.Gantt.TimeLineChangeEventArgs)">
            <summary>
            Is called when the time line has changed.
            </summary>
            <param name="sender">The source object of the event.</param>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.TimeLineChangeEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeLineIsChanging(System.Object,NickLee.Views.Gantt.TimeLineChangeEventArgs)">
            <summary>
            Is called when the time line is changing.
            </summary>
            <param name="sender">The source object of the event.</param>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.TimeLineChangeEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.ToImage">
            <summary>
            Creates and returns an <see cref="T:System.Drawing.Image" /> that represents the control.
            </summary>
            <returns>A <see cref="T:System.Drawing.Image" />.</returns>
            <remarks>The format of the returned image is
            <see cref="F:System.Drawing.Imaging.PixelFormat.Format32bppArgb" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.ToImage(System.Drawing.Imaging.PixelFormat)">
            <summary>
            Creates and returns an <see cref="T:System.Drawing.Image" /> that represents the control.
            </summary>
            <param name="format">The format of the returned image.</param>
            <returns>A <see cref="T:System.Drawing.Image" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.ZoomIn">
            <summary>
            Zooms in the time line.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.ZoomOut">
            <summary>
            Zooms out the time line.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.TimeControl._borderStyle">
            <summary>
            The border style. Note that initialization must be implemented here.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.TimeControl._timeRectangle">
            <summary>
            Caches the area where time information is displayed, this
            is the client rectangle minus the margin areas.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.TimeControl._updating">
            <summary>
            Counter for [Begin|End]Update calls.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.TimeControl.BackgroundColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.BackgroundColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.TimeControl.BorderStyleChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.BorderStyle" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.TimeControl.ReferenceDateChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.ReferenceDate" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeLineChanged">
            <summary>
            Occurs when the time line has changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeLineChanging">
            <summary>
            Occurs when the time line is changing.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeRectangleChanged">
            <summary>
            Occurs when the rectangle displaying time related information has changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.TimeControl.VisibleDurationChanged">
            <summary>
            Occurs when the visible time duration has changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.TimeControl.VisibleWidthChanged">
            <summary>
            Occurs when the visible width has changed.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.BackColor">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.BackColor">Control.BackColor</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.BackgroundColor">
            <summary>
            Gets or sets the background color of the non-time rectangle area.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the background for the
            area not located in the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeRectangle" />.
            The default value inherits from <see cref="P:System.Windows.Forms.Control.BackColor" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.BorderStyle">
            <summary>
            Gets or sets the border style of the control.
            </summary>
            <value>
            One of the <see cref="T:System.Windows.Forms.BorderStyle" /> values. The default value is <strong>Fixed3D</strong>.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.CreateParams">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.CreateParams">Control.CreateParams</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.FirstVisibleTime">
            <summary>
            Gets or sets the first visible time of the control.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure that represents the first visible time of the control.</value>
            <remarks>The first visible time is the first date displayed by the control. When the value is changed,
            the <see cref="E:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeLineChanging" /> and <see cref="E:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeLineChanged" /> events are raised.</remarks>
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeLineChanging" />
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeLineChanged" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeLine" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.ForeColor">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.ForeColor">Control.ForeColor</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.IsInitializing">
            <summary>
            Indicates whether the control is being initialized.
            </summary>
            <value><see langword="true" /> if the control is being initialized;
            <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.LastVisibleTime">
            <summary>
            Gets or sets the last visible time of the control.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.ReferenceDate">
            <summary>
            A date used as a reference to compute date intervals.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.Text">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.Text">Control.Text</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeLine">
            <summary>
            Gets or sets the <see cref="T:NickLee.Views.Gantt.ITimeLine" /> object that controls how the object is displaying time.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.ITimeLine" /> instance that controls how the object is displaying time.</value>
            <exception cref="T:System.ArgumentException">The propety value is not valid because it would
            create a circular list of <see cref="T:NickLee.Views.Gantt.ITimeLine" /> objects leading to a stack
            overflow.</exception>
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeLineChanging" />
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeLineChanged" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.FirstVisibleTime" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeMargins">
            <summary>
            Gets or sets the margins for the control.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl.Margins" /> that represents the margins (in pixels) for the time rectangle of the control.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeRectangle">
            <summary>
            Gets the rectangle where time information is displayed
            </summary>
            <value>A <see cref="T:System.Drawing.Rectangle" /> structure.</value>
            <remarks>When this value changes, the <see cref="E:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeRectangleChanged" /> is
            raised.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.VisibleDuration">
            <summary>
            Gets the visible time duration displayed by the control.
            </summary>
            <value>A <see cref="T:System.TimeSpan" /> structure that represents the visible time duration displayed by the control.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The property value is negative.</exception>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.VisibleTimeInterval">
            <summary>
            Gets or sets the visible time interval of the control.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.ZoomAnimationSteps">
            <summary>
            Gets or sets the number of steps used for zoom animation.
            </summary>
            <value>The number of steps used for animation. The default value is
            <strong>0</strong> which means that there is no animation.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The property value is negative.</exception>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.TimeControl.Margins">
            <summary>
            Specifies the margins of the time rectangle inside a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.Margins.#ctor(NickLee.Views.Gantt.Windows.Forms.TimeControl)">
            <summary>
            Initializes a new instance of <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl.Margins" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.Margins.Equals(System.Object)">
            <summary>
            This member overrides <see cref="M:System.Object.Equals(System.Object)">Object.Equals</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.Margins.GetHashCode">
            <summary>
            This member overrides <see cref="M:System.Object.GetHashCode" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.Margins.SetMargins(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the margins.
            </summary>
            <param name="left">The left margin.</param>
            <param name="right">The right margin.</param>
            <param name="top">The top margin.</param>
            <param name="bottom">The bottom margin.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.Margins.ToString">
            <summary>
            This member overrides <see cref="M:System.Object.ToString">Object.ToString</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.Margins.All">
            <summary>
            Gets or sets the left, right, top and bottom margins, in pixels.
            </summary>
            <value>The margin in pixels.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.Margins.Bottom">
            <summary>
            Gets or sets the bottom margin, in pixels.
            </summary>
            <value>The margin in pixels.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.Margins.Left">
            <summary>
            Gets or sets the left margin, in pixels.
            </summary>
            <value>The margin in pixels.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.Margins.Right">
            <summary>
            Gets or sets the right margin, in pixels.
            </summary>
            <value>The margin in pixels.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.Margins.Top">
            <summary>
            Gets or sets the top margin, in pixels.
            </summary>
            <value>The margin in pixels.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.TimeControl.PrintContext">
            <summary>
            This class keeps the parameters specific to the drawing context
            (painting or printing).
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet.activityStartDelta">
            <summary>
            Size of hit testing region on borders of activity
            bar for resizing.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet.FlagCanEditActivities">
            <summary>
            Flag indicating whether activities can be moved and resized using the mouse.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet.FlagCursorNeedRestore">
            <summary>
            Flag indicating whether the horizontal scrollbar is visible.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet.FlagEnableStyleToolTip">
            <summary>
            Indicates if the table can multi select lines
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet.FlagHScrollBarVisible">
            <summary>
            Flag indicating whether the horizontal scrollbar is visible.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet.FlagInstantEditing">
            <summary>
            Flag to store the value of <strong>InstantEditing</strong> property.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet.FlagMultiSelect">
            <summary>
            Indicates if the table can multi select lines
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet.FlagPaintGridToBottom">
            <summary>
            Flag indicating whether the vertical grid is painted down to the bottom of the component.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet.FlagRightToLeft">
            <summary>
            Flag indicating whether the control is in <strong>RightToLeft</strong>.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet.FlagSettingVerticalScrollbarValues">
            <summary>
            Flag indicating that we are currently setting vertical scrollbar values.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet.FlagShowEditingTooltips">
            <summary>
            Flag to store the value of <strong>ShowEditingTooltips</strong> property.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet.FlagShowSelectedRows">
            <summary>
            Flag to store the value of <strong>ShowSelectedRows</strong> property.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet.FlagShowTooltips">
            <summary>
            Flag to store the value of <strong>ShowTooltips</strong> property.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet.FlagTimeRectangleValid">
            <summary>
            Flag indicating whether the time rectangle cache is valid.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet.FlagVScrollBarVisible">
            <summary>
            Flag indicating whether the vertical scrollbar is visible.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.#cctor">
            <summary>
            Static initialization.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.#ctor">
            <summary>
            Creates and initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.CreateDefaultBarStyles">
            <summary>
            Creates the default bar styles for rendering the activities.
            </summary>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ActivityBarStyles" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.CreateDefaultGrids">
            <summary>
            Creates the default vertical grids used in the sheet.
            </summary>
            <remarks>The method creates the default <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> objects of the grids
            and add them to the grid collection.<br></br>
            By default, the method creates an instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid" /> class and
            an instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.WorkingTimesGrid" /> class.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.TimeGrids" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.CreateDefaultTimeRange">
            <summary>
            Is called to create the default time range for the Gantt sheet.
            </summary>
            <returns>An <see cref="T:NickLee.Views.Gantt.ITimeRange" /> implementation instance.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.CreateScrollBars">
            <summary>
            Creates vertical and horizontal scrollbars.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.Dispose(System.Boolean)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.Dispose(System.Boolean)">TimeControl.Dispose</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.EnsureRowVisible(System.Int32)">
            <summary>
            Scrolls the sheet so that the specified row becomes
            visible.
            </summary>
            <param name="rowIndex">The row index.</param>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="rowIndex" />
            is not between <strong>0</strong> and <strong>RowCount-1</strong>.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.FireEvent(System.Object,System.EventArgs)">
            <summary>
            Fires an event based on key in the <strong>Events</strong> list.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GetActivityBarStyles(System.Object)">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" /> used to display the specified object.
            </summary>
            <remarks>If the method returns <see langword="null" /> then the object will not be displayed.</remarks>
            <param name="obj">The object to display.</param>
            <returns>An <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" /> to display the object or <see langword="null" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GetActivityToolTip(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Gets the text that will be displayed in the tooltip of the
            specified activity.
            </summary>
            <param name="activity">The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to compute the tooltip text for.</param>
            <returns>The tooltip text.</returns>
            <remarks>
            The tooltips for activities will be displayed only
            if the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ShowTooltips" /> property is set to <see langword="true" />.
            The default tooltip text contains the name, start time, end time, and duration
            of the activity.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GetFlag(System.UInt16)">
            <summary>
            Gets the value of a flag.
            </summary>
            <param name="flag">The flag.</param>
            <returns>The value of a flag.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GetGanttSheet(System.Object)">
            <summary>
            Returns a GanttSheet from the specified object.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GetRowBounds(System.Int32)">
            <summary>
            Gets the bounding rectangle of the specified row.
            </summary>
            <param name="rowIndex">The index of the row to compute.</param>
            <returns>The bounding rectangle of the row.</returns>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GetRowPosition(System.Int32)" />
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GetRowHeight(System.Int32)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GetRowHeight(System.Int32)">
            <summary>
            Gets the height of the specified row.
            </summary>
            <param name="rowIndex">The row index.</param>
            <returns>The height of the specified row.</returns>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="rowIndex" />
            is not between <strong>0</strong> and <strong>RowCount-1</strong>.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GetRowHeightSum">
            <summary>
            Computes the sum of all the row heights.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GetRowPosition(System.Int32)">
            <summary>
            Gets the vertical position of the specified row.
            </summary>
            <param name="rowIndex">The index of the row to compute.</param>
            <returns>The vertical position of the specified row.
            </returns>
            <remarks>The vertical position of the row may be outside of the control
            visible area.
            </remarks>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GetRowBounds(System.Int32)" />
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GetRowHeight(System.Int32)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GetStyleCursor(System.Object,NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle,NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.EditAction)">
            <summary>
            Gets the cursor that will be displayed when hovering the specified style.
            </summary>
            <param name="obj">The object being hovered.</param>
            <param name="style">The style being hovered.</param>
            <param name="action">The action for which the cursor will be used.</param>
            <returns>A <see cref="T:System.Windows.Forms.Cursor" /> reference.</returns>
            <remarks>
            The default implementation calls the <see cref="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.GetCursor(System.Object,NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.EditAction)" /> method
            on the <paramref name="style" /> reference. If the method returns <see langword="null" />, then
            the Gantt sheet will use its own cursors defined by the following properties: <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.MoveCursor" />,
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SizeWestCursor" />, and <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SizeEastCursor" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GetStyleEditAction(System.Object,NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle,NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTestType)">
            <summary>
            Gets the action that will happen on an object when it's being hovered.
            </summary>
            <param name="obj">The object being hovered.</param>
            <param name="style">The style being hovered.</param>
            <param name="type">One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTestType" /> values.</param>
            <returns>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.EditAction" /> values.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GetStyleToolTip(System.Object,NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle)">
            <summary>
            Gets the text that will be displayed in the tooltip of the
            specified activity bar style.
            </summary>
            <param name="obj">The object to compute the tooltip text for.</param>
            <param name="style">The style from which the tooltip text is to be computed.</param>
            <returns>The tooltip text.</returns>
            <remarks>
            <p>The tooltips for activities will be displayed only
            if the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ShowTooltips" /> property is set to <see langword="true" />.</p>
            <p>This method is only called if the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.EnableStyleToolTips" /> property is
            set to <see langword="true" /></p>.
            </remarks>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GetActivityToolTip(NickLee.Views.Gantt.Data.IActivity)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.HandleVerticalScroll(System.Object,System.EventArgs)">
            <summary>
            Invoked when the vertical scrollbar value changed.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.HandleVerticalScrollBarScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Invoked on the vertical scrollbar Scroll Event.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.HitTest(System.Drawing.Point)">
            <summary>
            Gets information about the control at a specified point on the screen.
            </summary>
            <param name="point">A <see cref="T:System.Drawing.Point" /> that represents single x,y coordinate.
            </param>
            <returns>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet.HitTestInfo" /> that contains specific information about the schedule sheet.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.InitColors">
            <summary>
            Initializes the colors.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.InvalidateRow(System.Int32)">
            <summary>
            Invalidates the specified row.
            </summary>
            <param name="rowIndex">The index of the row to invalidate.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.IsActivityEditable(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Indicates if the specified activity can be edited using the mouse pointer.
            </summary>
            <param name="activity">The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to test.</param>
            <returns><see langword="true" /> if the the user can change the start and
            end time of the activity using the mouse pointer; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.IsHorizontalScrollBarNeeded">
            <summary>
            Checks if the horizontal scrollbar is needed.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)">Control.IsInputKey</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.IsVerticalScrollBarNeeded">
            <summary>
            Checks if the vertical scrollbar is needed.
            </summary>
            <remarks>The computation takes into account the visibility status
            of the other scrollbar.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.LayoutScrollBars">
            <summary>
            Places the scrollbars depending on the orientation.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnActivityBarHeightChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ActivityBarHeight" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>ActivityBarHeight</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnActivityToolTipChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ActivityToolTip" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>ActivityToolTip</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnAlternatingBackColorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.AlternatingBackColor" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
            <remarks>Called when the <strong>AlternatingBackColor</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnBackColorChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">Control.OnBackColorChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnBeforeEditActivity(NickLee.Views.Gantt.Windows.Forms.BeforeEditActivityEventArgs)">
            <summary>
            Invoked before the time interval of an activity is changed by the user interaction.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.Windows.Forms.BeforeEditActivityEventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnBeginInteraction(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.BeginInteraction" /> event.
            </summary>
            <param name="args">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnBorderStyleChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.OnBorderStyleChanged(System.EventArgs)">TimeControl.OnBorderStyleChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnCanEditActivitiesChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.CanEditActivities" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>CanEditActivities</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnCreateControl">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnCreateControl">Control.OnCreateControl</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnDrawRow(NickLee.Views.Gantt.Windows.Forms.DrawGanttSheetRowEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.DrawRow" /> event.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.Windows.Forms.DrawGanttSheetRowEventArgs" /> that contains the event data.</param>
            <remarks>Called to draw a Gantt sheet row when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OwnerDraw" /> property
            is set to <see langword="true" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnEnableStyleToolTipsChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.EnableStyleToolTips" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>EnableStyleToolTips</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnEndInteraction(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.EndInteraction" /> event.
            </summary>
            <param name="args">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnFontChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">Control.OnFontChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnGanttModelChanged">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GanttModel" /> property has changed.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnGanttModelChanging">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GanttModel" /> property is going to change.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnGanttRowControllerChanged">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.RowController" /> property has changed.
            </summary>
            <remarks>Called when the <strong>RowController</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnGanttRowControllerChanging(NickLee.Views.Gantt.Windows.Forms.IGanttRowController)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.RowController" /> property is going to change.
            </summary>
            <param name="rowController">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.IGanttRowController" /> that is going to be associated with
            the sheet.</param>
            <remarks>Called before the <strong>RowController</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnGridLineColorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GridLineColor" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>GridLineColor</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnGridLineStyleChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GridLineStyle" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>GridLineStyle</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnInstantEditingChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.InstantEditing" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>InstantEditing</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnInteractionException(System.UnhandledExceptionEventArgs)">
            <summary>
            Invoked when an exception has occured during an interaction in the control.
            </summary>
            <param name="args">An <see cref="T:System.UnhandledExceptionEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)">Control.OnKeyDown</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">Control.OnMouseDown</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">Control.OnMouseWheel</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnMoveCursorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.MoveCursor" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>MoveCursor</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnMultiSelectChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.MultiSelect" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>MultiSelect</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnOwnerDrawChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OwnerDraw" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>OwnerDraw</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the Gantt sheet.
            </summary>
            <param name="pe">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains data for painting.</param>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.PaintRow(System.Drawing.Graphics,System.Int32,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Brush,System.Drawing.Brush,System.Boolean)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">Control.OnPaintBackground</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnQueryActivityEditable(NickLee.Views.Gantt.Windows.Forms.QueryActivityEditableEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.QueryActivityEditable" /> event.
            </summary>
            <param name="args">A <see cref="T:NickLee.Views.Gantt.Windows.Forms.QueryActivityEditableEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnRightToLeftChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)">Control.OnRightToLeftChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnSelectionBackColorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SelectionBackColor" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>SelectionBackColor</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnSelectionForeColorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SelectionForeColor" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>SelectionForeColor</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnShowEditingToolTipsChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ShowEditingToolTips" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>ShowEditingToolTips</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnShowSelectedRowsChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ShowSelectedRows" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>ShowSelectedRows</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnShowToolTipsChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ShowTooltips" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>ShowTooltips</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnSizeEastCursorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SizeEastCursor" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>SizeEastCursor</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnSizeWestCursorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SizeWestCursor" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>SizeWestCursor</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)">Control.OnSystemColorsChanged</see>
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnTimeLineChanged(NickLee.Views.Gantt.TimeLineChangeEventArgs)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.OnTimeLineChanged">TimeControl.OnTimeLineChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnTimeLineChanging(NickLee.Views.Gantt.TimeLineChangeEventArgs)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.OnTimeLineChanging(NickLee.Views.Gantt.TimeLineChangeEventArgs)">TimeControl.OnTimeLineChanging</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnTimeRectangleChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.OnTimeRectangleChanged(System.EventArgs)">TimeControl.OnTimeRectangleChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnVerticalGridToBottomChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.VerticalGridToBottom" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>VerticalGridToBottom</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.PaintRectangleBetweenScrollBars(System.Drawing.Graphics)">
            <summary>
            Paints the rectangle between the two scrollbars when needed.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.PaintRow(System.Drawing.Graphics,System.Int32,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Brush,System.Drawing.Brush,System.Boolean)">
            <summary>
            Paints a row of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> in which to draw.</param>
            <param name="rowIndex">The zero-based index of the row to draw.</param>
            <param name="rowBounds">The bounds of the row to draw.</param>
            <param name="font">The font that should be used to draw text.</param>
            <param name="fore">A <see cref="T:System.Drawing.Brush" /> structure that should be used as
            foreground color.</param>
            <param name="back">A <see cref="T:System.Drawing.Brush" /> structure that should be used as
            background color.</param>
            <param name="rightToLeft"><see langword="true" /> if the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />
            is being displayed in a right-to-left environment.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.PaintRowBackground(System.Drawing.Graphics,System.Int32,System.Drawing.Rectangle,System.Drawing.Brush)">
            <summary>
            Paints the background of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> row.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> in which to draw.</param>
            <param name="rowIndex">The zero-based index of the row to draw.</param>
            <param name="rowBounds">The bounds of the row to draw.</param>
            <param name="brush">A <see cref="T:System.Drawing.Brush" /> structure that should be used as
            foreground color.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.PositionFromRowIndex(System.Int32)">
            <summary>
            Gets the absolute position of a row.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.Print(System.Drawing.Printing.PrintPageEventArgs,NickLee.Views.Gantt.Windows.Forms.Printing.TimePrintContext,System.Drawing.RectangleF)">
            <summary>
            Prints the Gantt sheet component.
            </summary>
            <param name="pe">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains the event data.</param>
            <param name="context">
            A <see cref="T:NickLee.Views.Gantt.Windows.Forms.Printing.TimePrintContext">TimePrintContext</see> that contains common functionalities required to print the components of a Gantt chart that are based on the time.</param>
            <param name="bounds">A <see cref="T:System.Drawing.RectangleF" /> that contains the size of the area where the Gantt sheet component must be located in the printed page.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.RecomputeRowPositions(System.Int32)">
            <summary>
            Recomputes the indexed rows and their positions after some rows have been inserted
            or removed.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.RefreshFromRowController">
            <summary>
            Resets the rows of the sheet from the contents of the
            row controller.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ResetActivityBarStyles">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ActivityBarStyles" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ResetActivityToolTip">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ActivityToolTip" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ResetMoveActivityCursor">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.MoveActivityCursor" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ResetMoveCursor">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.MoveCursor" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ResetNonEditableActivities(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Removes the activity from the hashtable of 'non editable activities'
            because the activity was removed from the model.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ResetNonEditableActivities(System.Boolean)">
            <summary>
            Resets the hashtable of 'non editable activities when the
            activities / Gantt model have changed.
            </summary>
            <param name="keepState">Keep non editable activities that are still
            in the model</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ResetSizeEastCursor">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SizeEastCursor" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ResetSizeWestCursor">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SizeWestCursor" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ResetTimeBounds">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.TimeBounds" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.RestoreCursor">
            <summary>
            Restores a stored cursor.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.RowFromPosition(System.Int32)">
            <summary>
            Computes the index of the row at the specified position.
            </summary>
            <param name="position">The Y position.</param>
            <returns>The index of the row or -1 if the position
            does not correspond to a row.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.RowIndexFromPosition(System.Int32)">
            <summary>
            Gets the index of a row from an absolute position.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SetActivityEditable(NickLee.Views.Gantt.Data.IActivity,System.Boolean)">
            <summary>
            Makes the specified activity editable or non editable.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="activity" /> is
            <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="activity" /> is not in
            the Gantt data model.</exception>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.IsActivityEditable(NickLee.Views.Gantt.Data.IActivity)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">Control.SetBoundsCore</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SetFlag(System.UInt16,System.Boolean)">
            <summary>
            Sets or unsets the value of a flag.
            </summary>
            <param name="flag">The flag value.</param>
            <param name="value">The value of the flag</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SetRowHeight(System.Int32,System.Int32)">
            <summary>
            Sets the height of the specified row.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="newHeight">The new height.</param>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="rowIndex" />
            is not between <strong>0</strong> and <strong>RowCount-1</strong>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="newHeight" /> is negative.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SetTemporaryCursor(System.Windows.Forms.Cursor)">
            <summary>
            Sets temporary a cursor so that it can be restored later.
            </summary>
            <param name="c">The cursor to set.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ShouldSerializeActivityBarStyles">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ActivityBarStyles" />
            property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ShouldSerializeAlternatingBackColor">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.AlternatingBackColor" /> property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ShouldSerializeMoveActivityCursor">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.MoveActivityCursor" /> property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ShouldSerializeMoveCursor">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.MoveCursor" /> property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ShouldSerializeSizeEastCursor">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SizeEastCursor" /> property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ShouldSerializeSizeWestCursor">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SizeWestCursor" /> property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ShouldSerializeTimeBounds">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.TimeBounds" />
            property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise, .</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SnapTime(System.DateTime)">
            <summary>
            Snaps the specified date-time value.
            </summary>
            <param name="time">A <see cref="T:System.DateTime" /> value to snap.</param>
            <returns>The snapped date-time value.</returns>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SnapUnit" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SnapController" />
            <remarks>The default behavior uses the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SnapController" /> property to snap time values.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SnapTime(System.DateTime,System.Object,NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle,NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.EditAction)">
            <summary>
            Snaps the specified date-time value using the specified style.
            </summary>
            <param name="time">A <see cref="T:System.DateTime" /> value to snap.</param>
            <param name="obj">The object being modified.</param>
            <param name="style">The style used to snap <paramref name="time" />.</param>
            <param name="action">The action being performed.</param>
            <returns>The snapped date-time value.</returns>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SnapUnit" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SnapController" />
            <remarks>If <paramref name="style" /> is not <see langword="null" />, the
            <see cref="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.SnapTime(System.Object,NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.EditAction,System.DateTime@)" /> method is called. If the style doesn't handle the
            snapping of time values, then the <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SnapTime(System.DateTime)" /> method is used.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ToImage(System.Drawing.Imaging.PixelFormat)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.ToImage">TimeControl.ToImage</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.UpdateScroll">
            <summary>
            Updates the scrolling status of the component.
            The method also updates the visibility of scrollbars.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.UpdateScrollBarForcedVisibility(NickLee.Views.Windows.Forms.ScrollBarVisibility,System.UInt16)">
            <summary>
            Sets the visibility of a scrollbar to visible or invisible.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.UpdateScrollBarVisibility">
            <summary>
            Updates the visibility of the scrollbar.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.WndProc(System.Windows.Forms.Message@)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">Control.WndProc</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ZoomToFit(System.Boolean)">
            <summary>
            Zooms in or zooms out the sheet so that the time bounds fit the sheet.
            </summary>
            <remarks>This method zooms in or zooms out the sheet so
            that the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.TimeBounds" /> fit the sheet. If the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.TimeBounds" /> property has its default value, then the time
            bounds are computed dynamically to contain all the activities of the Gantt
            model. Calling this method will ensure that all activities of the Gantt model
            are displayed.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.TimeBounds" />
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._activityBarHeight">
            <summary>
            Height of activity bars.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._activityBarStyles">
            <summary>
            The collection of activity bar style.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._activityTooltip">
            <summary>
            Format for displaying activity tooltips.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._activityTooltipContext">
            <summary>
            Expression evaluation context for activity tooltip.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._activityTooltipExpression">
            <summary>
            Parsed expression for activity tooltip.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._alternatingBackColor">
            <summary>
            Alternating back color.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._defaultTimeBounds">
            <summary>
            Indicates if the Gantt sheet has default time bounds.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._designHost">
            <summary>
            The top level control hosting the Gantt sheet.
            This can be a ScrollGanttSheet or a HierarchyChart.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._flags">
            <summary>
            Contains flag indicators.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._fontHeight">
            <summary>
            A cache for the fontheight...
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._gridLineColor">
            <summary>
            Color of grid lines.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._gridLineStyle">
            <summary>
            Style for horizontal grid lines.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._grids">
            <summary>
            Collection of <strong>TimeGrid</strong>.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._gridsModified">
            <summary>
            Indicates if the collection of grids has been modified
            and should be serialized.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._hScrollBar">
            <summary>
            Horizontal time scrollbar.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._hScrollBarVisibility">
            <summary>
            Visibility of horizontal scrollbar.
            </summary>Paint
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._moveActivityCursor">
            <summary>
            Cursor to move an activity.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._moveCursor">
            <summary>
            Generic cursor to move something.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._nonEditableActivities">
            <summary>
            Non editable activities.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._ownerDraw">
            <summary>
            Rows should be drawn by user code ?
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._resizeEastCursor">
            <summary>
            Cursor to change end time.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._resizeWestCursor">
            <summary>
            Cursor to change start time.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._restoreCursor">
            <summary>
            Stored cursor.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._rowController">
            <summary>
            The row model.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._rows">
            <summary>
            The list of rows.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._selectionAnchor">
            <summary>
            Selection anchor.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._selectionBackColor">
            <summary>
            Selection back color.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._selectionForeColor">
            <summary>
            Selection fore color.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._snapController">
            <summary>
            A time iterator that defines the way the time is snapped during
            interaction.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._snapUnit">
            <summary>
            Time unit for snapping time values during interaction.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._stylesCache">
            <summary>
            Cache for the activity bar styles.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._stylesModified">
            <summary>
            Indicates if the collection of styles has been modified
            and should be serialized.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._timeIndicators">
            <summary>
            Collection of <strong>DateIndicator</strong>.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._timeRectangle">
            <summary>
            Caches the area where time information is displayed, this
            is the client rectangle minus the scrollbar areas.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._tooltip">
            <summary>
            The tooltip manager.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._tooltipObject">
            <summary>
            The object that is currently holding the tooltip.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._verticalOffset">
            <summary>
            Vertical scrolling offset.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._vScrollBar">
            <summary>
            Vertical scrollbar.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet._vScrollBarVisibility">
            <summary>
            Visibility of vertical scrollbar.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet.CrossCursor">
            <summary>
            A cross Cursor.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet.LinkCursor">
            <summary>
            Default Cursor for creating link.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet.PercentCursor">
            <summary>
            Default Cursor for moving percent values
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SizeAllCursor">
            <summary>
            Cursor for moving bar.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SizeECursor">
            <summary>
            Default Cursor for changing size of activity bar on east.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SizeEWCursor">
            <summary>
            Cursor for moving activity bar.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SizeNSCursor">
            <summary>
            Default cursor for moving reservation.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SizeNSPlusCursor">
            <summary>
            Default cursor for copying reservation.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SizeWCursor">
            <summary>
            Default Cursor for changing size of activity bar on west.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ActivityBarHeightChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ActivityBarHeight" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ActivityToolTipChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ActivityToolTip" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.AlternatingBackColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.AlternatingBackColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.BeforeEditActivity">
            <summary>
            Event fired before the time interval of an activity is changed using the mouse pointer.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.BeginInteraction">
            <summary>
            Occurs when an interaction starts on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.CanEditActivitiesChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.CanEditActivities" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.DrawRow">
            <summary>
            Occurs when the Gantt sheet draws rows in owner draw mode.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows an event handler
            listening to the <see cref="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.DrawRow" /> event. The event handler draws
            selected rows using a specific font. Other rows are painted using the default
            painting algorithm.
            </para>
            <code lang="C#">
            // Attach the event handler
            ActivitySheet sheet = new ActivitySheet();
            sheet.OwnerDraw = true;
            sheet.DrawRow += new DrawGanttSheetRowEventHandler(OnDrawSheetRow);

            // The code of the event handler
            private void OnDrawSheetRow(object sender, DrawGanttSheetRowEventArgs e) {
            if (!e.GanttSheet.RowController.IsSelected(e.Row))
            e.DrawRow();
            else {
            if (e.IsPaintingBackground)
            e.Graphics.FillRectangle(e.BackBrush, e.Bounds);
            else {
            Font font = new Font(e.GanttSheet.Font, FontStyle.Italic);
            e.DrawRow(e.Bounds, e.BackBrush, e.ForeBrush, font);
            font.Dispose();
            }
            }
            }
            </code>
            <code lang="Visual Basic">
            ' Attach the event handler
            Dim sheet As New ActivitySheet()
            sheet.OwnerDraw = True

            ' The code of the event handler
            Private Sub OnDrawSheetRow(ByVal sender As Object, ByVal e As DrawGanttSheetRowEventArgs) Handles sheet.DrawRow
            If Not e.GanttSheet.RowController.IsSelected(e.Row) Then
            e.DrawRow()
            Else
            If e.IsPaintingBackground Then
            e.Graphics.FillRectangle(e.BackBrush, e.Bounds)
            Else
            Dim font As New Font(e.GanttSheet.Font, FontStyle.Italic)
            e.DrawRow(e.Bounds, e.BackBrush, e.ForeBrush, font)
            font.Dispose()
            End If
            End If
            End Sub
            </code>
            </example>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OwnerDraw" />
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.EnableStyleToolTipsChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.EnableStyleToolTips" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.EndInteraction">
            <summary>
            Occurs when an interaction ends on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GridLineColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GridLineColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GridLineStyleChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GridLineStyle" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.InstantEditingChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.InstantEditing" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.InteractionException">
            <summary>
            Occurs when an exception is being thrown during an interaction in the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.MoveCursorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.MoveCursor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.MultiSelectChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.MultiSelect" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OwnerDrawChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OwnerDraw" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.QueryActivityEditable">
            <summary>
            Event fired before the time interval of an activity is changed using the mouse pointer to check
            if the activity can be edited.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SelectionBackColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SelectionBackColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SelectionForeColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SelectionForeColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ShowEditingToolTipsChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ShowEditingToolTips" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ShowSelectedRowsChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ShowSelectedRows" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ShowToolTipsChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ShowTooltips" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SizeEastCursorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SizeEastCursor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SizeWestCursorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SizeWestCursor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.VerticalGridToBottomChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.VerticalGridToBottom" /> property is changed on the control.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ActivityBarHeight">
            <summary>
            Gets or sets the height of activity bars.
            </summary>
            <value>The height of activity bars.</value>
            <remarks>The default value of this property is inherited from the font height
            of the control. To reset this property to its default value, set it to <strong>-1</strong>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ActivityBarStyles">
            <summary>
            Gets the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> that defines the graphical representation
            of activities in the sheet.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" /> that defines the graphical representation
            of activities in the sheet.</value>
            <remarks>
            When the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> needs to display
            an activity, then it looks inside its collection of styles and paints all the activity bar styles that
            correspond to the activity. To detect if a particular style corresponds to an activity, it uses the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.StyleFor" /> property of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />. This property defines a Boolean expression
            that will be evaluated for this purpose. See <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> for an example.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ActivityToolTip">
            <summary>
            Gets or sets the tooltip format for activities.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the format of the tooltip that
            will be displayed when the mouse hovers activities.</value>
            <remarks>The value of this property is an expression that enables an easy customization of the
            tooltip.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample sets the string displayed by the tooltip as the concatenation of
            the activity name, the activity start time and the activity duration.
            </para>
            <code lang="C#">
            GanttSheet sheet = ...
            sheet.ActivityToolTip = "'Name : ' + Name + '\\n' + {StartTime:m} + '(' + Duration + ')'";
            </code>
            <code lang="Visual Basic">
            Dim sheet As GanttSheet = ...
            sheet.ActivityToolTip = "'Name : ' + Name + '\\n' + {StartTime:m} + '(' + Duration + ')'"
            </code>
            <para lang="C#,Visual Basic">
            Note the use of the '{' and '}' characters to specify a format for the <strong>StartTime</strong>
            property (see <see cref="T:System.Globalization.DateTimeFormatInfo" /> for details about date formats).
            </para>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.AlternatingBackColor">
            <summary>
            Gets or sets the background color of alternating rows for a ledger appearance.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the alternating background color.
            The default value is the system color for windows (<see cref="P:System.Drawing.SystemColors.Window">SystemColors.Window</see>).
            </value>
            <remarks>
            By default, all rows have the same color (the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.BackColor" /> property of the control).
            When you set the <strong>AlternatingBackColor</strong> to a new color, all the other rows are set to the new color.
            To reset the alternating background color
            to its default value, set the property to <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.BackColor">
            <summary>
            Gets or sets the background color of the Gantt sheet.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of rows in the sheet.
            The default value is the system color for windows (<see cref="P:System.Drawing.SystemColors.Window">SystemColors.Window</see>).
            </value>
            <remarks>
            While the <strong>BackColor</strong> property determines the color of rows
            in the grid, the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.BackgroundColor" /> determines
            the color of the non-row area, which is only visible when the sheet
            is scrolled to the bottom, or if only a few rows
            are contained in the sheet.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.BackgroundColor">
            <summary>
            Gets or sets the color of the non-row area of the grid.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the grid background.
            The default value is the <see cref="P:System.Drawing.SystemColors.AppWorkspace">SystemColors.AppWorkspace</see> color.
            </value>
            <remarks>
            The <strong>BackgroundColor</strong> determines the color of the non-row area
            of the grid, which is only visible when no information is displayed
            by the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />, or if the sheet is scrolled to the bottom,
            or if only a few rows are contained in the sheet.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.CanEditActivities">
            <summary>
            Indicates whether the user can modify the start time, end time or duration
            of the displayed activities using the mouse pointer.
            </summary>
            <value><see langword="true" /> if the user can modify the start time,
            end time or duration of the displayed activities with the mouse
            pointer; <see langword="false" /> otherwise. The default value is <see langword="true" />.</value>
            <remarks>
            When the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.CanEditActivities" /> property is set to <see langword="true" />, the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> allows the user to change the time interval
            (<see cref="P:NickLee.Views.Gantt.Data.IActivity.TimeInterval">IActivity.TimeInterval</see>, <see cref="P:NickLee.Views.Gantt.Data.IActivity.StartTime">IActivity.StartTime</see>
            or <see cref="P:NickLee.Views.Gantt.Data.IActivity.EndTime">IActivity.EndTime</see> properties) of the displayed activity using
            the mouse pointer. Dragging an activity bar allows you to move an activity
            in time. Clicking at the beginning or at the end allows you to resize the activity bar.
            When the value of this <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.InstantEditing" /> property is <see langword="true" />,
            the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> will make the modification of the time interval
            for each mouse move event.
            If the value of the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.InstantEditing" /> property is <see langword="false" />,
            then the modification of the time interval will be done when the user releases the mouse button.
            Until the user releases the mouse button a rectangle is
            displayed showing the new position in time of the activity.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.DateIndicators">
            <summary>
            Gets the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> displayed in the sheet.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection" /> that defines the date indicators displayed on the sheet.</value>
            <example>
            <para lang="C#,Visual Basic">
            The following example adds a <see cref="T:NickLee.Views.Gantt.Windows.Forms.CurrentDateIndicator" /> in a <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />.
            </para>
            <code lang="C#">
            public void AddDateIndicator(GanttSheet sheet) {
            CurrentDateIndicator dateIndicator = new CurrentDateIndicator();
            sheet.DateIndicators.Add(dateIndicator);
            }
            </code>
            <code lang="Visual Basic">
            Sub AddDateIndicator(ByVal sheet As GanttSheet)
            Dim dateIndicator As CurrentDateIndicator = New CurrentDateIndicator
            sheet.DateIndicators.Add(dateIndicator)
            End Sub
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
            <value>The default <see cref="T:System.Drawing.Size" /> of the control.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.EnableStyleToolTips">
            <summary>
            Indicates whether the tooltips should be taken from activity bar styles.
            </summary>
            <value><see langword="true" /> if the tooltips should be taken from activity bar styles;
            <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.FirstVisibleRow">
            <summary>
            Gets or sets the index of the first visible row.
            </summary>
            <value>The index of the first visible row.</value>
            <exception cref="T:System.IndexOutOfRangeException">The property value is not
            between <strong>0</strong> and <strong>RowCount-1</strong>.</exception>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ForeColor">
            <summary>
            Gets or sets the foreground color used for rows.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of rows.
            The default value is the value for window text (<see cref="P:System.Drawing.SystemColors.WindowText">SystemColors.WindowText</see>).</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GanttModel">
            <summary>
            Gets the Gantt data model displayed by this Gantt sheet.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> that is displayed by this
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> or <see langword="null" /> if the Gantt sheet
            is not connected to a row controller (<see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.RowController" />).</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GridLineColor">
            <summary>
            Gets or sets the color of the horizontal grid line.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the horizontal grid lines.
            The default value is the system color for controls (<see cref="P:System.Drawing.SystemColors.Control">SystemColors.Control</see>).
            </value>
            <remarks>
            No grid line is displayed if the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GridLineStyle" /> property
            is set to <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle">None</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GridLineStyle">
            <summary>
            Gets or sets the style of horizontal grid lines.
            </summary>
            <value>
            One of the <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle" /> values.
            The default value is <strong>Solid</strong>.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.HScrollBar">
            <summary>
            Gets or sets the visibility of the horizontal scrollbar.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Windows.Forms.ScrollBarVisibility" /> values.
            The default value is <see cref="F:NickLee.Views.Windows.Forms.ScrollBarVisibility.AsNeeded" />.
            </value>
            <remarks>When the property value is <strong>ScrollBarVisibility.AsNeeded</strong>,
            the scrollbar will always be visible.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.HScrollBarHeight">
            <summary>
            Gets the height of the horizontal scrollbar that is really visible.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.InstantEditing">
            <summary>
            Indicates whether the modification of the time interval of an activity with the mouse
            pointer is instantaneous.
            </summary>
            <value>
            <see langword="true" /> if the modification of the time interval of an activity with the mouse
            pointer is done at each mouse move event; otherwise, <see langword="false" /> when the
            modification is done when the user releases the mouse button.
            The default value is <see langword="true" />.
            </value>
            <remarks>
            When the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.CanEditActivities" /> property is set to <see langword="true" />, the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> allows the user to change the time interval
            (<see cref="P:NickLee.Views.Gantt.Data.IActivity.TimeInterval">IActivity.TimeInterval</see>, <see cref="P:NickLee.Views.Gantt.Data.IActivity.StartTime">IActivity.StartTime</see>
            or <see cref="P:NickLee.Views.Gantt.Data.IActivity.EndTime">IActivity.EndTime</see> properties) of the displayed activity using
            the mouse pointer. Dragging an activity bar allows you to move an activity
            in time. Clicking at the beginning or at the end allows you to resize the activity bar.
            When the value of this property is <see langword="true" />, the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> will make the
            modification of the time interval for each mouse move event.
            If the value is <see langword="false" /> then the modification of the
            time interval will be done when the user releases the mouse button.
            Until the user releases the mouse button a rectangle is
            displayed showing the new position in time of the activity.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.InstantTimeScrolling">
            <summary>
            Gets or sets a value that indicates if scrolling with the time scrollbar
            is instantaneous or delayed until the user releases the thumb.
            </summary>
            <value>
            A value that indicates whether scrolling the sheet using
            the horizontal time scrollbar is done
            every time the user moves the thumb of the scrollbar or only when the
            user releases the thumb. The default values is <see langword="true" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.MoveActivityCursor">
            <summary>
            Gets or sets the cursor used to move an activity.
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Cursor" /> displayed when the user moves an activity.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.MoveCursor">
            <summary>
            Gets or sets the cursor used to indicate that an activity can be moved.
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Cursor" /> displayed to indicates that an activity can be moved.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.MultiSelect">
            <summary>
            Gets or sets a value indicating whether the user can select several rows.
            </summary>
            <value><see langword="true" /> if the user can select several rows;
            <see langword="false" /> otherwise.</value>
            <remarks>When this property is set to <see langword="true" />,
            the user cannot select several table rows interactively anymore.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OwnerDraw">
            <summary>
            Gets or sets a value indicating whether the code that you
            provide draws the Gantt sheet rows or not.
            </summary>
            <value>
            <see langword="true" /> if Gantt sheet rows are to be drawn using custom user
            code; <see langword="false" /> otherwise.
            </value>
            <remarks>
            <p>When the <strong>OwnerDraw</strong> property is set to <see langword="true" />,
            you need to handle all the drawing of Gantt sheet rows. You can use
            this capability to create your own special Gantt sheet rows
            displays. Use the <see cref="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.DrawRow" /> event to handle the drawing of
            Gantt sheet rows.</p>
            <p>When the <strong>OwnerDraw</strong> property is set to <see langword="false" />,
            the <strong>DrawRow</strong> event is not raised.</p>
            </remarks>
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.DrawRow" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.RowController">
            <summary>
            Gets or sets the row controller for the Gantt sheet.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Windows.Forms.IGanttRowController" /> object that defines the
            data to display in the Gantt sheet. The default value is <see langword="null" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.RowCount">
            <summary>
            Gets the number of visible rows in this Gantt sheet.
            </summary>
            <value>The number of visible rows in the Gantt sheet.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SelectionBackColor">
            <summary>
            Gets or sets the background color of selected rows.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the background color of selected rows.</value>
            <remarks>
            No selection is displayed if the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ShowSelectedRows" /> property
            is set to <see langword="false" />.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SelectionForeColor">
            <summary>
            Gets or sets the foreground color of selected rows.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of selected rows.</value>
            <remarks>
            No selection is displayed if the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ShowSelectedRows" /> property
            is set to <see langword="false" />.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ShowEditingToolTips">
            <summary>
            Indicates whether the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> should display tooltips while editing activities.
            </summary>
            <value><see langword="true" /> if the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />
            must display tooltips while editing activities; <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ShowSelectedRows">
            <summary>
            Indicates whether the selected rows should be painted using the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SelectionBackColor" />.
            </summary>
            <value><see langword="true" /> if the selection should be painted; <see langword="false" /> otherwise.
            The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ShowTooltips">
            <summary>
            Indicates whether the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> should display tooltips on activities.
            </summary>
            <value><see langword="true" /> if the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />
            must display tooltips on activities; <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SizeEastCursor">
            <summary>
            Gets or sets the cursor used to resize an activity to the east.
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Cursor" /> displayed when the user resizes the activity to the east.</value>
            <remarks>
            The cursor is used when the user resizes the activity to the east using the mouse pointer.
            Resizing the activity to the east means changing the end time of the activity, except if the
            control is in <strong>RightToLeft</strong> mode in which case it means changing the start time.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SizeWestCursor">
            <summary>
            Gets or sets the cursor used to resize an activity to the west.
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Cursor" /> displayed when the user resizes the activity to the west.</value>
            <remarks>
            The cursor is used when the user resizes the activity to the west using the mouse pointer.
            Resizing the activity to the west means changing the start time of the activity, except if the
            control is in <strong>RightToLeft</strong> mode in which case it means changing the end time.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SnapController">
            <summary>
            Gets or sets a time iterator that defines the way date-time values are
            snapped when the user changes the time interval of an activity using the
            mouse pointer.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.ITimeIterator" /> object that defines the way date-time values are
            snapped when the user changes the time interval of an activity using the
            mouse pointer.</value>
            <remarks>
            To snap a date-time value, the control uses the time iterator to find
            the closest date-time value.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SnapUnit" />
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SnapTime(System.DateTime)" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SnapUnit">
            <summary>
            Gets or sets the time unit used for snapping date and time values.
            </summary>
            <value>
            A <see cref="T:NickLee.Views.Gantt.TimeUnit" /> that is used for snapping date and time values
            when the users changes the time interval of an activity using the mouse pointer.
            The default value is <strong>Hour</strong>.
            </value>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SnapTime(System.DateTime)" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.SnapController" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.TimeBounds">
            <summary>
            Gets or sets the time bounds of the Gantt sheet.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.ITimeRange" /> that represents the maximum and minimum date-time value
            that the user can scroll in the Gantt sheet. The default value is dynamically computed
            using the minimum start time and maximum end time of activities in the
            Gantt data model attached to the Gantt sheet.
            </value>
            <remarks>Although this property sets the limit of time
            scrolling in the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />, some pixels can be added to this
            scrolling range using the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.TimeMargin" /> property.
            Note that the user will still be able to scroll outside the value of this time
            range using the right and left arrows of the time scrollbar.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.TimeMargin" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.TimeScrollBar" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.TimeGrids">
            <summary>
            Gets the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> displayed in the sheet.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection" /> that defines the grids displayed on the sheet.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.TimeMargin">
            <summary>
            Gets or sets the right and left margin added to the interval of the time range.
            </summary>
            <value>A integer value that represents the margin in pixels that will be added
            to the scrolling time bounds. The default value is 50.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.TimeBounds" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.TimeRectangle">
            <summary>
            Gets the area of the control where time information is dispayed.
            </summary>
            <value>A <see cref="T:System.Drawing.Rectangle" /> that is contained in the control client rectangle
            and that defines the area where time information is displayed.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.TimeScrollBar">
            <summary>
            Gets the horizontal scrollbar that allows you to scroll along the time.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar" /> that allows you to scroll the component along the time.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ToolTip">
            <summary>
            Gets the internal tooltip used by this control.
            </summary>
            <value>A <see cref="T:System.Windows.Forms.ToolTip" /> reference.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.VerticalGridToBottom">
            <summary>
            Gets or sets a value indicating if the vertical grid should be painted on the non-row
            area of the sheet.
            </summary>
            <value><see langword="true" /> if the vertical grid is also
            painted in the non-row area of the sheet, <see langword="false" /> otherwise.
            The default value is <see langword="false" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.VScrollBar">
            <summary>
            Gets or sets the visibility of the vertical scrollbar.
            </summary>
            <value>
            One of the <see cref="T:NickLee.Views.Windows.Forms.ScrollBarVisibility" /> values.
            The default value is <see cref="F:NickLee.Views.Windows.Forms.ScrollBarVisibility.AsNeeded" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.VScrollBarWidth">
            <summary>
            Gets the width of the vertical scrollbar that is really visible.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GanttSheetPrintContext">
            <summary>
            This class keeps the parameters specific to the drawing context (painting
            or printing).
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GanttSheetRow">
            <summary>
            Row of a Gantt sheet.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet.GanttSheetRowCollection">
            <summary>
            Defines the collection of rows in the Gantt sheet.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet.HitTestInfo">
            <summary>
            Contains information about a part of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> at a
            specified coordinate.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.HitTestInfo.StyleInfo">
            <summary>
            Gets the information about the style that was clicked.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTestInfo">ActivityBarStyleCollection.HitTestInfo</see>
            structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.HitTestInfo.Type">
            <summary>
            Gets the part of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> control that was clicked.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet.HitTestType" /> values that represents the
            part of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> control that was clicked.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.HitTestInfo.Activity">
            <summary>
            Gets the activity that was clicked.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> that was clicked or
            <see langword="null" /> if no activity was clicked.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.HitTestInfo.Reservation">
            <summary>
            Gets the reservation that was clicked.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> that was clicked or
            <see langword="null" /> if no reservation was clicked.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.HitTestInfo.Constraint">
            <summary>
            Gets the constraint link that was clicked.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> that was clicked or
            <see langword="null" /> if no constraint link was clicked.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.HitTestInfo.Row">
            <summary>
            Gets the index of the row that was clicked.
            </summary>
            <value>The zero-based index of the row that was clicked or -1
            if no row was clicked.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.HitTestInfo.Date">
            <summary>
            Gets the date that was clicked.
            </summary>
            <value>
            A <see cref="T:System.DateTime" /> object that represents the date that was clicked.
            </value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet.HitTestType">
            <summary>
            Specifies the part of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> control the user has clicked.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.constraintLinkOffset">
            <summary>
            Offset at the beginning and end of a constraint link.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.FlagCanCreateConstraint">
            <summary>
            Flag indicating if interactive creation of constraint is allowed.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.FlagCreatingConstraint">
            <summary>
            Flag indicating if we are currently creating a constraint.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.FlagMovingActivity">
            <summary>
            Flag indicating if we are currently moving or resizing an activity.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.linkArrowSize">
            <summary>
            Size of link arrows in pixels.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.#ctor">
            <summary>
            Creates and initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ActivitiesChanged(System.Object,NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)">
            <summary>
            Invoked when activities have changed in the model.
            </summary>
            <remarks>It is not necessary to listen to addition or removal of
            activities here, this is done by the row controller.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ActivitiesChanging(System.Object,NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)">
            <summary>
            Invoked when activities are changing in the model.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintsChanged(System.Object,NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs)">
            <summary>
            Invoked when constraints have changed in the model.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintsChanging(System.Object,NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs)">
            <summary>
            Invoked when constraints are changing in the model.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintsVisible">
            <summary>
            Indicates if constraints should be displayed.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.CreateDefaultBarStyles">
            <summary>
            Creates the default bar styles for rendering the activities.
            </summary>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ActivityBarStyles" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.CreateDefaultTimeRange">
            <summary>
            Is called to create the default time range for the Gantt sheet.
            </summary>
            <returns>A new <see cref="T:NickLee.Views.Gantt.ActivitiesTimeRange" /> instance.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.FireEvent(System.Object,System.EventArgs)">
            <summary>
            Fires an event based on key in the Events list.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.GetActivityAt(System.Int32)">
            <summary>
            Gets the activity that is displayed at the specified row index.
            </summary>
            <param name="rowIndex">The index of the row.</param>
            <returns>The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> object that is displayed at the specified row index.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.GetActivityBarBounds(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Gets the bounds of the specified activity bar without taking into consideration the text around
            the activity bar.
            </summary>
            <param name="activity">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> reference.</param>
            <returns>
            A <see cref="T:System.Drawing.RectangleF" /> structure that represents the
            bounds of <paramref name="activity" />. The method will return an empty
            rectangle if the activity is not currently visible or if no style can be
            used to render this activity (see <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />.
            </returns>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.GetActivityBounds(NickLee.Views.Gantt.Data.IActivity)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.GetActivityBarBounds(System.Drawing.Graphics,NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Gets the bounds of the specified activity bar without taking into consideration the text around
            the activity bar.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> context.</param>
            <param name="activity">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> reference.</param>
            <returns>
            A <see cref="T:System.Drawing.RectangleF" /> structure that represents the
            bounds of <paramref name="activity" />. The method will return an empty
            rectangle if the activity is not currently visible or if no style can
            be used to render this activity (see <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />).
            </returns>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.GetActivityBounds(NickLee.Views.Gantt.Data.IActivity)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.GetActivityBounds(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Gets the bounds of the specified activity.
            </summary>
            <param name="activity">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> reference.</param>
            <returns>
            A <see cref="T:System.Drawing.RectangleF" /> structure that represents the
            bounds of <paramref name="activity" />. The method will return an empty
            rectangle if the activity is not currently visible or if no style can be
            used to render this activity (see <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />.
            </returns>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.GetActivityBarBounds(NickLee.Views.Gantt.Data.IActivity)" />
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.GetConstraintBounds(NickLee.Views.Gantt.Data.IConstraint)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.GetActivityBounds(System.Drawing.Graphics,NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Gets the bounds of the specified activity.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> context.</param>
            <param name="activity">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> reference.</param>
            <returns>
            A <see cref="T:System.Drawing.RectangleF" /> structure that represents the
            bounds of <paramref name="activity" />. The method will return an empty
            rectangle if the activity is not currently visible or if no style can
            be used to render this activity (see <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />.
            </returns>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.GetActivityBounds(NickLee.Views.Gantt.Data.IActivity)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.GetConstraintBounds(NickLee.Views.Gantt.Data.IConstraint)">
            <summary>
            Gets the bounds of the specified constraint.
            </summary>
            <param name="constraint">An <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> reference.</param>
            <returns>
            A <see cref="T:System.Drawing.RectangleF" /> structure that represents the
            bounds of <paramref name="constraint" />. The method will return an empty
            rectangle if the constraint is not currently visible because the origin
            or destination activity is not visible.
            </returns>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.GetActivityBounds(NickLee.Views.Gantt.Data.IActivity)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.GetConstraintBounds(System.Drawing.Graphics,NickLee.Views.Gantt.Data.IConstraint)">
            <summary>
            Gets the bounds of the specified constraint in the specified graphics context.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> context.</param>
            <param name="constraint">An <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> reference.</param>
            <returns>
            A <see cref="T:System.Drawing.RectangleF" /> structure that represents the
            bounds of <paramref name="constraint" />. The method will return an empty
            rectangle if the constraint is not currently visible because the origin
            or destination activity is not visible.
            </returns>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.GetActivityBounds(NickLee.Views.Gantt.Data.IActivity)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.GetConstraintToolTip(NickLee.Views.Gantt.Data.IConstraint)">
            <summary>
            Gets the text of the tooltip that is displayed when the mouse is over
            a constraint.
            </summary>
            <param name="constraint">The <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> to compute the tooltip for.</param>
            <returns>The text of the tooltip that is displayed when the mouse is over
            a constraint.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.GetFlag(System.UInt16)">
            <summary>
            Gets the value of a flag.
            </summary>
            <param name="flag">The flag.</param>
            <returns>The value of a flag.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.GetRowIndex(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Gets the index of the row that displays the specified activity.
            </summary>
            <param name="activity">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to compute the index.</param>
            <returns>The index of the row that displays the specified activity or -1 if
            the specified activity is not displayed in any row.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.HitTest(System.Drawing.Point)">
            <summary>
            Gets information about the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" /> control at a specified point on the screen.
            </summary>
            <param name="point">A <see cref="T:System.Drawing.Point" /> that represents single x,y coordinate.
            </param>
            <returns>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet.HitTestInfo" /> that contains specific information about the Gantt sheet.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.HitTestLine(System.Drawing.Point,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Tests if the point lies in the shape of a line.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.HitTestPolyline(System.Drawing.Point,System.Drawing.PointF[])">
            <summary>
            Tests if a point lies in the shape of a polyline.
            </summary>
            <param name="p">The point to test.</param>
            <param name="polyline">The polyline.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.InvalidateActivity(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Invalidates the specified activity and all the constraints attached to it.
            </summary>
            <param name="activity">The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to invalidate.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.InvalidateActivityBar(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Invalidates an activity, but not the constraints.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.InvalidateConstraint(NickLee.Views.Gantt.Data.IConstraint)">
            <summary>
            Invalidates the specified constraint.
            </summary>
            <param name="constraint">An <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> to invalidate.</param>
            <remarks>The method has no effect if the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintLinkStyle" /> property is set to
            <strong>None</strong>.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.OnBeforeCreateConstraint(NickLee.Views.Gantt.Windows.Forms.BeforeCreateConstraintEventArgs)">
            <summary>
            Invoked before a constraint is created using the mouse.
            </summary>
            <remarks>You can check the parameters passed in the event arguments to decide if the creation
            of such a constraint is valid. If not, you can cancel the creation of the constraint using the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.BeforeCreateConstraintEventArgs.Cancel" /> property of the event.</remarks>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.Windows.Forms.BeforeCreateConstraintEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.OnCanCreateConstraintChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.CanCreateConstraint" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>CanCreateConstraint</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.OnConstraintLinkStyleChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintLinkStyle" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>ConstraintLinkStyle</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.OnConstraintsColorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintsColor" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>ConstraintColor</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.OnConstraintsOwnerDrawChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintsOwnerDraw" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>ConstraintsOwnerDraw</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.OnConstraintToolTipChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintToolTip" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>ConstraintToolTip</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.OnCreateConstraintCursorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.CreateConstraintCursor" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>CreateConstraintCursor</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.OnDrawConstraintLink(NickLee.Views.Gantt.Windows.Forms.DrawConstraintLinkEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.DrawConstraintLink" /> event.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.Windows.Forms.DrawConstraintLinkEventArgs" /> that contains the event data.</param>
            <remarks>Called to draw a constraint link when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintsOwnerDraw" /> property
            is set to <see langword="true" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.OnForeColorChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)">Control.OnForeColorChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.OnGanttModelChanged">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnGanttModelChanged">GanttSheet.OnGanttModelChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.OnGanttModelChanging">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnGanttModelChanging">GanttSheet.OnGanttModelChanging</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.OnGanttRowControllerChanging(NickLee.Views.Gantt.Windows.Forms.IGanttRowController)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnGanttRowControllerChanging(NickLee.Views.Gantt.Windows.Forms.IGanttRowController)">GanttSheet.OnGanttRowControllerChanging</see>.
            </summary>
            <exception cref="T:System.NotSupportedException">The row controller is doesn't
            implement <see cref="T:NickLee.Views.Gantt.Windows.Forms.IActivityRowController" />.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.OnHitTestConstraintLink(NickLee.Views.Gantt.Windows.Forms.HitTestConstraintLinkEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.HitTestConstraintLink" /> event.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.Windows.Forms.HitTestConstraintLinkEventArgs" /> that contains the event data.</param>
            <remarks>Called to draw a constraint link when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintsOwnerDraw" /> property
            is set to <see langword="true" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">Control.OnMouseDown</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">Control.OnMouseMove</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)">Control.OnMouseUp</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnPaint(System.Windows.Forms.PaintEventArgs)">GanttSheet.OnPaint</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.PaintConstraints(System.Drawing.Graphics)">
            <summary>
            Paints the constraint links.
            </summary>
            <param name="g">The destination graphics.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.PaintRow(System.Drawing.Graphics,System.Int32,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Brush,System.Drawing.Brush,System.Boolean)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.PaintRow(System.Drawing.Graphics,System.Int32,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Brush,System.Drawing.Brush,System.Boolean)">GanttSheet.PaintRow</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.Print(System.Drawing.Printing.PrintPageEventArgs,NickLee.Views.Gantt.Windows.Forms.Printing.TimePrintContext,System.Drawing.RectangleF)">
            <summary>
            Prints the activity sheet control.
            </summary>
            <param name="pe">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains the event data.</param>
            <param name="context">
            A <see cref="T:NickLee.Views.Gantt.Windows.Forms.Printing.TimePrintContext" /> that contains information about the time to print.</param>
            <param name="bounds">A <see cref="T:System.Drawing.RectangleF" /> that contains the size of the area where the Gantt sheet component must be located in the printed page.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ReservationsChanged(System.Object,NickLee.Views.Gantt.Data.ReservationsChangeEventArgs)">
            <summary>
            Invoked when reservations have changed in the model.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ReservationsChanging(System.Object,NickLee.Views.Gantt.Data.ReservationsChangeEventArgs)">
            <summary>
            Invoked when reservations are changing in the model.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ResetConstraintToolTip">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintToolTip" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.SetFlag(System.UInt16,System.Boolean)">
            <summary>
            Sets or unsets the value of a flag.
            </summary>
            <param name="flag">The flag value.</param>
            <param name="value">The flag value</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.WndProc(System.Windows.Forms.Message@)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">Control.WndProc</see>
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivitySheet._cache">
            <summary>
            Caches the constraints in a tree of row indexes.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivitySheet._constraintCreationDestination">
            <summary>
            Activity selected as destination of a constraint when creating a constraint.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivitySheet._constraintLinkStyle">
            <summary>
            Style of constraint links.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivitySheet._constraintsColor">
            <summary>
            Color of constraint links.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivitySheet._constraintTooltip">
            <summary>
            Format for displaying activity tooltips.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivitySheet._constraintTooltipContext">
            <summary>
            Context for tooltip expression evaluation.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivitySheet._constraintTooltipExpression">
            <summary>
            Expression for constraint tooltips.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivitySheet._createConstraintCursor">
            <summary>
            The cursor used for interactive creation of constraints.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivitySheet._defaultConstraintToolTip">
            <summary>
            Default constraint tooltip.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivitySheet._flags">
            <summary>
            Contains flag indicators.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.BeforeCreateConstraint">
            <summary>
            Event fired before a constraint is created using the mouse.
            </summary>
            <remarks>When the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.CanCreateConstraint" /> property is <see langword="true" />, the
            user can create a constraint by selecting the origin and destination activity using the
            mouse pointer. Before
            the constraint is created, this event is raised so that you can cancel the creation or
            notify the user of some particular case.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.CanCreateConstraint" />
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.CanCreateConstraintChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.CanCreateConstraint" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintLinkStyleChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintLinkStyle" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintsColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintsColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintsOwnerDrawChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintsOwnerDraw" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintToolTipChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintToolTip" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.CreateConstraintCursorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.CreateConstraintCursor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.DrawConstraintLink">
            <summary>
            Occurs when the activity sheet draws constraint links in owner draw mode.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintsOwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows an event handler
            listening to the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.DrawConstraintLink" /> event. The event handler draws
            constraint links using a specific pen that depends on the constraint.
            </para>
            <code lang="C#">
            private void OnDrawConstraintLink(object sender, DrawConstraintLinkEventArgs e) {
            Pen pen = ComputePen(e.Constraint);
            e.DrawConstraintLink(pen, e.Brush);
            }
            </code>
            <code lang="Visual Basic">
            Private Sub OnDrawSheetRow(ByVal sender As Object, ByVal e As DrawConstraintLinkEventArgs)
            Dim pen as Pen = ComputePen(e.Constraint)
            e.DrawConstraintLink(pen, e.Brush)
            End Sub
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.HitTestConstraintLink">
            <summary>
            Occurs when the activity sheet does hit testing on constraint links in owner draw mode.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintsOwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.CanCreateConstraint">
            <summary>
            Gets or sets a value indicating whether constraints
            can be created using the mouse.
            </summary>
            <value>
            <see langword="true" /> if constraints can be created
            using the mouse; <see langword="false" /> otherwise. The default value is <see langword="true" />.
            </value>
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.BeforeCreateConstraint" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.CreateConstraintCursor" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintLinkStyle">
            <summary>
            Gets or sets the style of constraint links between activities.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ConstraintLinkStyle" /> values. The default value
            is <strong>Direct</strong>.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintsColor" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintsColor">
            <summary>
            Gets or sets the color of constraints links.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the color of constraints links. By
            default the value is the same as the color defined by the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ForeColor">GanttSheet.ForeColor</see> property.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintLinkStyle" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintsOwnerDraw">
            <summary>
            Gets or sets a value indicating whether the code that you
            provide draws the constraint links or not.
            </summary>
            <value>
            <see langword="true" /> if constraint links are to be drawn using custom user
            code; <see langword="false" /> otherwise.
            </value>
            <remarks>
            <p>When the <strong>ConstraintsOwnerDraw</strong> property is set to <see langword="true" />,
            you need to handle the drawing and hit testing of constraint links.
            Use the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.DrawConstraintLink" /> event to handle the drawing of
            constraint links.
            Use the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.HitTestConstraintLink" /> event to handle the hit testing of
            constraint links.
            </p>
            <p>When the <strong>ConstraintsOwnerDraw</strong> property is set to <see langword="false" />,
            the <strong>DrawConstraintLink</strong> and <strong>HitTestConstraintLink</strong> events are not raised.</p>
            </remarks>
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.DrawConstraintLink" />
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.HitTestConstraintLink" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintToolTip">
            <summary>
            Gets or sets the tooltip format for constraints.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the format of the tooltip that
            will be displayed when the mouse hovers constraints.
            </value>
            <remarks>Tooltips will not appear if the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ShowTooltips" /> property is
            set to <see langword="false" />.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.CreateConstraintCursor">
            <summary>
            Gets the cursor that is used when the user creates a constraint using the
            mouse pointer.
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Cursor" /> that is used when the user creates a constraint using the
            mouse pointer.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.CanCreateConstraint" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.InteractiveActivity">
            <summary>
            Gets the activity involved in the current interaction on the control.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> reference, or <see langword="null" /> if
            no interaction is being performed on the control.</value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.InteractiveBarStyleInfo" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.InteractiveBarStyleInfo">
            <summary>
            Gets information about the bar style involved in the current interaction on the control.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTestInfo" /> structure.</value>
            <remarks>
            This property should be used only during an interaction, that is, when the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.InteractiveActivity" /> property is not <see langword="null" />.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.InteractiveActivity" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.RowController">
            <summary>
            Gets or sets the row controller for the sheet.
            </summary>
            <value>An object that implements the <see cref="T:NickLee.Views.Gantt.Windows.Forms.IActivityRowController" /> interface.</value>
            <remarks>
            This property defines the object that controls the rows of the sheet. In
            order to see activities in the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" />, this property must
            be set to an object that implements the <see cref="T:NickLee.Views.Gantt.Windows.Forms.IActivityRowController" /> interface such
            as the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityTable" /> or <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttChart" />. The row controller defines
            the activity visible in each row, the row height, the selected rows as well as the
            first visible row.
            </remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ActivitySheetRowCollection">
            <summary>
            Defines the collection of rows in the Schedule Sheet.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.TimeRange">
            <summary>
            A simple implementation of the <see cref="T:NickLee.Views.Gantt.ITimeRange" /> interface.
            </summary>
            <remarks>
            <p>This implementation of the <see cref="T:NickLee.Views.Gantt.ITimeRange" /> interface uses two dates to represent
            its time interval. Changing the start time does not affect the end time.</p>
            <p>Each time the time range is modified, the <see cref="E:NickLee.Views.Gantt.TimeRange.TimeRangeChanging" /> and <see cref="E:NickLee.Views.Gantt.TimeRange.TimeRangeChanged" />
            events are raised.</p>
            </remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.ITimeRange">
            <summary>
            Defines a time interval that can be listened to.
            </summary>
            <remarks>
            <p>The interface defines the <see cref="P:NickLee.Views.Gantt.ITimeRange.StartTime" />, <see cref="P:NickLee.Views.Gantt.ITimeRange.EndTime" /> and
            <see cref="P:NickLee.Views.Gantt.ITimeRange.TimeInterval" /> properties to specify the time interval.</p>
            <p>Each time the time interval is changed, the <see cref="E:NickLee.Views.Gantt.ITimeRange.TimeRangeChanging" /> and
            <see cref="E:NickLee.Views.Gantt.ITimeRange.TimeRangeChanged" /> events are raised.</p>
            </remarks>
        </member>
        <member name="E:NickLee.Views.Gantt.ITimeRange.TimeRangeChanged">
            <summary>
            Occurs when the time interval has changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.ITimeRange.TimeRangeChanging">
            <summary>
            Occurs when the time interval is changing.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.ITimeRange.EndTime">
            <summary>
            When implemented by a class, gets or sets the end time of the interval.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure.</value>
            <remarks>When setting the value, the <see cref="E:NickLee.Views.Gantt.ITimeRange.TimeRangeChanging" /> event is raised. Then, if the
            operation has not been canceled, the <see cref="E:NickLee.Views.Gantt.ITimeRange.TimeRangeChanged" /> event is raised.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.ITimeRange.StartTime">
            <summary>
            When implemented by a class, gets or sets the start time of the interval.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure.</value>
            <remarks>When setting the value, the <see cref="E:NickLee.Views.Gantt.ITimeRange.TimeRangeChanging" /> event is raised. Then, if the
            operation has not been canceled, the <see cref="E:NickLee.Views.Gantt.ITimeRange.TimeRangeChanged" /> event is raised.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.ITimeRange.TimeInterval">
            <summary>
            When implemented by a class, gets or sets the time interval.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> structure.</value>
            <remarks>When setting the value, the <see cref="E:NickLee.Views.Gantt.ITimeRange.TimeRangeChanging" /> event is raised. Then, if the
            operation has not been canceled, the <see cref="E:NickLee.Views.Gantt.ITimeRange.TimeRangeChanged" /> event is raised.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.TimeRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.TimeRange" /> class.
            </summary>
            <remarks>The start time is set to <b>1/1/1900</b> and the end time to
            <b>1/1/2100</b>.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.TimeRange.#ctor(NickLee.Views.Gantt.DateTimeInterval)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.TimeRange" /> class.
            </summary>
            <param name="interval">The time interval.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.TimeRange.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.TimeRange" /> class.
            </summary>
            <param name="startTime">The start time of the interval.</param>
            <param name="endTime">The end time of the interval.</param>
            <remarks>if the specified start time is superior to the end time, the values are swapped.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.TimeRange.OnTimeRangeChanged(NickLee.Views.Gantt.TimeRangeChangeEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.TimeRange.TimeRangeChanged" /> event.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.TimeRangeChangeEventArgs" /> that contains the event data.</param>
            <remarks><p>Called when the time range is changed.</p></remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.TimeRange.OnTimeRangeChanging(NickLee.Views.Gantt.TimeRangeChangeEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.TimeRange.TimeRangeChanging" /> event.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.TimeRangeChangeEventArgs" /> that contains the event data.</param>
            <remarks><p>Called before the time range is changed.</p></remarks>
        </member>
        <member name="E:NickLee.Views.Gantt.TimeRange.TimeRangeChanged">
            <summary>
            Occurs when the time interval has changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.TimeRange.TimeRangeChanging">
            <summary>
            Occurs when the time interval is changing.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.TimeRange.EndTime">
            <summary>
            Gets or sets the end time of the interval.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure.</value>
            <remarks>When setting the value, if the specified end time is
            inferior to the start time, the values are swapped.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.TimeRange.StartTime">
            <summary>
            Gets or sets the start time of the interval.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure.</value>
            <remarks>When setting the value, if the specified start time is
            superior to the end time, the values are swapped.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.TimeRange.TimeInterval">
            <summary>
            Gets or sets the time interval.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> structure.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.XmlElementSerializedEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.XmlElementSerialized" /> and
            <see cref="E:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.XmlElementDeserialized" /> events.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.XmlElementSerializedEventArgs.Context">
            <summary>
            Gets the context of serialization/deserialization.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.XmlElementSerializedEventArgs.Object">
            <summary>
            Gets the object being serialized or deserialized.
            </summary>
            <value>An <see cref="T:System.Object" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.XmlElementSerializedEventArgs.XmlElement">
            <summary>
            Gets the XML element being serialized or deserialized.
            </summary>
            <value>A <see cref="P:NickLee.Views.Gantt.Data.XmlElementSerializedEventArgs.XmlElement" /> instance.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.SimpleGanttModel">
            <summary>
            A simple in-memory implementation of the <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> interface.
            </summary>
            <remarks>This model uses the following classes:
            <list type="table">
            <listheader>
            <term>Gantt Object</term>
            <description>Class</description>
            </listheader>
            <item>
            <term>Resources</term>
            <description><see cref="T:NickLee.Views.Gantt.Data.SimpleResource" /> class.</description>
            </item>
            <item>
            <term>Activities</term>
            <description><see cref="T:NickLee.Views.Gantt.Data.SimpleActivity" /> class.</description>
            </item>
            <item>
            <term>Constraints</term>
            <description><see cref="T:NickLee.Views.Gantt.Data.SimpleConstraint" /> class.</description>
            </item>
            <item>
            <term>Reservations</term>
            <description><see cref="T:NickLee.Views.Gantt.Data.SimpleReservation" /> class.</description>
            </item>
            </list>
            </remarks>
            <seealso cref="T:NickLee.Views.Gantt.Data.GanttModelAdapter" />
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to populate a <see cref="T:NickLee.Views.Gantt.Data.SimpleGanttModel" />.
            </para>
            <code lang="C#">
            private void Populate(IGanttModel model) {
            IActivity activity;
            IResource[] resources = new IResource[10];
            IActivity[] activities = new IActivity[20];
            IReservation[] reservations = new IReservation[20];

            for (int i = 0; i &lt; 10; ++i) {
            // First create the resource...
            resources[i] = model.NewResource();
            resources[i].Name = "Room " + i.ToString();

            // Add a conference in the morning
            activity = model.NewActivity();
            activity.Name = "Morning Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4));
            activities[i*2] = activity;

            // Create the reservation for this activity
            reservations[i*2] = model.NewReservation(activity, resources[i]);

            // Add a conference in the afternoon
            activity = model.NewActivity();
            activity.Name = "Afternoon Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4));
            activities[i*2 + 1] = activity;

            // Create the reservation for this activity
            reservations[i*2 + 1] = model.NewReservation(activity, resources[i]);
            }
            model.Activities.AddRange(activities);
            model.Resources.AddRange(resources);
            model.Reservations.AddRange(reservations);
            }
            </code>
            <code lang="Visual Basic">
            Sub Populate(ByVal model As IGanttModel)
            Dim activity As IActivity
            Dim resources(10) As IResource
            Dim activities(20) As IActivity
            Dim reservations(20) As IReservation

            For i As Integer = 0 To 9

            ' First create the resource...
            resources(i) = model.NewResource()
            resources(i).Name = "Room " + i.ToString()

            ' Add a conference in the morning
            activity = model.NewActivity()
            activity.Name = "Morning Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4))
            activities(i * 2) = activity

            ' Create the reservation for this activity
            reservations(i * 2) = model.NewReservation(activity, resources(i))

            ' Add a conference in the afternoon
            activity = model.NewActivity()
            activity.Name = "Afternoon Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4))
            activities(i * 2 + 1) = activity

            ' Create the reservation for this activity
            reservations(i * 2 + 1) = model.NewReservation(activity, resources(i))

            Next

            model.Activities.AddRange(activities)
            model.Resources.AddRange(resources)
            model.Reservations.AddRange(reservations)
            End Sub
            </code>
            </example>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.BaseGanttModel">
            <summary>
            An <see langword="abstract" /> implementation of the <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> interface.
            </summary>
            <remarks>This model uses the following classes:
            <list type="table">
            <listheader>
            <term>Gantt Object</term>
            <description>Class</description>
            </listheader>
            <item>
            <term>Resources</term>
            <description><see cref="T:NickLee.Views.Gantt.Data.BaseResource" /> class.</description>
            </item>
            <item>
            <term>Activities</term>
            <description><see cref="T:NickLee.Views.Gantt.Data.BaseActivity" /> class.</description>
            </item>
            <item>
            <term>Constraints</term>
            <description><see cref="T:NickLee.Views.Gantt.Data.BaseConstraint" /> class.</description>
            </item>
            <item>
            <term>Reservations</term>
            <description><see cref="T:NickLee.Views.Gantt.Data.BaseReservation" /> class.</description>
            </item>
            </list>
            <p>When a resource or an activity with a null or empty identifier is added to the model,
            a unique identifier is automatically computed using the <see cref="P:NickLee.Views.Gantt.Data.BaseGanttModel.ActivityPrefix" /> and
            <see cref="P:NickLee.Views.Gantt.Data.BaseGanttModel.ResourcePrefix" /> properties.</p>
            <p>The <strong>BaseGanttModel</strong> class handles dynamic properties for the activities,
            resources, constraints, and reservations. Using dynamic properties, you can extend the scheduling data
            without subclassing. See the <see cref="P:NickLee.Views.Gantt.Data.BaseGanttModel.CustomActivityProperties" />,
            <see cref="P:NickLee.Views.Gantt.Data.BaseGanttModel.CustomResourceProperties" />, <see cref="P:NickLee.Views.Gantt.Data.BaseGanttModel.CustomConstraintProperties" />,
            <see cref="P:NickLee.Views.Gantt.Data.BaseGanttModel.CustomReservationProperties" /> properties for details.</p>
            </remarks>
            <seealso cref="T:NickLee.Views.Gantt.Data.SimpleGanttModel" />
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to populate a <see cref="T:NickLee.Views.Gantt.Data.SimpleGanttModel" />.
            </para>
            <code lang="C#">
            private void Populate(IGanttModel model) {
            IActivity activity;
            IResource[] resources = new IResource[10];
            IActivity[] activities = new IActivity[20];
            IReservation[] reservations = new IReservation[20];

            for (int i = 0; i &lt; 10; ++i) {
            // First create the resource...
            resources[i] = model.NewResource();
            resources[i].Name = "Room " + i.ToString();

            // Add a conference in the morning
            activity = model.NewActivity();
            activity.Name = "Morning Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4));
            activities[i*2] = activity;

            // Create the reservation for this activity
            reservations[i*2] = model.NewReservation(activity, resources[i]);

            // Add a conference in the afternoon
            activity = model.NewActivity();
            activity.Name = "Afternoon Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4));
            activities[i*2 + 1] = activity;

            // Create the reservation for this activity
            reservations[i*2 + 1] = model.NewReservation(activity, resources[i]);
            }
            model.Activities.AddRange(activities);
            model.Resources.AddRange(resources);
            model.Reservations.AddRange(reservations);
            }
            </code>
            <code lang="Visual Basic">
            Sub Populate(ByVal model As IGanttModel)
            Dim activity As IActivity
            Dim resources(10) As IResource
            Dim activities(20) As IActivity
            Dim reservations(20) As IReservation

            For i As Integer = 0 To 9

            ' First create the resource...
            resources(i) = model.NewResource()
            resources(i).Name = "Room " + i.ToString()

            ' Add a conference in the morning
            activity = model.NewActivity()
            activity.Name = "Morning Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4))
            activities(i * 2) = activity

            ' Create the reservation for this activity
            reservations(i * 2) = model.NewReservation(activity, resources(i))

            ' Add a conference in the afternoon
            activity = model.NewActivity()
            activity.Name = "Afternoon Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4))
            activities(i * 2 + 1) = activity

            ' Create the reservation for this activity
            reservations(i * 2 + 1) = model.NewReservation(activity, resources(i))

            Next

            model.Activities.AddRange(activities)
            model.Resources.AddRange(resources)
            model.Reservations.AddRange(reservations)
            End Sub
            </code>
            </example>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.IGanttModel">
            <summary>
            Defines the abstract behavior of the Gantt data model.
            </summary>
            <remarks>
            <p>Any object that implements this interface can be displayed by the Gantt library.
            <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> defines basic accessors for manipulating and querying the
            data model, as well as the events by which the data model will notify interested listeners
            about any changes.</p>
            <p>A Gantt data model contains four types of elements:
            <ul>
            <li>Activities are defined by the <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> interface. Use the <see cref="P:NickLee.Views.Gantt.Data.IGanttModel.Activities" />
            property to access the collection of activities of the model.</li>
            <li>Resources are defined by the <see cref="T:NickLee.Views.Gantt.Data.IResource" /> interface. Use the <see cref="P:NickLee.Views.Gantt.Data.IGanttModel.Resources" />
            property to access the collection of resources of the model.</li>
            <li>Constraints are defined by the <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> interface. Use the <see cref="P:NickLee.Views.Gantt.Data.IGanttModel.Constraints" />
            property to access the collection of constraints of the model.</li>
            <li>Reservations are defined by the <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> interface. Use the <see cref="P:NickLee.Views.Gantt.Data.IGanttModel.Reservations" />
            property to access the collection of reservations of the model.</li>
            </ul>
            </p>
            <p>Each time the model is about to be modified, events are raised to notify listeners of the happening changes.
            Four kinds of events are raised by the model, each one corresponding to a specific Gantt entity:
            <ul>
            <li>The <see cref="E:NickLee.Views.Gantt.Data.IGanttModel.ActivitiesChanging" /> is raised before the activities of the model get modified.</li>
            <li>The <see cref="E:NickLee.Views.Gantt.Data.IGanttModel.ResourcesChanging" /> is raised before the resources of the model get modified.</li>
            <li>The <see cref="E:NickLee.Views.Gantt.Data.IGanttModel.ConstraintsChanging" /> is raised before the constraints of the model get modified.</li>
            <li>The <see cref="E:NickLee.Views.Gantt.Data.IGanttModel.ReservationsChanging" /> is raised before the reservations of the model get modified.</li>
            </ul>
            </p>
            <p>Each time the model has been modified, events are raised to notify listeners of the changes that happened.
            Four kinds of events are raised by the model, each one corresponding to a specific Gantt entity:
            <ul>
            <li>The <see cref="E:NickLee.Views.Gantt.Data.IGanttModel.ActivitiesChanged" /> is raised after the activities of the model have been modified.</li>
            <li>The <see cref="E:NickLee.Views.Gantt.Data.IGanttModel.ResourcesChanged" /> is raised after the resources of the model have been modified.</li>
            <li>The <see cref="E:NickLee.Views.Gantt.Data.IGanttModel.ConstraintsChanged" /> is raised after the constraints of the model have been modified.</li>
            <li>The <see cref="E:NickLee.Views.Gantt.Data.IGanttModel.ReservationsChanged" /> is raised after the reservations of the model have been modified.</li>
            </ul>
            </p>
            <p>The model must maintain consistency between its elements. Activities and resources have unique identifiers,
            the model is responsible of ensuring that those identifiers are unique. The model must also ensure that
            a removed element should no longer be referenced by the model. For example, when removing an activity, its associated
            reservation must be removed first from the model, as well as its associated constraints.
            </p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to populate a <see cref="T:NickLee.Views.Gantt.Data.SimpleGanttModel" />.
            </para>
            <code lang="C#">
            private void Populate(IGanttModel model) {
            IActivity activity;
            IResource[] resources = new IResource[10];
            IActivity[] activities = new IActivity[20];
            IReservation[] reservations = new IReservation[20];

            for (int i = 0; i &lt; 10; ++i) {
            // First create the resource...
            resources[i] = model.NewResource();
            resources[i].Name = "Room " + i.ToString();

            // Add a conference in the morning
            activity = model.NewActivity();
            activity.Name = "Morning Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4));
            activities[i*2] = activity;

            // Create the reservation for this activity
            reservations[i*2] = model.NewReservation(activity, resources[i]);

            // Add a conference in the afternoon
            activity = model.NewActivity();
            activity.Name = "Afternoon Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4));
            activities[i*2 + 1] = activity;

            // Create the reservation for this activity
            reservations[i*2 + 1] = model.NewReservation(activity, resources[i]);
            }
            model.Activities.AddRange(activities);
            model.Resources.AddRange(resources);
            model.Reservations.AddRange(reservations);
            }
            </code>
            <code lang="Visual Basic">
            Sub Populate(ByVal model As IGanttModel)
            Dim activity As IActivity
            Dim resources(10) As IResource
            Dim activities(20) As IActivity
            Dim reservations(20) As IReservation

            For i As Integer = 0 To 9

            ' First create the resource...
            resources(i) = model.NewResource()
            resources(i).Name = "Room " + i.ToString()

            ' Add a conference in the morning
            activity = model.NewActivity()
            activity.Name = "Morning Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4))
            activities(i * 2) = activity

            ' Create the reservation for this activity
            reservations(i * 2) = model.NewReservation(activity, resources(i))

            ' Add a conference in the afternoon
            activity = model.NewActivity()
            activity.Name = "Afternoon Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4))
            activities(i * 2 + 1) = activity

            ' Create the reservation for this activity
            reservations(i * 2 + 1) = model.NewReservation(activity, resources(i))

            Next

            model.Activities.AddRange(activities)
            model.Resources.AddRange(resources)
            model.Reservations.AddRange(reservations)
            End Sub
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IGanttModel.BeginUpdate">
            <summary>
            When implemented by a class, disables notification of the model.
            </summary>
            <remarks>This method should be called before an important modification of the model.
            After the model has been modified, <see cref="M:NickLee.Views.Gantt.Data.IGanttModel.EndUpdate" /> must be called. All the modifications
            made on the model between these two calls will not be recorded by the undo manager.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IGanttModel.EndUpdate">
            <summary>
            When implemented by a class, enables notification of the model.
            </summary>
            <remarks>This method must send events to notify listeners that the whole model has changed.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IGanttModel.FindActivity(System.String)">
            <summary>
            When implemented by a class, retrieves the activity specified by its identifier.
            </summary>
            <param name="id">The identifier of the <see cref="T:NickLee.Views.Gantt.Data.IActivity" />
            to locate in the Gantt model.</param>
            <returns>An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> instance, or <see langword="null" /> if such
            an activity cannot be found in the Gantt model.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IGanttModel.FindConstraint(System.String,System.String)">
            <summary>
            When implemented by a class, retrieves the constraint identified by the <strong>from</strong>
            and <strong>to</strong> activity identifiers.
            </summary>
            <param name="fromActivityID">The idendifier of the source activity of the constraint.</param>
            <param name="toActivityID">The idendifier of the destination activity of the constraint.</param>
            <returns>A <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> reference, or <see langword="null" /> if the
            constraint was not found in the model.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IGanttModel.FindReservation(System.String,System.String)">
            <summary>
            When implemented by a class, retrieves the reservation identified by its activity and resource
            identifiers.
            </summary>
            <param name="activityID">The idendifier of the activity of the reservation.</param>
            <param name="resourceID">The idendifier of the resource of the reservation.</param>
            <returns>A <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> reference, or <see langword="null" /> if the
            reservation was not found in the model.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IGanttModel.FindResource(System.String)">
            <summary>
            When implemented by a class, retrieves the resource specified by its identifier.
            </summary>
            <param name="id">The identifier of the <see cref="T:NickLee.Views.Gantt.Data.IResource" />
            to locate in the Gantt model.</param>
            <returns>An <see cref="T:NickLee.Views.Gantt.Data.IResource" /> instance, or <see langword="null" /> if such
            a resource cannot be found in the Gantt model.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IGanttModel.MoveActivity(NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.IActivity,System.Int32)">
            <summary>
            When implemented by a class, moves the specified activity.
            </summary>
            <param name="activity">The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to move.</param>
            <param name="parent">The new parent for the activity.</param>
            <param name="index">The new index for the activity.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IGanttModel.MoveResource(NickLee.Views.Gantt.Data.IResource,NickLee.Views.Gantt.Data.IResource,System.Int32)">
            <summary>
            When implemented by a class, moves the specified resource.
            </summary>
            <param name="resource">The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to move.</param>
            <param name="parent">The new parent for the resource.</param>
            <param name="index">The new index for the resource.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IGanttModel.NewActivity">
            <summary>
            When implemented by a class, creates a new activity for this Gantt model.
            </summary>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Data.IActivity" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IGanttModel.NewConstraint(NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.ConstraintType)">
            <summary>
            When implemented by a class, creates a new constraint for this Gantt model.
            </summary>
            <param name="fromActivity">The source activity for the new constraint.</param>
            <param name="toActivity">The destination activity for the new constraint.</param>
            <param name="type">The type of the new constraint.</param>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Data.IConstraint" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IGanttModel.NewReservation(NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.IResource)">
            <summary>
            When implemented by a class, creates a new reservation for this Gantt model.
            </summary>
            <param name="activity">The activity for the new reservation.</param>
            <param name="resource">The resource for the new reservation.</param>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Data.IReservation" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IGanttModel.NewResource">
            <summary>
            When implemented by a class, creates a new resource for this Gantt model.
            </summary>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Data.IResource" />.</returns>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.IGanttModel.ActivitiesChanged">
            <summary>
            Occurs when activities have changed in the Gantt model.
            </summary>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to handle the
            <strong>IGanttModel.ActivitiesChanged</strong> event.
            </para>
            <code lang="C#">
            SimpleGanttModel model = new SimpleGanttModel();
            model.ActivitiesChanged += new ActivitiesChangeEventHandler(ActivitiesChanged);

            private void ActivitiesChanged(object sender, ActivitiesChangeEventArgs args) {
            switch(args.Action) {
            case ActivitiesAction.Add:
            Console.WriteLine("Activities added.");
            break;
            case ActivitiesAction.Delete:
            Console.WriteLine("Activities deleted.");
            break;
            case ActivitiesAction.PropertyChange:
            Console.WriteLine("Activities Changed.");
            break;
            case ActivitiesAction.Move:
            Console.WriteLine("Activities Moved.");
            break;
            case ActivitiesAction.Reset:
            Console.WriteLine("Activities Reset.");
            break;
            }
            }
            </code>
            <code lang="Visual Basic">
            Dim WithEvents model As New SimpleGanttModel

            Private Sub ActivitiesChanged(ByVal sender As Object, ByVal args As ActivitiesChangeEventArgs)
            Select Case args.Action
            Case ActivitiesAction.Add
            Console.WriteLine("Activities added.")
            Exit Sub
            Case ActivitiesAction.Delete
            Console.WriteLine("Activities deleted.")
            Exit Sub
            Case ActivitiesAction.PropertyChange
            Console.WriteLine("Activities Changed.")
            Exit Sub
            Case ActivitiesAction.Move
            Console.WriteLine("Activities Moved.")
            Exit Sub
            Case ActivitiesAction.Reset
            Console.WriteLine("Activities Reset.")
            Exit Sub
            End Select
            End Sub
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.IGanttModel.ActivitiesChanging">
            <summary>
            Occurs when activities are changing in the Gantt model.
            </summary>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to handle the
            <strong>IGanttModel.ActivitiesChanged</strong> event.
            </para>
            <code lang="C#">
            SimpleGanttModel model = new SimpleGanttModel();
            model.ActivitiesChanged += new ActivitiesChangeEventHandler(ActivitiesChanged);

            private void ActivitiesChanged(object sender, ActivitiesChangeEventArgs args) {
            switch(args.Action) {
            case ActivitiesAction.Add:
            Console.WriteLine("Activities added.");
            break;
            case ActivitiesAction.Delete:
            Console.WriteLine("Activities deleted.");
            break;
            case ActivitiesAction.PropertyChange:
            Console.WriteLine("Activities Changed.");
            break;
            case ActivitiesAction.Move:
            Console.WriteLine("Activities Moved.");
            break;
            case ActivitiesAction.Reset:
            Console.WriteLine("Activities Reset.");
            break;
            }
            }
            </code>
            <code lang="Visual Basic">
            Dim WithEvents model As New SimpleGanttModel

            Private Sub ActivitiesChanged(ByVal sender As Object, ByVal args As ActivitiesChangeEventArgs)
            Select Case args.Action
            Case ActivitiesAction.Add
            Console.WriteLine("Activities added.")
            Exit Sub
            Case ActivitiesAction.Delete
            Console.WriteLine("Activities deleted.")
            Exit Sub
            Case ActivitiesAction.PropertyChange
            Console.WriteLine("Activities Changed.")
            Exit Sub
            Case ActivitiesAction.Move
            Console.WriteLine("Activities Moved.")
            Exit Sub
            Case ActivitiesAction.Reset
            Console.WriteLine("Activities Reset.")
            Exit Sub
            End Select
            End Sub
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.IGanttModel.ConstraintsChanged">
            <summary>
            Occurs when constraints have changed in the Gantt model.
            </summary>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to handle the
            <strong>IGanttModel.ConstraintsChanged</strong> event.
            </para>
            <code lang="C#">
            SimpleGanttModel model = new SimpleGanttModel();
            model.ConstraintsChanged += new ConstraintsChangeEventHandler(ConstraintsChanged);

            private void ConstraintsChanged(object sender, ConstraintsChangeEventArgs args) {
            switch(args.Action) {
            case ConstraintsAction.Add:
            Console.WriteLine("Constraints added.");
            break;
            case ConstraintsAction.Delete:
            Console.WriteLine("Constraints deleted.");
            break;
            case ConstraintsAction.PropertyChange:
            Console.WriteLine("Constraints Changed.");
            break;
            case ConstraintsAction.Reset:
            Console.WriteLine("Constraints Reset.");
            break;
            }
            }
            </code>
            <code lang="Visual Basic">
            Dim WithEvents model As New SimpleGanttModel

            Private Sub ConstraintsChanged(ByVal sender As Object, ByVal args As ConstraintsChangeEventArgs) Handles model.ConstraintsChanged
            Select Case args.Action
            Case ConstraintsAction.Add
            Console.WriteLine("Constraints added.")
            Exit Sub
            Case ConstraintsAction.Delete
            Console.WriteLine("Constraints deleted.")
            Exit Sub
            Case ConstraintsAction.PropertyChange
            Console.WriteLine("Constraints Changed.")
            Exit Sub
            Case ConstraintsAction.Reset
            Console.WriteLine("Constraints Reset.")
            Exit Sub
            End Select
            End Sub
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.IGanttModel.ConstraintsChanging">
            <summary>
            Occurs when constraints are changing in the Gantt model.
            </summary>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to handle the
            <strong>IGanttModel.ConstraintsChanged</strong> event.
            </para>
            <code lang="C#">
            SimpleGanttModel model = new SimpleGanttModel();
            model.ConstraintsChanged += new ConstraintsChangeEventHandler(ConstraintsChanged);

            private void ConstraintsChanged(object sender, ConstraintsChangeEventArgs args) {
            switch(args.Action) {
            case ConstraintsAction.Add:
            Console.WriteLine("Constraints added.");
            break;
            case ConstraintsAction.Delete:
            Console.WriteLine("Constraints deleted.");
            break;
            case ConstraintsAction.PropertyChange:
            Console.WriteLine("Constraints Changed.");
            break;
            case ConstraintsAction.Reset:
            Console.WriteLine("Constraints Reset.");
            break;
            }
            }
            </code>
            <code lang="Visual Basic">
            Dim WithEvents model As New SimpleGanttModel

            Private Sub ConstraintsChanged(ByVal sender As Object, ByVal args As ConstraintsChangeEventArgs) Handles model.ConstraintsChanged
            Select Case args.Action
            Case ConstraintsAction.Add
            Console.WriteLine("Constraints added.")
            Exit Sub
            Case ConstraintsAction.Delete
            Console.WriteLine("Constraints deleted.")
            Exit Sub
            Case ConstraintsAction.PropertyChange
            Console.WriteLine("Constraints Changed.")
            Exit Sub
            Case ConstraintsAction.Reset
            Console.WriteLine("Constraints Reset.")
            Exit Sub
            End Select
            End Sub
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.IGanttModel.ReservationsChanged">
            <summary>
            Occurs when reservations have changed in the Gantt model.
            </summary>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to handle the
            <strong>IGanttModel.ReservationsChanged</strong> event.
            </para>
            <code lang="C#">
            SimpleGanttModel model = new SimpleGanttModel();
            model.ReservationsChanged += new ReservationssChangeEventHandler(ReservationsChanged);

            private void ReservationsChanged(object sender, ReservationssChangeEventArgs args) {
            switch(args.Action) {
            case ReservationsAction.Add:
            Console.WriteLine("Reservations added.");
            break;
            case ReservationssAction.Delete:
            Console.WriteLine("Reservations deleted.");
            break;
            case ReservationsAction.PropertyChange:
            Console.WriteLine("Reservations Changed.");
            break;
            case ReservationsAction.Reset:
            Console.WriteLine("Reservations Reset.");
            break;
            }
            }
            </code>
            <code lang="Visual Basic">
            Dim WithEvents model As New SimpleGanttModel

            Private Sub ReservationsChanged(ByVal sender As Object, ByVal args As ReservationsChangeEventArgs) Handles model.ReservationsChanged
            Select Case args.Action
            Case ReservationsAction.Add
            Console.WriteLine("Reservations added.")
            Exit Sub
            Case ReservationsAction.Delete
            Console.WriteLine("Reservations deleted.")
            Exit Sub
            Case ReservationsAction.PropertyChange
            Console.WriteLine("Reservations Changed.")
            Exit Sub
            Case ReservationsAction.Reset
            Console.WriteLine("Reservations Reset.")
            Exit Sub
            End Select
            End Sub
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.IGanttModel.ReservationsChanging">
            <summary>
            Occurs when reservations are changing in the Gantt model.
            </summary>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to handle the
            <strong>IGanttModel.ReservationsChanged</strong> event.
            </para>
            <code lang="C#">
            SimpleGanttModel model = new SimpleGanttModel();
            model.ReservationsChanged += new ReservationssChangeEventHandler(ReservationsChanged);

            private void ReservationsChanged(object sender, ReservationssChangeEventArgs args) {
            switch(args.Action) {
            case ReservationsAction.Add:
            Console.WriteLine("Reservations added.");
            break;
            case ReservationssAction.Delete:
            Console.WriteLine("Reservations deleted.");
            break;
            case ReservationsAction.PropertyChange:
            Console.WriteLine("Reservations Changed.");
            break;
            case ReservationsAction.Reset:
            Console.WriteLine("Reservations Reset.");
            break;
            }
            }
            </code>
            <code lang="Visual Basic">
            Dim WithEvents model As New SimpleGanttModel

            Private Sub ReservationsChanged(ByVal sender As Object, ByVal args As ReservationsChangeEventArgs) Handles model.ReservationsChanged
            Select Case args.Action
            Case ReservationsAction.Add
            Console.WriteLine("Reservations added.")
            Exit Sub
            Case ReservationsAction.Delete
            Console.WriteLine("Reservations deleted.")
            Exit Sub
            Case ReservationsAction.PropertyChange
            Console.WriteLine("Reservations Changed.")
            Exit Sub
            Case ReservationsAction.Reset
            Console.WriteLine("Reservations Reset.")
            Exit Sub
            End Select
            End Sub
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.IGanttModel.ResourcesChanged">
            <summary>
            Occurs when resources have changed in the Gantt model.
            </summary>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to handle the
            <strong>IGanttModel.ResourcesChanged</strong> event.
            </para>
            <code lang="C#">
            SimpleGanttModel model = new SimpleGanttModel();
            model.ResourcesChanged += new ResourcesChangeEventHandler(ResourcesChanged);

            private void ResourcesChanged(object sender, ResourcesChangeEventArgs args) {
            switch(args.Action) {
            case ResourcesAction.Add:
            Console.WriteLine("Resources added.");
            break;
            case ResourcesAction.Delete:
            Console.WriteLine("Resources deleted.");
            break;
            case ResourcesAction.PropertyChange:
            Console.WriteLine("Resources Changed.");
            break;
            case ResourcesAction.Move:
            Console.WriteLine("Resources Moved.");
            break;
            case ResourcesAction.Reset:
            Console.WriteLine("Resources Reset.");
            break;
            }
            }
            </code>
            <code lang="Visual Basic">
            Dim WithEvents model As New SimpleGanttModel

            Private Sub ResourcesChanged(ByVal sender As Object, ByVal args As ResourcesChangeEventArgs) Handles model.ResourcesChanged
            Select Case args.Action
            Case ResourcesAction.Add
            Console.WriteLine("Resources added.")
            Exit Sub
            Case ResourcesAction.Delete
            Console.WriteLine("Resources deleted.")
            Exit Sub
            Case ResourcesAction.PropertyChange
            Console.WriteLine("Resources Changed.")
            Exit Sub
            Case ResourcesAction.Move
            Console.WriteLine("Resources Moved.")
            Exit Sub
            Case ResourcesAction.Reset
            Console.WriteLine("Resources Reset.")
            Exit Sub
            End Select
            End Sub
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.IGanttModel.ResourcesChanging">
            <summary>
            Occurs when resources are changing in the Gantt model.
            </summary>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to handle the
            <strong>IGanttModel.ResourcesChanged</strong> event.
            </para>
            <code lang="C#">
            SimpleGanttModel model = new SimpleGanttModel();
            model.ResourcesChanged += new ResourcesChangeEventHandler(ResourcesChanged);

            private void ResourcesChanged(object sender, ResourcesChangeEventArgs args) {
            switch(args.Action) {
            case ResourcesAction.Add:
            Console.WriteLine("Resources added.");
            break;
            case ResourcesAction.Delete:
            Console.WriteLine("Resources deleted.");
            break;
            case ResourcesAction.PropertyChange:
            Console.WriteLine("Resources Changed.");
            break;
            case ResourcesAction.Move:
            Console.WriteLine("Resources Moved.");
            break;
            case ResourcesAction.Reset:
            Console.WriteLine("Resources Reset.");
            break;
            }
            }
            </code>
            <code lang="Visual Basic">
            Dim WithEvents model As New SimpleGanttModel

            Private Sub ResourcesChanged(ByVal sender As Object, ByVal args As ResourcesChangeEventArgs) Handles model.ResourcesChanged
            Select Case args.Action
            Case ResourcesAction.Add
            Console.WriteLine("Resources added.")
            Exit Sub
            Case ResourcesAction.Delete
            Console.WriteLine("Resources deleted.")
            Exit Sub
            Case ResourcesAction.PropertyChange
            Console.WriteLine("Resources Changed.")
            Exit Sub
            Case ResourcesAction.Move
            Console.WriteLine("Resources Moved.")
            Exit Sub
            Case ResourcesAction.Reset
            Console.WriteLine("Resources Reset.")
            Exit Sub
            End Select
            End Sub
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IGanttModel.Activities">
            <summary>
            When implemented by a class, gets the list of the activities in the Gantt model.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IActivityCollection" /> instance.</value>
            <remarks>Use this collection to add or remove activities to the Gantt model.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample first creates an activity with a subactivity,
            and then add them to a Gantt data model.
            </para>
            <code lang="C#">
            IGanttModel model = new SimpleGanttModel();
            IActivity activity = model.NewActivity();
            IActivity child = model.NewActivity();
            activity.ChildActivities.Add(child);
            model.Activities.Add(activity);
            </code>
            <code lang="Visual Basic">
            Dim model As New SimpleGanttModel
            Dim activity As IActivity = model.NewActivity()
            Dim child As IActivity = model.NewActivity()
            activity.ChildActivities.Add(child)
            model.Activities.Add(activity)
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IGanttModel.Constraints">
            <summary>
            When implemented by a class, gets the list of the constraints in the Gantt model.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IConstraintCollection" /> instance.</value>
            <example>
            <para lang="C#,Visual Basic">The following code displays the constraints
            of a Gantt model.
            </para>
            <code lang="C#">
            IGanttModel model = ...;
            foreach (IConstraint constraint in model.Constraints) {
            IActivity from = constraint.FromActivity;
            IActivity to = constraint.ToActivity;
            Console.WriteLine("The activities " + from.ID + " and " + to.ID + " are linked by a constraint.");
            }
            </code>
            <code lang="Visual Basic">
            IGanttModel model = ...;
            Dim constraint as IConstraint
            For Each constraint in model.Constraints
            Dim from As IActivity = constraint.FromActivity
            Dim to As IActivity = constraint.ToActivity
            Console.WriteLine("The activities " + from.ID + " and " + to.ID + " are linked by a constraint.")
            Next
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IGanttModel.Reservations">
            <summary>
            When implemented by a class, gets the list of the reservations in the Gantt model.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Data.IReservationCollection" /> instance.</value>
            <example>
            <para lang="C#,Visual Basic">The following code displays the reservations
            of a Gantt model.
            </para>
            <code lang="C#">
            IGanttModel model = ...;
            foreach (IReservation reservation in model.Reservations) {
            IActivity activity = reservation.Activity;
            IResource resource = reservation.Resource;
            if (resource == null)
            Console.WriteLine("The activity " + activity.ID + " has no associated resource.");
            else
            Console.WriteLine("The resource " + resource.ID " + has been reserved for the activity " + activity.ID);
            }
            </code>
            <code lang="Visual Basic">
            IGanttModel model = ...;
            Dim reservation as IReservation
            For Each reservation in model.Reservations
            Dim activity As IActivity = reservation.Activity
            Dim resource As IResource = reservation.Resource
            If resource Is Nothing Then
            Console.WriteLine("The activity " + activity.ID + " has no associated resource.")
            Else
            Console.WriteLine("The resource " + resource.ID " + has been reserved for the activity " + activity.ID)
            End If
            Next
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IGanttModel.Resources">
            <summary>
            When implemented by a class, gets the list of the resources in the Gantt model.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IResourceCollection" /> instance.</value>
            <remarks>Use this collection to add or remove resources to the Gantt model.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample first creates a resource with a subresource,
            and then add them to a Gantt data model.
            </para>
            <code lang="C#">
            IGanttModel model = new SimpleGanttModel();
            IResource resource = model.NewResource();
            IResource child = model.NewResource();
            resource.ChildResources.Add(child);
            model.Resources.Add(resource);
            </code>
            <code lang="Visual Basic">
            Dim model As New SimpleGanttModel
            Dim resource As IResource = model.NewResource()
            Dim child As IResource = model.NewResource()
            resource.ChildResources.Add(child)
            model.Resources.Add(resource)
            </code>
            </example>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.IPropertyDescriptorProvider">
            <summary>
            Defines an interface that provides a way to retrieve property descriptors for a specified type.
            </summary>
            <remarks>This interface allows an object to describe the properties of a specific type without
            the need to have an instance of this type.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IPropertyDescriptorProvider.GetProperties(System.Type,System.Type,System.Attribute[])">
            <summary>
            When implemented by a class, gets the collection of properties for a specified type of component using a
            specified array of attributes as a filter.
            </summary>
            <param name="baseType">The base type for the <paramref name="type" /> parameter.</param>
            <param name="type">The type of the component on which property descritors are bound to.</param>
            <param name="attrs">An array of type <see cref="T:System.Attribute" /> to use as a filter.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the properties that match the
            specified attributes for this type of component.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModel" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.BeginInit">
            <summary>
            Begins the initialization of a <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModel" /> that is used on a form
            or used by another component. The initialization occurs at run time.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.BeginUpdate">
            <summary>
            Disables notification of the model.
            </summary>
            <remarks>This method should be called before an important modification of the model.
            After the model has been modified, <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModel.EndUpdate" /> must be called. All the modifications
            made on the model between these two calls will not be recorded by the undo manager.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.EndInit">
            <summary>
            Ends the initialization of a <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModel" /> that is used on a form
            or used by another component. The initialization occurs at run time.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.EndUpdate">
            <summary>
            Enables notification of the model.
            </summary>
            <remarks>This method sends events to notify listeners that the whole model has changed.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.FindActivity(System.String)">
            <summary>
            Retrieves the activity specified by its identifier.
            </summary>
            <param name="id">The identifier of the <see cref="T:NickLee.Views.Gantt.Data.IActivity" />
            to locate in the Gantt data model.</param>
            <returns>An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> instance, or <see langword="null" /> if such
            an activity cannot be found in the Gantt data model.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.FindConstraint(System.String,System.String)">
            <summary>
            Retrieves the constraint specified by its activity identifiers.
            </summary>
            <param name="fromActivityID">The identifier of the source activity of the constraint.</param>
            <param name="toActivityID">The identifier of the destination activity of the constraint.</param>
            <returns>An <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> instance, or <see langword="null" /> if such
            a constraint cannot be found in the Gantt data model.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.FindReservation(System.String,System.String)">
            <summary>
            Retrieves the reservation specified by its activity and resource identifiers.
            </summary>
            <param name="activityID">The identifier of the activity of the reservation.</param>
            <param name="resourceID">The identifier of the resource of the reservation.</param>
            <returns>An <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> instance, or <see langword="null" /> if such
            a reservation cannot be found in the Gantt data model.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.FindResource(System.String)">
            <summary>
            Retrieves the resource specified by its identifier.
            </summary>
            <param name="id">The identifier of the <see cref="T:NickLee.Views.Gantt.Data.IResource" />
            to locate in the Gantt data model.</param>
            <returns>An <see cref="T:NickLee.Views.Gantt.Data.IResource" /> instance, or <see langword="null" /> if such
            a resource cannot be found in the Gantt data model.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.MoveActivity(NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.IActivity,System.Int32)">
            <summary>
            Moves the specified activity.
            </summary>
            <param name="activity">The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to move.</param>
            <param name="parent">The new parent for the activity.</param>
            <param name="index">The new index for the activity.</param>
            <exception cref="T:System.ArgumentException"><paramref name="activity" /> is not
            already part of the model.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.MoveResource(NickLee.Views.Gantt.Data.IResource,NickLee.Views.Gantt.Data.IResource,System.Int32)">
            <summary>
            Moves the specified resource.
            </summary>
            <param name="resource">The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to move.</param>
            <param name="parent">The new parent for the resource.</param>
            <param name="index">The new index for the resource.</param>
            <exception cref="T:System.ArgumentException"><paramref name="resource" /> is not
            already part of the model.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.NewActivity">
            <summary>
            Creates a new <see cref="T:NickLee.Views.Gantt.Data.BaseActivity" />.
            </summary>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Data.BaseActivity" /> class.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.NewConstraint(NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.ConstraintType)">
            <summary>
            Creates a new <see cref="T:NickLee.Views.Gantt.Data.BaseConstraint" />.
            </summary>
            <param name="fromActivity">The source activity of the constraint.</param>
            <param name="toActivity">The destination activity of the constraint.</param>
            <param name="type">The type of the constraint.</param>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Data.BaseConstraint" /> class.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.NewReservation(NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Creates a new <see cref="T:NickLee.Views.Gantt.Data.BaseReservation" />.
            </summary>
            <param name="activity">The activity of the reservation.</param>
            <param name="resource">The resource of the reservation.</param>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Data.BaseReservation" /> class.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.NewResource">
            <summary>
            Creates a new <see cref="T:NickLee.Views.Gantt.Data.BaseResource" />.
            </summary>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Data.BaseResource" /> class.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.OnActivitiesChanged(NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)">
            <summary>
            Is called when activities of the Gantt data model have changed.
            </summary>
            <param name="e">An <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> that contains the event data.</param>
            <remarks>The default implementation raises the <see cref="E:NickLee.Views.Gantt.Data.BaseGanttModel.ActivitiesChanged" /> event.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.OnActivitiesChanging(NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)">
            <summary>
            Is called when activities of the Gantt data model are changing.
            </summary>
            <param name="e">An <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> that contains the event data.</param>
            <remarks>The default implementation raises the <see cref="E:NickLee.Views.Gantt.Data.BaseGanttModel.ActivitiesChanging" /> event.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.OnActivityAdded(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Is called after the specified activity has been added to the model.
            </summary>
            <param name="activity">The added activity.</param>
            <remarks>This method is called for each activity being added to the model. For example,
            when adding a hierarchy of activities, this method will be called for each activity being
            added. The default implementation does nothing.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.OnActivityRemoved(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Is called after the specified activity has been removed from the model.
            </summary>
            <param name="activity">The removed activity.</param>
            <remarks>This method is called for each activity being removed from the model. For example,
            when removing a hierarchy of activities, this method will be called for each activity being
            removed. The default implementation does nothing.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.OnConstraintAdded(NickLee.Views.Gantt.Data.IConstraint)">
            <summary>
            Is called after the specified constraint has been added to the model.
            </summary>
            <param name="constraint">The added constraint.</param>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.OnConstraintRemoved(NickLee.Views.Gantt.Data.IConstraint)">
            <summary>
            Is called after the specified constraint has been removed from the model.
            </summary>
            <param name="constraint">The removed constraint.</param>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.OnConstraintsChanged(NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs)">
            <summary>
            Is called when constraints of the Gantt data model have changed.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs" /> that contains the event data.</param>
            <remarks>The default implementation raises the <see cref="E:NickLee.Views.Gantt.Data.BaseGanttModel.ConstraintsChanged" /> event.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.OnConstraintsChanging(NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs)">
            <summary>
            Is called when constraints of the Gantt data model are changing.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs" /> that contains the event data.</param>
            <remarks>The default implementation raises the <see cref="E:NickLee.Views.Gantt.Data.BaseGanttModel.ConstraintsChanging" /> event.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.OnReservationAdded(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Is called after the specified reservation has been added to the model.
            </summary>
            <param name="reservation">The added reservation.</param>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.OnReservationRemoved(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Is called after the specified reservation has been removed from the model.
            </summary>
            <param name="reservation">The removed reservation.</param>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.OnReservationsChanged(NickLee.Views.Gantt.Data.ReservationsChangeEventArgs)">
            <summary>
            Is called when reservations of the Gantt data model have changed.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs" /> that contains the event data.</param>
            <remarks>The default implementation raises the <see cref="E:NickLee.Views.Gantt.Data.BaseGanttModel.ReservationsChanged" /> event.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.OnReservationsChanging(NickLee.Views.Gantt.Data.ReservationsChangeEventArgs)">
            <summary>
            Is called when reservations of the Gantt data model are changing.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs" /> that contains the event data.</param>
            <remarks>The default implementation raises the <see cref="E:NickLee.Views.Gantt.Data.BaseGanttModel.ReservationsChanging" /> event.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.OnResourceAdded(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Is called after the specified resource has been added to the model.
            </summary>
            <param name="resource">The added resource.</param>
            <remarks>This method is called for each resource being added to the model. For example,
            when adding a hierarchy of resources, this method will be called for each resource being
            added. The default implementation does nothing.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.OnResourceRemoved(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Is called after the specified resource has been removed from the model.
            </summary>
            <param name="resource">The removed resource.</param>
            <remarks>This method is called for each resource being removed from the model. For example,
            when removing a hierarchy of resources, this method will be called for each resource being
            removed. The default implementation does nothing.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.OnResourcesChanged(NickLee.Views.Gantt.Data.ResourcesChangeEventArgs)">
            <summary>
            Is called when resources of the Gantt data model have changed.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /> that contains the event data.</param>
            <remarks>The default implementation raises the <see cref="E:NickLee.Views.Gantt.Data.BaseGanttModel.ResourcesChanged" /> event.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseGanttModel.OnResourcesChanging(NickLee.Views.Gantt.Data.ResourcesChangeEventArgs)">
            <summary>
            Is called when resources of the Gantt data model are changing.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /> that contains the event data.</param>
            <remarks>The default implementation raises the <see cref="E:NickLee.Views.Gantt.Data.BaseGanttModel.ResourcesChanging" /> event.</remarks>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.BaseGanttModel.ActivitiesChanged">
            <summary>
            Occurs when activities have changed in the Gantt data model.
            </summary>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to handle the
            <strong>IGanttModel.ActivitiesChanged</strong> event.
            </para>
            <code lang="C#">
            SimpleGanttModel model = new SimpleGanttModel();
            model.ActivitiesChanged += new ActivitiesChangeEventHandler(ActivitiesChanged);

            private void ActivitiesChanged(object sender, ActivitiesChangeEventArgs args) {
            switch(args.Action) {
            case ActivitiesAction.Add:
            Console.WriteLine("Activities added.");
            break;
            case ActivitiesAction.Delete:
            Console.WriteLine("Activities deleted.");
            break;
            case ActivitiesAction.PropertyChange:
            Console.WriteLine("Activities Changed.");
            break;
            case ActivitiesAction.Move:
            Console.WriteLine("Activities Moved.");
            break;
            case ActivitiesAction.Reset:
            Console.WriteLine("Activities Reset.");
            break;
            }
            }
            </code>
            <code lang="Visual Basic">
            Dim WithEvents model As New SimpleGanttModel

            Private Sub ActivitiesChanged(ByVal sender As Object, ByVal args As ActivitiesChangeEventArgs) Handles model.ActivitiesChanged
            Select Case args.Action
            Case ActivitiesAction.Add
            Console.WriteLine("Activities added.")
            Exit Sub
            Case ActivitiesAction.Delete
            Console.WriteLine("Activities deleted.")
            Exit Sub
            Case ActivitiesAction.PropertyChange
            Console.WriteLine("Activities Changed.")
            Exit Sub
            Case ActivitiesAction.Move
            Console.WriteLine("Activities Moved.")
            Exit Sub
            Case ActivitiesAction.Reset
            Console.WriteLine("Activities Reset.")
            Exit Sub
            End Select
            End Sub
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.BaseGanttModel.ActivitiesChanging">
            <summary>
            Occurs when activities are changing in the Gantt data model.
            </summary>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to handle the
            <strong>IGanttModel.ActivitiesChanged</strong> event.
            </para>
            <code lang="C#">
            SimpleGanttModel model = new SimpleGanttModel();
            model.ActivitiesChanged += new ActivitiesChangeEventHandler(ActivitiesChanged);

            private void ActivitiesChanged(object sender, ActivitiesChangeEventArgs args) {
            switch(args.Action) {
            case ActivitiesAction.Add:
            Console.WriteLine("Activities added.");
            break;
            case ActivitiesAction.Delete:
            Console.WriteLine("Activities deleted.");
            break;
            case ActivitiesAction.PropertyChange:
            Console.WriteLine("Activities Changed.");
            break;
            case ActivitiesAction.Move:
            Console.WriteLine("Activities Moved.");
            break;
            case ActivitiesAction.Reset:
            Console.WriteLine("Activities Reset.");
            break;
            }
            }
            </code>
            <code lang="Visual Basic">
            Dim WithEvents model As New SimpleGanttModel

            Private Sub ActivitiesChanged(ByVal sender As Object, ByVal args As ActivitiesChangeEventArgs) Handles model.ActivitiesChanged
            Select Case args.Action
            Case ActivitiesAction.Add
            Console.WriteLine("Activities added.")
            Exit Sub
            Case ActivitiesAction.Delete
            Console.WriteLine("Activities deleted.")
            Exit Sub
            Case ActivitiesAction.PropertyChange
            Console.WriteLine("Activities Changed.")
            Exit Sub
            Case ActivitiesAction.Move
            Console.WriteLine("Activities Moved.")
            Exit Sub
            Case ActivitiesAction.Reset
            Console.WriteLine("Activities Reset.")
            Exit Sub
            End Select
            End Sub
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.BaseGanttModel.ConstraintsChanged">
            <summary>
            Occurs when constraints have changed in the Gantt data model.
            </summary>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to handle the
            <strong>IGanttModel.ConstraintsChanged</strong> event.
            </para>
            <code lang="C#">
            SimpleGanttModel model = new SimpleGanttModel();
            model.ConstraintsChanged += new ConstraintsChangeEventHandler(ConstraintsChanged);

            private void ConstraintsChanged(object sender, ConstraintsChangeEventArgs args) {
            switch(args.Action) {
            case ConstraintsAction.Add:
            Console.WriteLine("Constraints added.");
            break;
            case ConstraintsAction.Delete:
            Console.WriteLine("Constraints deleted.");
            break;
            case ConstraintsAction.PropertyChange:
            Console.WriteLine("Constraints Changed.");
            break;
            case ConstraintsAction.Reset:
            Console.WriteLine("Constraints Reset.");
            break;
            }
            }
            </code>
            <code lang="Visual Basic">
            Dim WithEvents model As New SimpleGanttModel

            Private Sub ConstraintsChanged(ByVal sender As Object, ByVal args As ConstraintsChangeEventArgs) Handles model.ConstraintsChanged
            Select Case args.Action
            Case ConstraintsAction.Add
            Console.WriteLine("Constraints added.")
            Exit Sub
            Case ConstraintsAction.Delete
            Console.WriteLine("Constraints deleted.")
            Exit Sub
            Case ConstraintsAction.PropertyChange
            Console.WriteLine("Constraints Changed.")
            Exit Sub
            Case ConstraintsAction.Reset
            Console.WriteLine("Constraints Reset.")
            Exit Sub
            End Select
            End Sub
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.BaseGanttModel.ConstraintsChanging">
            <summary>
            Occurs when constraints are changing in the Gantt data model.
            </summary>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to handle the
            <strong>IGanttModel.ConstraintsChanged</strong> event.
            </para>
            <code lang="C#">
            SimpleGanttModel model = new SimpleGanttModel();
            model.ConstraintsChanged += new ConstraintsChangeEventHandler(ConstraintsChanged);

            private void ConstraintsChanged(object sender, ConstraintsChangeEventArgs args) {
            switch(args.Action) {
            case ConstraintsAction.Add:
            Console.WriteLine("Constraints added.");
            break;
            case ConstraintsAction.Delete:
            Console.WriteLine("Constraints deleted.");
            break;
            case ConstraintsAction.PropertyChange:
            Console.WriteLine("Constraints Changed.");
            break;
            case ConstraintsAction.Reset:
            Console.WriteLine("Constraints Reset.");
            break;
            }
            }
            </code>
            <code lang="Visual Basic">
            Dim WithEvents model As New SimpleGanttModel

            Private Sub ConstraintsChanged(ByVal sender As Object, ByVal args As ConstraintsChangeEventArgs) Handles model.ConstraintsChanged
            Select Case args.Action
            Case ConstraintsAction.Add
            Console.WriteLine("Constraints added.")
            Exit Sub
            Case ConstraintsAction.Delete
            Console.WriteLine("Constraints deleted.")
            Exit Sub
            Case ConstraintsAction.PropertyChange
            Console.WriteLine("Constraints Changed.")
            Exit Sub
            Case ConstraintsAction.Reset
            Console.WriteLine("Constraints Reset.")
            Exit Sub
            End Select
            End Sub
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.BaseGanttModel.ReservationsChanged">
            <summary>
            Occurs when reservations have changed in the Gantt data model.
            </summary>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to handle the
            <strong>IGanttModel.ReservationsChanged</strong> event.
            </para>
            <code lang="C#">
            SimpleGanttModel model = new SimpleGanttModel();
            model.ReservationsChanged += new ReservationsChangeEventHandler(ReservationsChanged);

            private void ReservationsChanged(object sender, ReservationsChangeEventArgs args) {
            switch(args.Action) {
            case ReservationsAction.Add:
            Console.WriteLine("Reservations added.");
            break;
            case ReservationsAction.Delete:
            Console.WriteLine("Reservations deleted.");
            break;
            case ReservationsAction.PropertyChange:
            Console.WriteLine("Reservations Changed.");
            break;
            case ReservationsAction.Reset:
            Console.WriteLine("Reservations Reset.");
            break;
            }
            }
            </code>
            <code lang="Visual Basic">
            Dim WithEvents model As New SimpleGanttModel

            Private Sub ReservationsChanged(ByVal sender As Object, ByVal args As ReservationsChangeEventArgs) Handles model.ReservationsChanged
            Select Case args.Action
            Case ReservationsAction.Add
            Console.WriteLine("Reservations added.")
            Exit Sub
            Case ReservationsAction.Delete
            Console.WriteLine("Reservations deleted.")
            Exit Sub
            Case ReservationsAction.PropertyChange
            Console.WriteLine("Reservations Changed.")
            Exit Sub
            Case ReservationsAction.Reset
            Console.WriteLine("Reservations Reset.")
            Exit Sub
            End Select
            End Sub
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.BaseGanttModel.ReservationsChanging">
            <summary>
            Occurs when reservations are changing in the Gantt data model.
            </summary>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to handle the
            <strong>IGanttModel.ReservationsChanged</strong> event.
            </para>
            <code lang="C#">
            SimpleGanttModel model = new SimpleGanttModel();
            model.ReservationsChanged += new ReservationsChangeEventHandler(ReservationsChanged);

            private void ReservationsChanged(object sender, ReservationsChangeEventArgs args) {
            switch(args.Action) {
            case ReservationsAction.Add:
            Console.WriteLine("Reservations added.");
            break;
            case ReservationsAction.Delete:
            Console.WriteLine("Reservations deleted.");
            break;
            case ReservationsAction.PropertyChange:
            Console.WriteLine("Reservations Changed.");
            break;
            case ReservationsAction.Reset:
            Console.WriteLine("Reservations Reset.");
            break;
            }
            }
            </code>
            <code lang="Visual Basic">
            Dim WithEvents model As New SimpleGanttModel

            Private Sub ReservationsChanged(ByVal sender As Object, ByVal args As ReservationsChangeEventArgs) Handles model.ReservationsChanged
            Select Case args.Action
            Case ReservationsAction.Add
            Console.WriteLine("Reservations added.")
            Exit Sub
            Case ReservationsAction.Delete
            Console.WriteLine("Reservations deleted.")
            Exit Sub
            Case ReservationsAction.PropertyChange
            Console.WriteLine("Reservations Changed.")
            Exit Sub
            Case ReservationsAction.Reset
            Console.WriteLine("Reservations Reset.")
            Exit Sub
            End Select
            End Sub
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.BaseGanttModel.ResourcesChanged">
            <summary>
            Occurs when resources have changed in the Gantt data model.
            </summary>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to handle the
            <strong>IGanttModel.ResourcesChanged</strong> event.
            </para>
            <code lang="C#">
            SimpleGanttModel model = new SimpleGanttModel();
            model.ResourcesChanged += new ResourcesChangeEventHandler(ResourcesChanged);

            private void ResourcesChanged(object sender, ResourcesChangeEventArgs args) {
            switch(args.Action) {
            case ResourcesAction.Add:
            Console.WriteLine("Resources added.");
            break;
            case ResourcesAction.Delete:
            Console.WriteLine("Resources deleted.");
            break;
            case ResourcesAction.PropertyChange:
            Console.WriteLine("Resources Changed.");
            break;
            case ResourcesAction.Move:
            Console.WriteLine("Resources Moved.");
            break;
            case ResourcesAction.Reset:
            Console.WriteLine("Resources Reset.");
            break;
            }
            }
            </code>
            <code lang="Visual Basic">
            Dim WithEvents model As New SimpleGanttModel

            Private Sub ResourcesChanged(ByVal sender As Object, ByVal args As ResourcesChangeEventArgs) Handles model.ResourcesChanged
            Select Case args.Action
            Case ResourcesAction.Add
            Console.WriteLine("Resources added.")
            Exit Sub
            Case ResourcesAction.Delete
            Console.WriteLine("Resources deleted.")
            Exit Sub
            Case ResourcesAction.PropertyChange
            Console.WriteLine("Resources Changed.")
            Exit Sub
            Case ResourcesAction.Move
            Console.WriteLine("Resources Moved.")
            Exit Sub
            Case ResourcesAction.Reset
            Console.WriteLine("Resources Reset.")
            Exit Sub
            End Select
            End Sub
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.BaseGanttModel.ResourcesChanging">
            <summary>
            Occurs when resources are changing in the Gantt data model.
            </summary>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to handle the
            <strong>IGanttModel.ResourcesChanged</strong> event.
            </para>
            <code lang="C#">
            SimpleGanttModel model = new SimpleGanttModel();
            model.ResourcesChanged += new ResourcesChangeEventHandler(ResourcesChanged);

            private void ResourcesChanged(object sender, ResourcesChangeEventArgs args) {
            switch(args.Action) {
            case ResourcesAction.Add:
            Console.WriteLine("Resources added.");
            break;
            case ResourcesAction.Delete:
            Console.WriteLine("Resources deleted.");
            break;
            case ResourcesAction.PropertyChange:
            Console.WriteLine("Resources Changed.");
            break;
            case ResourcesAction.Move:
            Console.WriteLine("Resources Moved.");
            break;
            case ResourcesAction.Reset:
            Console.WriteLine("Resources Reset.");
            break;
            }
            }
            </code>
            <code lang="Visual Basic">
            Dim WithEvents model As New SimpleGanttModel

            Private Sub ResourcesChanged(ByVal sender As Object, ByVal args As ResourcesChangeEventArgs) Handles model.ResourcesChanged
            Select Case args.Action
            Case ResourcesAction.Add
            Console.WriteLine("Resources added.")
            Exit Sub
            Case ResourcesAction.Delete
            Console.WriteLine("Resources deleted.")
            Exit Sub
            Case ResourcesAction.PropertyChange
            Console.WriteLine("Resources Changed.")
            Exit Sub
            Case ResourcesAction.Move
            Console.WriteLine("Resources Moved.")
            Exit Sub
            Case ResourcesAction.Reset
            Console.WriteLine("Resources Reset.")
            Exit Sub
            End Select
            End Sub
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseGanttModel.Activities">
            <summary>
            Gets the list of the root activities in the Gantt data model.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IActivityCollection" /> instance.</value>
            <remarks>Use this collection to add or remove activities to the Gantt model.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample first creates an activity with a subactivity,
            and then add them to a Gantt data model.
            </para>
            <code lang="C#">
            IGanttModel model = new SimpleGanttModel();
            IActivity activity = model.NewActivity();
            IActivity child = model.NewActivity();
            activity.ChildActivities.Add(child);
            model.Activities.Add(activity);
            </code>
            <code lang="Visual Basic">
            Dim model As New SimpleGanttModel
            Dim activity As IActivity = model.NewActivity()
            Dim child As IActivity = model.NewActivity()
            activity.ChildActivities.Add(child)
            model.Activities.Add(activity)
            </code>
            </example>
            <seealso cref="P:NickLee.Views.Gantt.Data.BaseGanttModel.AllActivities" />
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseGanttModel.ActivityPrefix">
            <summary>
            Gets or sets the prefix used for activities identifiers.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the prefix used for activities identifiers.
            The default value is <strong>"A"</strong>.</value>
            <remarks>This value is only used when adding activities with a null identifier to the model. In
            this case, a unique identifier will be generated using this prefix.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseGanttModel.AllActivities">
            <summary>
            Gets a flat list of all the activities in the Gantt data model.
            </summary>
            <value>An enumerable object that flatten the activities hierarchy of the Gantt data model.</value>
            <remarks>Use this property to browse all the activities of the Gantt model.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample displays the identifier of each activity of a Gantt data model.
            </para>
            <code lang="C#">
            SimpleGanttModel model = ...
            foreach (IActivity activity in model.AllActivities)
            {
            Console.WriteLine(activity.ID);
            }
            </code>
            <code lang="Visual Basic">
            Dim model As SimpleGanttModel = ...
            Dim activity As IActivity
            For Each activity in model.AllActivities
            Console.WriteLine(activity.ID);
            Next
            </code>
            </example>
            <seealso cref="P:NickLee.Views.Gantt.Data.BaseGanttModel.Activities" />
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseGanttModel.AllResources">
            <summary>
            Gets a flat list of all the resources in the Gantt data model.
            </summary>
            <value>An enumerable object that flatten the resources hierarchy of the Gantt data model.</value>
            <remarks>Use this property to browse all the resources of the Gantt model.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample displays the identifier of each resource of a Gantt data model.
            </para>
            <code lang="C#">
            SimpleGanttModel model = ...
            foreach (IResource resource in model.AllResources)
            {
            Console.WriteLine(resource.ID);
            }
            </code>
            <code lang="Visual Basic">
            Dim model As SimpleGanttModel = ...
            Dim resource As IResource
            For Each resource in model.AllResources
            Console.WriteLine(resource.ID);
            Next
            </code>
            </example>
            <seealso cref="P:NickLee.Views.Gantt.Data.BaseGanttModel.Activities" />
            <seealso cref="P:NickLee.Views.Gantt.Data.BaseGanttModel.Resources" />
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseGanttModel.Constraints">
            <summary>
            Gets the list of the constraints in the Gantt data model.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IConstraintCollection" /> instance.</value>
            <example>
            <para lang="C#,Visual Basic">The following code displays the constraints
            of a Gantt model.
            </para>
            <code lang="C#">
            IGanttModel model = ...;
            foreach (IConstraint constraint in model.Constraints) {
            IActivity from = constraint.FromActivity;
            IActivity to = constraint.ToActivity;
            Console.WriteLine("The activities " + from.ID + " and " + to.ID + " are linked by a constraint.");
            }
            </code>
            <code lang="Visual Basic">
            IGanttModel model = ...;
            Dim constraint as IConstraint
            For Each constraint in model.Constraints
            Dim from As IActivity = constraint.FromActivity
            Dim to As IActivity = constraint.ToActivity
            Console.WriteLine("The activities " + from.ID + " and " + to.ID + " are linked by a constraint.")
            Next
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseGanttModel.CustomActivityProperties">
            <summary>
            Gets the collection of custom property descriptors for activities.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection" /> collection.</value>
            <remarks><p>Use this collection to dynamically extend the activities of this Gantt model.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code adds a new activity property called <strong>Priority</strong>. The
            type of this new property is <code>short</code>, and its default value is <code>0</code>. The code also
            shows how to access this new property.
            </para>
            <code lang="C#">
            SimpleGanttModel model = new SimpleGanttModel();
            model.CustomActivityProperties.Add("Priority", typeof(Int16), (short)0);
            SimpleActivity activity = (SimpleActivity)model.NewActivity();
            activity["Priority"] = (short)5;
            </code>
            <code lang="Visual Basic">
            Dim model As New SimpleGanttModel
            model.CustomActivityProperties.Add("Priority", GetType(Int16), CType(0, Short))
            Dim activity As SimpleActivity = CType(model.NewActivity(), SimpleActivity)
            activity.Item("Priority") = 5
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseGanttModel.CustomConstraintProperties">
            <summary>
            Gets the collection of custom property descriptors for constraints.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection" /> collection.</value>
            <remarks><p>Use this collection to dynamically extend the constraints of this Gantt model.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code adds a new constraint property called <strong>Name</strong>. The
            type of this new property is <code>String</code>, and its default value is the empty string. The code also
            shows how to access this new property.
            </para>
            <code lang="C#">
            SimpleGanttModel model = new SimpleGanttModel();
            model.CustomConstraintProperties.Add("Name", typeof(string), "");
            SimpleActivity from = (SimpleActivity)model.NewActivity();
            SimpleActivity to = (SimpleActivity)model.NewActivity();
            SimpleConstraint constraint = (SimpleConstraint)model.NewConstraint(from, to, ConstraintType.EndToStart);
            constraint["Name"] = "A Constraint";
            </code>
            <code lang="Visual Basic">
            Dim model As New SimpleGanttModel
            model.CustomConstraintProperties.Add("Name", GetType(String), "")
            Dim from as IActivity = model.NewActivity()
            Dim to as IActivity = model.NewActivity()
            Dim constraint As SimpleConstraint = CType(model.NewConstraint(from, to, ConstraintType.EndToStart), SimpleConstraint)
            constraint.Item("Name") = "A Constraint"
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseGanttModel.CustomReservationProperties">
            <summary>
            Gets the collection of custom property descriptors for reservations.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection" /> collection.</value>
            <remarks><p>Use this collection to dynamically extend the reservations of this Gantt model.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code adds a new reservation property called <strong>Name</strong>. The
            type of this new property is <code>String</code>, and its default value is the empty string. The code also
            shows how to access this new property.
            </para>
            <code lang="C#">
            SimpleGanttModel model = new SimpleGanttModel();
            model.CustomReservationProperties.Add("Name", typeof(string), "");
            SimpleActivity activity = (SimpleActivity)model.NewActivity();
            SimpleResource resource = (SimpleResource)model.NewResource();
            SimpleReservation reservation = (SimpleReservation)model.NewReservation(activity, resource);
            reservation["Name"] = "A Reservation";
            </code>
            <code lang="Visual Basic">
            Dim model As New SimpleGanttModel
            model.CustomReservationProperties.Add("Name", GetType(String), "")
            Dim activity as IActivity = model.NewActivity()
            Dim resource as IResource = model.NewResource()
            Dim reservation As SimpleReservation = CType(model.NewReservation(activity, resource), SimpleReservation)
            reservation.Item("Name") = "A Reservation"
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseGanttModel.CustomResourceProperties">
            <summary>
            Gets the collection of custom property descriptors for resources.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection" /> collection.</value>
            <remarks><p>Use this collection to dynamically extend the resources of this Gantt model.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code adds a new resource property called <strong>Reservoir</strong>. The
            type of this new property is <code>Double</code>, and its default value is <code>0</code>. The code also
            shows how to access this new property.
            </para>
            <code lang="C#">
            SimpleGanttModel model = new SimpleGanttModel();
            model.CustomResourceProperties.Add("Reservoir", typeof(double), 0d);
            SimpleResource resource = (SimpleResource)model.NewResource();
            resource["Reservoir"] = 100d;
            </code>
            <code lang="Visual Basic">
            Dim model As New SimpleGanttModel
            model.CustomResourceProperties.Add("Reservoir", GetType(Double), 0D)
            Dim resource As SimpleResource = CType(model.NewResource(), SimpleResource)
            resource.Item("Reservoir") = 100D
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseGanttModel.EnsureValidConstraints">
            <summary>
            Gets or sets a value indicating whether the model maintains valid constraints between activities.
            </summary>
            <value><see langword="true" /> if the model maintains valid constraints between activities; Otherwise,
            <see langword="false" />.</value>
            <remarks>When setting the value to <see langword="true" />, if the model contains cyclic
            constraints, or duplicate constraints, an exception is raised.</remarks>
            <exception cref="T:System.InvalidOperationException">There are cyclic or duplicate constraints in the model.</exception>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseGanttModel.IsUpdating">
            <summary>
            Gets a value indicating whether the model is being updated.
            </summary>
            <value><see langword="true" /> if the model is being updated;
            <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseGanttModel.Reservations">
            <summary>
            Gets the list of the reservations in the Gantt data model.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IReservationCollection" /> instance.</value>
            <example>
            <para lang="C#,Visual Basic">The following code displays the reservations
            of a Gantt model.
            </para>
            <code lang="C#">
            IGanttModel model = ...;
            foreach (IReservation reservation in model.Reservations) {
            IActivity activity = reservation.Activity;
            IResource resource = reservation.Resource;
            if (resource == null)
            Console.WriteLine("The activity " + activity.ID + " has no associated resource.");
            else
            Console.WriteLine("The resource " + resource.ID " + has been reserved for the activity " + activity.ID);
            }
            </code>
            <code lang="Visual Basic">
            IGanttModel model = ...;
            Dim reservation as IReservation
            For Each reservation in model.Reservations
            Dim activity As IActivity = reservation.Activity
            Dim resource As IResource = reservation.Resource
            If resource Is Nothing Then
            Console.WriteLine("The activity " + activity.ID + " has no associated resource.")
            Else
            Console.WriteLine("The resource " + resource.ID " + has been reserved for the activity " + activity.ID)
            End If
            Next
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseGanttModel.ResourcePrefix">
            <summary>
            Gets or sets the prefix used for resource identifiers.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the prefix used for resource identifiers.
            The default value is <strong>"R"</strong>.</value>
            <remarks>This value is only used when adding resources with a null identifier to the model. In
            this case, a unique identifier will be generated using this prefix.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseGanttModel.Resources">
            <summary>
            Gets the list of the root resources in the Gantt data model.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IResourceCollection" /> instance.</value>
            <remarks>Use this collection to add or remove resources to the Gantt model.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample first creates a resource with a subresource,
            and then add them to a Gantt data model.
            </para>
            <code lang="C#">
            IGanttModel model = new SimpleGanttModel();
            IResource resource = model.NewResource();
            IResource child = model.NewResource();
            resource.ChildResources.Add(child);
            model.Resources.Add(resource);
            </code>
            <code lang="Visual Basic">
            Dim model As New SimpleGanttModel
            Dim resource As IResource = model.NewResource()
            Dim child As IResource = model.NewResource()
            resource.ChildResources.Add(child)
            model.Resources.Add(resource)
            </code>
            </example>
            <seealso cref="P:NickLee.Views.Gantt.Data.BaseGanttModel.AllResources" />
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseGanttModel.Site">
            <summary>
            This member overrides <see cref="P:System.ComponentModel.MarshalByValueComponent.Site">MarshalByValueComponent.Site</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleGanttModel.NewActivity">
            <summary>
            Creates a new <see cref="T:NickLee.Views.Gantt.Data.SimpleActivity" />.
            </summary>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Data.SimpleActivity" /> class.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleGanttModel.NewConstraint(NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.ConstraintType)">
            <summary>
            Creates a new <see cref="T:NickLee.Views.Gantt.Data.SimpleConstraint" />.
            </summary>
            <param name="fromActivity">The source activity of the constraint.</param>
            <param name="toActivity">The destination activity of the constraint.</param>
            <param name="type">The type of the constraint.</param>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Data.SimpleConstraint" /> class.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleGanttModel.NewReservation(NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Creates a new <see cref="T:NickLee.Views.Gantt.Data.SimpleReservation" />.
            </summary>
            <param name="activity">The activity of the reservation.</param>
            <param name="resource">The resource of the reservation.</param>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Data.SimpleReservation" /> class.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleGanttModel.NewResource">
            <summary>
            Creates a new <see cref="T:NickLee.Views.Gantt.Data.SimpleResource" />.
            </summary>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Data.SimpleResource" /> class.</returns>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttDataSet">
            <summary>
            A typed dataset dedicated to the Gantt Data Model.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet" /> class from a streaming context.
            </summary>
            <param name="info">An instance of <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
            <param name="context">An instance of <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.Clone">
            <summary>
            This member overrides <see cref="M:System.Data.DataSet.Clone">DataSet.Clone</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.GetSchemaSerializable">
            <summary>
            This member overrides <see cref="M:System.Data.DataSet.GetSchemaSerializable">DataSet.GetSchemaSerializable</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ReadXmlSerializable(System.Xml.XmlReader)">
            <summary>
            This member overrides <see cref="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)">DataSet.ReadXmlSerializable</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ShouldSerializeRelations">
            <summary>
            This member overrides <see cref="M:System.Data.DataSet.ShouldSerializeRelations">DataSet.ShouldSerializeRelations</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ShouldSerializeTables">
            <summary>
            This member overrides <see cref="M:System.Data.DataSet.ShouldSerializeTables">DataSet.ShouldSerializeTables</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.Activities">
            <summary>
            Gets the table that contains the activities of the Gantt Data Model.
            </summary>
            <value>An instance of <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesDataTable" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.Constraints">
            <summary>
            Gets the table that contains the constraints of the Gantt Data Model.
            </summary>
            <value>An instance of <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsDataTable" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.Reservations">
            <summary>
            Gets the table that contains the reservations of the Gantt Data Model.
            </summary>
            <value>An instance of <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsDataTable" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.Resources">
            <summary>
            Gets the table that contains the resources of the Gantt Data Model.
            </summary>
            <value>An instance of <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesDataTable" />.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesDataTable">
            <summary>
            A typed data table dedicated to the Gantt activities.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesDataTable.AddActivitiesRow(NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow)">
            <summary>
            Adds a row to the table.
            </summary>
            <param name="row">The row to be added.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesDataTable.AddActivitiesRow(System.String,System.DateTime,System.String,System.Int64,System.Boolean,System.String,System.Single,System.DateTime,System.Boolean,System.String,System.Int32)">
            <summary>
            Adds a row to the table.
            </summary>
            <param name="ID">The activity ID.</param>
            <param name="StartTime">The activity start time.</param>
            <param name="Name">The activity name.</param>
            <param name="Duration">The activity duration.</param>
            <param name="AllowSummary">A Boolean value indicating whether this activity should be
            considered as a summary when it has children.</param>
            <param name="Info">A <see cref="T:System.String" /> that represents text information about the
            activity.</param>
            <param name="WorkComplete">The completion of the activity, a float value in the range [0..1].</param>
            <param name="EndTime">The activity end time.</param>
            <param name="Milestone">A Boolean value indicating whether this activity should be a
            milestone.</param>
            <param name="ParentID">The parent activity ID.</param>
            <param name="IndexInParent">The index of the parent child collection.</param>
            <returns>The row added to the table.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesDataTable.Clone">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.Clone">DataTable.Clone</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesDataTable.CreateInstance">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.CreateInstance">DataTable.CreateInstance</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesDataTable.FindByID(System.String)">
            <summary>
            Gets a row of the table using its ID.
            </summary>
            <param name="ID">The ID being looked for.</param>
            <returns>The row found, or <see langword="null" /> if the row was not found.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesDataTable.GetEnumerator">
            <summary>
            Returns an enumerator on the table rows.
            </summary>
            <returns>An enumerator on the table rows.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesDataTable.GetRowType">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.GetRowType">DataTable.GetRowType</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesDataTable.NewActivitiesRow">
            <summary>
            Creates a new row for the table.
            </summary>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow" /> class.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesDataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">DataTable.NewRowFromBuilder</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesDataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">DataTable.OnRowChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesDataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">DataTable.OnRowChanging</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">DataTable.OnRowDeleted</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">DataTable.OnRowDeleting</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesDataTable.RemoveActivitiesRow(NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow)">
            <summary>
            Removes the specified row from the table.
            </summary>
            <param name="row">The row to remove.</param>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesDataTable.ActivitiesRowChanged">
            <summary>
            Occurs when the rows of the table representing the activities have been changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesDataTable.ActivitiesRowChanging">
            <summary>
            Occurs when the rows of the table representing the activities are being changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesDataTable.ActivitiesRowDeleted">
            <summary>
            Occurs when the rows of the table representing the activities have been deleted.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesDataTable.ActivitiesRowDeleting">
            <summary>
            Occurs when the rows of the table representing the activities are being deleted.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesDataTable.Count">
            <summary>
            Gets the number of rows of the table.
            </summary>
            <value>An integer.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesDataTable.Item(System.Int32)">
            <summary>
            Gets the table row specified by its index.
            </summary>
            <value>An instance of the <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow" /> class.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow">
            <summary>
            A typed data row dedicated to a Gantt activity.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.IsAllowSummaryNull">
            <summary>
            Checks whether the value of the <strong>AllowSummary</strong> column is <see langword="null" />.
            </summary>
            <returns><see langword="true" /> if the value of the column is <see langword="null" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.IsDurationNull">
            <summary>
            Checks whether the value of the <strong>Duration</strong> column is <see langword="null" />.
            </summary>
            <returns><see langword="true" /> if the value of the column is <see langword="null" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.IsEndTimeNull">
            <summary>
            Checks whether the value of the <strong>EndTime</strong> column is <see langword="null" />.
            </summary>
            <returns><see langword="true" /> if the value of the column is <see langword="null" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.IsIndexInParentNull">
            <summary>
            Checks whether the value of the <strong>IndexInParent</strong> column is <see langword="null" />.
            </summary>
            <returns><see langword="true" /> if the value of the column is <see langword="null" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.IsInfoNull">
            <summary>
            Checks whether the value of the <strong>Info</strong> column is <see langword="null" />.
            </summary>
            <returns><see langword="true" /> if the value of the column is <see langword="null" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.IsMilestoneNull">
            <summary>
            Checks whether the value of the <strong>IsMilestone</strong> column is <see langword="null" />.
            </summary>
            <returns><see langword="true" /> if the value of the column is <see langword="null" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.IsNameNull">
            <summary>
            Checks whether the value of the <strong>Name</strong> column is <see langword="null" />.
            </summary>
            <returns><see langword="true" /> if the value of the column is <see langword="null" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.IsParentIDNull">
            <summary>
            Checks whether the value of the <strong>ParentID</strong> column is <see langword="null" />.
            </summary>
            <returns><see langword="true" /> if the value of the column is <see langword="null" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.IsWorkCompleteNull">
            <summary>
            Checks whether the value of the <strong>WorkComplete</strong> column is <see langword="null" />.
            </summary>
            <returns><see langword="true" /> if the value of the column is <see langword="null" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.SetAllowSummaryNull">
            <summary>
            Sets the value of the <strong>AllowSummary</strong> column to <see langword="null" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.SetDurationNull">
            <summary>
            Sets the value of the <strong>Duration</strong> column to <see langword="null" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.SetEndTimeNull">
            <summary>
            Sets the value of the <strong>EndTime</strong> column to <see langword="null" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.SetIndexInParentNull">
            <summary>
            Sets the value of the <strong>IndexInParent</strong> column to <see langword="null" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.SetInfoNull">
            <summary>
            Sets the value of the <strong>Info</strong> column to <see langword="null" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.SetMilestoneNull">
            <summary>
            Sets the value of the <strong>IsMilestone</strong> column to <see langword="null" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.SetNameNull">
            <summary>
            Sets the value of the <strong>Name</strong> column to <see langword="null" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.SetParentIDNull">
            <summary>
            Sets the value of the <strong>ParentID</strong> column to <see langword="null" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.SetWorkCompleteNull">
            <summary>
            Sets the value of the <strong>WorkComplete</strong> column to <see langword="null" />.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.AllowSummary">
            <summary>
            Gets or sets a Boolean value indicating whether the activity can act as a summary
            for its subactivities.
            </summary>
            <value><see langword="true" /> if the activity can act as a summary; otherwise,
            <see langword="false" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.Duration">
            <summary>
            Gets or sets the activitiy duration.
            </summary>
            <value>A <see cref="T:System.Int64" /> that represents the activity duration expressed in ticks.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.EndTime">
            <summary>
            Gets or sets the activity end time.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.ID">
            <summary>
            Gets or sets the ID of the activity.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the ID of the activity.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.IndexInParent">
            <summary>
            Gets or sets the index of the activity in its parent children collection.
            </summary>
            <value>A posivite integer.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.Info">
            <summary>
            Gets or sets text information related to the activity.
            </summary>
            <value>A <see cref="T:System.String" /> that represents text information related to the
            activity.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.Milestone">
            <summary>
            Gets or sets a value indicating whether the activity should be considered as a milestone.
            </summary>
            <value><see langword="true" /> if the activity should be considered as a milestone;
            <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.Name">
            <summary>
            Gets or sets the activity name.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the activity name.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.ParentID">
            <summary>
            Gets or sets the parent ID of the activity.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the ID of the activity parent.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.StartTime">
            <summary>
            Gets or sets the activity start time.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow.WorkComplete">
            <summary>
            Gets or sets the percentage of completion of the activity.
            </summary>
            <value>A <see cref="T:System.Single" /> in the range [0..1].</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRowChangeEvent">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesDataTable.ActivitiesRowChanging" /> and
            <see cref="E:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesDataTable.ActivitiesRowChanging" /> events.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRowChangeEvent.#ctor(NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRow,System.Data.DataRowAction)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRowChangeEvent" /> class.
            </summary>
            <param name="row">The row on which the event occurs.</param>
            <param name="action">The type of action that occurs on the row.</param>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRowChangeEvent.Action">
            <summary>
            Gets the action that occurs on the activity row.
            </summary>
            <value>One of the <see cref="T:System.Data.DataRowAction" /> values.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRowChangeEvent.Row">
            <summary>
            Gets the row on which the event occurs.
            </summary>
            <value>The row on which the event occurs.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesRowChangeEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesDataTable.ActivitiesRowChanging" /> and
            <see cref="E:NickLee.Views.Gantt.Data.GanttDataSet.ActivitiesDataTable.ActivitiesRowChanged" /> events.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsDataTable">
            <summary>
            A typed data table dedicated to the Gantt constraints.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsDataTable.AddConstraintsRow(NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsRow)">
            <summary>
            Adds a row to the table.
            </summary>
            <param name="row">The row to be added.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsDataTable.AddConstraintsRow(System.String,System.String,System.String,System.String)">
            <summary>
            Adds a row to the table.
            </summary>
            <param name="Info">A <see cref="T:System.String" /> that represents text information about the
            resource.</param>
            <param name="Type">The type of the constraint.</param>
            <param name="FromActivityID">The ID of the source activity.</param>
            <param name="ToActivityID">The ID of the destination activity.</param>
            <returns>The row added to the table.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsDataTable.Clone">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.Clone">DataTable.Clone</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsDataTable.CreateInstance">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.CreateInstance">DataTable.CreateInstance</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsDataTable.FindByFromActivityIDToActivityID(System.String,System.String)">
            <summary>
            Gets a row of the table using its source and destination IDs.
            </summary>
            <param name="FromActivityID">The source activity ID.</param>
            <param name="ToActivityID">The destination activity ID.</param>
            <returns>The row found, or <see langword="null" /> if the row was not found.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsDataTable.GetEnumerator">
            <summary>
            Gets an enumerator on the table rows.
            </summary>
            <returns>An enumerator on the table rows.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsDataTable.GetRowType">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.GetRowType">DataTable.GetRowType</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsDataTable.NewConstraintsRow">
            <summary>
            Creates a new row for the table.
            </summary>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsRow" /> class.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsDataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">DataTable.NewRowFromBuilder</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsDataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">DataTable.OnRowChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsDataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">DataTable.OnRowChanging</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">DataTable.OnRowDeleted</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">DataTable.OnRowDeleted</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsDataTable.RemoveConstraintsRow(NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsRow)">
            <summary>
            Removes the specified row from the table.
            </summary>
            <param name="row">The row to remove.</param>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsDataTable.ConstraintsRowChanged">
            <summary>
            Occurs when the rows of the table representing the constraints have been changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsDataTable.ConstraintsRowChanging">
            <summary>
            Occurs when the rows of the table representing the constraints are being changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsDataTable.ConstraintsRowDeleted">
            <summary>
            Occurs when the rows of the table representing the constraints have been deleted.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsDataTable.ConstraintsRowDeleting">
            <summary>
            Occurs when the rows of the table representing the constraints are being deleted.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsDataTable.Count">
            <summary>
            Gets the number of rows of the table.
            </summary>
            <value>An integer.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsDataTable.Item(System.Int32)">
            <summary>
            Gets the table row specified by its index.
            </summary>
            <value>An instance of the <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsRow" /> class.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsRow">
            <summary>
            A typed data row dedicated to a Gantt constraint.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsRow.IsInfoNull">
            <summary>
            Checks whether the value of the <strong>Info</strong> column is <see langword="null" />.
            </summary>
            <returns><see langword="true" /> if the value of the column is <see langword="null" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsRow.IsTypeNull">
            <summary>
            Checks whether the value of the <strong>Type</strong> column is <see langword="null" />.
            </summary>
            <returns><see langword="true" /> if the value of the column is <see langword="null" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsRow.SetInfoNull">
            <summary>
            Sets the value of the <strong>Info</strong> column to <see langword="null" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsRow.SetTypeNull">
            <summary>
            Sets the value of the <strong>Type</strong> column to <see langword="null" />.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsRow.FromActivityID">
            <summary>
            Gets or sets the source activity ID.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the source activity ID.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsRow.Info">
            <summary>
            Gets or sets text information related to the constraint.
            </summary>
            <value>A <see cref="T:System.String" /> that represents text information related to the
            constraint.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsRow.ToActivityID">
            <summary>
            Gets or sets the destination activity ID.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the destination activity ID.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsRow.Type">
            <summary>
            Gets or sets the constraint type.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the constraint type.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsRowChangeEvent">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsDataTable.ConstraintsRowChanging" /> and
            <see cref="E:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsDataTable.ConstraintsRowChanged" /> events.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsRowChangeEvent.#ctor(NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsRow,System.Data.DataRowAction)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsRowChangeEvent" /> class.
            </summary>
            <param name="row">The row on which the event occurs.</param>
            <param name="action">The type of action that occurs on the row.</param>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsRowChangeEvent.Action">
            <summary>
            Gets the action that occurs on the constraint row.
            </summary>
            <value>One of the <see cref="T:System.Data.DataRowAction" /> values.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsRowChangeEvent.Row">
            <summary>
            Gets the row on which the event occurs.
            </summary>
            <value>The row on which the event occurs.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsRowChangeEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsDataTable.ConstraintsRowChanging" /> and
            <see cref="E:NickLee.Views.Gantt.Data.GanttDataSet.ConstraintsDataTable.ConstraintsRowChanged" /> events.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsDataTable">
            <summary>
            A typed data table dedicated to the Gantt reservations.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsDataTable.AddReservationsRow(NickLee.Views.Gantt.Data.GanttDataSet.ReservationsRow)">
            <summary>
            Adds a row to the table.
            </summary>
            <param name="row">The row to be added.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsDataTable.AddReservationsRow(System.String,System.String,System.Single,System.String)">
            <summary>
            Adds a row to the table.
            </summary>
            <param name="ResourceID">The ID of the resource used by the reservation.</param>
            <param name="Info">A <see cref="T:System.String" /> that represents text information about the
            resource.</param>
            <param name="Units">The rate of resource this reservation occupies.</param>
            <param name="ActivityID">The ID of the activity used by the reservation.</param>
            <returns>The row added to the table.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsDataTable.Clone">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.Clone">DataTable.Clone</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsDataTable.CreateInstance">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.CreateInstance">DataTable.CreateInstance</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsDataTable.FindByResourceIDActivityID(System.String,System.String)">
            <summary>
            Gets a row of the table using its resource and activity IDs.
            </summary>
            <param name="ResourceID">The resource used by the reservation.</param>
            <param name="ActivityID">The activity used by the reservation.</param>
            <returns>The row found, or <see langword="null" /> if the row was not found.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsDataTable.GetEnumerator">
            <summary>
            Returns an enumerator on the table rows.
            </summary>
            <returns>An enumerator on the table rows.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsDataTable.GetRowType">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.GetRowType">DataTable.GetRowType</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsDataTable.NewReservationsRow">
            <summary>
            Creates a new row for the table.
            </summary>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsRow" /> class.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsDataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">DataTable.NewRowFromBuilder</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsDataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">DataTable.OnRowChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsDataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">DataTable.OnRowChanging</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">DataTable.OnRowDeleted</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">DataTable.OnRowDeleted</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsDataTable.RemoveReservationsRow(NickLee.Views.Gantt.Data.GanttDataSet.ReservationsRow)">
            <summary>
            Removes the specified row from the table.
            </summary>
            <param name="row">The row to remove.</param>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsDataTable.ReservationsRowChanged">
            <summary>
            Occurs when the rows of the table representing the reservations have been changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsDataTable.ReservationsRowChanging">
            <summary>
            Occurs when the rows of the table representing the reservations are being changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsDataTable.ReservationsRowDeleted">
            <summary>
            Occurs when the rows of the table representing the reservations have been deleted.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsDataTable.ReservationsRowDeleting">
            <summary>
            Occurs when the rows of the table representing the reservations are being deleted.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsDataTable.Count">
            <summary>
            Gets the number of rows of the table.
            </summary>
            <value>An integer.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsDataTable.Item(System.Int32)">
            <summary>
            Gets the table row specified by its index.
            </summary>
            <value>An instance of the <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsRow" /> class.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsRow">
            <summary>
            A typed data row dedicated to a Gantt reservation.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsRow.IsInfoNull">
            <summary>
            Checks whether the value of the <strong>Info</strong> column is <see langword="null" />.
            </summary>
            <returns><see langword="true" /> if the value of the column is <see langword="null" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsRow.IsUnitsNull">
            <summary>
            Checks whether the value of the <strong>Units</strong> column is <see langword="null" />.
            </summary>
            <returns><see langword="true" /> if the value of the column is <see langword="null" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsRow.SetInfoNull">
            <summary>
            Sets the value of the <strong>Info</strong> column to <see langword="null" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsRow.SetUnitsNull">
            <summary>
            Sets the value of the <strong>Units</strong> column to <see langword="null" />.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsRow.ActivityID">
            <summary>
            Gets or sets the activity used by the reservation.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the activity used
            by the reservation.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsRow.Info">
            <summary>
            Gets or sets text information related to the reservation.
            </summary>
            <value>A <see cref="T:System.String" /> that represents text information related to the
            reservation.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsRow.ResourceID">
            <summary>
            Gets or sets the resource used by the reservation.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the resource used
            by the reservation.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsRow.Units">
            <summary>
            Gets or sets the rate of resource this reservation occupies.
            </summary>
            <value>A <see cref="T:System.Single" /> value.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsRowChangeEvent">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsDataTable.ReservationsRowChanging" /> and
            <see cref="E:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsDataTable.ReservationsRowChanged" /> events.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsRowChangeEvent.#ctor(NickLee.Views.Gantt.Data.GanttDataSet.ReservationsRow,System.Data.DataRowAction)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsRowChangeEvent" /> class.
            </summary>
            <param name="row">The row on which the event occurs.</param>
            <param name="action">The type of action that occurs on the row.</param>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsRowChangeEvent.Action">
            <summary>
            Gets the action that occurs on the reservation row.
            </summary>
            <value>One of the <see cref="T:System.Data.DataRowAction" /> values.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsRowChangeEvent.Row">
            <summary>
            Gets the row on which the event occurs.
            </summary>
            <value>The row on which the event occurs.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsRowChangeEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsDataTable.ReservationsRowChanging" /> and
            <see cref="E:NickLee.Views.Gantt.Data.GanttDataSet.ReservationsDataTable.ReservationsRowChanged" /> events.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesDataTable">
            <summary>
            A typed data table dedicated to the Gantt resources.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesDataTable.AddResourcesRow(NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRow)">
            <summary>
            Adds a row to the table.
            </summary>
            <param name="row">The row to be added.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesDataTable.AddResourcesRow(System.String,System.String,System.String,System.String,System.Single,System.Int32)">
            <summary>
            Adds a row to the table.
            </summary>
            <param name="ID">The resource ID.</param>
            <param name="Name">The resource name.</param>
            <param name="ParentID">The parent resource ID.</param>
            <param name="Info">A <see cref="T:System.String" /> that represents text information about the
            resource.</param>
            <param name="MaxUnits">The resource maximum unit value.</param>
            <param name="IndexInParent">The index of the parent child collection.</param>
            <returns>The row added to the table.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesDataTable.Clone">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.Clone">DataTable.Clone</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesDataTable.CreateInstance">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.CreateInstance">DataTable.CreateInstance</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesDataTable.FindByID(System.String)">
            <summary>
            Gets a row of the table using its ID.
            </summary>
            <param name="ID">The ID being looked for.</param>
            <returns>The row found, or <see langword="null" /> if the row was not found.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesDataTable.GetEnumerator">
            <summary>
            Gets an enumerator on the table rows.
            </summary>
            <returns>An enumerator on the table rows.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesDataTable.GetRowType">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.GetRowType">DataTable.GetRowType</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesDataTable.NewResourcesRow">
            <summary>
            Creates a new row for the table.
            </summary>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRow" /> class.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesDataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)">DataTable.NewRowFromBuilder</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesDataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)">DataTable.OnRowChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesDataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)">DataTable.OnRowChanging</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesDataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">DataTable.OnRowDeleted</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesDataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)">DataTable.OnRowDeleted</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesDataTable.RemoveResourcesRow(NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRow)">
            <summary>
            Removes the specified row from the table.
            </summary>
            <param name="row">The row to remove.</param>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesDataTable.ResourcesRowChanged">
            <summary>
            Occurs when the rows of the table representing the resources have been changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesDataTable.ResourcesRowChanging">
            <summary>
            Occurs when the rows of the table representing the resources are being changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesDataTable.ResourcesRowDeleted">
            <summary>
            Occurs when the rows of the table representing the resources have been deleted.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesDataTable.ResourcesRowDeleting">
            <summary>
            Occurs when the rows of the table representing the resources are being deleted.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesDataTable.Count">
            <summary>
            Gets the number of rows of the table.
            </summary>
            <value>An integer.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesDataTable.Item(System.Int32)">
            <summary>
            Gets the table row specified by its index.
            </summary>
            <value>An instance of the <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRow" /> class.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRow">
            <summary>
            A typed data row dedicated to a Gantt resource.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRow.IsIndexInParentNull">
            <summary>
            Checks whether the value of the <strong>IndexInParent</strong> column is <see langword="null" />.
            </summary>
            <returns><see langword="true" /> if the value of the column is <see langword="null" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRow.IsInfoNull">
            <summary>
            Checks whether the value of the <strong>Info</strong> column is <see langword="null" />.
            </summary>
            <returns><see langword="true" /> if the value of the column is <see langword="null" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRow.IsMaxUnitsNull">
            <summary>
            Checks whether the value of the <strong>MaxUnits</strong> column is <see langword="null" />.
            </summary>
            <returns><see langword="true" /> if the value of the column is <see langword="null" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRow.IsNameNull">
            <summary>
            Checks whether the value of the <strong>Name</strong> column is <see langword="null" />.
            </summary>
            <returns><see langword="true" /> if the value of the column is <see langword="null" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRow.IsParentIDNull">
            <summary>
            Checks whether the value of the <strong>ParentID</strong> column is <see langword="null" />.
            </summary>
            <returns><see langword="true" /> if the value of the column is <see langword="null" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRow.SetIndexInParentNull">
            <summary>
            Sets the value of the <strong>IndexInParent</strong> column to <see langword="null" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRow.SetInfoNull">
            <summary>
            Sets the value of the <strong>Info</strong> column to <see langword="null" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRow.SetMaxUnitsNull">
            <summary>
            Sets the value of the <strong>MaxUnits</strong> column to <see langword="null" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRow.SetNameNull">
            <summary>
            Sets the value of the <strong>Name</strong> column to <see langword="null" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRow.SetParentIDNull">
            <summary>
            Sets the value of the <strong>ParentID</strong> column to <see langword="null" />.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRow.ID">
            <summary>
            Gets or sets the ID of the resource.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the ID of the resource.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRow.IndexInParent">
            <summary>
            Gets or sets the index of the resource in its parent children collection.
            </summary>
            <value>A posivite integer.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRow.Info">
            <summary>
            Gets or sets text information related to the resource.
            </summary>
            <value>A <see cref="T:System.String" /> that represents text information related to the
            resource.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRow.MaxUnits">
            <summary>
            Gets or sets the maximum number of units this resource can handle.
            </summary>
            <value>A <see cref="T:System.Single" /> value.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRow.Name">
            <summary>
            Gets or sets the resource name.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the resource name.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRow.ParentID">
            <summary>
            Gets or sets the parent ID of the resource.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the ID of the resource parent.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRowChangeEvent">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesDataTable.ResourcesRowChanging" /> and
            <see cref="E:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesDataTable.ResourcesRowChanged" /> events.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRowChangeEvent.#ctor(NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRow,System.Data.DataRowAction)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRowChangeEvent" /> class.
            </summary>
            <param name="row">The row on which the event occurs.</param>
            <param name="action">The type of action that occurs on the row.</param>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRowChangeEvent.Action">
            <summary>
            Gets the action that occurs on the resource row.
            </summary>
            <value>One of the <see cref="T:System.Data.DataRowAction" /> values.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRowChangeEvent.Row">
            <summary>
            Gets the row on which the event occurs.
            </summary>
            <value>The row on which the event occurs.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesRowChangeEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesDataTable.ResourcesRowChanging" /> and
            <see cref="E:NickLee.Views.Gantt.Data.GanttDataSet.ResourcesDataTable.ResourcesRowChanged" /> events.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Design.CustomPropertyDescriptorCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the value of the specified object using the editor style indicated by <see cref="M:NickLee.Views.Gantt.Data.Design.CustomPropertyDescriptorCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
            <param name="provider">An <see cref="T:System.IServiceProvider" /> that this editor can use to obtain services.
            </param>
            <param name="value">The object to edit.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Design.CustomPropertyDescriptorCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:NickLee.Views.Gantt.Data.Design.CustomPropertyDescriptorCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used
            to gain additional context information.
            </param>
            <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that indicates the style
            of editor used by <see cref="M:NickLee.Views.Gantt.Data.Design.CustomPropertyDescriptorCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.
            </returns>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.ConstraintType">
            <summary>
            Describes the type of a <see cref="T:NickLee.Views.Gantt.Data.IConstraint" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.BaseReservation">
            <summary>
            Defines an <see langword="abstract" /> implementation of the <see cref="T:NickLee.Views.Gantt.Data.IReservation" />
            interface that can be extended in a straightforward manner for more complex needs.
            </summary>
            <remarks>
            <p>This class is used by the <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModel" /> class.</p>
            <p><see cref="T:NickLee.Views.Gantt.Data.BaseReservation" /> implements the properties of the <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> interface,
            but delegates them to dedicated methods in order to allow another implementation than a simple memory
            implementation. For example, the <see cref="P:NickLee.Views.Gantt.Data.BaseReservation.Info" /> property is implemented by the <see cref="T:NickLee.Views.Gantt.Data.BaseReservation" />
            class, but it delegates the real storage of the property to the <see langword="abstract" /> methods <see cref="M:NickLee.Views.Gantt.Data.BaseReservation.GetInfo" />
            and <see cref="M:NickLee.Views.Gantt.Data.BaseReservation.SetInfo(System.String)" />. The <see cref="P:NickLee.Views.Gantt.Data.BaseReservation.Info" /> property handles notification to the model, leaving the real storage to be implemented
            by <see cref="M:NickLee.Views.Gantt.Data.BaseReservation.GetInfo" /> and <see cref="M:NickLee.Views.Gantt.Data.BaseReservation.SetInfo(System.String)" /> in a subclass.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to populate a <see cref="T:NickLee.Views.Gantt.Data.SimpleGanttModel" />.
            </para>
            <code lang="C#">
            private void Populate(IGanttModel model) {
            IActivity activity;
            IResource[] resources = new IResource[10];
            IActivity[] activities = new IActivity[20];
            IReservation[] reservations = new IReservation[20];

            for (int i = 0; i &lt; 10; ++i) {
            // First create the resource...
            resources[i] = model.NewResource();
            resources[i].Name = "Room " + i.ToString();

            // Add a conference in the morning
            activity = model.NewActivity();
            activity.Name = "Morning Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4));
            activities[i*2] = activity;

            // Create the reservation for this activity
            reservations[i*2] = model.NewReservation(activity, resources[i]);

            // Add a conference in the afternoon
            activity = model.NewActivity();
            activity.Name = "Afternoon Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4));
            activities[i*2 + 1] = activity;

            // Create the reservation for this activity
            reservations[i*2 + 1] = model.NewReservation(activity, resources[i]);
            }
            model.Activities.AddRange(activities);
            model.Resources.AddRange(resources);
            model.Reservations.AddRange(reservations);
            }
            </code>
            <code lang="Visual Basic">
            Sub Populate(ByVal model As IGanttModel)
            Dim activity As IActivity
            Dim resources(10) As IResource
            Dim activities(20) As IActivity
            Dim reservations(20) As IReservation

            For i As Integer = 0 To 9

            ' First create the resource...
            resources(i) = model.NewResource()
            resources(i).Name = "Room " + i.ToString()

            ' Add a conference in the morning
            activity = model.NewActivity()
            activity.Name = "Morning Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4))
            activities(i * 2) = activity

            ' Create the reservation for this activity
            reservations(i * 2) = model.NewReservation(activity, resources(i))

            ' Add a conference in the afternoon
            activity = model.NewActivity()
            activity.Name = "Afternoon Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4))
            activities(i * 2 + 1) = activity

            ' Create the reservation for this activity
            reservations(i * 2 + 1) = model.NewReservation(activity, resources(i))

            Next

            model.Activities.AddRange(activities)
            model.Resources.AddRange(resources)
            model.Reservations.AddRange(reservations)
            End Sub
            </code>
            </example>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.IReservation">
            <summary>
            Defines the abstract behavior of an assignment of a <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to an
            <see cref="T:NickLee.Views.Gantt.Data.IActivity" />.
            </summary>
            <remarks>
            The activity reserving the resource is immutable once the <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> has
            been created. However, the resource that has been reserved can be modified.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to populate a <see cref="T:NickLee.Views.Gantt.Data.SimpleGanttModel" />.
            </para>
            <code lang="C#">
            private void Populate(IGanttModel model) {
            IActivity activity;
            IResource[] resources = new IResource[10];
            IActivity[] activities = new IActivity[20];
            IReservation[] reservations = new IReservation[20];

            for (int i = 0; i &lt; 10; ++i) {
            // First create the resource...
            resources[i] = model.NewResource();
            resources[i].Name = "Room " + i.ToString();

            // Add a conference in the morning
            activity = model.NewActivity();
            activity.Name = "Morning Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4));
            activities[i*2] = activity;

            // Create the reservation for this activity
            reservations[i*2] = model.NewReservation(activity, resources[i]);

            // Add a conference in the afternoon
            activity = model.NewActivity();
            activity.Name = "Afternoon Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4));
            activities[i*2 + 1] = activity;

            // Create the reservation for this activity
            reservations[i*2 + 1] = model.NewReservation(activity, resources[i]);
            }
            model.Activities.AddRange(activities);
            model.Resources.AddRange(resources);
            model.Reservations.AddRange(reservations);
            }
            </code>
            <code lang="Visual Basic">
            Sub Populate(ByVal model As IGanttModel)
            Dim activity As IActivity
            Dim resources(10) As IResource
            Dim activities(20) As IActivity
            Dim reservations(20) As IReservation

            For i As Integer = 0 To 9

            ' First create the resource...
            resources(i) = model.NewResource()
            resources(i).Name = "Room " + i.ToString()

            ' Add a conference in the morning
            activity = model.NewActivity()
            activity.Name = "Morning Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4))
            activities(i * 2) = activity

            ' Create the reservation for this activity
            reservations(i * 2) = model.NewReservation(activity, resources(i))

            ' Add a conference in the afternoon
            activity = model.NewActivity()
            activity.Name = "Afternoon Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4))
            activities(i * 2 + 1) = activity

            ' Create the reservation for this activity
            reservations(i * 2 + 1) = model.NewReservation(activity, resources(i))

            Next

            model.Activities.AddRange(activities)
            model.Resources.AddRange(resources)
            model.Reservations.AddRange(reservations)
            End Sub
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IReservation.Activity">
            <summary>
            When implemented by a class, gets the activity for this reservation.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> object that represents the
            activity for this reservation.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IReservation.GanttModel">
            <summary>
            When implemented by a class, gets the Gantt model associated with the reservation.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IReservation.Info">
            <summary>
            When implemented by a class, gets or sets text information about the reservation.
            </summary>
            <value>A <see cref="T:System.String" /> that represents text information about the
            reservation.</value>
            <remarks>When setting the value, the model must be notified of the property change using the
            <see cref="T:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IReservation.IsInModel">
            <summary>
            When implemented by a class, indicates whether the reservation has already been added to the model.
            </summary>
            <value><see langword="true" /> if the reservation has been added to the model;
            <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IReservation.Resource">
            <summary>
            When implemented by a class, gets or sets the resource for this reservation.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IResource" /> instance.</value>
            <remarks>When setting the value, the model must be notified of the property change using the
            <see cref="T:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IReservation.Units">
            <summary>
            When implemented by a class, gets or sets the rate of resource this reservation occupies.
            </summary>
            <value>A <see cref="T:System.Single" /> in the range [0..1].</value>
            <remarks>When setting the value, the model must be notified of the property change using the
            <see cref="T:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.INamedIndexerProvider">
            <summary>
            Defines an interface that provides a named indexer.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.INamedIndexerProvider.Item(System.String)">
            <summary>
            When implemented by a class, gets or sets a value using the specified name.
            </summary>
            <value>An <see cref="T:System.Object" /> instance.</value>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReservation.#ctor(NickLee.Views.Gantt.Data.BaseGanttModel,NickLee.Views.Gantt.Data.BaseActivity,NickLee.Views.Gantt.Data.BaseResource)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.BaseReservation" /> class.
            </summary>
            <param name="model">The Gantt data model.</param>
            <param name="activity">The activity of the reservation.</param>
            <param name="resource">The resource of the reservation.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="model" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="activity" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="resource" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="activity" /> is not part of <paramref name="model" />.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="resource" /> is not part of <paramref name="model" />.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReservation.GetCustomProperty(System.String)">
            <summary>
            Gets a custom property by its name.
            </summary>
            <param name="name">The name of the custom property.</param>
            <returns>The value for the property specified by <paramref name="name" />, or
            <see langword="null" /> if no such property exists.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReservation.GetInfo">
            <summary>
            Gets text information about the reservation.
            </summary>
            <returns>Text information about the reservation.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReservation.GetUnits">
            <summary>
            Gets the rate of resource this reservation occupies.
            </summary>
            <returns>The rate of resource this reservation occupies.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReservation.OnReservationChanged(NickLee.Views.Gantt.Data.ReservationsChangeEventArgs)">
            <summary>
            Is called to notify the Gantt data model that the reservation has changed.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs" /> that contains the event data.</param>
            <remarks><p>Called when the reservation is changed.</p></remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReservation.OnReservationChanging(NickLee.Views.Gantt.Data.ReservationsChangeEventArgs)">
            <summary>
            Is called to notify the Gantt data model that the reservation is changing.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs" /> that contains the event data.</param>
            <remarks><p>Called before the reservation is changed.</p></remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReservation.SetCustomProperty(System.String,System.Object)">
            <summary>
            Sets a custom property on the reservation.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The value of the property.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReservation.SetInfo(System.String)">
            <summary>
            Sets text information about the reservation.
            </summary>
            <param name="info">The new text information of the reservation.</param>
            <remarks>The implementation of this method must not notify the model, which is done by the
            <see cref="P:NickLee.Views.Gantt.Data.BaseReservation.Info" /> property.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReservation.SetUnits(System.Single)">
            <summary>
            Sets the rate of resource this reservation occupies.
            </summary>
            <param name="units">The rate of resource this reservation occupies.</param>
            <remarks>The implementation of this method must not notify the model, which is done by the
            <see cref="P:NickLee.Views.Gantt.Data.BaseReservation.Units" /> property.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReservation.ToString">
            <summary>
            This member overrides <see cref="M:System.Object.ToString">Object.ToString</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseReservation.Activity">
            <summary>
            Gets the activity for this reservation.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> object that represents the
            activity for this reservation.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseReservation.GanttModel">
            <summary>
            Gets the Gantt data model associated with the reservation.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseReservation.Info">
            <summary>
            Gets or sets text information about the reservation.
            </summary>
            <value>A <see cref="T:System.String" /> that represents text information about the
            reservation.</value>
            <remarks>When setting the value, <see cref="M:NickLee.Views.Gantt.Data.BaseReservation.OnReservationChanging(NickLee.Views.Gantt.Data.ReservationsChangeEventArgs)" /> is called with the appropriate event.
            If the operation is not canceled using the <see cref="P:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs.Cancel" />
            property of the event, it sets the new value by calling <see cref="M:NickLee.Views.Gantt.Data.BaseReservation.SetInfo(System.String)" /> and calls
            <see cref="M:NickLee.Views.Gantt.Data.BaseReservation.OnReservationChanged(NickLee.Views.Gantt.Data.ReservationsChangeEventArgs)" />.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseReservation.IsInModel">
            <summary>
            Indicates whether the reservation has already been added to the model.
            </summary>
            <value><see langword="true" /> if the reservation has been added to the model;
            <see langword="false" />, otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseReservation.Item(System.String)">
            <summary>
            Gets or sets the custom property with the specified name.
            </summary>
            <value>The custom property with the specified name.</value>
            <remarks>Custom properties must be added to the Gantt data model before using this indexer.
            See the <see cref="P:NickLee.Views.Gantt.Data.BaseGanttModel.CustomReservationProperties" /> property for details.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseReservation.Resource">
            <summary>
            Gets or sets the resource for this reservation.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IResource" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseReservation.Units">
            <summary>
            Gets or sets the rate of resource this reservation occupies.
            </summary>
            <value>A <see cref="T:System.Single" /> in the range [0..1]. The default value is <strong>1</strong>.</value>
            <remarks>When setting the value, <see cref="M:NickLee.Views.Gantt.Data.BaseReservation.OnReservationChanging(NickLee.Views.Gantt.Data.ReservationsChangeEventArgs)" /> is called with the appropriate event.
            If the operation is not canceled using the <see cref="P:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs.Cancel" />
            property of the event, it sets the new value by calling <see cref="M:NickLee.Views.Gantt.Data.BaseReservation.SetUnits(System.Single)" /> and calls
            <see cref="M:NickLee.Views.Gantt.Data.BaseReservation.OnReservationChanged(NickLee.Views.Gantt.Data.ReservationsChangeEventArgs)" />.
            </remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.WorkingPeriod">
            <summary>
            Represent a working or a nonworking period in a <see cref="T:NickLee.Views.Gantt.WorkCalendar" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkingPeriod.GetWorkingTimes">
            <summary>
            Gets the working time shifts of the period.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.WorkingPeriod.EndDate">
            <summary>
            Gets the end date of the period.
            </summary>
            <value>A <see cref="T:System.DateTime" /> that represents the end date of the period.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.WorkingPeriod.IsWorking">
            <summary>
            Indicates if the period is a working or non-working period.
            </summary>
            <value><see langword="true" /> if the period is a working period; <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.WorkingPeriod.StartDate">
            <summary>
            Gets the start date of the period.
            </summary>
            <value>A <see cref="T:System.DateTime" /> that represents the start date of the period.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.CalendarPeriod">
            <summary>
            Abstract base class for calendar periods.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.CalendarPeriod.WorkBetweenHours(System.DateTime,System.DateTime)">
            <summary>
            Computes work between 2 times in one single day of the period.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.CalendarPeriod.Standard">
            <summary>
            Indicates if the period is standard.
            </summary>
            <remarks>A standard period is typically a period
            inherited from the base calendar.</remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet">
            <summary>
            A chart that displays reservations of resources over the time.
            </summary>
            <remarks>
            <p>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" /> is made up of rows,
            each row is displaying the reservations of one resource.</p>
            <p><img src="schedulesheet.png" /></p>
            <p>In order to display reservations, the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" /> must be
            connected to a class that implements the <see cref="T:NickLee.Views.Gantt.Windows.Forms.IResourceRowController" />
            interface such as the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ResourceTable" /> or <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleChart" />
            classes. To connect the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" /> use the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.RowController" /> property.</p>
            <p>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" /> inherits from the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" /> class
            that is the base class for controls displaying information over the time. In
            particular <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" /> defines the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.FirstVisibleTime" /> property that is the first visible time
            displayed by the control and the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.VisibleDuration" /> property
            that defines the period of time displayed by the control.</p>
            <p>In order to synchronize the time of several controls that are displaying time
            information, the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" /> control also defines the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeLine" /> property. For example, to synchronize a
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" /> with a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> object, you will set the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeLine" /> property of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" /> to the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> object.</p>
            <p>The base class <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> defines many appearence properties such as the
            back color, the color of selected rows, the font of the sheet, the vertical and horizontal
            grid lines.</p>
            <p>The appearance of an activity on a line depends on the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ActivityBarStyles" /> property that defines the styles of bar
            to be used for activities depending on the type and current values of an activity.
            For more information of this topic see <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />.</p>
            <p>Each row of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" /> will display several activity objects.
            The control proposes several layout algorithms to layout the activities in order to
            avoid overlapping of activities in a row. The different possible values are defined
            by the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle" /> enumeration.</p>
            <p>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" /> has several prebuilt interactions: the user can move or resize an activity bar
            using the mouse pointer to change the activity properties displayed by the bar. This interaction can be
            disabled by setting the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.CanEditActivities" /> property to
            <see langword="false" />. When modifying an activity property
            using the mouse pointer, the modification of the activity can
            be done at every mouse move or only when the user releases the mouse button. This
            is controlled by the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.InstantEditing" /> property. Before an
            activity is modified, the <see cref="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.BeforeEditActivity" /> event is raised
            which allows you to cancel the modification or alert the user in some particular cases.</p>
            <p>The user can also change the resource that is assigned to one activity by pressing
            the Shift key and dragging an activity bar to another resource. This interaction can
            be disabled by setting the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.CanMoveReservation" /> property to
            <see langword="false" />. When dragging an activity bar to another resource with the
            Control key pressed a reservation can be copied to another resource. Before the user
            moves a reservation to a new resource to change the resource or to copy the
            reservation, the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.BeforeMoveReservation" /> event is raised allowing you to
            cancel the event or alert the user for some particular cases. This interaction can
            be disabled by setting the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.CanCopyReservation" /> property to
            <see langword="false" />.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to get the <strong>ScheduleSheet</strong>
            from a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleChart" />.
            </para>
            <code lang="C#">
            ScheduleChart chart = new ScheduleChart();
            ScheduleSheet sheet = chart.GanttSheet;
            </code>
            <code lang="Visual Basic">
            Dim chart As New ScheduleChart
            Dim sheet As ScheduleSheet = chart.GanttSheet
            </code>
            </example>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to recreate a Schedule Chart
            using an <strong>ScheduleSheet</strong>, an <strong>ResourceTable</strong>,
            a <strong>TimeScale</strong> and a <strong>Spitter</strong>.
            </para>
            <code lang="C#">
            Form form = new Form();

            // Creates the resource table
            ResourceTable table = new ResourceTable();
            table.Dock = DockStyle.Left;

            // Makes the column header height the same as the time scale height
            int scaleRowCount = 2;
            table.ColumnHeaderHeight = scaleRowCount * (6+Control.DefaultFont.Height) - 2;

            // Create a panel that will contain the
            // time scale and the Gantt sheet.
            Panel panel = new Panel();
            panel.BorderStyle = BorderStyle.Fixed3D;
            panel.Dock = DockStyle.Fill;

            // Creates the time scale
            TimeScale scale = new TimeScale();
            scale.Dock = DockStyle.Top;
            scale.BorderStyle = BorderStyle.None;

            // Create the Gantt sheet
            ScheduleSheet sheet = new ScheduleSheet();
            sheet.Dock = DockStyle.Fill;
            sheet.BorderStyle = BorderStyle.None;

            // Row synchonization between Gantt sheet and table
            sheet.RowController = table;

            // Time synchronization between Gantt sheet and time scale
            sheet.TimeLine = scale;

            // Adds the time scale and Gantt sheet
            panel.Controls.Add(sheet);
            panel.Controls.Add(scale);

            // Creates the splitter
            Splitter splitter = new Splitter();
            splitter.Dock = DockStyle.Left;

            // Adds the controls to the form
            form.Controls.AddRange(new Control[] {panel, splitter, table});

            // Creates a Gantt model
            IGanttModel model = new SimpleGanttModel();
            IActivity activity = model.NewActivity();
            activity.Name = "My Activity";
            activity.StartTime = DateTime.Now;
            activity.Duration = TimeSpan.FromDays(5);
            model.Activities.Add(activity);
            IResource resource = model.NewResource();
            resource.Name = "My Resource";
            model.Resources.Add(resource);
            model.Reservations.Add(model.NewReservation(activity, resource));

            // Assign Gantt model to the table
            table.GanttModel = model;

            // Change start time of Gantt sheet
            sheet.FirstVisibleTime = DateTime.Now;

            Application.Run(form);
            </code>
            <code lang="Visual Basic">
            Dim form As Form = New Form
            ' Creates the resource table
            Dim table As ResourceTable = New ResourceTable
            table.Dock = DockStyle.Left

            ' Makes the column header height the same as the time scale height
            Dim scaleRowCount As Integer = 2
            table.ColumnHeaderHeight = ((scaleRowCount * (6 + Control.DefaultFont.Height)) - 2)

            ' Create a panel that will contain the
            'time scale and the Gantt sheet.
            Dim panel As Panel = New Panel
            panel.BorderStyle = BorderStyle.Fixed3D
            panel.Dock = DockStyle.Fill

            ' Creates the time scale
            Dim scale As TimeScale = New TimeScale
            scale.Dock = DockStyle.Top
            scale.BorderStyle = BorderStyle.None

            ' Create the Gantt sheet
            Dim sheet As ScheduleSheet = New ScheduleSheet
            sheet.Dock = DockStyle.Fill
            sheet.BorderStyle = BorderStyle.None

            ' Row synchonization between Gantt sheet and table
            sheet.RowController = table

            ' Time synchronization between Gantt sheet and time scale
            sheet.TimeLine = scale

            ' Adds the time scale and Gantt sheet
            panel.Controls.Add(sheet)
            panel.Controls.Add(scale)

            ' Creates the splitter
            Dim splitter As Splitter = New Splitter
            splitter.Dock = DockStyle.Left

            ' Adds the controls to the form
            form.Controls.AddRange(New Control() {panel, splitter, table})

            ' Creates a Gantt model
            Dim model As IGanttModel = New SimpleGanttModel
            Dim activity As IActivity = model.NewActivity
            activity.Name = "My Activity"
            activity.StartTime = DateTime.Now
            activity.Duration = TimeSpan.FromDays(5)
            model.Activities.Add(activity)
            Dim resource As IResource = model.NewResource
            resource.Name = "My Resource"
            model.Resources.Add(resource)
            model.Reservations.Add(model.NewReservation(activity, resource))

            ' Assign Gantt model to the table
            table.GanttModel = model

            ' Change start time of Gantt sheet
            sheet.FirstVisibleTime = DateTime.Now
            Application.Run(form)
            </code>
            </example>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleChart" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationSheet" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.ActivitiesChanged(System.Object,NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)">
            <summary>
            Invoked when activities have changed in the Gantt model.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.ActivitiesChanging(System.Object,NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)">
            <summary>
            Invoked when activities are changing in the Gantt model.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.CreateDefaultBarStyles">
            <summary>
            Creates the default bar styles for rendering the activities.
            </summary>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ActivityBarStyles" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.CreateDefaultTimeRange">
            <summary>
            Is called to create the default time range for the Gantt sheet.
            </summary>
            <returns>A new <see cref="T:NickLee.Views.Gantt.ReservationsTimeRange" /> instance.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.FireEvent(System.Object,System.EventArgs)">
            <summary>
            Fires an event based on key in the <strong>Events</strong> list.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.GetActivityBarBounds(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Gets the bounds of the activity for the specified reservation without taking into account
            the text on the right and left of the activity bar.
            </summary>
            <param name="reservation">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> reference.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle" /> structure that represents the
            bounds of <paramref name="reservation" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.GetActivityBarBounds(System.Drawing.Graphics,NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Gets the bounds of the activity for the specified reservation without taking into account
            the text on the right and left of the activity bar.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics" /> object to compute the bounds with.</param>
            <param name="reservation">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> reference.</param>
            <returns>A <see cref="T:System.Drawing.RectangleF" /> structure that represents the
            bounds of <paramref name="reservation" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.GetActivityBounds(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Gets the bounds of the activity for the specified reservation.
            </summary>
            <param name="reservation">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> reference.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle" /> structure that represents the
            bounds of <paramref name="reservation" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.GetActivityBounds(System.Drawing.Graphics,NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Gets the bounds of the activity for the specified reservation.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics" /> object to compute the bounds with.</param>
            <param name="reservation">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> reference.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle" /> structure that represents the
            bounds of <paramref name="reservation" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.GetActivityLayoutStyle(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Gets the layout style that will be used for a specified resource.
            </summary>
            <remarks>The method computes the layout style that will be used for a
            specified resource. By default the method returns the value of the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.ActivityLayoutStyle" /> property. You can specify a specific
            layout per resource using the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.RowLayoutStyle" /> event.
            </remarks>
            <param name="resource">The resource to get the layout style.</param>
            <returns>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle" /> values.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.GetFlag(System.UInt16)">
            <summary>
            Gets the value of a flag.
            </summary>
            <param name="flag">The flag.</param>
            <returns>The value of a flag.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.GetResourceAt(System.Int32)">
            <summary>
            Gets the resource displayed at the specified row index.
            </summary>
            <param name="rowIndex">The row index.</param>
            <returns>The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> displayed at the specified row index.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.GetRowIndex(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Gets the index of the row where the specified resource is displayed.
            </summary>
            <param name="resource">The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> of which to index is to be found.</param>
            <returns>The index of the resource or <strong>-1</strong> if the resource is not currently visible.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.GetZOrder(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Get the zOrder of a reservation in a row.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.HitTest(System.Drawing.Point)">
            <summary>
            Gets information about the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" /> control at a specified point on the screen.
            </summary>
            <param name="point">A <see cref="T:System.Drawing.Point" /> that represents single x,y coordinate.
            </param>
            <returns>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet.HitTestInfo" /> that contains specific information about the schedule sheet.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.InvalidateActivity(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Invalidates all the reservations of the specified activity.
            </summary>
            <param name="activity">The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to invalidate.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.InvalidateReservation(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Invalidates the specified reservation.
            </summary>
            <param name="reservation">An <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> to invalidate.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.InvalidateResource(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Invalidates the specified resource.
            </summary>
            <param name="resource">An <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to invalidate.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.OnActivityLayoutStyleChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.ActivityLayoutStyle" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>ActivityLayoutStyle</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.OnBeforeMoveReservation(NickLee.Views.Gantt.Windows.Forms.BeforeMoveReservationEventArgs)">
            <summary>
            Invoked before a reservation is moved to another resource by the user interaction.
            </summary>
            <remarks>You can check the parameters passed in the event arguments to decide if the operation
            is valid. If not, you can cancel the move of the reservation using the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.BeforeMoveReservationEventArgs.Cancel" /> property of the event.</remarks>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.Windows.Forms.BeforeMoveReservationEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.OnCanCopyReservationChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.CanCopyReservation" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>CanCopyReservation</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.OnCanMoveReservationChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.CanMoveReservation" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>CanMoveReservation</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.OnCopyReservationCursorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.CopyReservationCursor" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>CopyReservationCursor</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.OnFontChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnFontChanged(System.EventArgs)">GanttSheet.OnFontChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.OnGanttModelChanged">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnGanttModelChanged">GanttSheet.OnGanttModelChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.OnGanttModelChanging">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnGanttModelChanging">GanttSheet.OnGanttModelChanging</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.OnGanttRowControllerChanging(NickLee.Views.Gantt.Windows.Forms.IGanttRowController)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnGanttRowControllerChanging(NickLee.Views.Gantt.Windows.Forms.IGanttRowController)">GanttSheet.OnGanttRowControllerChanging</see>.
            </summary>
            <exception cref="T:System.NotSupportedException">The row controller is doesn't
            implement <see cref="T:NickLee.Views.Gantt.Windows.Forms.IResourceRowController" />.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">Control.OnMouseDown</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">Control.OnMouseMove</see>
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)">Control.OnMouseUp</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.OnMoveReservationCursorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.MoveReservationCursor" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>MoveReservationCursor</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnPaint(System.Windows.Forms.PaintEventArgs)">GanttSheet.OnPaint</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.OnReservationsAdded(NickLee.Views.Gantt.Data.IReservation[])">
            <summary>
            Invoked when reservations were added to the Gantt model.
            </summary>
            <param name="reservations">The reservations that were added.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.OnReservationsDeleted(NickLee.Views.Gantt.Data.IReservation[])">
            <summary>
            Invoked when reservations have been deleted to the Gantt model.
            </summary>
            <param name="reservations">The deleted reservations.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.OnReservationsDeleting(NickLee.Views.Gantt.Data.IReservation[])">
            <summary>
            Invoked when reservations are going to be deleted in the Gantt model.
            </summary>
            <param name="reservations">The deleted reservations.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.OnReservationsReset">
            <summary>
            Invoked when reservations have changed in the Gantt model.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.PaintRow(System.Drawing.Graphics,System.Int32,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Brush,System.Drawing.Brush,System.Boolean)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.PaintRow(System.Drawing.Graphics,System.Int32,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Brush,System.Drawing.Brush,System.Boolean)">GanttSheet.PaintRow</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.ReLayoutRows">
            <summary>
            Invalidates the layout of all the rows.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.ReservationsChanged(System.Object,NickLee.Views.Gantt.Data.ReservationsChangeEventArgs)">
            <summary>
            Invoked when reservations have changed in the Gantt model.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.ReservationsChanging(System.Object,NickLee.Views.Gantt.Data.ReservationsChangeEventArgs)">
            <summary>
            Invoked when reservations are changing in the Gantt model.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.ResourcesChanged(System.Object,NickLee.Views.Gantt.Data.ResourcesChangeEventArgs)">
            <summary>
            Invoked when resources have changed in the Gantt model.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.ResourcesChanging(System.Object,NickLee.Views.Gantt.Data.ResourcesChangeEventArgs)">
            <summary>
            Invoked when resources are changing in the Gantt model.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.SetFlag(System.UInt16,System.Boolean)">
            <summary>
            Sets or unsets the value of a flag.
            </summary>
            <param name="flag">The flag value.</param>
            <param name="value">The value of the flag.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.WndProc(System.Windows.Forms.Message@)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">Control.WndProc</see>
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet._activityInteractionMode">
            <summary>
            The type of interaction currently in progress.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet._activityLayout">
            <summary>
            The type of row layout.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet._copyReservationCursor">
            <summary>
            The cursor used for interactive copy of reservations.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet._flags">
            <summary>
            Contains flag indicators.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet._levelComparer">
            <summary>
            A <strong>IComparer</strong> for sorting activity bars by level.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet._movedReservation">
            <summary>
            The reservation currently involved in the interaction.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet._moveReservationCursor">
            <summary>
            The cursor used for interactive move of reservations.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet._queryZOrderArgs">
            <summary>
            singleton QueryReservationZOrderEventArgs.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet._reservations">
            <summary>
            An <strong>Hashtable</strong> with reservation as keys and <strong>ReservationGraphicInfo</strong> as values.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet._startTimeComparer">
            <summary>
            An <strong>IComparer</strong> for sorting reservations by start time.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet._toResource">
            <summary>
            The destination resource currently involved in the interaction.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet._zOrderComparer">
            <summary>
            A <strong>IComparer</strong> for sorting z-orders of activity bars.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.EVENT_ACTIVITYLAYOUT">
            <summary>
            Key for storing <strong>ActivityLayoutStyleChange</strong> event handlers.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.ActivityLayoutStyleChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.ActivityLayoutStyle" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.BeforeMoveReservation">
            <summary>
            Event fired before a reservation is moved to another resource.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.CanCopyReservationChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.CanCopyReservation" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.CanMoveReservationChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.CanMoveReservation" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.CopyReservationCursorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.CopyReservationCursor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.LayoutReservations">
            <summary>
            Event fired to allow the customization of the layout of reservations
            in a row.
            </summary>
            <remarks>This event is fired after the row has been layouted according to
            the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.ActivityLayoutStyle" /> property. If you plan to completely
            redefine a new layout, set the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.ActivityLayoutStyle" /> property
            to <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle">Simple</see>
            to improve performances.
            </remarks>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.MoveReservationCursorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.MoveReservationCursor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.QueryReservationZOrder">
            <summary>
            Event fired to allow the specification of the z-Order of a reservation
            in a row.
            </summary>
            <remarks>The layout of activities in a row is controlled by the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.ActivityLayoutStyle" />
            property. Activities will be sorted by their Start Time so that
            an activity starting earlier another activity will be drawn before. You
            can modify this behavior by specifying a z-Order for each reservation.
            </remarks>
            <example>
            <para lang="C#"> The following example shows how to make the reservation
            of type Maintenance drawn below all other reservations by setting a smaller
            z-order.
            </para>
            <code lang="C#">
            myScheduleSheet.QueryReservationZOrder += new QueryReservationZOrderEventHandler(GetZOrder);
            private void GetZOrder(object source, QueryReservationZOrderEventArgs e)
            {
            if (e.Reservation.Activity is Maintenance)
            e.ZOrder = 0;
            else
            e.ZOrder = 1;
            }
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.RowLayoutStyle">
            <summary>
            Event that is fired to query the layout style that will be used to layout
            the reservation of a specified resource.
            </summary>
            <remarks>Handling this event allows to specify an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle" /> per
            row of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" />.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.ActivityLayoutStyle">
            <summary>
            Gets or sets the style used to layout activities in a row.
            </summary>
            <remarks>This property will change the style of layout for all
            the rows of the schedule sheet. You can also specify a layout style per
            row by handling the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.RowLayoutStyle" /> event.</remarks>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle" /> values. The
            default value is <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle">Pretty</see>.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.CanCopyReservation">
            <summary>
            Gets or sets a value indicating whether reservations
            can be copied onto other resources.
            </summary>
            <value>
            <see langword="true" /> if reservations can be copied onto other resources
            using the mouse; <see langword="false" /> otherwise.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.CanMoveReservation">
            <summary>
            Gets or sets a value indicating whether reservations
            can have their assigned resource changed using the mouse pointer.
            </summary>
            <value>
            <see langword="true" /> if reservations can have their resource changed
            using the mouse; <see langword="false" /> otherwise.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.CopyReservationCursor">
            <summary>
            Gets the cursor that is used when the user drags a reservation to copy it.
            </summary>
            <value>
            A <see cref="T:System.Windows.Forms.Cursor" /> that is used when the user drags a reservation to copy it.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.InteractiveBarStyleInfo">
            <summary>
            Gets information about the bar style involved in the current interaction on the control.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTestInfo" /> structure.</value>
            <remarks>
            This property should be used only during an interaction, that is, when the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.InteractiveReservation" /> property is not <see langword="null" />.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.InteractiveReservation" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.InteractiveReservation">
            <summary>
            Gets the reservation involved in the current interaction on the control.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> reference, or <see langword="null" /> if
            no interaction is being performed on the control.</value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.InteractiveBarStyleInfo" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.MoveReservationCursor">
            <summary>
            Gets the cursor that is used when the user drags a reservation to change its resource.
            </summary>
            <value>
            A <see cref="T:System.Windows.Forms.Cursor" /> that is used when the user drags a reservation to change its resource.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.RowController">
            <summary>
            Gets or sets the row controller for the schedule sheet.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Windows.Forms.IResourceRowController" /> object that defines the
            data to display in the schedule sheet. The default value is <see langword="null" />.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.LevelComparer">
            <summary>
            An <strong>IComparer</strong> used to sort <strong>ReservationGraphicInfo</strong> by the line level.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.ReservationGraphicInfo">
            <summary>
            This object contains information about the graphic side of a reservation.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.ScheduleSheetRow">
            <summary>
            Defines a row of a schedule Sheet.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.ScheduleSheetRow.#ctor(NickLee.Views.Gantt.Windows.Forms.ScheduleSheet,System.Int32,NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Creates a <strong>ScheduleSheetRow</strong> for the specified resource.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.ScheduleSheetRow._graphics">
            <summary>
            A list of <strong>ReservationGraphicInfo</strong> describing each reservation in the row.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.ScheduleSheetRow._resource">
            <summary>
            The resource that this row represents.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.ScheduleSheetRowCollection">
            <summary>
            Defines the collection of rows in the schedule sheet.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.StartTimeComparer">
            <summary>
            An <strong>IComparer</strong> used to sort <strong>ReservationGraphicInfo</strong> by the start time.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.ZOrderComparer">
            <summary>
            An <strong>IComparer</strong> used to sort <strong>ReservationGraphicInfo</strong> by the z-order.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.QueryActivityEditableEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.QueryActivityEditable" /> event of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />.
            </summary>
            <remarks>The <see cref="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.QueryActivityEditable" /> event occurs to check if
            a user can modify the time interval of an activity in the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />.
            A <strong>QueryActivityEditableEventArgs</strong> provides the <see cref="P:NickLee.Views.Gantt.Windows.Forms.QueryActivityEditableEventArgs.CanEditActivity" /> property
            to allow or dissalow the edition of the activity.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.QueryActivityEditableEventArgs.#ctor(NickLee.Views.Gantt.Data.IActivity,System.Boolean)">
            <summary>
            Creates and initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.QueryActivityEditableEventArgs" /> class.
            </summary>
            <param name="activity">The activity modified.</param>
            <param name="editable">Indicates if the activity is editable</param>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.QueryActivityEditableEventArgs._activity">
            <summary>
            The activity modified.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.QueryActivityEditableEventArgs._editable">
            <summary>
            Indicates if the modification is canceled.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.QueryActivityEditableEventArgs.Activity">
            <summary>
            Gets the activity that is queried.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> that represents the activity that will be tested.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.QueryActivityEditableEventArgs.CanEditActivity">
            <summary>
            Gets or sets the value that indicates if the activity can be edited.
            </summary>
            <value>
            <see langword="true" /> if the activity can be edited;
            <see langword="false" /> otherwise.
            </value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.HitTestBarStyleEventHandler">
            <summary>
            Represents the method that handles the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTestBarStyle" /> event of an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.DrawTimeScaleRowEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:NickLee.Views.Gantt.Windows.Forms.TimeScale.DrawRow" /> event of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.CalendarBarFillStyle">
            <summary>
            Defines how an activity bar is filled in the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" />.
            </summary>
            <remarks>Use the members of this enumeration to set the
            value of the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.FillStyle" /> property in the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> class.
            </remarks>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" />
        </member>
        <member name="T:NickLee.Views.Gantt.Web.UI.ScrollActivitySheet">
            <summary>
            Defines a control that contains a <strong>TimeScale</strong> and an <strong>ActivitySheet</strong>.
            </summary>
            <remarks><p>This control displays a <see cref="T:NickLee.Views.Gantt.Web.UI.TimeScale" /> control and
            an <see cref="T:NickLee.Views.Gantt.Web.UI.ActivitySheet" /> control.</p>
            <p><img src="scrollactivitysheet.png" /></p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScrollActivitySheet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Web.UI.ScrollActivitySheet" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScrollActivitySheet.RenderImageMapAreas(System.Web.UI.HtmlTextWriter)">
            <summary>
            Is called to render image map areas.
            </summary>
            <param name="writer">The writer in which to put the image map areas.</param>
            <remarks>The implementation of this method creates image map areas to display
            tooltips for visible activities.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.ActivityToolTip" />
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.ScrollActivitySheet.DrawConstraintLink">
            <summary>
            Occurs when the activity sheet draws constraint links in owner draw mode.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Gantt.Web.UI.ScrollActivitySheet.ConstraintsOwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows an event handler
            listening to the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.DrawConstraintLink" /> event. The event handler draws
            constraint links using a specific pen that depends on the constraint.
            </para>
            <code lang="C#">
            private void OnDrawConstraintLink(object sender, DrawConstraintLinkEventArgs e) {
            Pen pen = ComputePen(e.Constraint);
            e.DrawConstraintLink(pen, e.Brush);
            }
            </code>
            <code lang="Visual Basic">
            Private Sub OnDrawSheetRow(ByVal sender As Object, ByVal e As DrawConstraintLinkEventArgs)
            Dim pen as Pen = ComputePen(e.Constraint)
            e.DrawConstraintLink(pen, e.Brush)
            End Sub
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.ScrollActivitySheet.HitTestConstraintLink">
            <summary>
            Occurs when the activity sheet does hit testing on constraint links in owner draw mode.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Gantt.Web.UI.ScrollActivitySheet.ConstraintsOwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollActivitySheet.ConstraintLinkStyle">
            <summary>
            Gets or sets the style of constraint links between activities.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ConstraintLinkStyle" /> values. The default
            is <strong>Direct</strong>.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.ScrollActivitySheet.ConstraintsColor" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollActivitySheet.ConstraintsColor">
            <summary>
            Gets or sets the color of constraints links.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> used to draw the constraints links.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollActivitySheet.ConstraintsOwnerDraw">
            <summary>
            Gets or sets a value indicating whether the code that you
            provide draws the constraint links or not.
            </summary>
            <value>
            <see langword="true" /> if constraint links are to be drawn using custom user
            code; <see langword="false" /> otherwise.
            </value>
            <remarks>
            <p>When the <strong>ConstraintsOwnerDraw</strong> property is set to <see langword="true" />,
            you need to handle the drawing and hit testing of constraint links.
            Use the <see cref="E:NickLee.Views.Gantt.Web.UI.ScrollActivitySheet.DrawConstraintLink" /> event to handle the drawing of
            constraint links.
            Use the <see cref="E:NickLee.Views.Gantt.Web.UI.ScrollActivitySheet.HitTestConstraintLink" /> event to handle the hit testing of
            constraint links.
            </p>
            <p>When the <strong>ConstraintsOwnerDraw</strong> property is set to <see langword="false" />,
            the <strong>DrawConstraintLink</strong> and <strong>HitTestConstraintLink</strong> events are not raised.</p>
            </remarks>
            <seealso cref="E:NickLee.Views.Gantt.Web.UI.ScrollActivitySheet.DrawConstraintLink" />
            <seealso cref="E:NickLee.Views.Gantt.Web.UI.ScrollActivitySheet.HitTestConstraintLink" />
        </member>
        <member name="T:NickLee.Views.Gantt.ITimeSampler">
            <summary>
            Defines an interface that enables enumeration in a time range.
            </summary>
            <seealso cref="T:NickLee.Views.Gantt.TimeSamplerEnumerator" />
        </member>
        <member name="T:NickLee.Views.Gantt.ITimeIterator">
            <summary>
            Defines a way to iterate on <see cref="T:System.DateTime" /> structures.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.ITimeIterator.GetNextTime(System.DateTime)">
            <summary>
            When implemented by a class, computes the next date after the specified date.
            </summary>
            <returns>A <see cref="T:System.DateTime" /> structure.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.ITimeIterator.GetPreviousTime(System.DateTime)">
            <summary>
            When implemented by a class, computes the previous date before the specified date.
            </summary>
            <returns>A <see cref="T:System.DateTime" /> structure.</returns>
        </member>
        <member name="E:NickLee.Views.Gantt.ITimeIterator.TimeIteratorChanged">
            <summary>
            Occurs when the time iterator has changed.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.ResourcesChangeEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:NickLee.Views.Gantt.Data.IGanttModel.ResourcesChanging" /> and
            <see cref="E:NickLee.Views.Gantt.Data.IGanttModel.ResourcesChanged" /> events of a <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.ProjectSchedulingModelSerializer">
            <summary>
            Defines a Xml serializer and deserializer for the <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModel" />
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttModelXmlSerializer">
            <summary>
            Serializes and deserializes Gantt objects into and from XML documents.
            </summary>
            <remarks>
            <p>XML serialization is the process of converting the public properties and
            fields of an object into a serial format (in this case, XML) for storage or transport. Deserialization
            recreates the object in its original state from the XML output. You can thus think of
            serialization as a way of saving the state of an object into a stream or buffer.</p>
            <p>Serialized properties are the ones located in the interfaces of the Gantt model. Read-write user-defined properties are
            automatically serialized. If you do not want to serialize some user-defined properties, those properties must be marked with
            the <see cref="T:NickLee.Views.Gantt.Data.GanttPropertyAttribute" /> attribute.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to deserialize and serialize a <see cref="T:NickLee.Views.Gantt.Data.SimpleGanttModel" />.
            </para>
            <code lang="C#">
            public void ReadFile(IGanttModel model, string filename) {
            StreamReader reader = new StreamReader(fileName);
            GanttModelXmlSerializer serializer = new GanttModelXmlSerializer();
            serializer.Deserialize(reader, model);
            reader.Close();
            }

            public void WriteFile(IGanttModel model, string filename) {
            StreamWriter writer = new StreamWriter(fileName);
            GanttModelXmlSerializer serializer = new GanttModelXmlSerializer();
            serializer.Serialize(writer, model);
            writer.Close();
            }
            </code>
            <code lang="Visual Basic">
            Sub ReadFile(ByVal model As IGanttModel, ByVal filename As string)
            Dim reader As StreamReader = New StreamReader(fileName)
            Dim serializer As GanttModelXmlSerializer  = New GanttModelXmlSerializer
            serializer.Deserialize(reader, model)
            reader.Close()
            End Sub

            Sub WriteFile(ByVal model As IGanttModel, ByVal filename As string)
            Dim writer As StreamWriter = new StreamWriter(fileName)
            Dim serializer As GanttModelXmlSerializer  = New GanttModelXmlSerializer
            serializer.Serialize(writer, model)
            writer.Close()
            End Sub
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.GanttModelXmlSerializer" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.AfterDeserializing(System.Xml.XmlDocument,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Is called after any deserialization.
            </summary>
            <param name="document">The <see cref="T:System.Xml.XmlDocument" /> instance.</param>
            <param name="context">The <see cref="T:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context" /> of deserialization.</param>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.AfterSerializing(System.Xml.XmlDocument,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Is called after any serialization.
            </summary>
            <param name="document">The <see cref="T:System.Xml.XmlDocument" /> instance.</param>
            <param name="context">The <see cref="T:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context" /> of serialization.</param>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.BeforeDeserializing(System.Xml.XmlDocument,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Is called before any deserialization.
            </summary>
            <param name="document">The <see cref="T:System.Xml.XmlDocument" /> instance.</param>
            <param name="context">The <see cref="T:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context" /> of deserialization.</param>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.BeforeSerializing(System.Xml.XmlDocument,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Is called before any serialization.
            </summary>
            <param name="document">The <see cref="T:System.Xml.XmlDocument" /> instance.</param>
            <param name="context">The <see cref="T:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context" /> of serialization.</param>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.BeginInit">
            <summary>
            Begins the initialization of a <see cref="T:NickLee.Views.Gantt.Data.GanttModelXmlSerializer" /> that is used on a form or used
            by another component. The initialization occurs at runtime.
            </summary>
            <remarks>The Visual Studio .NET design environment uses this method
            to start the initialization of a component that is used on a form
            or used by another component. The <see cref="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.EndInit" /> method ends the
            initialization. The use of <strong>BeginInit</strong> and <strong>EndInit</strong> methods prevents the
            serializer from being used before it is fully initialized.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.CreateContext(NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Is called to create a context for serializing/deserializing data.
            </summary>
            <param name="model">The Gantt model involved in the operation.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.CreateXmlDocument">
            <summary>
            Is called to create the XML document.
            </summary>
            <returns>A new instance of the <see cref="T:System.Xml.XmlDocument" /> class.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Deserialize(System.IO.Stream,NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Deserializes a stream into the specified Gantt model.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream" /> instance.</param>
            <param name="model">The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> in which data will be deserialized.</param>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to deserialize and serialize a <see cref="T:NickLee.Views.Gantt.Data.SimpleGanttModel" />.
            </para>
            <code lang="C#">
            public void ReadFile(IGanttModel model, string filename) {
            StreamReader reader = new StreamReader(fileName);
            GanttModelXmlSerializer serializer = new GanttModelXmlSerializer();
            serializer.Deserialize(reader, model);
            reader.Close();
            }

            public void WriteFile(IGanttModel model, string filename) {
            StreamWriter writer = new StreamWriter(fileName);
            GanttModelXmlSerializer serializer = new GanttModelXmlSerializer();
            serializer.Serialize(writer, model);
            writer.Close();
            }
            </code>
            <code lang="Visual Basic">
            Sub ReadFile(ByVal model As IGanttModel, ByVal filename As string)
            Dim reader As StreamReader = New StreamReader(fileName)
            Dim serializer As GanttModelXmlSerializer  = New GanttModelXmlSerializer
            serializer.Deserialize(reader, model)
            reader.Close()
            End Sub

            Sub WriteFile(ByVal model As IGanttModel, ByVal filename As string)
            Dim writer As StreamWriter = new StreamWriter(fileName)
            Dim serializer As GanttModelXmlSerializer  = New GanttModelXmlSerializer
            serializer.Serialize(writer, model)
            writer.Close()
            End Sub
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Deserialize(System.IO.TextReader,NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Deserializes a text reader into the specified Gantt model.
            </summary>
            <param name="reader">A <see cref="T:System.IO.TextReader" /> instance.</param>
            <param name="model">The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> in which data will be deserialized.</param>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to deserialize and serialize a <see cref="T:NickLee.Views.Gantt.Data.SimpleGanttModel" />.
            </para>
            <code lang="C#">
            public void ReadFile(IGanttModel model, string filename) {
            StreamReader reader = new StreamReader(fileName);
            GanttModelXmlSerializer serializer = new GanttModelXmlSerializer();
            serializer.Deserialize(reader, model);
            reader.Close();
            }

            public void WriteFile(IGanttModel model, string filename) {
            StreamWriter writer = new StreamWriter(fileName);
            GanttModelXmlSerializer serializer = new GanttModelXmlSerializer();
            serializer.Serialize(writer, model);
            writer.Close();
            }
            </code>
            <code lang="Visual Basic">
            Sub ReadFile(ByVal model As IGanttModel, ByVal filename As string)
            Dim reader As StreamReader = New StreamReader(fileName)
            Dim serializer As GanttModelXmlSerializer  = New GanttModelXmlSerializer
            serializer.Deserialize(reader, model)
            reader.Close()
            End Sub

            Sub WriteFile(ByVal model As IGanttModel, ByVal filename As string)
            Dim writer As StreamWriter = new StreamWriter(fileName)
            Dim serializer As GanttModelXmlSerializer  = New GanttModelXmlSerializer
            serializer.Serialize(writer, model)
            writer.Close()
            End Sub
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Deserialize(System.Xml.XmlReader,NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Deserializes an XML reader into the specified Gantt model.
            </summary>
            <param name="reader">An <see cref="T:System.Xml.XmlReader" /> instance.</param>
            <param name="model">The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> in which data will be deserialized.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="model" /> is
            <see langword="null" />.</exception>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to deserialize and serialize a <see cref="T:NickLee.Views.Gantt.Data.SimpleGanttModel" />.
            </para>
            <code lang="C#">
            public void ReadFile(IGanttModel model, string filename) {
            StreamReader reader = new StreamReader(fileName);
            GanttModelXmlSerializer serializer = new GanttModelXmlSerializer();
            serializer.Deserialize(reader, model);
            reader.Close();
            }

            public void WriteFile(IGanttModel model, string filename) {
            StreamWriter writer = new StreamWriter(fileName);
            GanttModelXmlSerializer serializer = new GanttModelXmlSerializer();
            serializer.Serialize(writer, model);
            writer.Close();
            }
            </code>
            <code lang="Visual Basic">
            Sub ReadFile(ByVal model As IGanttModel, ByVal filename As string)
            Dim reader As StreamReader = New StreamReader(fileName)
            Dim serializer As GanttModelXmlSerializer  = New GanttModelXmlSerializer
            serializer.Deserialize(reader, model)
            reader.Close()
            End Sub

            Sub WriteFile(ByVal model As IGanttModel, ByVal filename As string)
            Dim writer As StreamWriter = new StreamWriter(fileName)
            Dim serializer As GanttModelXmlSerializer  = New GanttModelXmlSerializer
            serializer.Serialize(writer, model)
            writer.Close()
            End Sub
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DeserializeActivities(System.IO.Stream,NickLee.Views.Gantt.Data.IGanttModel,NickLee.Views.Gantt.Data.IConstraint[]@)">
            <summary>
            Deserializes activities of a stream into the specified Gantt model.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream" /> instance.</param>
            <param name="model">The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> in which data will be deserialized.</param>
            <param name="constraints">An array of <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> objects that was serialized with
            the activities.</param>
            <returns>An array of <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> instances.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DeserializeActivities(System.IO.TextReader,NickLee.Views.Gantt.Data.IGanttModel,NickLee.Views.Gantt.Data.IConstraint[]@)">
            <summary>
            Deserializes activities of a text reader into the specified Gantt model.
            </summary>
            <param name="reader">A <see cref="T:System.IO.TextReader" /> instance.</param>
            <param name="model">The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> in which data will be deserialized.</param>
            <param name="constraints">An array of <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> objects that was serialized with
            the activities.</param>
            <returns>An array of <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> instances.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DeserializeActivities(System.Xml.XmlReader,NickLee.Views.Gantt.Data.IGanttModel,NickLee.Views.Gantt.Data.IConstraint[]@)">
            <summary>
            Deserializes activities of an XML reader into the specified Gantt model.
            </summary>
            <param name="reader">An <see cref="T:System.Xml.XmlReader" /> instance.</param>
            <param name="model">The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> in which data will be deserialized.</param>
            <param name="constraints">An array of <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> objects that was serialized with
            the activities.</param>
            <returns>An array of <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> instances.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DeserializeActivity(System.Xml.XmlElement,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Deserializes an activity from the specified XML node.
            </summary>
            <param name="activity">The XML node.</param>
            <param name="context">The deserialization context.</param>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> class.</returns>
            <exception cref="T:System.Xml.XmlException">The <strong>id</strong> attribute was not found
            in <paramref name="activity" />.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DeserializeActivityAttribute(System.Xml.XmlAttribute,NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Deserializes an activity property from the specified XML attribute.
            </summary>
            <param name="attribute">The XML attribute.</param>
            <param name="activity">The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> being deserialized.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DeserializeActivityElement(System.Xml.XmlElement,NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Deserializes an activity element from the specified XML node.
            </summary>
            <param name="element">The XML node.</param>
            <param name="activity">The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> being deserialized.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DeserializeConstraint(System.Xml.XmlElement,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Deserializes a constraint from the specified XML node.
            </summary>
            <param name="constraint">The XML node.</param>
            <param name="context">The deserialization context.</param>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> class.</returns>
            <exception cref="T:System.Xml.XmlException">One of the following attributes were not found
            in <paramref name="constraint" />: <strong>from</strong>, <strong>to</strong>,
            <strong>type</strong>.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DeserializeConstraintAttribute(System.Xml.XmlAttribute,NickLee.Views.Gantt.Data.IConstraint,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Deserializes a constraint property from the specified XML attribute.
            </summary>
            <param name="attribute">The XML attribute.</param>
            <param name="constraint">The <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> being deserialized.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DeserializeConstraintElement(System.Xml.XmlElement,NickLee.Views.Gantt.Data.IConstraint,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Deserializes a constraint element from the specified XML node.
            </summary>
            <param name="element">The XML node.</param>
            <param name="constraint">The <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> being deserialized.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DeserializeConstraints(System.IO.Stream,NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Deserializes constraints of a stream into the specified Gantt model.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream" /> instance.</param>
            <param name="model">The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> in which data will be deserialized.</param>
            <returns>An array of <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> instances.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DeserializeConstraints(System.IO.TextReader,NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Deserializes constraints of a text reader into the specified Gantt model.
            </summary>
            <param name="reader">A <see cref="T:System.IO.TextReader" /> instance.</param>
            <param name="model">The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> in which data will be deserialized.</param>
            <returns>An array of <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> instances.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DeserializeConstraints(System.Xml.XmlReader,NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Deserializes constraints of an XML reader into the specified Gantt model.
            </summary>
            <param name="reader">An <see cref="T:System.Xml.XmlReader" /> instance.</param>
            <param name="model">The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> in which data will be deserialized.</param>
            <returns>An array of <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> instances.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DeserializeReservation(System.Xml.XmlElement,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Deserializes a reservation from the specified XML node.
            </summary>
            <param name="reservation">The XML node.</param>
            <param name="context">The deserialization context.</param>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> class.</returns>
            <exception cref="T:System.Xml.XmlException">One of the following attributes were not found
            in <paramref name="reservation" />: <strong>activity</strong>,
            <strong>resource</strong>.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DeserializeReservationAttribute(System.Xml.XmlAttribute,NickLee.Views.Gantt.Data.IReservation,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Deserializes a reservation property from the specified XML attribute.
            </summary>
            <param name="attribute">The XML attribute.</param>
            <param name="reservation">The <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> being deserialized.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DeserializeReservationElement(System.Xml.XmlElement,NickLee.Views.Gantt.Data.IReservation,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Deserializes a reservation element from the specified XML node.
            </summary>
            <param name="element">The XML node.</param>
            <param name="reservation">The <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> being deserialized.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DeserializeReservations(System.IO.Stream,NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Deserializes reservations of a stream into the specified Gantt model.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream" /> instance.</param>
            <param name="model">The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> in which data will be deserialized.</param>
            <returns>An array of <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> instances.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DeserializeReservations(System.IO.TextReader,NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Deserializes reservations of a text reader into the specified Gantt model.
            </summary>
            <param name="reader">A <see cref="T:System.IO.TextReader" /> instance.</param>
            <param name="model">The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> in which data will be deserialized.</param>
            <returns>An array of <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> instances.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DeserializeReservations(System.Xml.XmlReader,NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Deserializes reservations of an XML reader into the specified Gantt model.
            </summary>
            <param name="reader">An <see cref="T:System.Xml.XmlReader" /> instance.</param>
            <param name="model">The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> in which data will be deserialized.</param>
            <returns>An array of <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> instances.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DeserializeResource(System.Xml.XmlElement,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Deserializes a resource from the specified XML node.
            </summary>
            <param name="resource">The XML node.</param>
            <param name="context">The deserialization context.</param>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Data.IResource" /> class.</returns>
            <exception cref="T:System.Xml.XmlException">The <strong>id</strong> attribute was not found
            in <paramref name="resource" />.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DeserializeResourceAttribute(System.Xml.XmlAttribute,NickLee.Views.Gantt.Data.IResource,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Deserializes a resource property from the specified XML attribute.
            </summary>
            <param name="attribute">The XML attribute.</param>
            <param name="resource">The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> being deserialized.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DeserializeResourceElement(System.Xml.XmlElement,NickLee.Views.Gantt.Data.IResource,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Deserializes a resource element from the specified XML node.
            </summary>
            <param name="element">The XML node.</param>
            <param name="resource">The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> being deserialized.</param>
            <param name="context">The deserialization context.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DeserializeResources(System.IO.Stream,NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Deserializes resources of a stream into the specified Gantt model.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream" /> instance.</param>
            <param name="model">The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> in which data will be deserialized.</param>
            <returns>An array of <see cref="T:NickLee.Views.Gantt.Data.IResource" /> instances.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DeserializeResources(System.IO.TextReader,NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Deserializes resources of a text reader into the specified Gantt model.
            </summary>
            <param name="reader">A <see cref="T:System.IO.TextReader" /> instance.</param>
            <param name="model">The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> in which data will be deserialized.</param>
            <returns>An array of <see cref="T:NickLee.Views.Gantt.Data.IResource" /> instances.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DeserializeResources(System.Xml.XmlReader,NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Deserializes resources of an XML reader into the specified Gantt model.
            </summary>
            <param name="reader">An <see cref="T:System.Xml.XmlReader" /> instance.</param>
            <param name="model">The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> in which data will be deserialized.</param>
            <returns>An array of <see cref="T:NickLee.Views.Gantt.Data.IResource" /> instances.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Dispose(System.Boolean)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">MarshalByValueComponent.Dispose(bool)</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.EndInit">
            <summary>
            Ends the initialization of a <see cref="T:NickLee.Views.Gantt.Data.GanttModelXmlSerializer" /> that is used on a form or
            used by another component. The initialization occurs at runtime.
            </summary>
            <remarks>
            The Visual Studio .NET design environment uses this method to end
            the initialization of a component that is used on a form or used by
            another component. The <see cref="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.BeginInit" /> method starts the initialization.
            The use of <strong>BeginInit</strong> and <strong>EndInit</strong> methods prevents the serializer
            from being used before it is fully initialized.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.GetFileName(NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Retrieves the filename associated with the specified Gantt model.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents the filename of an XML file
            containing scheduling data, or <see langword="null" /> if no filename has been
            associated with <paramref name="model" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.GetXmlUrlResolver">
            <summary>
            Returns the XML resolver that will be used to resolve URLs.
            </summary>
            <returns>An instance of <see cref="T:System.Xml.XmlUrlResolver" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.InitializeDocument(System.Xml.XmlDocument)">
            <summary>
            Initializes the specified XML document.
            </summary>
            <param name="document">An <see cref="T:System.Xml.XmlDocument" /> instance.</param>
            <remarks>This method is called to initialize the XML document when serializing data.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.InitializeSchemaValidation(System.Xml.XmlDocument)">
            <summary>
            Is called to add schema validation to the XML document.
            </summary>
            <param name="document">An <see cref="T:System.Xml.XmlDocument" /> instance.</param>
            <remarks>This method is called to enable schema validation when serializing data.
            The default implementation uses the "sdxl.xsd" file as an XML schema.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.LoadDocument(System.Xml.XmlDocument,System.Xml.XmlReader)">
            <summary>
            Is called to load data into the XML document when deserializing.
            </summary>
            <param name="document">The <see cref="T:System.Xml.XmlDocument" /> instance.</param>
            <param name="reader">The <see cref="T:System.Xml.XmlReader" /> instance.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.OnXmlElementDeserialized(NickLee.Views.Gantt.Data.XmlElementSerializedEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.XmlElementDeserialized" /> event.
            </summary>
            <param name="e">The <see cref="T:NickLee.Views.Gantt.Data.XmlElementSerializedEventArgs" /> that contains the event data.</param>
            <remarks>This method is called during deserialization for each XML element deserialized.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.OnXmlElementSerialized(NickLee.Views.Gantt.Data.XmlElementSerializedEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.XmlElementSerialized" /> event.
            </summary>
            <param name="e">The <see cref="T:NickLee.Views.Gantt.Data.XmlElementSerializedEventArgs" /> that contains the event data.</param>
            <remarks>This method is called during serialization for each XML element serialized.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Serialize(System.IO.Stream,NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Serializes the specified Gantt model into a stream.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream" /> instance.</param>
            <param name="model">The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> to serialize.</param>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to deserialize and serialize a <see cref="T:NickLee.Views.Gantt.Data.SimpleGanttModel" />.
            </para>
            <code lang="C#">
            public void ReadFile(IGanttModel model, string filename) {
            StreamReader reader = new StreamReader(fileName);
            GanttModelXmlSerializer serializer = new GanttModelXmlSerializer();
            serializer.Deserialize(reader, model);
            reader.Close();
            }

            public void WriteFile(IGanttModel model, string filename) {
            StreamWriter writer = new StreamWriter(fileName);
            GanttModelXmlSerializer serializer = new GanttModelXmlSerializer();
            serializer.Serialize(writer, model);
            writer.Close();
            }
            </code>
            <code lang="Visual Basic">
            Sub ReadFile(ByVal model As IGanttModel, ByVal filename As string)
            Dim reader As StreamReader = New StreamReader(fileName)
            Dim serializer As GanttModelXmlSerializer  = New GanttModelXmlSerializer
            serializer.Deserialize(reader, model)
            reader.Close()
            End Sub

            Sub WriteFile(ByVal model As IGanttModel, ByVal filename As string)
            Dim writer As StreamWriter = new StreamWriter(fileName)
            Dim serializer As GanttModelXmlSerializer  = New GanttModelXmlSerializer
            serializer.Serialize(writer, model)
            writer.Close()
            End Sub
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Serialize(System.IO.TextWriter,NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Serializes the specified Gantt model into a text writer.
            </summary>
            <param name="writer">A <see cref="T:System.IO.TextWriter" /> instance.</param>
            <param name="model">The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> to serialize.</param>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to deserialize and serialize a <see cref="T:NickLee.Views.Gantt.Data.SimpleGanttModel" />.
            </para>
            <code lang="C#">
            public void ReadFile(IGanttModel model, string filename) {
            StreamReader reader = new StreamReader(fileName);
            GanttModelXmlSerializer serializer = new GanttModelXmlSerializer();
            serializer.Deserialize(reader, model);
            reader.Close();
            }

            public void WriteFile(IGanttModel model, string filename) {
            StreamWriter writer = new StreamWriter(fileName);
            GanttModelXmlSerializer serializer = new GanttModelXmlSerializer();
            serializer.Serialize(writer, model);
            writer.Close();
            }
            </code>
            <code lang="Visual Basic">
            Sub ReadFile(ByVal model As IGanttModel, ByVal filename As string)
            Dim reader As StreamReader = New StreamReader(fileName)
            Dim serializer As GanttModelXmlSerializer  = New GanttModelXmlSerializer
            serializer.Deserialize(reader, model)
            reader.Close()
            End Sub

            Sub WriteFile(ByVal model As IGanttModel, ByVal filename As string)
            Dim writer As StreamWriter = new StreamWriter(fileName)
            Dim serializer As GanttModelXmlSerializer  = New GanttModelXmlSerializer
            serializer.Serialize(writer, model)
            writer.Close()
            End Sub
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Serialize(System.Xml.XmlWriter,NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Serializes the specified Gantt model into an XML writer.
            </summary>
            <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> instance.</param>
            <param name="model">The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> to serialize.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="model" /> is
            <see langword="null" />.</exception>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to deserialize and serialize a <see cref="T:NickLee.Views.Gantt.Data.SimpleGanttModel" />.
            </para>
            <code lang="C#">
            public void ReadFile(IGanttModel model, string filename) {
            StreamReader reader = new StreamReader(fileName);
            GanttModelXmlSerializer serializer = new GanttModelXmlSerializer();
            serializer.Deserialize(reader, model);
            reader.Close();
            }

            public void WriteFile(IGanttModel model, string filename) {
            StreamWriter writer = new StreamWriter(fileName);
            GanttModelXmlSerializer serializer = new GanttModelXmlSerializer();
            serializer.Serialize(writer, model);
            writer.Close();
            }
            </code>
            <code lang="Visual Basic">
            Sub ReadFile(ByVal model As IGanttModel, ByVal filename As string)
            Dim reader As StreamReader = New StreamReader(fileName)
            Dim serializer As GanttModelXmlSerializer  = New GanttModelXmlSerializer
            serializer.Deserialize(reader, model)
            reader.Close()
            End Sub

            Sub WriteFile(ByVal model As IGanttModel, ByVal filename As string)
            Dim writer As StreamWriter = new StreamWriter(fileName)
            Dim serializer As GanttModelXmlSerializer  = New GanttModelXmlSerializer
            serializer.Serialize(writer, model)
            writer.Close()
            End Sub
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SerializeActivities(System.IO.Stream,NickLee.Views.Gantt.Data.IActivity[])">
            <summary>
            Serializes the specified activities into a stream.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream" /> instance.</param>
            <param name="activities">An array of <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to serialize.</param>
            <remarks>The constraints between the specified activities are also serialized.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SerializeActivities(System.IO.TextWriter,NickLee.Views.Gantt.Data.IActivity[])">
            <summary>
            Serializes the specified activities into a text writer.
            </summary>
            <param name="writer">A <see cref="T:System.IO.TextWriter" /> instance.</param>
            <param name="activities">An array of <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to serialize.</param>
            <remarks>The constraints between the specified activities are also serialized.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SerializeActivities(System.Xml.XmlWriter,NickLee.Views.Gantt.Data.IActivity[])">
            <summary>
            Serializes the specified resources into an XML writer.
            </summary>
            <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> instance.</param>
            <param name="activities">An array of <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to serialize.</param>
            <remarks>The constraints between the specified activities are also serialized.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SerializeActivities(System.Xml.XmlElement,NickLee.Views.Gantt.Data.IActivity[],NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Serializes the specified activities into the given XML node.
            </summary>
            <param name="node">The XML node in which serialization will be done.</param>
            <param name="activities">The activities to serialize.</param>
            <param name="context">The context of serialization.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SerializeActivity(System.Xml.XmlElement,NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Serializes the specified activity in the given XML node.
            </summary>
            <param name="element">The XML node in which serialization will be done.</param>
            <param name="activity">The activity to serialize.</param>
            <param name="context">The context of serialization.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SerializeConstraint(System.Xml.XmlElement,NickLee.Views.Gantt.Data.IConstraint,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Serializes the specified constraint in the given XML node.
            </summary>
            <param name="element">The XML node in which serialization will be done.</param>
            <param name="constraint">The constraint to serialize.</param>
            <param name="context">The context of serialization.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SerializeConstraints(System.IO.Stream,NickLee.Views.Gantt.Data.IConstraint[])">
            <summary>
            Serializes the specified constraints into a stream.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream" /> instance.</param>
            <param name="constraints">An array of <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> to serialize.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SerializeConstraints(System.IO.TextWriter,NickLee.Views.Gantt.Data.IConstraint[])">
            <summary>
            Serializes the specified constraints into a text writer.
            </summary>
            <param name="writer">A <see cref="T:System.IO.TextWriter" /> instance.</param>
            <param name="constraints">An array of <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> to serialize.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SerializeConstraints(System.Xml.XmlWriter,NickLee.Views.Gantt.Data.IConstraint[])">
            <summary>
            Serializes the specified constraints into an XML writer.
            </summary>
            <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> instance.</param>
            <param name="constraints">An array of <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> to serialize.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SerializeConstraints(System.Xml.XmlElement,NickLee.Views.Gantt.Data.IConstraint[],NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Serializes the specified constraints into the given XML node.
            </summary>
            <param name="node">The XML node in which serialization will be done.</param>
            <param name="constraints">The constraints to serialize.</param>
            <param name="context">The context of serialization.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SerializeCustomActivityProperties(System.Xml.XmlElement,NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Is called to serialize activity user-defined properties.
            </summary>
            <param name="element">The XML node in which data will be serialized.</param>
            <param name="activity">The activity to serialize.</param>
            <param name="context">The context of serialization.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SerializeCustomConstraintProperties(System.Xml.XmlElement,NickLee.Views.Gantt.Data.IConstraint,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Is called to serialize constraint user-defined properties.
            </summary>
            <param name="element">The XML node in which data will be serialized.</param>
            <param name="constraint">The constraint to serialize.</param>
            <param name="context">The context of serialization.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SerializeCustomReservationProperties(System.Xml.XmlElement,NickLee.Views.Gantt.Data.IReservation,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Is called to serialize reservation user-defined properties.
            </summary>
            <param name="element">The XML node in which data will be serialized.</param>
            <param name="reservation">The reservation to serialize.</param>
            <param name="context">The context of serialization.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SerializeCustomResourceProperties(System.Xml.XmlElement,NickLee.Views.Gantt.Data.IResource,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Is called to serialize resource user-defined properties.
            </summary>
            <param name="element">The XML node in which data will be serialized.</param>
            <param name="resource">The resource to serialize.</param>
            <param name="context">The context of serialization.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SerializeReservation(System.Xml.XmlElement,NickLee.Views.Gantt.Data.IReservation,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Serializes the specified reservation into the given XML node.
            </summary>
            <param name="element">The XML node in which serialization will be done.</param>
            <param name="reservation">The reservation to serialize.</param>
            <param name="context">The context of serialization.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SerializeReservations(System.IO.Stream,NickLee.Views.Gantt.Data.IReservation[])">
            <summary>
            Serializes the specified reservations into a stream.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream" /> instance.</param>
            <param name="reservations">An array of <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> to serialize.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SerializeReservations(System.IO.TextWriter,NickLee.Views.Gantt.Data.IReservation[])">
            <summary>
            Serializes the specified reservations into a text writer.
            </summary>
            <param name="writer">A <see cref="T:System.IO.TextWriter" /> instance.</param>
            <param name="reservations">An array of <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> to serialize.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SerializeReservations(System.Xml.XmlWriter,NickLee.Views.Gantt.Data.IReservation[])">
            <summary>
            Serializes the specified reservations into an XML writer.
            </summary>
            <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> instance.</param>
            <param name="reservations">An array of <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> to serialize.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SerializeReservations(System.Xml.XmlElement,NickLee.Views.Gantt.Data.IReservation[],NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Serializes the specified reservations into the given XML node.
            </summary>
            <param name="node">The XML node in which serialization will be done.</param>
            <param name="reservations">The reservations to serialize.</param>
            <param name="context">The context of serialization.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SerializeResource(System.Xml.XmlElement,NickLee.Views.Gantt.Data.IResource,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Serializes the specified resource in the given XML node.
            </summary>
            <param name="element">The XML node in which serialization will be done.</param>
            <param name="resource">The resource to serialize.</param>
            <param name="context">The context of serialization.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SerializeResources(System.IO.Stream,NickLee.Views.Gantt.Data.IResource[])">
            <summary>
            Serializes the specified resources into a stream.
            </summary>
            <param name="stream">A <see cref="T:System.IO.Stream" /> instance.</param>
            <param name="resources">An array of <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to serialize.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SerializeResources(System.IO.TextWriter,NickLee.Views.Gantt.Data.IResource[])">
            <summary>
            Serializes the specified resources into a text writer.
            </summary>
            <param name="writer">A <see cref="T:System.IO.TextWriter" /> instance.</param>
            <param name="resources">An array of <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to serialize.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SerializeResources(System.Xml.XmlWriter,NickLee.Views.Gantt.Data.IResource[])">
            <summary>
            Serializes the specified resources into an XML writer.
            </summary>
            <param name="writer">An <see cref="T:System.Xml.XmlWriter" /> instance.</param>
            <param name="resources">An array of <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to serialize.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SerializeResources(System.Xml.XmlElement,NickLee.Views.Gantt.Data.IResource[],NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            Serializes the specified resources into the given XML node.
            </summary>
            <param name="node">The XML node in which serialization will be done.</param>
            <param name="resources">The resources to serialize.</param>
            <param name="context">The context of serialization.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SetFileName(NickLee.Views.Gantt.Data.IGanttModel,System.String)">
            <summary>
            Loads the contents of the XML file specified into the given model.
            </summary>
            <param name="model">The Gantt model.</param>
            <param name="value">The filename.</param>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.XmlElementDeserialized">
            <summary>
            Occurs during deserialization for each XML element deserialized.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.XmlElementSerialized">
            <summary>
            Occurs during serialization for each XML element serialized.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.AutoMilestone">
            <summary>
            Gets or sets a value indicating how to interpret activities with a zero duration.
            </summary>
            <value><see langword="true" /> if milestones are automatically set during
            deserialization for activities with a zero duration; <see langword="false" /> otherwise.
            The default value is <see langword="false" />.</value>
            <remarks>This property can be used to read XML files generated by the JViews Gantt.
            Indeed, the JViews Gantt considers activities with a zero duration as milestones.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DateFormat">
            <summary>
            Gets or sets the date format that will be used when serializing.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the date format that
            will be used to serialize dates.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Description">
            <summary>
            Gets or sets the description of the XML document.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the description of
            the XML document.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Title">
            <summary>
            Gets or sets the title of the XML document.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the title of the
            XML document.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Version">
            <summary>
            Gets or sets the version of the XML document.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the version of the
            XML document.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context">
            <summary>
            Context of serialization/deserialization.
            </summary>
            <remarks>This class can be used during the serialization and deserialization processes to
            know the current context of the operation being carried out. For example, it provides information
            about objects that have already been serialized or deserialized.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context.#ctor(NickLee.Views.Gantt.Data.GanttModelXmlSerializer,NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context" /> class.
            </summary>
            <param name="serializer">The <see cref="T:NickLee.Views.Gantt.Data.GanttModelXmlSerializer" /> used for serialization/deserialization.</param>
            <param name="model">The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> on which serialization/deserialization
            is based on.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context.AddActivity(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Called during serialization
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context.AddActivity(System.String,NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Called during deserialization
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context.AddResource(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Called during serialization
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context.AddResource(System.String,NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Called during deserialization
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context.Contains(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Called during serialization
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context.Contains(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Called during serialization
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context.CreateActivity(System.String)">
            <summary>
            Creates a new activity with the specified identifier.
            </summary>
            <param name="id">The identifier for the activity.</param>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> class.</returns>
            <remarks>The default implementation calls the <see cref="M:NickLee.Views.Gantt.Data.IGanttModel.NewActivity" />
            method. This method is called during deserialization to create an activity.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context.CreateConstraint(NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.ConstraintType)">
            <summary>
            Creates a new constraint.
            </summary>
            <param name="fromActivity">The <strong>from</strong> activity.</param>
            <param name="toActivity">The <strong>to</strong> activity.</param>
            <param name="type">One of the <see cref="T:NickLee.Views.Gantt.Data.ConstraintType" /> values.</param>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> class.</returns>
            <remarks>The default implementation calls the <see cref="M:NickLee.Views.Gantt.Data.IGanttModel.NewConstraint(NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.ConstraintType)" />
            method. This method is called during deserialization to create a constraint.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context.CreateReservation(NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Creates a new reservation.
            </summary>
            <param name="activity">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> instance.</param>
            <param name="resource">An <see cref="T:NickLee.Views.Gantt.Data.IResource" /> instance.</param>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> class.</returns>
            <remarks>The default implementation calls the <see cref="M:NickLee.Views.Gantt.Data.IGanttModel.NewReservation(NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.IResource)" />
            method. This method is called during deserialization to create a reservation.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context.CreateResource(System.String)">
            <summary>
            Creates a new resource with the specified identifier.
            </summary>
            <param name="id">The identifier for the resource.</param>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Data.IResource" /> class.</returns>
            <remarks>The default implementation calls the <see cref="M:NickLee.Views.Gantt.Data.IGanttModel.NewResource" />
            method. This method is called during deserialization to create a resource.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context.GetActivity(System.String)">
            <summary>
            Retrieves the activity specified by its identifier.
            </summary>
            <param name="id">The activity identifier.</param>
            <returns>An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> instance, or <see langword="null" /> if the
            specified activity cannot be found.</returns>
            <remarks>
            This method first looks in the activities that has already been serialized/deserialized
            into the context. If the activity is not found, the Gantt model is asked to provide it.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context.GetNewActivity(System.String)">
            <summary>
            Gets a new activity using the specified identifier.
            </summary>
            <param name="id">The identifier for the activity.</param>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> class.</returns>
            <remarks>If the identifier is already in the model, then a new identifier is computed
            using the <see cref="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context.GetNewActivityID(NickLee.Views.Gantt.Data.IGanttModel,System.String)" /> method.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context.GetNewActivityID(NickLee.Views.Gantt.Data.IGanttModel,System.String)">
            <summary>
            Gets a new unique identifier for an activity.
            </summary>
            <param name="model">The Gantt model.</param>
            <param name="id">The template of the identifier.</param>
            <returns>A <see cref="T:System.String" /> that represents a unique identifier for an activity.
            </returns>
            <remarks>The default implementation adds a number to <paramref name="id" />. For example,
            if <paramref name="id" /> is <strong>Act</strong>, a possible return value is <strong>Act(0)</strong>.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context.GetNewResource(System.String)">
            <summary>
            Gets a new resource using the specified identifier.
            </summary>
            <param name="id">The identifier for the resource.</param>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Data.IResource" /> class.</returns>
            <remarks>If the identifier is already in the model, then a new identifier is computed
            using the <see cref="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context.GetNewResourceID(NickLee.Views.Gantt.Data.IGanttModel,System.String)" /> method.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context.GetNewResourceID(NickLee.Views.Gantt.Data.IGanttModel,System.String)">
            <summary>
            Gets a new unique identifier for a resource.
            </summary>
            <param name="model">The Gantt model.</param>
            <param name="id">The template of the identifier.</param>
            <returns>A <see cref="T:System.String" /> that represents a unique identifier for a resource.
            </returns>
            <remarks>The default implementation adds a number to <paramref name="id" />. For example,
            if <paramref name="id" /> is <strong>Res</strong>, a possible return value is <strong>Res(0)</strong>.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context.GetResource(System.String)">
            <summary>
            Retrieves the resource specified by its identifier.
            </summary>
            <param name="id">The resource identifier.</param>
            <returns>An <see cref="T:NickLee.Views.Gantt.Data.IResource" /> instance, or <see langword="null" /> if the
            specified resource cannot be found.</returns>
            <remarks>
            This method first looks in the resources that has already been serialized/deserialized
            into the context. If the resource is not found, the Gantt model is asked to provide it.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context.AutoMilestone">
            <summary>
            Gets or sets a value indicating how to interpret activities with a zero duration.
            </summary>
            <value><see langword="true" /> if milestones are automatically set during
            deserialization for activities with a zero duration; <see langword="false" /> otherwise.
            The default value is <see langword="false" />.</value>
            <seealso cref="P:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.AutoMilestone" />
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context.DateFormat">
            <summary>
            Gets or sets the date format of the context.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the date format of the context.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context.GanttModel">
            <summary>
            Gets the Gantt model of the context.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> instance.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SDXLGenericEditor">
            <summary>
            A UITypeEditor for the filename property of the SDXL Serializer.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SDXLGenericEditor.SDXLFileNameEditor">
            <summary>
            FileName Editor for SDXL files...
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SDXLGenericEditor.SDXLUrlEditor">
            <summary>
            FileName Editor for SDXL files...
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModelSerializer.#ctor">
            <summary>
            Creates and initializes a new <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModelSerializer" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModelSerializer.#ctor(System.Boolean)">
            <summary>
            Creates and initializes a new <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModelSerializer" /> suitable for copying and pasting.
            </summary>
            <remarks>Use this constructor with the <paramref name="copyPaste" /> parameter
            to <see langword="true" /> when the <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModelSerializer" /> will be used
            for copy and paste of activities. (see <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttClipboard.SetSerializer(NickLee.Views.Gantt.Data.GanttModelXmlSerializer)">GanttClipboard.SetSerializer</see>)</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModelSerializer.AfterDeserializing(System.Xml.XmlDocument,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.AfterDeserializing(System.Xml.XmlDocument,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">GanttModelXmlSerializer.AfterDeserializing</see>
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModelSerializer.AfterSerializing(System.Xml.XmlDocument,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.AfterSerializing(System.Xml.XmlDocument,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">GanttModelXmlSerializer.AfterSerializing</see>
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModelSerializer.BeforeDeserializing(System.Xml.XmlDocument,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.BeforeDeserializing(System.Xml.XmlDocument,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">GanttModelXmlSerializer.BeforeDeserializing</see>
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModelSerializer.BeforeSerializing(System.Xml.XmlDocument,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.BeforeSerializing(System.Xml.XmlDocument,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">GanttModelXmlSerializer.BeforeSerializing</see>
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModelSerializer.Deserialize(System.Xml.XmlReader,NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Deserialize(System.IO.Stream,NickLee.Views.Gantt.Data.IGanttModel)">GanttModelXmlSerializer.Deserialize</see>
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModelSerializer.DeserializeActivity(System.Xml.XmlElement,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DeserializeActivity(System.Xml.XmlElement,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">GanttModelXmlSerializer.DeserializeActivity</see>
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModelSerializer.DeserializeConstraint(System.Xml.XmlElement,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DeserializeConstraint(System.Xml.XmlElement,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">GanttModelXmlSerializer.DeserializeConstraint</see>
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModelSerializer.DeserializeResource(System.Xml.XmlElement,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.DeserializeResource(System.Xml.XmlElement,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">GanttModelXmlSerializer.DeserializeResource</see>
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModelSerializer.SerializeActivity(System.Xml.XmlElement,NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SerializeActivity(System.Xml.XmlElement,NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">GanttModelXmlSerializer.SerializeActivity</see>
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModelSerializer.SerializeConstraint(System.Xml.XmlElement,NickLee.Views.Gantt.Data.IConstraint,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SerializeConstraint(System.Xml.XmlElement,NickLee.Views.Gantt.Data.IConstraint,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">GanttModelXmlSerializer.SerializeConstraint</see>
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModelSerializer.SerializeResource(System.Xml.XmlElement,NickLee.Views.Gantt.Data.IResource,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.SerializeResource(System.Xml.XmlElement,NickLee.Views.Gantt.Data.IResource,NickLee.Views.Gantt.Data.GanttModelXmlSerializer.Context)">GanttModelXmlSerializer.SerializeResource</see>
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.IReservationCollection">
            <summary>
            Defines a collection of <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> objects.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IReservationCollection.Add(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            When implemented by a class, adds the specified reservation at the end of the collection.
            </summary>
            <param name="reservation">The <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> to add.</param>
            <returns>The zero-based index of the position of the inserted reservation.</returns>
            <remarks>The Gantt model must be notified of the change in the collection using the
            <see cref="T:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IReservationCollection.AddRange(NickLee.Views.Gantt.Data.IReservation[])">
            <summary>
            When implemented by a class, adds the specified reservations at the end of the collection.
            </summary>
            <param name="reservations">An array of <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> objects.</param>
            <remarks>The Gantt model must be notified of the change in the collection using the
            <see cref="T:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IReservationCollection.Clear">
            <summary>
            When implemented by a class, removes all activities from the collection.
            </summary>
            <remarks>The Gantt model must be notified of the change in the collection using the
            <see cref="T:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IReservationCollection.Contains(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            When implemented by a class, determines if the specified <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> is a member of the collection.
            </summary>
            <param name="reservation">The <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> to locate in the collection.</param>
            <returns><see langword="true" /> if the <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> is a member of the collection;
            <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IReservationCollection.Remove(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            When implemented by a class, removes the specified reservation from the collection.
            </summary>
            <param name="reservation">The <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> to remove.</param>
            <remarks>The Gantt model must be notified of the change in the collection using the
            <see cref="T:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IReservationCollection.RemoveRange(NickLee.Views.Gantt.Data.IReservation[])">
            <summary>
            When implemented by a class, removes a range of reservations from the collection.
            </summary>
            <param name="reservations">An array of <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> objects.</param>
            <remarks>The Gantt model must be notified of the change in the collection using the
            <see cref="T:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IReservationCollection.GanttModel">
            <summary>
            When implemented by a class, gets the Gantt model to which this collection belongs.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> instance.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.LoadChart">
            <summary>
            A chart that displays the load of a resource.
            </summary>
            <remarks>
            <p>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.LoadChart" /> displays an area chart where the x-axis
            represents time and the y-axis represents the load of the resource.</p>
            <p><img src="loadchart.png" /></p>
            <p>The resource displayed by the chart can be set using the <see cref="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.Resource" /> or
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.ResourceID" /> properties of the <b>LoadChart</b> class. Once the resource
            is set, the load of a resource during a time period is computed according to the
            <see cref="P:NickLee.Views.Gantt.Data.IResource.MaxUnits" /> property of the resource and the activities that
            have been assigned to this resource during the period (see the
            <see cref="P:NickLee.Views.Gantt.Data.IResource.Reservations" /> property of the <see cref="T:NickLee.Views.Gantt.Data.IResource" />
            interface).</p>
            <p>The control defines vertical time grids through the <see cref="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.TimeGrids" />
            property that contains a collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> objects. It can also
            display vertical lines displaying particular dates such as the current date through
            the <see cref="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.DateIndicators" /> property.</p>
            </remarks>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart.FlagScaleBBoxValid">
            <summary>
            Flag indicating whether the scale bbox cache is valid.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart.FlagStepUnitValid">
            <summary>
            Flag indicating whether the step unit cache is valid.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart.FlagTimeRectangleValid">
            <summary>
            Flag indicating whether the Time Rectangle cache is valid.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.#ctor">
            <summary>
            Creates and initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.LoadChart" />
            class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.AddActivity(NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints,NickLee.Views.Gantt.Data.IActivity,System.Single)">
            <summary>
            This method add the load of the specified activity to the
            <strong>DoublePoints</strong>.
            </summary>
            <param name="points">The destination <strong>DoublePoints</strong>.</param>
            <param name="activity">The activity whose load is to be added.</param>
            <param name="units">The rate of resource the reservation occupies.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.ComputeScaleLabel(System.Single)">
            <summary>
            Is called to compute the scale label for the specified value.
            </summary>
            <param name="value">The value to convert.</param>
            <returns>The string representation of <paramref name="value" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.ComputeStepUnit(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            Invoked to compute the step unit.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to compute the steps.</param>
            <param name="nbStep">The number of step that we want to display.</param>
            <param name="scaleHeight">The height of the scale.</param>
            <returns>The step unit.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.CreateDefaultGrids">
            <summary>
            Creates the default vertical grids used in the sheet.
            </summary>
            <remarks>The method creates the default <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> objects of the grids
            and add them to the grid collection.<br></br>
            By default the method creates an instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid" /> class and
            an instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.WorkingTimesGrid" /> class.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.TimeGrids" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.Dispose(System.Boolean)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.Dispose(System.Boolean)">Control.Dispose</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.ForgetGridModification(System.Boolean)">
            <summary>
            Allow to temporary dissalow the modification of grids
            to be considered as grid changes.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.GetDarkerColor(System.Drawing.Color)">
            <summary>
            Returns a darker version of the specified <see cref="T:System.Drawing.Color" />.
            </summary>
            <param name="c">The original color.</param>
            <returns>
            A darker version of the specified color.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.GetDoublePoints(System.Collections.ICollection)">
            <summary>
            Calculates the load for the specified reservation collection.
            </summary>
            <param name="reservations">The reservation collection.</param>
            <returns>The load of the reservation collection.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.GetFlag(System.UInt16)">
            <summary>
            Gets the value of a flag.
            </summary>
            <param name="flag">The flag.</param>
            <returns>The value of a flag.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.GetMaxStepCount(System.Int32,System.Int32)">
            <summary>
            Returns the approximated maximum number of steps that this scale can
            display without label overlapping.
            </summary>
            <param name="scaleHeight">The height of the scale.</param>
            <param name="stepsSpacing">The desired spacing between step labels.</param>
            <returns>The maximum number of steps.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.GetUnitPrecision(System.Double,System.Double)">
            <summary>
            Returns the precision corresponding to the specified unit.
            For example, in base 10:
            Ex: 2 -&gt; 0, 10 -&gt; 1, 200 -&gt; 2, 0.1 -&gt; -1, 0.005 -&gt; -3, ....
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.InsertPoint(NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints,System.Int32,System.Double,System.Double)">
            <summary>
            Utility method used to add a single data point to a data points.
            </summary>
            <param name="points">The destination data points.</param>
            <param name="i">The index of the new point to be added.</param>
            <param name="x">The X of the new point to be added.</param>
            <param name="y">The Y of the new point to be added.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.OnCreateControl">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnCreateControl">Control.OnCreateControl</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.OnFontChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">Control.OnFontChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the load chart.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains data for painting.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.OnTimeRectangleChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.OnTimeRectangleChanged(System.EventArgs)">TimeControl.OnTimeRectangleChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.PaintChart(System.Drawing.Graphics)">
            <summary>
            Paints the chart part of the load chart.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> in which to draw.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.PaintHorizontalGrid(System.Drawing.Graphics)">
            <summary>
            Paints the horizontal grid of the load chart.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> in which to draw.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.PaintScale(System.Drawing.Graphics)">
            <summary>
            Paints the scale of the load chart.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> in which to draw.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.SetFlag(System.UInt16,System.Boolean)">
            <summary>
            Sets or unsets the value of a flag.
            </summary>
            <param name="flag">The flag to set the value.</param>
            <param name="value">The value of the flag.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.UpdateInformation(System.Drawing.Graphics)">
            <summary>
            Update all internal field used to draw the <see cref="T:System.Drawing.Graphics" />.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> in which to draw.</param>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart._chartBackColor">
            <summary>
            The background color where bars are displayed.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart._chartForeColor">
            <summary>
            The color of the bars.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart._chartPoints">
            <summary>
            A set of points with (X, Y) coordinates used to display the load chart.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart._chartRows">
            <summary>
            The number of rows in the chart.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart._defaultChartForeColor">
            <summary>
            The default color of the bars.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart._flags">
            <summary>
            Contains flag indicators.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart._ganttModel">
            <summary>
            The GanttModel
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart._gridLineColor">
            <summary>
            The color of the horizontal grid line.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart._gridLineStyle">
            <summary>
            The style of horizontal lines.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart._grids">
            <summary>
            The vertical grids collection.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart._gridsModified">
            <summary>
            Indicates if the collection of grids has been modified
            and should be serialized.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart._isMaterialResource">
            <summary>
            Indicates if the current resource is material.
            It is used to display the scale labels.
            When the resource is material, scale labels are 1, 2, ... x
            otherwise the labels are 100%, 200%, ...
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart._labelsHeight">
            <summary>
            The labels height in the scale depending on the font.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart._maxLineColor">
            <summary>
            The color of the line which represents the maximum number of units
            the resource can handle.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart._maxScaleValue">
            <summary>
            The maximum value of the scale when not using the AutoUpdateScale mode.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart._nbStep">
            <summary>
            The number of step in the scale.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart._res">
            <summary>
            The resource we want to display the load chart.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart._resID">
            <summary>
            The resource ID
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart._scaleBBox">
            <summary>
            The scale bounding box.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart._scaleLabels">
            <summary>
            An array of labels for the scale.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart._scaleMargin">
            <summary>
            The scale margin.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart._stepsSpacing">
            <summary>
            The space between two steps in the scale.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart._stepUnit">
            <summary>
            The step unit for the scale (unit between two steps).
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart._timeIndicators">
            <summary>
            Collection of <strong>DateIndicator</strong>.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart._timeRectangle">
            <summary>
            Caches the area where time information is displayed, this
            is the client rectangle minus the scale area.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.LoadChart._updateScale">
            <summary>
            Specifies if the scale is updating each time the reservations are modified
            or if the maximum of the scale is set to the maximum of the sum
            of reservations.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.AutoScaleUpdate">
            <summary>
            Gets or sets a value indicating if the maximum of the scale is updating
            with the visible reservations.
            </summary>
            <value>
            <see langword="true" /> if the maximum value of the scale is calculated with the
            visible reservations; <see langword="false" /> otherwise.
            </value>
            <remarks>When this property returns <see langword="false" />, the maximum value used for the scale
            is taken from the <see cref="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.MaxScaleValue" /> property.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.BackColor">
            <summary>
            Gets or sets the background color of the chart.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the background.
            The default value is the system color for windows (<see cref="P:System.Drawing.SystemColors.Window">SystemColors.Window</see>).
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.BackgroundColor">
            <summary>
            Gets or sets the background color of the non-chart area of the control.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the non-chart area background.
            The default value inherits from <see cref="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.BackColor" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.ChartColor">
            <summary>
            Gets or sets the color of the bars of the load chart.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the bars.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.ChartPosition">
            <summary>
            Gets or sets the horizontal position of the chart.
            </summary>
            <value>
            An integer value that represents the horizontal position of the chart.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.DateIndicators">
            <summary>
            Gets the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> displayed in the control.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection" /> that defines the date indicators displayed on the control.</value>
            <example>
            <para lang="C#,Visual Basic">
            The following example adds a <see cref="T:NickLee.Views.Gantt.Windows.Forms.CurrentDateIndicator" /> in a <see cref="T:NickLee.Views.Gantt.Windows.Forms.LoadChart" />.
            </para>
            <code lang="C#">
            public void AddDateIndicator(LoadChart chart) {
            CurrentDateIndicator dateIndicator = new CurrentDateIndicator();
            chart.DateIndicators.Add(dateIndicator);
            }
            </code>
            <code lang="Visual Basic">
            Sub AddDateIndicator(ByVal chart As LoadChart)
            Dim dateIndicator As CurrentDateIndicator = New CurrentDateIndicator
            chart.DateIndicators.Add(dateIndicator)
            End Sub
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.DefaultSize">
            <summary>
            Gets the default size of the control.
            </summary>
            <value>The default <see cref="T:System.Drawing.Size" /> of the control.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.ForeColor">
            <summary>
            Gets or sets the foreground color used for scale labels.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the color of scale labels.
            The default value is the value for window text
            (<see cref="P:System.Drawing.SystemColors.WindowText">SystemColors.WindowText</see>).
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.GanttModel">
            <summary>
            Gets or sets the Gantt data model (<see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />)
            containing the data to display in this control.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> that contains the data to display in the chart.</value>
            <remarks>Changing this property may also change the <see cref="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.Resource" /> property.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.GridLineColor">
            <summary>
            Gets or sets the color of the grid line.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the grid lines.
            The default value is the system color for controls (<see cref="P:System.Drawing.SystemColors.Control">SystemColors.Control</see>).
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.GridLineStyle">
            <summary>
            Gets or sets the style of horizontal grid lines.
            </summary>
            <value>
            One of the <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle" /> values.
            The default value is <strong>Solid</strong>.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.IsMaterialResource">
            <summary>
            Gets or sets a value indicating if the resource is a material or not.
            </summary>
            <value>
            <see langword="true" /> if the resource is a material;
            <see langword="false" /> otherwise.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.MaxLineColor">
            <summary>
            Gets or sets the color of the line which represents the maximum number of units
            the resource can handle.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the line.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.MaxScaleValue">
            <summary>
            Gets or sets the maximum value of the scale.
            </summary>
            <value>An integer that represents the maximum value for the scale.</value>
            <remarks>This value is only used if the property <see cref="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.AutoScaleUpdate" /> returns
            <see langword="false" />. If the value of this property is <see langword="null" /> or negative, the maximum value
            used for the scale is the maximum load for the resource, not restricted to the visible period.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.Resource">
            <summary>
            Gets or sets the resource that is displayed.
            </summary>
            <value>
            A <see cref="T:NickLee.Views.Gantt.Data.IResource" /> value that represents
            the resource to be displayed.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.ResourceID">
            <summary>
            Gets or sets the identifier of the resource to display in the control.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the unique identifier of the
            resource to display in the control.</value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.GanttModel" />
            <exception cref="T:System.ArgumentNullException">The property value is <see langword="null" />.</exception>
            <remarks><p>Changing this property may also change the <see cref="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.Resource" /> property.</p>
            <p>To set the model from which the resource should be retrieved, use the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.GanttModel" /> property.</p>
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.ScaleBBox">
            <summary>
            Gets the rectangle where the scale is displayed.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Rectangle" /> structure.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.TimeGrids">
            <summary>
            Gets the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> displayed in the load chart.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection" /> that defines the grids
            displayed on the load chart.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.TimeRectangle">
            <summary>
            Gets the rectangle where time information is displayed.
            </summary>
            <value>A <see cref="T:System.Drawing.Rectangle" /> structure.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints">
            <summary>
            Holds a set of points with (X, Y) coordinates.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.#ctor">
            <summary>
            Creates an empty object, with no stored value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.#ctor(System.Int32)">
            <summary>
            Creates a new object and allocates storage for <strong>count</strong>
            value pairs.
            </summary>
            <param name="count">The number of pairs.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.#ctor(System.Double,System.Double)">
            <summary>
            Creates a new object that holds a single value pair.
            </summary>
            <param name="x">The new x-value.</param>
            <param name="y">The new y-value.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.#ctor(System.Int32,System.Double[],System.Double[])">
            <summary>
            Creates a new object and initializes it with the given values.
            </summary>
            <param name="count">The number of pairs.</param>
            <param name="xValues">The new x-values.</param>
            <param name="yValues">The new y-value array.</param>
            <remarks>The specified arrays are not copied.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.Add(NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints)">
            <summary>
            Appends the contents of the specified object.
            </summary>
            <param name="pts">The array to append to the object.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.Add(System.Double,System.Double)">
            <summary>
            Appends the specified values to this object.
            </summary>
            <param name="x">The new x-value.</param>
            <param name="y">The new y-value.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.Add(System.Double[],System.Double[],System.Int32)">
            <summary>
            Appends the specified values to this object.
            </summary>
            <param name="x">The x-values to add.</param>
            <param name="y">The y-values to add.</param>
            <param name="count">The number of values to add.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.Add(System.Int32,System.Double[],System.Double[],System.Int32)">
            <summary>
            Inserts the specified values at the specified index.
            </summary>
            <param name="insertIdx">The insertion index. This index must
            be less than or equal to the number of values stored in this
            object.</param>
            <param name="x">The x-values to insert.</param>
            <param name="y">The y-values to insert.</param>
            <param name="count">The number of values to insert.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.GetX(System.Int32)">
            <summary>
            Returns the x-value at the specified index.
            </summary>
            <param name="i">The index of the value.</param>
            <returns>The double coordinate of the x-value.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.GetXFloor(System.Int32)">
            <summary>
            Returns the integer coordinate of the x-value at the
            specified index.
            </summary>
            <param name="i">The index of the value.</param>
            <returns>The integer coordinate.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.GetXValues">
            <summary>
            Returns the array holding the x-values.
            The returned array is a direct reference to the internal array used by
            this object, which gives an efficient access to the stored values.
            This method is more intended to provide a <em>read</em> access
            than a <em>write</em> access.
            Indeed, adding values directly into this array does not modify
            the cardinal of the <strong>DoublePoints</strong> object. In order to add
            new data, use the appropriate <strong>add</strong> method.
            <see cref="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.Add(System.Double,System.Double)" />
            <see cref="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.Add(System.Double[],System.Double[],System.Int32)" />
            <see cref="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.Add(System.Int32,System.Double[],System.Double[],System.Int32)" />
            <see cref="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.Add(NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints)" />
            </summary>
            <returns>An array holding the x-values.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.GetY(System.Int32)">
            <summary>
            Returns the y-value at the specified index.
            </summary>
            <param name="i">The index of the value.</param>
            <returns>The double coordinate of the y-value.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.GetYFloor(System.Int32)">
            <summary>
            Returns the integer coordinate of the y-value at
            the specified index.
            </summary>
            <param name="i">The index of the value.</param>
            <returns>The integer coordinate of the y-value</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.GetYValues">
            <summary>
            Returns the array holding the y-values.
            The returned array is a direct reference to the internal array used by
            this object, which gives an efficient access to the stored values.
            This method is more intended to provide a <em>read</em> access
            than a <em>write</em> access.
            Indeed, adding values directly into this array does not modify
            the cardinal of the <strong>DoublePoints</strong> object. In order to add
            new data, use the appropriate <strong>add</strong> method.
            <see cref="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.Add(System.Double,System.Double)" />
            <see cref="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.Add(System.Double[],System.Double[],System.Int32)" />
            <see cref="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.Add(System.Int32,System.Double[],System.Double[],System.Int32)" />
            <see cref="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.Add(NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints)" />
            </summary>
            <returns>An array holding the y-values.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.Remove(System.Int32,System.Int32)">
            <summary>
            Removes the specified points.
            </summary>
            <param name="start">The index of the first point to remove.</param>
            <param name="count">The number of points to remove.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.Reset">
            <summary>
            Resets the cardinal of this object to <strong>0</strong>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.Set(System.Int32,System.Double,System.Double)">
            <summary>
            Modifies the coordinates of the point at the specified index.
            </summary>
            <param name="idx">The index of the considered point.</param>
            <param name="x">The new x-value.</param>
            <param name="y">The new y-value.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.SetSize(System.Int32)">
            <summary>
            Specifies the number of points.
            This method resets the number of points held by the object
            while keeping the same storage space.
            The specified size must be less than or equal to the current storage
            space. The storage space can be known with: <strong>getXValues().Length</strong>.
            </summary>
            <param name="count">The new cardinal of this object.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.SetX(System.Int32,System.Double)">
            <summary>
            Changes the x-value at the specified index.
            </summary>
            <param name="i">The index in the array of the value.</param>
            <param name="x">The new x-value.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.SetY(System.Int32,System.Double)">
            <summary>
            Changes the y-value at the specified index.
            </summary>
            <param name="i">The index in the array of the value.</param>
            <param name="y">The new y-value.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.Size">
            <summary>
            Returns the cardinal of this object.
            </summary>
            <returns>The cardinal of this object.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.ToInt(System.Double)">
            <summary>
            Converts a double coordinate to an integer coordinate.
            </summary>
            <param name="coord">The double to convert.</param>
            <returns>The result of the convertion.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>The representation of this object.</returns>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.Count">
            <summary>
            Gets the number of points held by this object.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.XValues">
            <summary>
            Gets the x-values of the points.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.LoadChart.DoublePoints.YValues">
            <summary>
            Gets the y-values of the points.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.InfoColumn">
            <summary>
            Defines a column of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttTable" /> that displays images representing information
            on the activity or resource of a row.
            </summary>
            <remarks>
            <p>This column can be used as a column of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityTable" /> class or
            the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ResourceTable" /> class. To add a column to a table, use the
            <see cref="P:NickLee.Views.Windows.Forms.TreeTable.Columns" /> property of the <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> class.</p>
            <p>When this column is added to a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ResourceTable" />, the column shows the following images:<br /><br />
            <list type="table">
            <listheader>
            <term>Icon</term>
            <description>Description</description>
            </listheader>
            <item>
            <term><img src="note.gif" /></term>
            <description>When the resource contains some notes.</description>
            </item>
            <item>
            <term><img src="notaffected.gif" /></term>
            <description>When the resource does not have any reservation.</description>
            </item>
            </list>
            </p>
            <p>When this column is added to a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityTable" />, the column shows the following images:<br /><br />
            <list type="table">
            <listheader>
            <term>Icon</term>
            <description>Description</description>
            </listheader>
            <item>
            <term><img src="note.gif" /></term>
            <description>When the activity contains some notes.</description>
            </item>
            <item>
            <term><img src="violated.gif" /></term>
            <description>When a constraint on the activity is violated.</description>
            </item>
            <item>
            <term><img src="notaffected.gif" /></term>
            <description>When no resource is affected to this activity.</description>
            </item>
            </list>
            </p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.InfoColumn.#ctor">
            <summary>
            Creates and initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.InfoColumn" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.InfoColumn.GetActivityImages(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Gets the images that will be displayed for the specified activity.
            </summary>
            <param name="activity">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to compute the images from.</param>
            <returns>An array of images to display for the specified activity.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.InfoColumn.GetImages(System.Int32)">
            <summary>
            Gets the images that will be displayed for the specified row index.
            </summary>
            <param name="rowIndex">The index of the row to compute the images from.</param>
            <returns>An array of images to display for the specified row index.</returns>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.InfoColumn.GetResourceImages(NickLee.Views.Gantt.Data.IResource)" />
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.InfoColumn.GetActivityImages(NickLee.Views.Gantt.Data.IActivity)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.InfoColumn.GetResourceImages(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Gets the images that will be displayed for the specified resource.
            </summary>
            <param name="resource">An <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to compute the images from.</param>
            <returns>An array of images to display for the specified resource.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.InfoColumn.GetToolTipValue(System.Int32,System.Drawing.Point)">
            <summary>
            Returns the text displayed by the tooltip at the specified row index.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="p">The offset of the mouse location in the cell.</param>
            <returns>The text displayed by the tooltip at the specified row index.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.InfoColumn.GetToolTipValue(System.Object,System.Drawing.Image)">
            <summary>
            Retrieves the tooltip associated with the specified image.
            </summary>
            <param name="value">The cell value.</param>
            <param name="image">The image.</param>
            <returns>A <see cref="T:System.String" /> that represents the tooltip associated
            with the specified image.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.InfoColumn.RowsChanged(System.Object[],System.Int32[],System.String)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Windows.Forms.TableColumn.RowsChanged(System.Object[],System.Int32[],System.String)">TableColumn.RowsChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ShouldInvalidateColumn(System.String)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Windows.Forms.TableColumn.ShouldInvalidateColumn(System.String)">TableColumn.ShouldInvalidateColumn</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ShouldShowToolTip(System.Int32,System.Drawing.Point)">
            <summary>
            Indicates whether the tooltip of the cell located at the specified row index will be displayed or not.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="p">The offset of the mouse location in the cell.</param>
            <returns><see langword="true" />.</returns>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ActivityCalendarIcon">
            <summary>
            Gets or sets the image displayed to indicate that an activity has a calendar.
            </summary>
            <value>The image displayed to indicate that an activity has a calendar.</value>
            <remarks>The icon is displayed only for activities of type <see cref="T:NickLee.Views.Gantt.Data.SchedulingActivity" />.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ActivityCalendarIconIndex" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ActivityCalendarIconIndex">
            <summary>
            Gets or sets the image list index value of the image displayed to indicate that an activity has a calendar.
            </summary>
            <value>The image list index value of the image displayed to indicate that an activity has a calendar.</value>
            <remarks>The icon is displayed only for activities of type <see cref="T:NickLee.Views.Gantt.Data.SchedulingActivity" />.</remarks>
            <seealso cref="T:System.Windows.Forms.ImageList" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ActivityCalendarIcon" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ActivityCalendarToolTip">
            <summary>
            Gets or sets the tooltip used when an activity has a calendar.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ActivityConstraintIcon">
            <summary>
            Gets or sets the image displayed to indicate that an activity has a constraint.
            </summary>
            <value>The image displayed to indicate that an activity has a constraint.</value>
            <remarks>The icon is displayed only for activities of type <see cref="T:NickLee.Views.Gantt.Data.SchedulingActivity" />.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ActivityConstraintIconIndex" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ActivityConstraintIconIndex">
            <summary>
            Gets or sets the image list index value of the image displayed to indicate that an activity has a constraint.
            </summary>
            <value>The image list index value of the image displayed to indicate that an activity has a constraint.</value>
            <remarks>The icon is displayed only for activities of type <see cref="T:NickLee.Views.Gantt.Data.SchedulingActivity" />.</remarks>
            <seealso cref="T:System.Windows.Forms.ImageList" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ActivityConstraintIcon" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ActivityConstraintToolTip">
            <summary>
            Gets or sets the tooltip used when an activity has a constraint.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ActivityNotAffectedToolTip">
            <summary>
            Gets or sets the tooltip used when no resource is affected to an activity.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.CompletedIcon">
            <summary>
            Gets or sets the image displayed to indicate that an activity is completed.
            </summary>
            <value>The image displayed to indicate that an activity is completed.</value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.CompletedIconIndex" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.CompletedIconIndex">
            <summary>
            Gets or sets the image list index value of the image displayed to indicate that an activity is completed.
            </summary>
            <value>The image list index value of the image displayed to indicate that an activity is completed.</value>
            <seealso cref="T:System.Windows.Forms.ImageList" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.CompletedIcon" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.CompletedToolTip">
            <summary>
            Gets or sets the tooltip used when an activity is completed.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ConstraintViolatedToolTip">
            <summary>
            Gets or sets the tooltip used when a constraint is violated on an activity.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.InfoIcon">
            <summary>
            Gets or sets the image displayed to indicate that an info has been set on an activity or resource.
            </summary>
            <value>The image displayed to indicate that an info has been set on an activity or resource.</value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.InfoIconIndex" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.InfoIconIndex">
            <summary>
            Gets or sets the image list index value of the image displayed to indicate that an info has been set on an activity or resource.
            </summary>
            <value>The image list index value of the image displayed to indicate that an info has been set on an activity or resource.</value>
            <seealso cref="T:System.Windows.Forms.ImageList" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.InfoIcon" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.NotAffectedIcon">
            <summary>
            Gets or sets the image displayed to indicate that a resource has no reservation.
            </summary>
            <value>An <see cref="T:System.Drawing.Image" /> object used to indicate that a resource has no reservation.</value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.NotAffectedIconIndex" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.NotAffectedIconIndex">
            <summary>
            Gets or sets the image list index value of the image
            displayed to indicate that a resource has no reservation.
            </summary>
            <value>The image list index value of the image
            displayed to indicate that a resource has no reservation.
            </value>
            <seealso cref="T:System.Windows.Forms.ImageList" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.NotAffectedIcon" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.NoteToolTip">
            <summary>
            Gets or sets the tooltip used to display a note on activity or resource.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ResourceNotAffectedToolTip">
            <summary>
            Gets or sets the tooltip used when a resource is not affected to any activity.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ShowActivityCalendarIcon">
            <summary>
            Gets or sets a value that indicates if an image
            showing that an activity has a calendar should be displayed.
            </summary>
            <value><see langword="true" /> if an image that indicates if an activity has a calendar
            should be displayed; <see langword="false" /> otherwise. The default value is <see langword="true" />.</value>
            <remarks>The icon is displayed only for activities of type <see cref="T:NickLee.Views.Gantt.Data.SchedulingActivity" />.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ActivityCalendarIcon" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ShowActivityConstraintIcon">
            <summary>
            Gets or sets a value that indicates if an image
            showing that an activity has a constraint should be displayed.
            </summary>
            <value><see langword="true" /> if an image that indicates if an activity has a constraint.
            should be displayed; <see langword="false" /> otherwise. The default value is <see langword="true" />.</value>
            <remarks>The icon is displayed only for activities of type <see cref="T:NickLee.Views.Gantt.Data.SchedulingActivity" />.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ActivityConstraintIcon" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ShowCompletedIcon">
            <summary>
            Gets or sets a value that indicates if an image
            showing that an activity is completed should be displayed.
            </summary>
            <value><see langword="true" /> if an image that indicates if an activity is completed
            should be displayed; <see langword="false" /> otherwise. The default value is <see langword="true" />.</value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.CompletedIcon" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ShowInfoIcon">
            <summary>
            Gets or sets a value that indicates if an image
            showing that a resource or a reservation has information should be displayed.
            </summary>
            <value><see langword="true" /> if an image that indicates if a resource or a reservation has information
            should be displayed; <see langword="false" /> otherwise. The default value is <see langword="true" />.</value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.InfoIcon" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ShowNotAffectedIcon">
            <summary>
            Gets or sets a value that indicates if an image
            showing non affected resources should be displayed.
            </summary>
            <value><see langword="true" /> if an image showing non affected resources
            should be displayed; <see langword="false" /> otherwise. The default value is <see langword="true" />.</value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.NotAffectedIcon" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ShowViolatedConstraintIcon">
            <summary>
            Gets or sets a value that indicates if an image
            showing violated constraints should be displayed.
            </summary>
            <value><see langword="true" /> if an image showing violated constraints
            should be displayed; <see langword="false" /> otherwise. The default value is <see langword="true" />.</value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ViolatedConstraintIcon" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ViolatedConstraintIcon">
            <summary>
            Gets or sets the image displayed to indicate that a constraint is being violated on the activity.
            </summary>
            <value>The image displayed to indicate that a constraint is being violated on the activity.</value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ViolatedConstraintIconIndex" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ViolatedConstraintIconIndex">
            <summary>
            Gets or sets the image list index value of the image displayed to indicate that a constraint is being violated on the activity.
            </summary>
            <value>The image list index value of the image displayed to indicate that a constraint is being violated on the activity.</value>
            <seealso cref="T:System.Windows.Forms.ImageList" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.InfoColumn.ViolatedConstraintIcon" />
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.GanttTable">
            <summary>
            A specialization of the <see cref="T:NickLee.Views.Windows.Forms.TreeTable" /> connected to a Gantt model.
            </summary>
            <remarks>The <strong>GanttTable</strong> class is the <see langword="abstract" />
            base class for the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityTable" />, <see cref="T:NickLee.Views.Gantt.Windows.Forms.ResourceTable" /> and
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationTable" /> classes.
            The <strong>GanttTable</strong> base class defines the properties that are
            common to the Gantt tables. In particular, it defines the connection to
            a Gantt data model through the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttTable.GanttModel" /> property.
            </remarks>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityTable" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ResourceTable" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttTable" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.#ctor(NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttTable" /> class with
            the specified Gantt model.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.CopyToClipboard">
            <summary>
            Copies the selected rows into the clipboard.
            </summary>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.GanttClipboard" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.CreateTreeModel(NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Creates an <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" /> that wraps the Gantt data model.
            </summary>
            <param name="ganttModel">The Gantt data model to wrap.</param>
            <returns>A new <see cref="T:NickLee.Views.Windows.Forms.ITreeModel" /> instance.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.CutToClipboard">
            <summary>
            Cuts the selected rows and places them into the clipboard.
            </summary>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.GanttClipboard" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.Dispose(System.Boolean)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Windows.Forms.TreeTable.Dispose(System.Boolean)">TreeTable.Dispose</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.IndentNode(System.Object)">
            <summary>
            Indents the specified node.
            </summary>
            <param name="node">The node to indent.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.MoveDown(System.Object)">
            <summary>
            Moves down the specified node.
            </summary>
            <param name="node">The node to move down.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.MoveNode(System.Object,System.Object,System.Int32)">
            <summary>
            Moves the specified node to a new location.
            </summary>
            <param name="node">The node to move.</param>
            <param name="newParent">The new parent for the node being moved.</param>
            <param name="index">The index in the new parent.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.MoveUp(System.Object)">
            <summary>
            Moves up the specified node.
            </summary>
            <param name="node">The node to move up.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.OnGanttModelChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.GanttTable.GanttModelChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
            <remarks>Called when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttTable.GanttModel" /> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.OnGanttModelChanging(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.GanttTable.GanttModelChanging" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
            <remarks>Called before the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttTable.GanttModel" /> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.OnRowControllerChanged(NickLee.Views.Windows.Forms.RowControllerChangeEventArgs)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Windows.Forms.TreeTable.OnRowControllerChanged(NickLee.Views.Windows.Forms.RowControllerChangeEventArgs)">TreeTable.OnRowControllerChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.OutdentNode(System.Object)">
            <summary>
            Outdents the specified node.
            </summary>
            <param name="node">The node to outdent.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.PasteFromClipboard">
            <summary>
            Pastes the clipboard contents at the current selected row.
            </summary>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.GanttClipboard" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.RemoveSelectedRows">
            <summary>
            Deletes the selected rows.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.ResetView">
            <summary>
            Resets the table view by removing the filter.
            </summary>
            <remarks>
            After calling this method, the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttTable.NeedsMapping" /> property returns
            <see langword="false" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.SetRowFilter(NickLee.Views.Windows.Forms.IRowFilter)">
            <summary>
            Sets the row filter used by this table.
            </summary>
            <param name="filter">An object implementing the <see cref="T:NickLee.Views.Windows.Forms.IRowFilter" /> interface.</param>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.GanttTable.RowFilter" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.SetRowGroup(NickLee.Views.Windows.Forms.IRowGroup)">
            <summary>
            Sets the row group used by this table.
            </summary>
            <param name="group">An object implementing the <see cref="T:NickLee.Views.Windows.Forms.IRowGroup" /> interface.</param>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.GanttTable.RowFilter" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.SortRows(System.Collections.IComparer)">
            <summary>
            Sorts the table rows using an <see cref="T:System.Collections.IComparer" />.
            </summary>
            <param name="comparer">The <see cref="T:System.Collections.IComparer" /> implementation to use when
            comparing elements. </param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.SortRows(System.String,System.Boolean)">
            <summary>
            Sorts the table rows using a mapping name.
            </summary>
            <param name="mappingName">The name of the property that will be used to sort
            the nodes.</param>
            <param name="ascending"><see langword="true" /> if the sort is ascending; <see langword="false" />
            otherwise.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.SortRows(System.Object,System.Collections.IComparer,System.Int32)">
            <summary>
            Sorts the children of the specified node using an <see cref="T:System.Collections.IComparer" />.
            </summary>
            <param name="node">The parent of the nodes to sort.</param>
            <param name="comparer">The <see cref="T:System.Collections.IComparer" /> implementation to use when
            comparing elements. </param>
            <param name="depth">A depth of <strong>0</strong> will only sort the children of the specified node.
            A negative depth will sort the specified node and its children recursively. Any other value
            specifies the depth of the sort algorithm.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.SortRows(System.Object,System.String,System.Boolean,System.Int32)">
            <summary>
            Sorts the children of the specified node using a mapping name.
            </summary>
            <param name="node">The parent of the nodes to sort.</param>
            <param name="mappingName">The name of the property that will be used to sort
            the nodes.</param>
            <param name="ascending"><see langword="true" /> if the sort is ascending; <see langword="false" />
            otherwise.</param>
            <param name="depth">A depth of <strong>0</strong> will only sort the children of the specified node.
            A negative depth will sort the specified node and its children recursively. Any other value
            specifies the depth of the sort algorithm.</param>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttTable.GanttModelChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttTable.GanttModel" /> property has changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttTable.GanttModelChanging">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttTable.GanttModel" /> property is changing on the control.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttTable.GanttModel">
            <summary>
            Gets or sets the Gantt data model (<see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />)
            containing the data to display in this table.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> that contains the data to display in the table.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttTable.NeedsMapping">
            <summary>
            Gets a value indicating whether the table is currently filtering or sorting
            the Gantt model.
            </summary>
            <value><see langword="true" /> if the table has a row filter, or sorting has been made
            on the table.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttTable.RowFilter">
            <summary>
            Gets or sets the row filter expression used by this table.
            </summary>
            <value>A <see cref="T:System.String" /> that represents a Boolean expression based on a Gantt
            entity to check if the table should include that specific entity. The default value
            is "" meaning that the table displays all the Gantt entities of the model.
            </value>
            <exception cref="T:System.ArgumentNullException">The property value is <see langword="null" />.
            </exception>
            <remarks>
            <p>For details about the syntax of the expression used by this property, see the
            <strong>Expression Language Reference</strong>.</p>
            <p>Setting the property value to the empty string will remove any filter, group, and sort order
            previously set.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to set a row filter
            that filters activities using different expressions.
            </para>
            <code lang="C#">
            ActivityTable table = new ActivityTable();

            // To show activities whose start time is before the 1/1/2001
            table.RowFilter = "StartTime &lt; #1/1/2001#";

            // To show milestone activities whose start time is before the 1/1/2001
            table.RowFilter = "Milestone &amp;&amp; StartTime &lt; #1/1/2001#";

            // To show activities whose ID starts with "A"
            table.RowFilter = "MID(ID, 0, 1) == 'A'";

            // To show activities whose completion is greater than 0.5
            table.RowFilter = "WorkComplete &gt; 0.5";
            </code>
            <code lang="Visual Basic">
            Dim table As New ActivityTable

            ' To show activities whose start time is before the 1/1/2001
            table.RowFilter = "StartTime &lt; #1/1/2001#"

            ' To show milestone activities whose start time is before the 1/1/2001
            table.RowFilter = "Milestone &amp;&amp; StartTime &lt; #1/1/2001#"

            ' To show activities whose ID starts with "A"
            table.RowFilter = "MID(ID, 0, 1) == 'A'"

            ' To show activities whose completion is greater than 0.5
            table.RowFilter = "WorkComplete &gt; 0.5"
            </code>
            </example>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.SetRowFilter(NickLee.Views.Windows.Forms.IRowFilter)" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttTable.TreeModel">
            <summary>
            Redefines <see cref="P:NickLee.Views.Windows.Forms.TreeTable.TreeModel">TreeTable.TreeModel</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.GanttClipboard">
            <summary>
            A class that regroups methods to store and retrieve scheduling information to and from the clipboard.
            </summary>
            <remarks>
            The <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttClipboard" /> class allows you to store and retrieve scheduling
            information to and from the Window clipboard. The class uses a <see cref="T:NickLee.Views.Gantt.Data.GanttModelXmlSerializer" />
            to transform scheduling data into XML fragments that will be stored as strings in the Window
            clipboard.
            </remarks>
            <example>
            <para lang="C#">The following code sample shows how to copy the resources of a Gantt data model into another Gantt data
            model using the clipboard.
            </para>
            <code lang="C#">
            private void CopyResources(IGanttModel source, IGanttModel destination) {
            // Copy the resources of the source model...
            IResource[] resources = new IResource[source.Resources.Count];
            source.Resources.CopyTo(resources, 0);
            GanttClipboard.CopyToClipboard(resources);

            // ...into the destination model
            resources = GanttClipboard.GetResources(destination);
            destination.Resources.AddRange(resources);
            }
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttClipboard.#ctor">
            <summary>
            Private constructor.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttClipboard.CopyToClipboard(NickLee.Views.Gantt.Data.IActivity[])">
            <summary>
            Copies the specified activities into the clipboard.
            </summary>
            <param name="activities">An array of <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to copy to the
            clipboard.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttClipboard.CopyToClipboard(NickLee.Views.Gantt.Data.IResource[])">
            <summary>
            Copies the specified resources into the clipboard.
            </summary>
            <param name="resources">An array of <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to copy to the
            clipboard.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttClipboard.CopyToClipboard(NickLee.Views.Gantt.Windows.Forms.IActivityRowController)">
            <summary>
            Copies the selected activities of the specified <see cref="T:NickLee.Views.Gantt.Windows.Forms.IActivityRowController" /> into the clipboard.
            </summary>
            <param name="controller">The row controller from which selected activities will be retrieved.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttClipboard.CopyToClipboard(NickLee.Views.Gantt.Windows.Forms.IResourceRowController)">
            <summary>
            Copies the selected resources of the specified <see cref="T:NickLee.Views.Gantt.Windows.Forms.IResourceRowController" /> into the clipboard.
            </summary>
            <param name="controller">The row controller from which selected resources will be retrieved.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttClipboard.CutToClipboard(NickLee.Views.Gantt.Data.IActivity[])">
            <summary>
            Cuts the specified activities into the clipboard.
            </summary>
            <param name="activities">An array of <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to cut to the
            clipboard.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttClipboard.CutToClipboard(NickLee.Views.Gantt.Data.IResource[])">
            <summary>
            Cuts the specified resources into the clipboard.
            </summary>
            <param name="resources">An array of <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to cut to the
            clipboard.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttClipboard.GetActivities(NickLee.Views.Gantt.Data.IGanttModel,NickLee.Views.Gantt.Data.IConstraint[]@)">
            <summary>
            Reads activities and constraints between activities from the clipboard.
            </summary>
            <param name="model">The Gantt model for which activities will be created.</param>
            <param name="constraints">An array of <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> that contains the
            constraints between the activities located in the clipboard.</param>
            <returns>An array of <see cref="T:NickLee.Views.Gantt.Data.IActivity" />.</returns>
            <remarks>If the clipboard does not contain text data in the SDXL format, <see langword="null" /> is returned.
            This method does not add the returned objects to <paramref name="model" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttClipboard.GetConstraints(NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Reads constraints from the clipboard.
            </summary>
            <param name="model">The Gantt model for which constraints will be created.</param>
            <returns>An array of <see cref="T:NickLee.Views.Gantt.Data.IConstraint" />.</returns>
            <remarks>This method does not add the constraints to <paramref name="model" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttClipboard.GetReservations(NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Reads reservations from the clipboard.
            </summary>
            <param name="model">The Gantt model for which reservations will be created.</param>
            <returns>An array of <see cref="T:NickLee.Views.Gantt.Data.IReservation" />.</returns>
            <remarks>This method does not add the reservations to <paramref name="model" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttClipboard.GetResources(NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Reads resources from the clipboard.
            </summary>
            <param name="model">The Gantt model for which resources will be created.</param>
            <returns>An array of <see cref="T:NickLee.Views.Gantt.Data.IResource" />.</returns>
            <remarks>If the clipboard does not contain text data in the SDXL format, <see langword="null" /> is returned.
            This method does not add the resources to <paramref name="model" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttClipboard.IsEmpty">
            <summary>
            Checks if the clipboard is empty.
            </summary>
            <returns>
            <see langword="true" /> if the clipboard does not contain
            any data; <see langword="false" /> otherwise.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttClipboard.PasteActivitiesFromClipboard(NickLee.Views.Gantt.Windows.Forms.ActivityTable)">
            <summary>
            Pastes the activities located in the clipboard into the specified row controller.
            </summary>
            <param name="controller">The row controller in which activities will be pasted.</param>
            <remarks>The activities will be inserted before the current row of
            <paramref name="controller" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttClipboard.PasteResourcesFromClipboard(NickLee.Views.Gantt.Windows.Forms.ResourceTable)">
            <summary>
            Pastes the resources located in the clipboard into the specified row controller.
            </summary>
            <param name="controller">The row controller in which resources will be pasted.</param>
            <remarks>The resources will be inserted before the current row of
            <paramref name="controller" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttClipboard.SetSerializer(NickLee.Views.Gantt.Data.GanttModelXmlSerializer)">
            <summary>
            Sets the serializer used by the clipboard to serialize/deserialize scheduling
            information.
            </summary>
            <param name="serializer">The new serializer for the clipboard.</param>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttClipboard._serializer">
            <summary>
            The XML serializer for XML translations.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.GanttClipboard.StringWriterUTF8">
            <summary>
            UTF8 string writer.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.Design.DateIndicatorConverter">
            <summary>
            Provides a type converter to convert <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> objects
            to and from other representations.
            </summary>
            <remarks>This converter can only convert a <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> object
            to an <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.DateIndicatorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)">TypeConverter.CanConvertTo</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.DateIndicatorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)">TypeConverter.ConvertTo</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.Design.ConstraintLinkStyleEditor">
            <summary>
            Provides a user interface to edit a values
            of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ConstraintLinkStyle" /> enumeration.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.ConstraintLinkStyleEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the value of the specified object using the editor style indicated by <see cref="M:NickLee.Views.Gantt.Windows.Forms.Design.ConstraintLinkStyleEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
            <param name="provider">An <see cref="T:System.IServiceProvider" /> that this editor can use to obtain services.
            </param>
            <param name="value">The object to edit.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.ConstraintLinkStyleEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:NickLee.Views.Gantt.Windows.Forms.Design.ConstraintLinkStyleEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used
            to gain additional context information.
            </param>
            <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that indicates the style
            of editor used by <see cref="M:NickLee.Views.Gantt.Windows.Forms.Design.ConstraintLinkStyleEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.
            </returns>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.BeforeMoveReservationEventArgs">
            <summary>
            Provides data for the  <see cref="E:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.BeforeMoveReservation" /> event of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" />.
            </summary>
            <remarks>The <see cref="E:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.BeforeMoveReservation" /> event occur before the
            user moves a reservation to another resource in the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" />.
            A <strong>BeforeMoveReservationEventArgs</strong> provides the <see cref="P:NickLee.Views.Gantt.Windows.Forms.BeforeMoveReservationEventArgs.Cancel" /> property
            to indicate whether the move of the reservation should be canceled.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.BeforeMoveReservationEventArgs.#ctor(NickLee.Views.Gantt.Data.IReservation,NickLee.Views.Gantt.Data.IResource,System.Boolean)">
            <summary>
            Creates the event arguments.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.BeforeMoveReservationEventArgs._cancel">
            <summary>
            Indicates if the creation of the constraint is canceled.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.BeforeMoveReservationEventArgs._copy">
            <summary>
            Indicates if the operation is a copy or a move.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.BeforeMoveReservationEventArgs._reservation">
            <summary>
            The reservation being moved.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.BeforeMoveReservationEventArgs._toResource">
            <summary>
            The resource destination of the reservation being moved.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.BeforeMoveReservationEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the move of the reservation
            should be canceled.
            </summary>
            <value>
            <see langword="true" /> if the move of the reservation should
            be canceled; <see langword="false" /> otherwise.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.BeforeMoveReservationEventArgs.CopyReservation">
            <summary>
            Gets a value indicating whether the reservation is being moved or copied.
            </summary>
            <value><see langword="true" /> if the reservation is being copied;
            <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.BeforeMoveReservationEventArgs.Reservation">
            <summary>
            Gets the reservation being moved.
            </summary>
            <value>The instance of <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> being moved.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.BeforeMoveReservationEventArgs.ToResource">
            <summary>
            Gets the destination resource of the reservation.
            </summary>
            <value>An instance of <see cref="T:NickLee.Views.Gantt.Data.IResource" />.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.BarSymbol">
            <summary>
            Defines a symbol that can be displayed at the beginning or the end of an activity bar.
            </summary>
            <remarks>You can change the symbol displayed at the beginning or the end of an
            activity bar using the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.StartSymbol" /> or
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.EndSymbol" /> properties of the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> class.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">
            The following example changes the end symbol of an activity bar style into
            a red star.
            </para>
            <code lang="C#">
            ActivityBarStyle style = new ActivityBarStyle();
            style.EndSymbol.Shape = BarSymbolShape.Star;
            style.EndSymbol.Color = Color.Red;
            </code>
            <code lang="Visual Basic">
            Dim style As ActivityBarStyle = New ActivityBarStyle
            style.EndSymbol.Shape = BarSymbolShape.Star
            style.EndSymbol.Color = Color.Red
            </code>
            </example>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.BarSymbolShape" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.BarSymbol.BarSymbolChanged">
            <summary>
            Invoked when a property of the object changes.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.BarSymbol.Clone">
            <summary>
            Copies the <see cref="T:NickLee.Views.Gantt.Windows.Forms.BarSymbol" />.
            </summary>
            <returns>A new <see cref="T:NickLee.Views.Gantt.Windows.Forms.BarSymbol" /> object.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.BarSymbol.GetBounds(System.Drawing.RectangleF)">
            <summary>
            Computes the bounding rectangle of the symbol.
            </summary>
            <param name="rect">The rectangle where the symbol will be drawn.</param>
            <returns>A <see cref="T:System.Drawing.RectangleF" /> that represents the bounding rectangle of the symbol.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.BarSymbol.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Brush)">
            <summary>
            Paints the symbol.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics" /> object to paint to.</param>
            <param name="rect">A <see cref="T:System.Drawing.Rectangle" /> that defines the area where the symbol must be painted.</param>
            <param name="back">A <see cref="T:System.Drawing.Brush" /> that represents the background color of the row of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />
            where the activity is painted.</param>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.BarSymbol._borderColor">
            <summary>
            The border color.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.BarSymbol._color">
            <summary>
            The color.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.BarSymbol._style">
            <summary>
            The style to which it belongs.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.BarSymbol._type">
            <summary>
            The shape.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.BarSymbol.BorderColor">
            <summary>
            Gets or sets the color of the symbol border.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the color of the border of the symbol. The default
            value is <see cref="P:System.Drawing.Color.Black">Color.Black</see>.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.BarSymbol.Color">
            <summary>
            Gets or sets the color of the symbol.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the color of the symbol. The default
            value is <see cref="P:System.Drawing.Color.Black">Color.Black</see>.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.BarSymbol.Shape">
            <summary>
            Gets or sets the shape of the symbol.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.BarSymbolShape" /> values. The
            default value is <strong>None</strong>.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.BarSymbol.Style">
            <summary>
            Sets the activity bar style that contains this object.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Web.UI.ScrollScheduleSheet">
            <summary>
            Defines a control that contains a <strong>TimeScale</strong> and an <strong>ScheduleSheet</strong>.
            </summary>
            <remarks>
            <p>This control displays a <see cref="T:NickLee.Views.Gantt.Web.UI.TimeScale" /> control and
            a <see cref="T:NickLee.Views.Gantt.Web.UI.ScheduleSheet" /> control.</p>
            <p><img src="scrollschedulesheet.png" /></p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScrollScheduleSheet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Web.UI.ScrollScheduleSheet" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScrollScheduleSheet.Dispose">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.Dispose">Control.Dispose</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScrollScheduleSheet.RenderImageMapAreas(System.Web.UI.HtmlTextWriter)">
            <summary>
            Is called to render image map areas.
            </summary>
            <param name="writer">The writer in which to put the image map areas.</param>
            <remarks>The implementation of this method create image map areas to display
            tooltips for visible reservations.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.ScrollGanttSheet.ActivityToolTip" />
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.ScrollScheduleSheet.LayoutReservations">
            <summary>
            Event fired to allow the customization of the layout of reservations
            in a row.
            </summary>
            <remarks>This event is fired after the row has been layouted according to
            the <see cref="P:NickLee.Views.Gantt.Web.UI.ScrollScheduleSheet.ActivityLayoutStyle" /> property. If you plan to completely
            redefine a new layout, set the <see cref="P:NickLee.Views.Gantt.Web.UI.ScrollScheduleSheet.ActivityLayoutStyle" /> property
            to <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle">Simple</see>
            to improve performances.
            </remarks>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.ScrollScheduleSheet.QueryReservationZOrder">
            <summary>
            Event fired to allow the specification of the z-order of a reservation
            in a row.
            </summary>
            <remarks>The layout of activities in a row is controlled by the <see cref="P:NickLee.Views.Gantt.Web.UI.ScrollScheduleSheet.ActivityLayoutStyle" />
            property. Activities will be sorted by their Start Time so that
            an activity starting earlier another activity will be drawn before. You
            can modify this behavior by specifying a z-order for each reservation.
            </remarks>
            <example>
            <para lang="C#"> The following example shows how to make the reservation
            of type Maintenance drawn below all other reservations by setting a smaller
            z-order.
            </para>
            <code lang="C#">
            myScheduleSheet.QueryReservationZOrder += new QueryReservationZOrderEventHandler(GetZOrder);
            private void GetZOrder(object source, QueryReservationZOrderEventArgs e)
            {
            if (e.Reservation.Activity is Maintenance)
            e.ZOrder = 0;
            else
            e.ZOrder = 1;
            }
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.ScrollScheduleSheet.RowLayoutStyle">
            <summary>
            Event that is fired to query the layout style that will be used to layout
            the reservation of a specified resource.
            </summary>
            <remarks>Handling this event allows you to specify an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle" /> per
            row of the <see cref="T:NickLee.Views.Gantt.Web.UI.ScheduleSheet" />.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScrollScheduleSheet.ActivityLayoutStyle">
            <summary>
            Gets or sets the style used to layout activities in a row of the Gantt sheet.
            </summary>
            <remarks>This property will change the style of layout for all
            the rows of the schedule sheet. You can also specify a layout style per
            row by handling the <see cref="E:NickLee.Views.Gantt.Web.UI.ScrollScheduleSheet.RowLayoutStyle" /> event.</remarks>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle" /> values. The
            default value is <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle">Pretty</see>.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Web.UI.ReservationSheet">
            <summary>
            A chart that displays reservations over the time.
            </summary>
            <remarks>
            <p>The <see cref="T:NickLee.Views.Gantt.Web.UI.ReservationSheet" /> is made up of rows, each containing one single reservation.
            The control displays a graphical representation of the duration of reservations over time.</p>
            <p><img src="reservationsheet.png" /></p>
            <p>In order to display reservations, the <see cref="T:NickLee.Views.Gantt.Web.UI.ReservationSheet" /> must be connected
            to a class that implements the <see cref="T:NickLee.Views.Gantt.Windows.Forms.IReservationRowController" /> interface such
            as the <see cref="T:NickLee.Views.Gantt.Web.UI.ReservationTable" /> or <see cref="T:NickLee.Views.Gantt.Web.UI.ReservationChart" /> classes. To connect the
            <see cref="T:NickLee.Views.Gantt.Web.UI.ReservationSheet" /> use the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.RowController" /> property.</p>
            <p>The <see cref="T:NickLee.Views.Gantt.Web.UI.ReservationSheet" /> inherits from the <see cref="T:NickLee.Views.Gantt.Web.UI.TimeControl" /> class that is
            the base class for controls displaying information over the time. In particular
            <see cref="T:NickLee.Views.Gantt.Web.UI.TimeControl" /> defines the <see cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.FirstVisibleTime" /> property
            that is the first visible time displayed by the control and the
            <see cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.VisibleDuration" /> property that defines the period of time displayed by
            the control.</p>
            <p>In order to synchronize the time of several controls that are displaying time information,
            the <see cref="T:NickLee.Views.Gantt.Web.UI.TimeControl" /> control also defines the <see cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.TimeLine" />
            property. For example, to synchronize a <see cref="T:NickLee.Views.Gantt.Web.UI.GanttSheet" /> with a
            <see cref="T:NickLee.Views.Gantt.Web.UI.TimeScale" /> object, you will set the <see cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.TimeLine" /> property
            of the <see cref="T:NickLee.Views.Gantt.Web.UI.GanttSheet" /> to the <see cref="T:NickLee.Views.Gantt.Web.UI.TimeScale" /> object.</p>
            <p>The base class <see cref="T:NickLee.Views.Gantt.Web.UI.GanttSheet" /> defines many appearence properties such as the
            back color, the color of selected rows, the font of the sheet, the vertical and horizontal
            grid lines.</p>
            <p>The appearance of a reservation on a line depends on the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.ActivityBarStyles" />
            property that defines the styles of bar to be used for reservations depending on the type
            and current values of a reservation. For more information of this topic see <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />.</p>
            </remarks>
            <seealso cref="T:NickLee.Views.Gantt.Web.UI.ScrollReservationSheet" />
            <seealso cref="T:NickLee.Views.Gantt.Web.UI.ReservationChart" />
            <seealso cref="T:NickLee.Views.Gantt.Web.UI.ActivitySheet" />
            <seealso cref="T:NickLee.Views.Gantt.Web.UI.ScheduleSheet" />
        </member>
        <member name="T:NickLee.Views.Gantt.Web.UI.GanttSheet">
            <summary>
            Defines an <see langword="abstract" /> base class for <see cref="T:NickLee.Views.Gantt.Web.UI.ActivitySheet" />,
            <see cref="T:NickLee.Views.Gantt.Web.UI.ScheduleSheet" />, and <see cref="T:NickLee.Views.Gantt.Web.UI.ReservationSheet" /> classes.
            </summary>
            <remarks>
            <p>The <see cref="T:NickLee.Views.Gantt.Web.UI.GanttSheet" /> class regroups functionalities that are common to the
            <see cref="T:NickLee.Views.Gantt.Web.UI.ActivitySheet" />, <see cref="T:NickLee.Views.Gantt.Web.UI.ScheduleSheet" /> and <see cref="T:NickLee.Views.Gantt.Web.UI.ReservationSheet" /> classes.
            The control is made up of rows, the contents of each row is defined by the subclasses.
            The <strong>ActivitySheet</strong> subclass will display a representation of an activity over
            time in each row and the <strong>ScheduleSheet</strong> class will display in each row a
            representation over time of the activities assigned to a resource.</p>
            <p>The information displayed in rows depends on time. The <strong>GanttSheet</strong> control
            inherits from the <see cref="T:NickLee.Views.Gantt.Web.UI.TimeControl" /> class that is the base class for the Gantt
            controls that are displaying information over time. In particular <strong>TimeControl</strong>
            defines the <see cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.FirstVisibleTime" /> property that is the first visible time
            displayed by the control and the <see cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.VisibleDuration" /> property that
            defines the period of time displayed by the control.</p>
            <p>In order to synchronize the time of several controls that are displaying time information,
            the <strong>TimeControl</strong> control also defines the <see cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.TimeLine" />
            property. For example, to synchronize a <strong>GanttSheet</strong> with a
            <see cref="T:NickLee.Views.Gantt.Web.UI.TimeScale" /> object, you will set the <see cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.TimeLine" /> property
            of the <strong>GanttSheet</strong> to the <strong>TimeScale</strong> object.</p>
            <p>The control contains a horizontal scrollbar that allows you to scroll over the time. This
            scrollbar is an instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar" />
            class. The minimum and maximum scrolling time is defined by the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.TimeBounds" />
            property, by default the minimum and maximum scrolling time are computed by the bounds of the
            activities displayed in the <strong>GanttSheet</strong>.</p>
            <p>The class defines many appearance properties such as the color of rows, the color and
            appearance of horizontal grid lines between rows, the color of selected rows and the font.
            It also defines the vertical time grids through the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.TimeGrids" /> property that
            contains a collection of <strong>TimeGrid</strong> objects. The control can also display
            vertical lines displaying particular dates such as the current date through the
            <see cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.DateIndicators" /> property.</p>
            <p>The control also defines the way activities will be rendered through the
            <see cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.ActivityBarStyles" /> property that defines the styles of bar to be used for
            activities depending on the type and current values of an activity. For more information of
            this topic see <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />.</p>
            </remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Web.UI.TimeControl">
            <summary>
            Defines the <see langword="abstract" /> base class for controls that
            are displaying information on a time period.
            </summary>
            <remarks>
            <p>The <strong>TimeControl</strong> class is the base class
            for controls that are displaying information on a time period
            such as the <see cref="T:NickLee.Views.Gantt.Web.UI.TimeScale" />, <see cref="T:NickLee.Views.Gantt.Web.UI.GanttSheet" /> or
            <see cref="T:NickLee.Views.Gantt.Web.UI.LoadChart" />.</p>
            <p>The displayed time period is defined by the
            properties <see cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.FirstVisibleTime" /> and <see cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.VisibleDuration" />.
            Changing the <see cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.FirstVisibleTime" /> property will scroll the control
            in time. Changing the <see cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.VisibleDuration" /> property will
            zoom in or out the time period.</p>
            <p>Time based data is displayed in the <see cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.TimeRectangle" /> area.
            This area can be customized by setting margins using the <see cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.TimeMargins" />
            property.</p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.TimeControl.#ctor(NickLee.Views.Gantt.Windows.Forms.TimeControl)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Web.UI.TimeControl" /> class.
            </summary>
            <param name="timeControl">The control to wrap.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.TimeControl.Dispose">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.Dispose">Control.Dispose</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.TimeControl.EnsureVisible(System.DateTime)">
            <summary>
            Scrolls the time line so that the specified date is visible.
            </summary>
            <param name="time">A <see cref="T:System.DateTime" /> structure.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.TimeControl.GenerateImageURL">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Web.UI.ImageControl.GenerateImageURL">ImageControl.GenerateImageURL</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.TimeControl.GetIntervalBounds(NickLee.Views.Gantt.DateTimeInterval)">
            <summary>
            Retrieves the bounds of the specified time interval.
            </summary>
            <param name="interval">The time interval.</param>
            <returns>A new <see cref="T:System.Drawing.RectangleF" /> structure.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.TimeControl.GetIntervalBounds(System.DateTime,System.DateTime)">
            <summary>
            Retrieves the bounds of the specified time interval.
            </summary>
            <param name="startTime">The start time of the interval.</param>
            <param name="endTime">The end time of the interval.</param>
            <returns>A new <see cref="T:System.Drawing.RectangleF" /> structure.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.TimeControl.GetLocation(System.DateTime)">
            <summary>
            Gets the pixel location of the specified <see cref="T:System.DateTime" /> structure.
            </summary>
            <param name="time">A <see cref="T:System.DateTime" /> structure.</param>
            <returns>A <see cref="T:System.Double" /> that corresponds to the pixel location of
            <paramref name="time" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.TimeControl.GetSizeOf(NickLee.Views.Gantt.DateTimeInterval)">
            <summary>
            Retrieves the width of the specified time interval.
            </summary>
            <param name="interval">The time interval.</param>
            <returns>A <see cref="T:System.Single" /> that represents the width of the time interval
            specified by <paramref name="interval" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.TimeControl.GetSizeOf(System.DateTime,System.DateTime)">
            <summary>
            Retrieves the width of the specified time interval.
            </summary>
            <param name="startTime">The start time of the interval.</param>
            <param name="endTime">The end time of the interval.</param>
            <returns>A <see cref="T:System.Single" /> that represents the width of the time interval
            specified by <paramref name="start" /> and <paramref name="end" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.TimeControl.GetTime(System.Int32)">
            <summary>
            Retrieves the <see cref="T:System.DateTime" /> structure corresponding to the specified pixel location.
            </summary>
            <param name="x">An <see cref="T:System.Int32" /> that represents a pixel location.</param>
            <returns>A new <see cref="T:System.DateTime" /> structure.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.TimeControl.GetTime(System.DateTime,System.Double)">
            <summary>
            Converts the specified <see cref="T:System.Double" /> value to a date.
            </summary>
            <param name="reference">The reference time.</param>
            <param name="units">The double value to convert.</param>
            <returns>A <see cref="T:System.DateTime" /> structure that corresponds to the conversion
            of <paramref name="units" /> when the reference of the time is
            <paramref name="reference" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.TimeControl.GetUnits(System.DateTime,System.DateTime)">
            <summary>
            Gets the distance in pixels between two dates.
            </summary>
            <param name="startTime">The first time.</param>
            <param name="endTime">The second time.</param>
            <returns>A <see cref="T:System.Double" /> that corresponds to the
            distance in pixels between the two dates.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.TimeControl.LoadViewState(System.Object)">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.LoadViewState(System.Object)">Control.LoadViewState</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.TimeControl.OnInit(System.EventArgs)">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)">Control.OnInit</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.TimeControl.OnLoad(System.EventArgs)">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)">Control.OnLoad</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.TimeControl.ScrollLeft">
            <summary>
            Scrolls the time line to the left.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.TimeControl.ScrollRight">
            <summary>
            Scrolls the time line to the right.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.TimeControl.SetTimeInterval(System.DateTime,System.DateTime)">
            <summary>
            Zooms the control so that it displays the specified time range.
            </summary>
            <param name="startTime">The start time of the time range.</param>
            <param name="endTime">The end time of the time range.</param>
            <remarks>After calling this method, the <see cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.FirstVisibleTime" /> is
            <paramref name="startTime" />, and the <see cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.LastVisibleTime" /> is
            <paramref name="endTime" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.TimeControl.SetTimeInterval(System.DateTime,System.DateTime,System.Single)">
            <summary>
            Changes the time conversion of the control to match the specified time range.
            </summary>
            <param name="startTime">The start time of the time range.</param>
            <param name="endTime">The end time of the time range.</param>
            <param name="width">The width of the time line.</param>
            <remarks>After calling this method, the <see cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.FirstVisibleTime" /> should be
            <paramref name="startTime" />, and calling <see cref="M:NickLee.Views.Gantt.Web.UI.TimeControl.GetTime(System.Int32)" /> with
            <paramref name="startTime" /> and <paramref name="endTime" /> as parameters
            should return <paramref name="width" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.TimeControl.ZoomIn">
            <summary>
            Zooms in the time line.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.TimeControl.ZoomOut">
            <summary>
            Zooms out the time line.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.TimeControl.TimeLineChanged">
            <summary>
            Occurs when the time line has changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.TimeControl.TimeLineChanging">
            <summary>
            Occurs when the time line is changing.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.TimeControl.TimeRectangleChanged">
            <summary>
            Occurs when the rectangle displaying time related information has changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.TimeControl.VisibleDurationChanged">
            <summary>
            Occurs when the visible time duration has changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.TimeControl.VisibleWidthChanged">
            <summary>
            Occurs when the visible width has changed.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.TimeControl.BackColor">
            <summary>
            Overridden. See <see cref="P:System.Web.UI.WebControls.WebControl.BackColor">Control.BackColor</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.TimeControl.BackgroundColor">
            <summary>
            Gets or sets the background color of the nontime rectangle area.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the background for the
            area not located in the <see cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.TimeRectangle" />.
            The default value inherits from <see cref="P:System.Web.UI.WebControls.WebControl.BackColor" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.TimeControl.BorderColor">
            <summary>
            Overridden. See <see cref="P:System.Web.UI.WebControls.WebControl.BorderColor">WebControl.BorderColor</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.TimeControl.FirstVisibleTime">
            <summary>
            Gets or sets the first visible time of the control.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure that represents the first visible time of the control.</value>
            <remarks>The first visible time is the first date displayed by the control. When the value is changed,
            the <see cref="E:NickLee.Views.Gantt.Web.UI.TimeControl.TimeLineChanging" /> and <see cref="E:NickLee.Views.Gantt.Web.UI.TimeControl.TimeLineChanged" /> events are raised.</remarks>
            <seealso cref="E:NickLee.Views.Gantt.Web.UI.TimeControl.TimeLineChanging" />
            <seealso cref="E:NickLee.Views.Gantt.Web.UI.TimeControl.TimeLineChanged" />
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.TimeLine" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.TimeControl.Font">
            <summary>
            Overridden. See <see cref="P:System.Web.UI.WebControls.WebControl.Font">WebControl.Font</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.TimeControl.ForeColor">
            <summary>
            Overridden. See <see cref="P:System.Web.UI.WebControls.WebControl.ForeColor">Control.ForeColor</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.TimeControl.Height">
            <summary>
            Overridden. See <see cref="P:System.Web.UI.WebControls.WebControl.Height">WebControl.Height</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.TimeControl.LastVisibleTime">
            <summary>
            Gets or sets the last visible time of the control.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.TimeControl.ReferenceDate">
            <summary>
            A date used as a reference to compute date intervals.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.TimeControl.TextFont">
            <summary>
            Gets or sets the font used by the control to draw text.
            </summary>
            <value>A <see cref="T:System.Drawing.Font" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.TimeControl.TimeLine">
            <summary>
            Gets or sets the <see cref="T:NickLee.Views.Gantt.ITimeLine" /> object that controls how the object is displaying time.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.ITimeLine" /> instance that controls how the object is displaying time.</value>
            <exception cref="T:System.ArgumentException">The propety value is not valid because it would
            create a circular list of <strong>ITimeLine</strong> objects leading to a stack
            overflow.</exception>
            <seealso cref="E:NickLee.Views.Gantt.Web.UI.TimeControl.TimeLineChanging" />
            <seealso cref="E:NickLee.Views.Gantt.Web.UI.TimeControl.TimeLineChanged" />
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.FirstVisibleTime" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.TimeControl.TimeMargins">
            <summary>
            Gets or sets the margins for the control.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl.Margins" /> that represents the margins (in pixels) for the time rectangle of the control.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.TimeControl.TimeRectangle">
            <summary>
            Gets the rectangle where time information is displayed.
            </summary>
            <value>A <see cref="T:System.Drawing.Rectangle" /> structure.</value>
            <remarks>When this value changes, the <see cref="E:NickLee.Views.Gantt.Web.UI.TimeControl.TimeRectangleChanged" /> is
            raised.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.TimeControl.VisibleDuration">
            <summary>
            Gets the visible time duration displayed by the control.
            </summary>
            <value>A <see cref="T:System.TimeSpan" /> structure that represents the visible time duration displayed by the control.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The property value is negative.</exception>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.TimeControl.VisibleTimeInterval">
            <summary>
            Gets or sets the visible time interval of the control.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.TimeControl.Width">
            <summary>
            Overridden. See <see cref="P:System.Web.UI.WebControls.WebControl.Width">WebControl.Width</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttSheet.AddParsedSubObject(System.Object)">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.AddParsedSubObject(System.Object)">Control.AddParsedSubObject</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttSheet.Dispose">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.Dispose">Control.Dispose</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttSheet.EnsureRowVisible(System.Int32)">
            <summary>
            Scrolls the sheet so that the specified row becomes
            visible.
            </summary>
            <param name="rowIndex">The row index.</param>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="rowIndex" />
            is not between <strong>0</strong> and <strong>RowCount-1</strong>.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttSheet.FilterViewStateProperties(System.Collections.IDictionary)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Web.UI.ImageControl.FilterViewStateProperties(System.Collections.IDictionary)">ImageControl.FilterViewStateProperties</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttSheet.GetRowBounds(System.Int32)">
            <summary>
            Gets the bounding rectangle of the specified row.
            </summary>
            <param name="rowIndex">The index of the row to compute.</param>
            <returns>The bounding rectangle of the row.</returns>
            <seealso cref="M:NickLee.Views.Gantt.Web.UI.GanttSheet.GetRowPosition(System.Int32)" />
            <seealso cref="M:NickLee.Views.Gantt.Web.UI.GanttSheet.GetRowHeight(System.Int32)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttSheet.GetRowHeight(System.Int32)">
            <summary>
            Gets the height of the specified row.
            </summary>
            <param name="rowIndex">The row index.</param>
            <returns>The height of the specified row.</returns>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="rowIndex" />
            is not between <strong>0</strong> and <strong>RowCount-1</strong>.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttSheet.GetRowPosition(System.Int32)">
            <summary>
            Gets the vertical position of the specified row.
            </summary>
            <param name="rowIndex">The index of the row to compute.</param>
            <returns>The vertical position of the specified row.
            </returns>
            <remarks>The vertical position of the row may be outside of the control
            visible area.
            </remarks>
            <seealso cref="M:NickLee.Views.Gantt.Web.UI.GanttSheet.GetRowBounds(System.Int32)" />
            <seealso cref="M:NickLee.Views.Gantt.Web.UI.GanttSheet.GetRowHeight(System.Int32)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttSheet.HitTest(System.Drawing.Point)">
            <summary>
            Gets information about the control at a specified point on the screen.
            </summary>
            <param name="point">A <see cref="T:System.Drawing.Point" /> that represents single x,y coordinate.
            </param>
            <returns>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet.HitTestInfo" /> that contains specific information about the schedule sheet.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttSheet.OnClick(System.Web.UI.ImageClickEventArgs)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Web.UI.ImageControl.OnClick(System.Web.UI.ImageClickEventArgs)">ImageControl.OnClick</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttSheet.RenderImageMap(System.Web.UI.HtmlTextWriter)">
            <summary>
            This method overrides <see cref="M:NickLee.Views.Web.UI.ImageControl.RenderImageMap(System.Web.UI.HtmlTextWriter)">ImageControl.RenderImageMap</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttSheet.ResetActivityBarStyles">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.ActivityBarStyles" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttSheet.RowFromPosition(System.Int32)">
            <summary>
            Computes the index of the row at the specified position.
            </summary>
            <param name="position">The Y position.</param>
            <returns>The index of the row or -1 if the position
            does not correspond to a row.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttSheet.SetRowHeight(System.Int32,System.Int32)">
            <summary>
            Sets the height of the specified row.
            </summary>
            <param name="rowIndex">The row index.</param>
            <param name="newHeight">The new height.</param>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="rowIndex" />
            is not between <strong>0</strong> and <strong>RowCount-1</strong>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="newHeight" /> is negative.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttSheet.ZoomToFit">
            <summary>
            Zooms in or zooms out the sheet so that the time bounds fit the sheet.
            </summary>
            <remarks>This method zooms in or zooms out the sheet so
            that the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.TimeBounds" /> fit the sheet. If the
            <see cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.TimeBounds" /> property has its default value, then the time
            bounds are computed dynamically to contain all the activities of the Gantt
            model. Calling this method will ensure that all activities of the Gantt model
            are displayed.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.TimeBounds" />
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.GanttSheet.DrawRow">
            <summary>
            Occurs when the Gantt sheet draws rows in owner draw mode.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.OwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows an event handler
            listening to the <see cref="E:NickLee.Views.Gantt.Web.UI.GanttSheet.DrawRow" /> event. The event handler draws
            selected rows using a specific font. Other rows are painted using the default
            painting algorithm.
            </para>
            <code lang="C#">
            // Attach the event handler
            ActivitySheet sheet = new ActivitySheet();
            sheet.OwnerDraw = true;
            sheet.DrawRow += new DrawRowEventHandler(OnDrawSheetRow);

            // The code of the event handler
            private void OnDrawSheetRow(object sender, DrawGanttSheetRowArgs e) {
            if (!e.IsRowSelected)
            e.DrawRow();
            else {
            if (e.IsPaintingBackground)
            e.Graphics.FillRectangle(e.BackBrush, e.Bounds);
            else {
            Font font = new Font(e.GanttSheet.Font, FontStyle.Italic);
            e.DrawRow(e.Bounds, e.BackBrush, e.ForeBrush, font);
            font.Dispose();
            }
            }
            }
            </code>
            <code lang="Visual Basic">
            ' Attach the event handler
            Dim sheet As New ActivitySheet()
            sheet.OwnerDraw = True

            ' The code of the event handler
            Private Sub OnDrawSheetRow(ByVal sender As Object, ByVal e As DrawGanttSheetRowArgs) Handles sheet.DrawRow
            If Not e.IsRowSelected Then
            e.DrawRow()
            Else
            If e.IsPaintingBackground Then
            e.Graphics.FillRectangle(e.BackBrush, e.Bounds)
            Else
            Dim font As New Font(e.GanttSheet.Font, FontStyle.Italic)
            e.DrawRow(e.Bounds, e.BackBrush, e.ForeBrush, font)
            font.Dispose()
            End If
            End If
            End Sub
            </code>
            </example>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.OwnerDraw" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.ActivityBarHeight">
            <summary>
            Gets or sets the height of activity bars.
            </summary>
            <value>The height of activity bars.</value>
            <remarks>The default value of this property is inherited from the font height
            of the control. To reset this property to its default value, set it to <strong>-1</strong>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.ActivityBarStyles">
            <summary>
            Gets the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> that defines the graphical representation
            of activities in the sheet.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" /> that defines the graphical representation
            of activities in the sheet.</value>
            <remarks>
            When the <see cref="T:NickLee.Views.Gantt.Web.UI.GanttSheet" /> needs to display
            an activity, then it looks inside its collection of styles and paints all the activity bar styles that
            correspond to the activity. To detect if a particular style corresponds to an activity, it uses the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.StyleFor" /> property of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />. This property defines a Boolean expression
            that will be evaluated for this purpose. See <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> for an example.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.ActivityToolTip">
            <summary>
            Gets or sets the tooltip format for activities.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the format of the tooltip that
            will be displayed when the mouse hovers activities.</value>
            <remarks>The value of this property is an expression that enables an easy customization of the
            tooltip.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample sets the string displayed by the tooltip as the concatenation of
            the activity name, the activity start time and the activity duration.
            </para>
            <code lang="C#">
            GanttSheet sheet = ...
            sheet.ActivityToolTip = "'Name : ' + Name + '\\n' + {StartTime:m} + '(' + Duration + ')'";
            </code>
            <code lang="Visual Basic">
            Dim sheet As GanttSheet = ...
            sheet.ActivityToolTip = "'Name : ' + Name + '\\n' + {StartTime:m} + '(' + Duration + ')'"
            </code>
            <para lang="C#,Visual Basic">
            Note the use of the '{' and '}' characters to specify a format for the <strong>StartTime</strong>
            property (see <see cref="T:System.Globalization.DateTimeFormatInfo" /> for details about date formats).
            </para>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.AlternatingBackColor">
            <summary>
            Gets or sets the background color of alternating rows for a ledger appearance.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the alternating background color.
            The default value is the system color for windows (<see cref="P:System.Drawing.SystemColors.Window">SystemColors.Window</see>).
            </value>
            <remarks>
            By default, all rows have the same color (the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.BackColor" /> property of the control).
            When you set the <strong>AlternatingBackColor</strong> to a new color, all the other rows are set to the new color.
            To reset the alternating background color
            to its default value, set the property to <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.BackColor">
            <summary>
            Gets or sets the background color of the Gantt sheet.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of rows in the sheet.
            The default value is the system color for windows (<see cref="P:System.Drawing.SystemColors.Window">SystemColors.Window</see>).
            </value>
            <remarks>
            While the <strong>BackColor</strong> property determines the color of rows
            in the grid, the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.BackgroundColor" /> determines
            the color of the nonrow area, which is only visible when the sheet
            is scrolled to the bottom, or if only a few rows
            are contained in the sheet.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.BackgroundColor">
            <summary>
            Gets or sets the color of the nonrow area of the grid.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the grid background.
            The default value is the <see cref="P:System.Drawing.SystemColors.AppWorkspace">SystemColors.AppWorkspace</see> color.
            </value>
            <remarks>
            The <strong>BackgroundColor</strong> determines the color of the nonrow area
            of the grid, which is only visible when no information is displayed
            by the <see cref="T:NickLee.Views.Gantt.Web.UI.GanttSheet" />, or if the sheet is scrolled to the bottom,
            or if only a few rows are contained in the sheet.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.DateIndicators">
            <summary>
            Gets the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> displayed in the sheet.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection" /> that defines the date indicators displayed on the sheet.</value>
            <example>
            <para lang="C#,Visual Basic">
            The following example adds a <see cref="T:NickLee.Views.Gantt.Windows.Forms.CurrentDateIndicator" /> in a <see cref="T:NickLee.Views.Gantt.Web.UI.GanttSheet" />.
            </para>
            <code lang="C#">
            public void AddDateIndicator(GanttSheet sheet) {
            CurrentDateIndicator dateIndicator = new CurrentDateIndicator();
            sheet.DateIndicators.Add(dateIndicator);
            }
            </code>
            <code lang="Visual Basic">
            Sub AddDateIndicator(ByVal sheet As GanttSheet)
            Dim dateIndicator As CurrentDateIndicator = New CurrentDateIndicator
            sheet.DateIndicators.Add(dateIndicator)
            End Sub
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.EnableBarStyleViewState">
            <summary>
            Gets or sets a value indicating whether the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.ActivityBarStyles" /> property
            should be serialized into the view state.
            </summary>
            <value><see langword="true" /> if the <strong>ActivityBarStyles</strong> property should
            be serialized into the view state; otherwise, <see langword="false" />.
            The default value is <see langword="true" />.</value>
            <remarks>If you do not modify the bar styles of the Gantt sheet during round-trips,
            you should set this property to <see langword="false" /> to speed up page loading.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.EnableDateIndicatorsViewState">
            <summary>
            Gets or sets a value indicating whether the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.DateIndicators" /> property
            should be serialized into the view state.
            </summary>
            <value><see langword="true" /> if the <strong>DateIndicators</strong> property should
            be serialized into the view state; otherwise, <see langword="false" />.
            The default value is <see langword="true" />.</value>
            <remarks>If you do not modify the date indicators of the Gantt sheet during round-trips,
            you should set this property to <see langword="false" /> to speed up page loading.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.EnableStyleToolTips">
            <summary>
            Indicates whether the tooltips should be taken from activity bar styles.
            </summary>
            <value><see langword="true" /> if the tooltips should be taken from activity bar styles;
            <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.EnableTimeGridViewState">
            <summary>
            Gets or sets a value indicating whether the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.TimeGrids" /> property
            should be serialized into the view state.
            </summary>
            <value><see langword="true" /> if the <strong>TimeGrids</strong> property should
            be serialized into the view state; otherwise, <see langword="false" />.
            The default value is <see langword="true" />.</value>
            <remarks>If you do not modify the time grids of the Gantt sheet during round-trips,
            you should set this property to <see langword="false" /> to speed up page loading.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.FirstVisibleRow">
            <summary>
            Gets or sets the index of the first visible row.
            </summary>
            <value>The index of the first visible row.</value>
            <exception cref="T:System.IndexOutOfRangeException">The property value is not
            between <strong>0</strong> and <strong>RowCount-1</strong>.</exception>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.ForeColor">
            <summary>
            Gets or sets the foreground color used for rows.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of rows.
            The default value is the value for window text (<see cref="P:System.Drawing.SystemColors.WindowText">SystemColors.WindowText</see>).</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.GanttModel">
            <summary>
            Gets the Gantt data model displayed by this Gantt sheet.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> that is displayed by this
            <see cref="T:NickLee.Views.Gantt.Web.UI.GanttSheet" /> or <see langword="null" /> if the Gantt sheet
            is not connected to a row controller (<see cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.RowController" />).</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.GridLineColor">
            <summary>
            Gets or sets the color of the horizontal grid line.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the horizontal grid lines.
            The default value is the system color for controls (<see cref="P:System.Drawing.SystemColors.Control">SystemColors.Control</see>).
            </value>
            <remarks>
            No grid line is displayed if the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.GridLineStyle" /> property
            is set to <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle">None</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.GridLineStyle">
            <summary>
            Gets or sets the style of horizontal grid lines.
            </summary>
            <value>
            One of the <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle" /> values.
            The default value is <strong>Solid</strong>.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.HScrollBar">
            <summary>
            Gets or sets the visibility of the horizontal scrollbar.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Windows.Forms.ScrollBarVisibility" /> values.
            The default value is <see cref="F:NickLee.Views.Windows.Forms.ScrollBarVisibility.AsNeeded" />.
            </value>
            <remarks>When the property value is <strong>ScrollBarVisibility.AsNeeded</strong>,
            the scrollbar will always be visible.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.IsInteractive">
            <summary>
            Overridden. See <see cref="P:NickLee.Views.Web.UI.ImageControl.IsInteractive">ImageControl.IsInteractive</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.OwnerDraw">
            <summary>
            Gets or sets a value indicating whether the code that you
            provide draws the Gantt sheet rows or not.
            </summary>
            <value>
            <see langword="true" /> if Gantt sheet rows are to be drawn using custom user
            code; <see langword="false" /> otherwise.
            </value>
            <remarks>
            <p>When the <strong>OwnerDraw</strong> property is set to <see langword="true" />,
            you need to handle all drawing of Gantt sheet rows. You can use
            this capability to create your own special Gantt sheet rows
            displays. Use the <see cref="E:NickLee.Views.Gantt.Web.UI.GanttSheet.DrawRow" /> event to handle the drawing of
            Gantt sheet rows.</p>
            <p>When the <strong>OwnerDraw</strong> property is set to <see langword="false" />,
            the <strong>DrawRow</strong> event is not raised.</p>
            </remarks>
            <seealso cref="E:NickLee.Views.Gantt.Web.UI.GanttSheet.DrawRow" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.RowController">
            <summary>
            Gets or sets the row controller for the Gantt sheet.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Windows.Forms.IGanttRowController" /> object that defines the
            data to display in the Gantt sheet. The default value is <see langword="null" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.RowCount">
            <summary>
            Gets the number of visible rows in this Gantt sheet.
            </summary>
            <value>The number of visible rows in the Gantt sheet.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.SelectionBackColor">
            <summary>
            Gets or sets the background color of selected rows.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the background color of selected rows.</value>
            <remarks>
            No selection is displayed if the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.ShowSelectedRows" /> property
            is set to <see langword="false" />.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.SelectionForeColor">
            <summary>
            Gets or sets the foreground color of selected rows.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of selected rows.</value>
            <remarks>
            No selection is displayed if the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.ShowSelectedRows" /> property
            is set to <see langword="false" />.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.ShowSelectedRows">
            <summary>
            Indicates whether the selected rows should be painted using the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.SelectionBackColor" />.
            </summary>
            <value><see langword="true" /> if the selection should be painted; <see langword="false" /> otherwise.
            The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.ShowTooltips">
            <summary>
            Indicates whether the <see cref="T:NickLee.Views.Gantt.Web.UI.GanttSheet" /> should display tooltips on activities.
            </summary>
            <value><see langword="true" /> if the <see cref="T:NickLee.Views.Gantt.Web.UI.GanttSheet" />
            must display tooltips on activities; <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.TimeBounds">
            <summary>
            Gets or sets the time bounds of the Gantt sheet.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.ITimeRange" /> that represents the maximum and minimum date-time value
            that the user can scroll in the Gantt sheet. The default value is dynamically computed
            using the minimum start time and maximum end time of activities in the
            Gantt data model attached to the Gantt sheet.
            </value>
            <remarks>Although this property sets the limit of time
            scrolling in the <see cref="T:NickLee.Views.Gantt.Web.UI.GanttSheet" />, some pixels can be added to this
            scrolling range using the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.TimeMargin" /> property.
            Note that the user will still be able to scroll outside the value of this time
            range using the right and left arrows of the time scrollbar.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.TimeMargin" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.TimeGrids">
            <summary>
            Gets the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> displayed in the sheet.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection" /> that defines the grids
            displayed on the sheet.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.TimeMargin">
            <summary>
            Gets or sets the right and left margin added to the interval of the time range.
            </summary>
            <value>An integer value that represents the margin in pixels that will be added
            to the scrolling time bounds. The default value is 50.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.TimeBounds" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.VerticalGridToBottom">
            <summary>
            Gets or sets a value indicating if the vertical grid should be painted on the nonrow
            area of the sheet.
            </summary>
            <value><see langword="true" /> if the vertical grid is also
            painted in the nonrow area of the sheet, <see langword="false" /> otherwise.
            The default value is <see langword="false" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttSheet.VScrollBar">
            <summary>
            Gets or sets the visibility of the vertical scrollbar.
            </summary>
            <value>
            One of the <see cref="T:NickLee.Views.Windows.Forms.ScrollBarVisibility" /> values.
            The default value is <see cref="F:NickLee.Views.Windows.Forms.ScrollBarVisibility.AsNeeded" />.
            </value>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationSheet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Web.UI.ScheduleSheet" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationSheet.GetActivityBarBounds(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Gets the bounds of the activity for the specified reservation without taking into account
            the text on the right and left of the activity bar.
            </summary>
            <param name="reservation">An <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> reference.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle" /> structure that represents the
            bounds of <paramref name="reservation" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationSheet.GetActivityBounds(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Gets the bounds of the activity for the specified reservation.
            </summary>
            <param name="reservation">An <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> reference.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle" /> structure that represents the
            bounds of <paramref name="reservation" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationSheet.GetReservationAt(System.Int32)">
            <summary>
            Gets the reservation that is displayed at the specified row index.
            </summary>
            <param name="rowIndex">The index of the row.</param>
            <returns>The <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> object that is displayed at the specified row index.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationSheet.GetRowIndex(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Gets the index of the row that displays the specified reservation.
            </summary>
            <param name="reservation">An <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> to compute the index.</param>
            <returns>The index of the row that displays the specified reservation or -1 if
            the specified reservation is not displayed in any row.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationSheet.RenderImageMapAreas(System.Web.UI.HtmlTextWriter)">
            <summary>
            Is called to render image map areas.
            </summary>
            <param name="writer">The writer in which to put the image map areas.</param>
            <remarks>The implementation of this method create image map areas to display
            tooltips for visible reservations.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.ActivityToolTip" />
        </member>
        <member name="T:NickLee.Views.Gantt.TimeRangeChangeEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:NickLee.Views.Gantt.ITimeRange.TimeRangeChanging" /> and
            <see cref="E:NickLee.Views.Gantt.ITimeRange.TimeRangeChanged" /> events of a <see cref="T:NickLee.Views.Gantt.ITimeRange" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.XmlElementSerializedEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.XmlElementSerialized" /> and
            <see cref="E:NickLee.Views.Gantt.Data.GanttModelXmlSerializer.XmlElementDeserialized" /> events.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.LevelingProgressEventHandler">
            <summary>
            Handles <see cref="E:NickLee.Views.Gantt.Data.ProjectSchedulingModel.LevelingProgress">ProjectSchedulingModel.LevelingProgress</see> events.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.BaseResource">
            <summary>
            Defines an <see langword="abstract" /> implementation of the <see cref="T:NickLee.Views.Gantt.Data.IResource" />
            interface that can be extended in a straightforward manner for more complex needs.
            </summary>
            <remarks>
            <p>This class is used by the <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModel" /> class.</p>
            <p><see cref="T:NickLee.Views.Gantt.Data.BaseResource" /> implements the properties of the <see cref="T:NickLee.Views.Gantt.Data.IResource" /> interface,
            but delegates them to dedicated methods in order to allow another implementation than a simple memory
            implementation. For example, the <see cref="P:NickLee.Views.Gantt.Data.BaseResource.Name" /> property is implemented by the <see cref="T:NickLee.Views.Gantt.Data.BaseResource" />
            class, but it delegates the real storage of the property to the <see langword="abstract" /> methods <see cref="M:NickLee.Views.Gantt.Data.BaseResource.GetName" /> and
            <see cref="M:NickLee.Views.Gantt.Data.BaseResource.SetName(System.String)" />.
            The <see cref="P:NickLee.Views.Gantt.Data.BaseResource.Name" /> property handles notification to the model, leaving the real storage to be implemented
            by <see cref="M:NickLee.Views.Gantt.Data.BaseResource.GetName" /> and <see cref="M:NickLee.Views.Gantt.Data.BaseResource.SetName(System.String)" /> in a subclass.</p>
            </remarks>
            <seealso cref="T:NickLee.Views.Gantt.Data.SimpleResource" />
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to populate a <see cref="T:NickLee.Views.Gantt.Data.SimpleGanttModel" />.
            </para>
            <code lang="C#">
            private void Populate(IGanttModel model) {
            IActivity activity;
            IResource[] resources = new IResource[10];
            IActivity[] activities = new IActivity[20];
            IReservation[] reservations = new IReservation[20];

            for (int i = 0; i &lt; 10; ++i) {
            // First create the resource...
            resources[i] = model.NewResource();
            resources[i].Name = "Room " + i.ToString();

            // Add a conference in the morning
            activity = model.NewActivity();
            activity.Name = "Morning Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4));
            activities[i*2] = activity;

            // Create the reservation for this activity
            reservations[i*2] = model.NewReservation(activity, resources[i]);

            // Add a conference in the afternoon
            activity = model.NewActivity();
            activity.Name = "Afternoon Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4));
            activities[i*2 + 1] = activity;

            // Create the reservation for this activity
            reservations[i*2 + 1] = model.NewReservation(activity, resources[i]);
            }
            model.Activities.AddRange(activities);
            model.Resources.AddRange(resources);
            model.Reservations.AddRange(reservations);
            }
            </code>
            <code lang="Visual Basic">
            Sub Populate(ByVal model As IGanttModel)
            Dim activity As IActivity
            Dim resources(10) As IResource
            Dim activities(20) As IActivity
            Dim reservations(20) As IReservation

            For i As Integer = 0 To 9

            ' First create the resource...
            resources(i) = model.NewResource()
            resources(i).Name = "Room " + i.ToString()

            ' Add a conference in the morning
            activity = model.NewActivity()
            activity.Name = "Morning Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4))
            activities(i * 2) = activity

            ' Create the reservation for this activity
            reservations(i * 2) = model.NewReservation(activity, resources(i))

            ' Add a conference in the afternoon
            activity = model.NewActivity()
            activity.Name = "Afternoon Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4))
            activities(i * 2 + 1) = activity

            ' Create the reservation for this activity
            reservations(i * 2 + 1) = model.NewReservation(activity, resources(i))

            Next

            model.Activities.AddRange(activities)
            model.Resources.AddRange(resources)
            model.Reservations.AddRange(reservations)
            End Sub
            </code>
            </example>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.IResource">
            <summary>
            Defines the abstract behavior of a Gantt resource.
            </summary>
            <remarks>
            <p>Each resource has a name and an identifier.</p>
            <p>Resources are hierarchical objects: a resource can have subresources.</p>
            <p>Implementations of this interface are expected to notify the Gantt model
            of any change using the <see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /> event class.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to populate a <see cref="T:NickLee.Views.Gantt.Data.SimpleGanttModel" />.
            </para>
            <code lang="C#">
            private void Populate(IGanttModel model) {
            IActivity activity;
            IResource[] resources = new IResource[10];
            IActivity[] activities = new IActivity[20];
            IReservation[] reservations = new IReservation[20];

            for (int i = 0; i &lt; 10; ++i) {
            // First create the resource...
            resources[i] = model.NewResource();
            resources[i].Name = "Room " + i.ToString();

            // Add a conference in the morning
            activity = model.NewActivity();
            activity.Name = "Morning Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4));
            activities[i*2] = activity;

            // Create the reservation for this activity
            reservations[i*2] = model.NewReservation(activity, resources[i]);

            // Add a conference in the afternoon
            activity = model.NewActivity();
            activity.Name = "Afternoon Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4));
            activities[i*2 + 1] = activity;

            // Create the reservation for this activity
            reservations[i*2 + 1] = model.NewReservation(activity, resources[i]);
            }
            model.Activities.AddRange(activities);
            model.Resources.AddRange(resources);
            model.Reservations.AddRange(reservations);
            }
            </code>
            <code lang="Visual Basic">
            Sub Populate(ByVal model As IGanttModel)
            Dim activity As IActivity
            Dim resources(10) As IResource
            Dim activities(20) As IActivity
            Dim reservations(20) As IReservation

            For i As Integer = 0 To 9

            ' First create the resource...
            resources(i) = model.NewResource()
            resources(i).Name = "Room " + i.ToString()

            ' Add a conference in the morning
            activity = model.NewActivity()
            activity.Name = "Morning Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4))
            activities(i * 2) = activity

            ' Create the reservation for this activity
            reservations(i * 2) = model.NewReservation(activity, resources(i))

            ' Add a conference in the afternoon
            activity = model.NewActivity()
            activity.Name = "Afternoon Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4))
            activities(i * 2 + 1) = activity

            ' Create the reservation for this activity
            reservations(i * 2 + 1) = model.NewReservation(activity, resources(i))

            Next

            model.Activities.AddRange(activities)
            model.Resources.AddRange(resources)
            model.Reservations.AddRange(reservations)
            End Sub
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IResource.GetReservations(NickLee.Views.Gantt.DateTimeInterval)">
            <summary>
            When implemented by a class, retrieves the reservations associated with this resource during the specified time interval.
            </summary>
            <param name="interval">The time interval.</param>
            <returns>A collection of <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> objects.</returns>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IResource.ChildResources">
            <summary>
            When implemented by a class, gets the collection of subresources of the resource.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IResourceCollection" /> instance.</value>
            <remarks>Use this collection to add or remove subresources.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample first creates a resource with a subresource,
            and then add them to a Gantt data model.
            </para>
            <code lang="C#">
            IGanttModel model = new SimpleGanttModel();
            IResource resource = model.NewResource();
            IResource child = model.NewResource();
            resource.ChildResources.Add(child);
            model.Resources.Add(resource);
            </code>
            <code lang="Visual Basic">
            Dim model As New SimpleGanttModel
            Dim resource As IResource = model.NewResource()
            Dim child As IResource = model.NewResource()
            resource.ChildResources.Add(child)
            model.Resources.Add(resource)
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IResource.GanttModel">
            <summary>
            When implemented by a class, gets the Gantt model associated with the resource.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IResource.ID">
            <summary>
            When implemented by a class, gets or sets the unique identifier of the resource.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the unique identifier of the
            resource.</value>
            <remarks><p>When setting the value, the model must be notified of the property change using the
            <see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /> event class.</p>
            <p>If a resource with the same identifier is already present in the model,
            an exception should be thrown.</p>
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IResource.Info">
            <summary>
            When implemented by a class, gets or sets text information about the resource.
            </summary>
            <value>A <see cref="T:System.String" /> that represents text information about the
            resource.</value>
            <remarks>When setting the value, the model must be notified of the property change using the
            <see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IResource.IsInModel">
            <summary>
            When implemented by a class, indicates whether the resource has already been added to the model.
            </summary>
            <value><see langword="true" /> if the resource has been added to the model;
            <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IResource.MaxUnits">
            <summary>
            When implemented by a class, gets or sets the maximum number of units this resource can handle.
            </summary>
            <value>A <see cref="T:System.Single" /> value.</value>
            <remarks>When setting the value, the model must be notified of the property change using the
            <see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IResource.Name">
            <summary>
            When implemented by a class, gets or sets the resource name.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the resource name.</value>
            <remarks>When setting the value, the model must be notified of the property change using the
            <see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IResource.Parent">
            <summary>
            When implemented by a class, gets the parent resource of this resource.
            </summary>
            <value>The parent resource, or <see langword="null" /> if there is no parent
            resource.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IResource.Reservations">
            <summary>
            When implemented by a class, gets the reservations associated with this resource.
            </summary>
            <value>A collection of <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> objects.</value>
            <example>
            <para lang="C#,Visual Basic">The following code displays the reservations
            of a resource.
            </para>
            <code lang="C#">
            IResource resource = ...;
            foreach (IReservation reservation in resource.Reservations) {
            IActivity activity = reservation.Activity;
            Console.WriteLine("The activity " + activity.ID + " is used by this reservation.");
            }
            </code>
            <code lang="Visual Basic">
            Dim resource As IResource = ...
            Dim reservation As IReservation
            For Each reservation in resource.Reservations
            Dim activity As IActivitiy = reservation.Activity
            Console.WriteLine("The activity " + activity.ID + " is used by this reservation.")
            Next
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResource.#ctor(NickLee.Views.Gantt.Data.BaseGanttModel)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.BaseResource" /> class.
            </summary>
            <param name="model">The Gantt data model.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="model" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResource.GetCustomProperty(System.String)">
            <summary>
            Gets a custom property by its name.
            </summary>
            <param name="name">The name of the custom property.</param>
            <returns>The value for the property specified by <paramref name="name" />, or
            <see langword="null" /> if no such property exists.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResource.GetID">
            <summary>
            Gets the unique identifier of the resource.
            </summary>
            <returns>The unique identifier of the resource.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResource.GetInfo">
            <summary>
            Gets text information about the resource.
            </summary>
            <returns>Text information about the resource.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResource.GetMaxUnits">
            <summary>
            Gets the maximum number of units this resource can handle.
            </summary>
            <returns>The maximum number of units this resource can handle.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResource.GetName">
            <summary>
            Gets the resource name.
            </summary>
            <returns>The resource name.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResource.GetReservations(NickLee.Views.Gantt.DateTimeInterval)">
            <summary>
            Retrieves the reservations associated with this resource during the specified time interval.
            </summary>
            <param name="interval">The time interval.</param>
            <returns>An <see cref="T:System.Collections.ICollection" /> instance.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResource.OnResourceChanged(NickLee.Views.Gantt.Data.ResourcesChangeEventArgs)">
            <summary>
            Is called to notify the Gantt data model that the resource has changed.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /> that contains the event data.</param>
            <remarks><p>Called when the activity is changed.</p></remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResource.OnResourceChanging(NickLee.Views.Gantt.Data.ResourcesChangeEventArgs)">
            <summary>
            Is called to notify the Gantt data model that the resource is changing.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /> that contains the event data.</param>
            <remarks><p>Called before the resource is changed.</p></remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResource.SetCustomProperty(System.String,System.Object)">
            <summary>
            Sets a custom property on the resource.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The value of the property.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResource.SetID(System.String)">
            <summary>
            Sets the unique identifier for the resource.
            </summary>
            <param name="id">The new unique identifier of the resource.</param>
            <remarks>The implementation of this method must not notify the model, which is done by the
            <see cref="P:NickLee.Views.Gantt.Data.BaseResource.ID" /> property.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResource.SetInfo(System.String)">
            <summary>
            Sets text information about the resource.
            </summary>
            <param name="info">The new text information of the resource.</param>
            <remarks>The implementation of this method must not notify the model, which is done by the
            <see cref="P:NickLee.Views.Gantt.Data.BaseResource.Info" /> property.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResource.SetMaxUnits(System.Single)">
            <summary>
            Sets the maximum number of units this resource can handle.
            </summary>
            <param name="maxUnits">The new maximum number of units.</param>
            <remarks>The implementation of this method must not notify the model, which is done by the
            <see cref="P:NickLee.Views.Gantt.Data.BaseResource.MaxUnits" /> property.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResource.SetName(System.String)">
            <summary>
            Sets the resource name.
            </summary>
            <param name="name">The new name for the resource.</param>
            <remarks>The implementation of this method must not notify the model, which is done by the
            <see cref="P:NickLee.Views.Gantt.Data.BaseResource.Name" /> property.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResource.ToString">
            <summary>
            This member overrides <see cref="M:System.Object.ToString">Object.ToString</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseResource.ChildResources">
            <summary>
            Gets the collection of subresources of the resource.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IResourceCollection" /> instance.</value>
            <remarks>Use this collection to add or remove subresources.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample first creates a resource with a subresource,
            and then add them to a Gantt data model.
            </para>
            <code lang="C#">
            IGanttModel model = new SimpleGanttModel();
            IResource resource = model.NewResource();
            IResource child = model.NewResource();
            resource.ChildResources.Add(child);
            model.Resources.Add(resource);
            </code>
            <code lang="Visual Basic">
            Dim model As New SimpleGanttModel
            Dim resource As IResource = model.NewResource()
            Dim child As IResource = model.NewResource()
            resource.ChildResources.Add(child)
            model.Resources.Add(resource)
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseResource.GanttModel">
            <summary>
            Gets the Gantt data model associated with the resource.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseResource.ID">
            <summary>
            Gets or sets the unique identifier of the resource.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the unique identifier of the
            resource.</value>
            <remarks>When setting the value, <see cref="M:NickLee.Views.Gantt.Data.BaseResource.OnResourceChanging(NickLee.Views.Gantt.Data.ResourcesChangeEventArgs)" /> is called with the appropriate event.
            If the operation is not canceled using the <see cref="P:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs.Cancel" />
            property of the event, it sets the new value by calling <see cref="M:NickLee.Views.Gantt.Data.BaseResource.SetID(System.String)" /> and calls
            <see cref="M:NickLee.Views.Gantt.Data.BaseResource.OnResourceChanged(NickLee.Views.Gantt.Data.ResourcesChangeEventArgs)" />.
            </remarks>
            <exception cref="T:System.InvalidOperationException">If the resource identifier is not unique.
            </exception>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseResource.Info">
            <summary>
            Gets or sets text information about the resource.
            </summary>
            <value>A <see cref="T:System.String" /> that represents text information about the
            resource.</value>
            <remarks>When setting the value, <see cref="M:NickLee.Views.Gantt.Data.BaseResource.OnResourceChanging(NickLee.Views.Gantt.Data.ResourcesChangeEventArgs)" /> is called with the appropriate event.
            If the operation is not canceled using the <see cref="P:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs.Cancel" />
            property of the event, it sets the new value by calling <see cref="M:NickLee.Views.Gantt.Data.BaseResource.SetInfo(System.String)" /> and calls
            <see cref="M:NickLee.Views.Gantt.Data.BaseResource.OnResourceChanged(NickLee.Views.Gantt.Data.ResourcesChangeEventArgs)" />.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseResource.IsInModel">
            <summary>
            Indicates whether the resource has already been added to the model.
            </summary>
            <value><see langword="true" /> if the resource has been added to the model;
            <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseResource.Item(System.String)">
            <summary>
            Gets or sets the custom property with the specified name.
            </summary>
            <value>The custom property with the specified name.</value>
            <remarks>Custom properties must be added to the Gantt data model before using this indexer.
            See the <see cref="P:NickLee.Views.Gantt.Data.BaseGanttModel.CustomResourceProperties" /> property for details.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseResource.MaxUnits">
            <summary>
            Gets or sets the maximum number of units this resource can handle.
            </summary>
            <value>A <see cref="T:System.Single" /> value. The default value is <strong>1</strong>.</value>
            <remarks>When setting the value, <see cref="M:NickLee.Views.Gantt.Data.BaseResource.OnResourceChanging(NickLee.Views.Gantt.Data.ResourcesChangeEventArgs)" /> is called with the appropriate event.
            If the operation is not canceled using the <see cref="P:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs.Cancel" />
            property of the event, it sets the new value by calling <see cref="M:NickLee.Views.Gantt.Data.BaseResource.SetMaxUnits(System.Single)" /> and calls
            <see cref="M:NickLee.Views.Gantt.Data.BaseResource.OnResourceChanged(NickLee.Views.Gantt.Data.ResourcesChangeEventArgs)" />.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseResource.Name">
            <summary>
            Gets or sets the resource name.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the resource name.</value>
            <remarks>When setting the value, <see cref="M:NickLee.Views.Gantt.Data.BaseResource.OnResourceChanging(NickLee.Views.Gantt.Data.ResourcesChangeEventArgs)" /> is called with the appropriate event.
            If the operation is not canceled using the <see cref="P:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs.Cancel" />
            property of the event, it sets the new value by calling <see cref="M:NickLee.Views.Gantt.Data.BaseResource.SetName(System.String)" /> and calls
            <see cref="M:NickLee.Views.Gantt.Data.BaseResource.OnResourceChanged(NickLee.Views.Gantt.Data.ResourcesChangeEventArgs)" />.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseResource.Parent">
            <summary>
            Gets the parent resource of this resource.
            </summary>
            <value>The parent resource, or <see langword="null" /> if there is no parent
            resource.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseResource.Reservations">
            <summary>
            Gets the reservations associated with this resource.
            </summary>
            <value>A collection of <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> objects.</value>
            <example>
            <para lang="C#,Visual Basic">The following code displays the reservations
            of a resource.
            </para>
            <code lang="C#">
            IResource resource = ...;
            foreach (IReservation reservation in resource.Reservations) {
            IActivity activity = reservation.Activity;
            Console.WriteLine("The activity " + activity.ID + " is used by this reservation.");
            }
            </code>
            <code lang="Visual Basic">
            Dim resource As IResource = ...
            Dim reservation As IReservation
            For Each reservation in resource.Reservations
            Dim activity As IActivitiy = reservation.Activity
            Console.WriteLine("The activity " + activity.ID + " is used by this reservation.")
            Next
            </code>
            </example>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.BaseConstraintCollection">
            <summary>
            Defines a collection of <see cref="T:NickLee.Views.Gantt.Data.BaseConstraint" /> objects.
            </summary>
            <remarks>This class is used by the <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModel" /> class.</remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.IConstraintCollection">
            <summary>
            Defines a collection of <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> objects.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IConstraintCollection.Add(NickLee.Views.Gantt.Data.IConstraint)">
            <summary>
            When implemented by a class, adds the specified constraint at the end of the collection.
            </summary>
            <param name="constraint">The <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> to add.</param>
            <returns>The zero-based index of the position of the inserted constraint.</returns>
            <remarks>The Gantt model must be notified of the change in the collection using the
            <see cref="T:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IConstraintCollection.AddRange(NickLee.Views.Gantt.Data.IConstraint[])">
            <summary>
            When implemented by a class, adds the specified constraints at the end of the collection.
            </summary>
            <param name="constraints">An array of <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> objects.</param>
            <remarks>The Gantt model must be notified of the change in the collection using the
            <see cref="T:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IConstraintCollection.Clear">
            <summary>
            When implemented by a class, removes all activities from the collection.
            </summary>
            <remarks>The Gantt model must be notified of the change in the collection using the
            <see cref="T:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IConstraintCollection.Contains(NickLee.Views.Gantt.Data.IConstraint)">
            <summary>
            When implemented by a class, determines if the specified <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> is a member of the collection.
            </summary>
            <param name="constraint">The <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> to locate in the collection.</param>
            <returns><see langword="true" /> if the <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> is a member of the collection;
            <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IConstraintCollection.Remove(NickLee.Views.Gantt.Data.IConstraint)">
            <summary>
            When implemented by a class, removes the specified constraint from the collection.
            </summary>
            <param name="constraint">The <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> to remove.</param>
            <remarks>The Gantt model must be notified of the change in the collection using the
            <see cref="T:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IConstraintCollection.RemoveRange(NickLee.Views.Gantt.Data.IConstraint[])">
            <summary>
            When implemented by a class, removes a range of constraints from the collection.
            </summary>
            <param name="constraints">An array of <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> objects.</param>
            <remarks>The Gantt model must be notified of the change in the collection using the
            <see cref="T:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IConstraintCollection.GanttModel">
            <summary>
            When implemented by a class, gets the Gantt model to which this collection belongs.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> instance.</value>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseConstraintCollection.#ctor(NickLee.Views.Gantt.Data.BaseGanttModel)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.BaseConstraintCollection" /> class.
            </summary>
            <param name="model">The Gantt data model.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseConstraintCollection.Add(NickLee.Views.Gantt.Data.IConstraint)">
            <summary>
            Adds the specified constraint at the end of the collection.
            </summary>
            <param name="constraint">The <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> to add.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseConstraintCollection.AddRange(NickLee.Views.Gantt.Data.IConstraint[])">
            <summary>
            Adds the specified constraints at the end of the collection.
            </summary>
            <param name="constraints">An array of <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> objects.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseConstraintCollection.Clear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseConstraintCollection.Contains(NickLee.Views.Gantt.Data.IConstraint)">
            <summary>
            Determines if the specified <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> is a member of the collection.
            </summary>
            <param name="constraint">The <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> to locate in the collection.</param>
            <returns><see langword="true" /> if the <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> is a member of the collection;
            <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseConstraintCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the elements copied from the collection. The array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array where copying starts.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseConstraintCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> for the entire collection.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseConstraintCollection.OnConstraintCollectionChanged(NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs)">
            <summary>
            Notifies the Gantt data model that the collection has changed.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs" /> that contains the event data.</param>
            <remarks>This method must be called each time the collection has changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseConstraintCollection.OnConstraintCollectionChanging(NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs)">
            <summary>
            Notifies the Gantt data model that the collection is changing.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs" /> that contains the event data.</param>
            <remarks>This method must be called each time the collection is changing.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseConstraintCollection.Remove(NickLee.Views.Gantt.Data.IConstraint)">
            <summary>
            Removes the specified constraint from the collection.
            </summary>
            <param name="constraint">The <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> to remove.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseConstraintCollection.RemoveRange(NickLee.Views.Gantt.Data.IConstraint[])">
            <summary>
            Removes the specified constraints from the collection.
            </summary>
            <param name="constraints">An array of <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> objects.</param>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseConstraintCollection.Count">
            <summary>
            Gets the number of constraints actually contained in the collection.
            </summary>
            <value>The number of constraints actually contained in the collection.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseConstraintCollection.GanttModel">
            <summary>
            Gets the Gantt data model to which this collection belongs.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseConstraintCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
            <value><see langword="true" /> if access to the collection is synchronized (thread-safe); <see langword="false" /> otherwise. The default value is <see langword="false" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseConstraintCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
            <value>An object that can be used to synchronize access to the collection.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.BaseActivity">
            <summary>
            Defines an <see langword="abstract" /> implementation of the <see cref="T:NickLee.Views.Gantt.Data.IActivity" />
            interface that can be extended in a straightforward manner for more complex needs.
            </summary>
            <remarks>
            <p>This class is used by the <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModel" /> class.</p>
            <p><see cref="T:NickLee.Views.Gantt.Data.BaseActivity" /> implements the properties of the <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> interface,
            but delegates them to dedicated methods in order to allow another implementation than a simple memory
            implementation. For example, the <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.Name">IActivity.Name</see> property is implemented
            by the <see cref="T:NickLee.Views.Gantt.Data.BaseActivity" /> class, but it delegates the real storage of the
            property to the <see langword="abstract" /> methods <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.GetName" /> and <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.SetName(System.String)" />.
            The <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.Name" /> property handles notification to the model,
            leaving the real storage to be implemented by <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.GetName" /> and
            <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.SetName(System.String)" /> in a subclass.</p>
            </remarks>
            <seealso cref="T:NickLee.Views.Gantt.Data.SimpleActivity" />
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to populate a <see cref="T:NickLee.Views.Gantt.Data.SimpleGanttModel" />.
            </para>
            <code lang="C#">
            private void Populate(IGanttModel model) {
            IActivity activity;
            IResource[] resources = new IResource[10];
            IActivity[] activities = new IActivity[20];
            IReservation[] reservations = new IReservation[20];

            for (int i = 0; i &lt; 10; ++i) {
            // First create the resource...
            resources[i] = model.NewResource();
            resources[i].Name = "Room " + i.ToString();

            // Add a conference in the morning
            activity = model.NewActivity();
            activity.Name = "Morning Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4));
            activities[i*2] = activity;

            // Create the reservation for this activity
            reservations[i*2] = model.NewReservation(activity, resources[i]);

            // Add a conference in the afternoon
            activity = model.NewActivity();
            activity.Name = "Afternoon Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4));
            activities[i*2 + 1] = activity;

            // Create the reservation for this activity
            reservations[i*2 + 1] = model.NewReservation(activity, resources[i]);
            }
            model.Activities.AddRange(activities);
            model.Resources.AddRange(resources);
            model.Reservations.AddRange(reservations);
            }
            </code>
            <code lang="Visual Basic">
            Sub Populate(ByVal model As IGanttModel)
            Dim activity As IActivity
            Dim resources(10) As IResource
            Dim activities(20) As IActivity
            Dim reservations(20) As IReservation

            For i As Integer = 0 To 9

            ' First create the resource...
            resources(i) = model.NewResource()
            resources(i).Name = "Room " + i.ToString()

            ' Add a conference in the morning
            activity = model.NewActivity()
            activity.Name = "Morning Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4))
            activities(i * 2) = activity

            ' Create the reservation for this activity
            reservations(i * 2) = model.NewReservation(activity, resources(i))

            ' Add a conference in the afternoon
            activity = model.NewActivity()
            activity.Name = "Afternoon Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4))
            activities(i * 2 + 1) = activity

            ' Create the reservation for this activity
            reservations(i * 2 + 1) = model.NewReservation(activity, resources(i))

            Next

            model.Activities.AddRange(activities)
            model.Resources.AddRange(resources)
            model.Reservations.AddRange(reservations)
            End Sub
            </code>
            </example>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.IActivity">
            <summary>
            Defines the abstract behavior of a Gantt activity.
            </summary>
            <remarks>
            <p>Each activity has a name (see <see cref="P:NickLee.Views.Gantt.Data.IActivity.Name" />), an identifier (<see cref="P:NickLee.Views.Gantt.Data.IActivity.ID" />),
            a start time (<see cref="P:NickLee.Views.Gantt.Data.IActivity.StartTime" />), and a duration (<see cref="P:NickLee.Views.Gantt.Data.IActivity.Duration" />).</p>
            <p>Activities are hierarchical objects: an activity can have subactivities.</p>
            <p>Implementations of this interface are expected to notify the Gantt model
            of any change using the <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> event class.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to populate a <see cref="T:NickLee.Views.Gantt.Data.SimpleGanttModel" />.
            </para>
            <code lang="C#">
            private void Populate(IGanttModel model) {
            IActivity activity;
            IResource[] resources = new IResource[10];
            IActivity[] activities = new IActivity[20];
            IReservation[] reservations = new IReservation[20];

            for (int i = 0; i &lt; 10; ++i) {
            // First create the resource...
            resources[i] = model.NewResource();
            resources[i].Name = "Room " + i.ToString();

            // Add a conference in the morning
            activity = model.NewActivity();
            activity.Name = "Morning Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4));
            activities[i*2] = activity;

            // Create the reservation for this activity
            reservations[i*2] = model.NewReservation(activity, resources[i]);

            // Add a conference in the afternoon
            activity = model.NewActivity();
            activity.Name = "Afternoon Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4));
            activities[i*2 + 1] = activity;

            // Create the reservation for this activity
            reservations[i*2 + 1] = model.NewReservation(activity, resources[i]);
            }
            model.Activities.AddRange(activities);
            model.Resources.AddRange(resources);
            model.Reservations.AddRange(reservations);
            }
            </code>
            <code lang="Visual Basic">
            Sub Populate(ByVal model As IGanttModel)
            Dim activity As IActivity
            Dim resources(10) As IResource
            Dim activities(20) As IActivity
            Dim reservations(20) As IReservation

            For i As Integer = 0 To 9

            ' First create the resource...
            resources(i) = model.NewResource()
            resources(i).Name = "Room " + i.ToString()

            ' Add a conference in the morning
            activity = model.NewActivity()
            activity.Name = "Morning Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4))
            activities(i * 2) = activity

            ' Create the reservation for this activity
            reservations(i * 2) = model.NewReservation(activity, resources(i))

            ' Add a conference in the afternoon
            activity = model.NewActivity()
            activity.Name = "Afternoon Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4))
            activities(i * 2 + 1) = activity

            ' Create the reservation for this activity
            reservations(i * 2 + 1) = model.NewReservation(activity, resources(i))

            Next

            model.Activities.AddRange(activities)
            model.Resources.AddRange(resources)
            model.Reservations.AddRange(reservations)
            End Sub
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IActivity.Adjusting">
            <summary>
            When implemented by a class, indicates whether the activity is adjusting its time bounds.
            </summary>
            <value><see langword="true" /> if the activity is adjusting its time bounds;
            <see langword="false" /> otherwise.</value>
            <remarks><p>This property can be used to determine whether the activity bounds are being
            changed. It is used when the activity is being moved interactively, using a drag-and-drop
            operation for example, to allow listeners to not react to each move.</p>
            <p>When beginning an interactive move operation, the property is set to <see langword="true" />.
            After completing the move operation, the property is reset to <see langword="false" />,
            which triggers a property change event of the <see cref="P:NickLee.Views.Gantt.Data.IActivity.TimeInterval" /> property.</p>
            <p>When setting the value, the model must be notified of the property change using the
            <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> event class.</p>
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IActivity.ChildActivities">
            <summary>
            When implemented by a class, gets the collection of subactivities of the activity.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IActivityCollection" /> instance.</value>
            <remarks>Use this collection to add or remove subactivities.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample first creates an activity with a subactivity,
            and then add them to a Gantt data model.
            </para>
            <code lang="C#">
            IGanttModel model = new SimpleGanttModel();
            IActivity activity = model.NewActivity();
            IActivity child = model.NewActivity();
            activity.ChildActivities.Add(child);
            model.Activities.Add(activity);
            </code>
            <code lang="Visual Basic">
            Dim model As New SimpleGanttModel
            Dim activity As IActivity = model.NewActivity()
            Dim child As IActivity = model.NewActivity()
            activity.ChildActivities.Add(child)
            model.Activities.Add(activity)
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IActivity.Duration">
            <summary>
            When implemented by a class, gets or sets the duration of the activity.
            </summary>
            <value>A <see cref="T:System.TimeSpan" /> structure.</value>
            <remarks>When setting the value, the model must be notified of the property change using the
            <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IActivity.EndTime">
            <summary>
            When implemented by a class, gets or sets the end time of the activity.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure.</value>
            <remarks>When setting the value, the model must be notified of the property change using the
            <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IActivity.FromConstraints">
            <summary>
            When implemented by a class, gets the constraints whose source is this activity.
            </summary>
            <value>A collection of <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> objects.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IActivity.GanttModel">
            <summary>
            When implemented by a class, gets the Gantt model associated with the activity.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IActivity.ID">
            <summary>
            When implemented by a class, gets or sets the unique identifier of the activity.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the unique identifier of the
            activity.</value>
            <remarks><p>When setting the value, the model must be notified of the property change using the
            <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> event class.</p>
            <p>If an activity with the same identifier is already present in the model,
            an exception should be thrown.</p></remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IActivity.Info">
            <summary>
            When implemented by a class, gets or sets text information about the activity.
            </summary>
            <value>A <see cref="T:System.String" /> that represents text information about the
            activity.</value>
            <remarks>When setting the value, the model must be notified of the property change using the
            <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IActivity.IsInModel">
            <summary>
            When implemented by a class, indicates whether the activity has already been added to the model.
            </summary>
            <value><see langword="true" /> if the activity has been added to the model;
            <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IActivity.IsSummary">
            <summary>
            When implemented by a class, indicates whether the activity is a summary of its subactivities.
            </summary>
            <value><see langword="true" /> if the activity is a summary of its subactivities;
            <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IActivity.Milestone">
            <summary>
            When implemented by a class, gets or sets a value indicating whether the activity is a milestone.
            </summary>
            <value><see langword="true" /> if the activity is a milestone;
            <see langword="false" /> otherwise.</value>
            <remarks>When setting the value, the model must be notified of the property change using the
            <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IActivity.Name">
            <summary>
            When implemented by a class, gets or sets the activity name.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the activity name.</value>
            <remarks>When setting the value, the model must be notified of the property change using the
            <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IActivity.Parent">
            <summary>
            When implemented by a class, gets the parent activity of this activity.
            </summary>
            <value>The parent activity, or <see langword="null" /> if there is no parent
            activity.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IActivity.Reservations">
            <summary>
            When implemented by a class, gets the reservations associated with this activity.
            </summary>
            <value>A collection of <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> objects.</value>
            <example>
            <para lang="C#,Visual Basic">The following code displays the reservations
            of an activity.
            </para>
            <code lang="C#">
            IActivity activity = ...;
            foreach (IReservation reservation in activity.Reservations) {
            IResource resource = reservation.Resource;
            if (resource != null)
            Console.WriteLine("The resource " + resource.ID + " has been reserved.");
            }
            </code>
            <code lang="Visual Basic">
            Dim activity As IActivity = ...
            Dim reservation As IReservation
            For Each reservation in activity.Reservations
            Dim resource As IResource = reservation.Resource
            If Not (resource Is Nothing) Then
            Console.WriteLine("The resource " + resource.ID + " has been reserved.")
            End If
            Next
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IActivity.StartTime">
            <summary>
            When implemented by a class, gets or sets the start time of the activity.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure.</value>
            <remarks>When setting the value, the model must be notified of the property change using the
            <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IActivity.TimeInterval">
            <summary>
            When implemented by a class, gets or sets the time interval of the activity.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> structure.</value>
            <remarks>When setting the value, the model must be notified of the property change using the
            <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IActivity.ToConstraints">
            <summary>
            When implemented by a class, gets the constraints whose destination is this activity.
            </summary>
            <value>A collection of <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> objects.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IActivity.WorkComplete">
            <summary>
            When implemented by a class, gets or sets a value that represents the completion of the activity.
            </summary>
            <value>A <see cref="T:System.Single" /> in the range [0..1].</value>
            <remarks>When setting the value, the model must be notified of the property change using the
            <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivity.#ctor(NickLee.Views.Gantt.Data.BaseGanttModel)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.BaseActivity" /> class.
            </summary>
            <param name="model">The Gantt data model.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="model" /> is <see langword="null" />.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivity.ComputeIntervalFromChildren">
            <summary>
            Computes the time interval for this activity as the summary of its child activities.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivity.GetAllowSummary">
            <summary>
            Gets a value indicating whether this activity can represent the summary of its child
            activities.
            </summary>
            <returns><see langword="true" /> if the activity can represent a summary;
            <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivity.GetCustomProperty(System.String)">
            <summary>
            Gets a custom property by its name.
            </summary>
            <param name="name">The name of the custom property.</param>
            <returns>The value for the property specified by <paramref name="name" />, or
            <see langword="null" /> if no such property exists.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivity.GetID">
            <summary>
            Gets the unique identifier of the activity.
            </summary>
            <returns>The unique identifier of the activity.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivity.GetInfo">
            <summary>
            Gets text information about the activity.
            </summary>
            <returns>Text information about the activity.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivity.GetMilestone">
            <summary>
            Gets a value indicating whether the activity is a milestone.
            </summary>
            <returns><see langword="true" /> if the activity is a milestone;
            <see langword="false" /> otherwise. The default value is <see langword="false" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivity.GetName">
            <summary>
            Gets the activity name.
            </summary>
            <returns>The activity name.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivity.GetTimeInterval">
            <summary>
            Gets the time interval of the activity.
            </summary>
            <returns>The time interval of the activity.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivity.GetWorkComplete">
            <summary>
            Gets the value of completion of the activity.
            </summary>
            <returns>The value of completion of the activity.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivity.IsDurationReadOnly">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.Duration" /> property is read-only.
            </summary>
            <returns><see langword="true" /> if the <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.Duration" /> property is read-only; Otherwise,
            <see langword="false" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivity.IsEndTimeReadOnly">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.EndTime" /> property is read-only.
            </summary>
            <returns><see langword="true" /> if the <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.EndTime" /> property is read-only; Otherwise,
            <see langword="false" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivity.IsStartTimeReadOnly">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.StartTime" /> property is read-only.
            </summary>
            <returns><see langword="true" /> if the <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.StartTime" /> property is read-only; Otherwise,
            <see langword="false" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivity.IsTimeIntervalReadOnly">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.TimeInterval" /> property is read-only.
            </summary>
            <returns><see langword="true" /> if the <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.TimeInterval" /> property is read-only; Otherwise,
            <see langword="false" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivity.OnActivityChanged(NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)">
            <summary>
            Is called to notify the Gantt data model that the activity has changed.
            </summary>
            <param name="e">An <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> that contains the event data.</param>
            <remarks><p>Called when the activity is changed.</p></remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivity.OnActivityChanging(NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)">
            <summary>
            Is called to notify the Gantt data model that the activity is changing.
            </summary>
            <param name="e">An <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> that contains the event data.</param>
            <remarks><p>Called before the activity is changed.</p></remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivity.SetAllowSummary(System.Boolean)">
            <summary>
            Sets a value indicating whether this activity can represent the summary of its child
            activities.
            </summary>
            <param name="allowSummary"><see langword="true" /> if the activity can represent a summary;
            <see langword="false" /> otherwise.</param>
            <remarks>The implementation of this method must not notify the model, which is done by the
            <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.AllowSummary" /> property.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivity.SetCustomProperty(System.String,System.Object)">
            <summary>
            Sets a custom property on the activity.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The value of the property.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivity.SetID(System.String)">
            <summary>
            Sets the unique identifier for the activity.
            </summary>
            <param name="id">The new unique identifier of the activity.</param>
            <remarks>The implementation of this method must not notify the model, which is done by the
            <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.ID" /> property.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivity.SetInfo(System.String)">
            <summary>
            Sets text information about the activity.
            </summary>
            <param name="info">The new text information of the activity.</param>
            <remarks>The implementation of this method must not notify the model, which is done by the
            <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.Info" /> property.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivity.SetMilestone(System.Boolean)">
            <summary>
            Sets a value indicating whether the activity is a milestone.
            </summary>
            <param name="milestone"><see langword="true" /> if the activity is a milestone;
            <see langword="false" /> otherwise. The default value is <see langword="false" />.</param>
            <remarks>The implementation of this method must not notify the model, which is done by the
            <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.Milestone" /> property.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivity.SetName(System.String)">
            <summary>
            Sets the activity name.
            </summary>
            <param name="name">The new name for the activity.</param>
            <remarks>The implementation of this method must not notify the model, which is done by the
            <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.Name" /> property.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivity.SetTimeInterval(NickLee.Views.Gantt.DateTimeInterval)">
            <summary>
            Sets the time interval of the activity.
            </summary>
            <param name="interval">The new time interval of the activity.</param>
            <remarks>The implementation of this method must not notify the model, which is done by the
            <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.TimeInterval" />, <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.StartTime" />, <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.EndTime" />, and <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.Duration" />
            properties.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivity.SetWorkComplete(System.Single)">
            <summary>
            Sets the value of completion of the activity.
            </summary>
            <param name="workComplete">The new value of completion for the activity.</param>
            <remarks>The implementation of this method must not notify the model, which is done by the
            <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.WorkComplete" /> property.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivity.ToString">
            <summary>
            This member overrides <see cref="M:System.Object.ToString">Object.ToString</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseActivity.Adjusting">
            <summary>
            Indicates whether the activity is adjusting its time bounds.
            </summary>
            <value><see langword="true" /> if the activity is adjusting its time bounds;
            <see langword="false" /> otherwise.</value>
            <remarks>This property can be used to determine whether the activity bounds are being
            changed. It is used when the activity is being moved interactively, using a drag-and-drop
            operation for example, to allow listeners to not react to each move.
            <p>When beginning an interactive move operation, the property is set to <see langword="true" />.
            After completing the move operation, the property is reset to <see langword="false" />,
            which triggers a property change event of the <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.TimeInterval" /> property.</p>
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseActivity.AllowSummary">
            <summary>
            Gets or sets a value indicating whether this activity can represent the summary of its
            child activities.
            </summary>
            <value><see langword="true" /> if the activity can represent a summary;
            <see langword="false" /> otherwise.</value>
            <remarks>When setting the value, <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.OnActivityChanging(NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)" /> is called with the appropriate event.
            If the operation is not canceled using the <see cref="P:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs.Cancel" />
            property of the event, it sets the new value by calling <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.SetAllowSummary(System.Boolean)" /> and calls
            <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.OnActivityChanged(NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)" />.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseActivity.AutoComputeSummary">
            <summary>
            Indicates that the model automatically computes the duration
            of summary activities based on its children.
            </summary>
            <value> A boolean value that indicates if the model automatically computes the time span
            of summary activities based on its children.
            </value>
            <remarks>The default implementation returns <see langword="true" />.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseActivity.ChildActivities">
            <summary>
            Gets the collection of sub-activities of the activity.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IActivityCollection" /> instance.</value>
            <remarks>Use this collection to add or remove subactivities.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample first creates an activity with a subactivity,
            and then add them to a Gantt data model.
            </para>
            <code lang="C#">
            IGanttModel model = new SimpleGanttModel();
            IActivity activity = model.NewActivity();
            IActivity child = model.NewActivity();
            activity.ChildActivities.Add(child);
            model.Activities.Add(activity);
            </code>
            <code lang="Visual Basic">
            Dim model As New SimpleGanttModel
            Dim activity As IActivity = model.NewActivity()
            Dim child As IActivity = model.NewActivity()
            activity.ChildActivities.Add(child)
            model.Activities.Add(activity)
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseActivity.Duration">
            <summary>
            Gets or sets the duration of the activity.
            </summary>
            <value>A <see cref="T:System.TimeSpan" /> structure.</value>
            <remarks>When setting the value, <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.OnActivityChanging(NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)" /> is called with the appropriate event.
            If the operation is not canceled using the <see cref="P:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs.Cancel" />
            property of the event, it sets the new value by calling <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.SetTimeInterval(NickLee.Views.Gantt.DateTimeInterval)" /> and calls
            <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.OnActivityChanged(NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)" />.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseActivity.EndTime">
            <summary>
            Gets or sets the end time of the activity.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure.</value>
            <remarks><p>When setting the value, if it is inferior than the <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.StartTime" /> property,
            the whole interval is changed so that the new start time will be the specified end
            time minus the actual duration. As a consequence, this property uses either the
            <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.Duration" /> property, or the <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.StartTime" /> property.</p>
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseActivity.FromConstraints">
            <summary>
            Gets the constraints whose source is this activity.
            </summary>
            <value>A collection of <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> objects.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseActivity.GanttModel">
            <summary>
            Gets the Gantt data model associated with the activity.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseActivity.ID">
            <summary>
            Gets or sets the unique identifier of the activity.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the unique identifier of the
            activity.</value>
            <remarks>When setting the value, <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.OnActivityChanging(NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)" /> is called with the appropriate event.
            If the operation is not canceled using the <see cref="P:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs.Cancel" />
            property of the event, it sets the new value by calling <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.SetID(System.String)" />, and calls
            <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.OnActivityChanged(NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)" />.
            </remarks>
            <exception cref="T:System.InvalidOperationException">If the activity identifier is not unique.
            </exception>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseActivity.Info">
            <summary>
            Gets or sets text information about the activity.
            </summary>
            <value>A <see cref="T:System.String" /> that represents text information about the
            activity.</value>
            <remarks>When setting the value, <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.OnActivityChanging(NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)" /> is called with the appropriate event.
            If the operation is not canceled using the <see cref="P:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs.Cancel" />
            property of the event, it sets the new value by calling <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.SetInfo(System.String)" /> and calls
            <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.OnActivityChanged(NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)" />.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseActivity.IsInModel">
            <summary>
            Indicates whether the activity has already been added to the model.
            </summary>
            <value><see langword="true" /> if the activity has been added to the model;
            <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseActivity.IsSummary">
            <summary>
            Indicates whether the activity is a summary of its sub-activities.
            </summary>
            <value><see langword="true" /> if the activity is a summary of its sub-activities;
            <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseActivity.Item(System.String)">
            <summary>
            Gets or sets the custom property with the specified name.
            </summary>
            <value>The custom property with the specified name.</value>
            <remarks>Custom properties must be added to the Gantt data model before using this indexer.
            See the <see cref="P:NickLee.Views.Gantt.Data.BaseGanttModel.CustomActivityProperties" /> property for details.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseActivity.Milestone">
            <summary>
            Gets or sets a value indicating whether the activity is a milestone.
            </summary>
            <value><see langword="true" /> if the activity is a milestone;
            <see langword="false" /> otherwise. The default value is <see langword="false" />.</value>
            <remarks>When setting the value, <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.OnActivityChanging(NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)" /> is called with the appropriate event.
            If the operation is not canceled using the <see cref="P:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs.Cancel" />
            property of the event, it sets the new value by calling <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.SetMilestone(System.Boolean)" />, and calls
            <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.OnActivityChanged(NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)" />.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseActivity.Name">
            <summary>
            Gets or sets the activity name.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the activity name.</value>
            <remarks>When setting the value, <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.OnActivityChanging(NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)" /> is called with the appropriate event.
            If the operation is not canceled using the <see cref="P:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs.Cancel" />
            property of the event, it sets the new value by calling <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.SetName(System.String)" /> and calls
            <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.OnActivityChanged(NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)" />.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseActivity.Parent">
            <summary>
            Gets the parent activity of this activity.
            </summary>
            <value>The parent activity, or <see langword="null" /> if there is no parent
            activity.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseActivity.Reservations">
            <summary>
            Gets the reservations associated with this activity.
            </summary>
            <value>A collection of <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> objects.</value>
            <example>
            <para lang="C#,Visual Basic">The following code displays the reservations
            of an activity.
            </para>
            <code lang="C#">
            IActivity activity = ...;
            foreach (IReservation reservation in activity.Reservations) {
            IResource resource = reservation.Resource;
            if (resource != null)
            Console.WriteLine("The resource " + resource.ID + " has been reserved.");
            }
            </code>
            <code lang="Visual Basic">
            Dim activity As IActivity = ...
            Dim reservation As IReservation
            For Each reservation in activity.Reservations
            Dim resource As IResource = reservation.Resource
            If Not (resource Is Nothing) Then
            Console.WriteLine("The resource " + resource.ID + " has been reserved.")
            End If
            Next
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseActivity.StartTime">
            <summary>
            Gets or sets the start time of the activity.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure.</value>
            <remarsk><p>Changing the <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.StartTime" /> property will also change the <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.EndTime" /> property
            with respect to the <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.Duration" /> property. As a consequence, this method calls
            the <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.TimeInterval" /> property.</p></remarsk>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseActivity.TimeInterval">
            <summary>
            Gets or sets the time interval of the activity.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> structure.</value>
            <remarks>When setting the value, <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.OnActivityChanging(NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)" /> is called with the appropriate event.
            If the operation is not canceled using the <see cref="P:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs.Cancel" />
            property of the event, it sets the new value by calling <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.SetTimeInterval(NickLee.Views.Gantt.DateTimeInterval)" />, and calls
            <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.OnActivityChanged(NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)" />.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseActivity.ToConstraints">
            <summary>
            Gets the constraints whose destination is this activity.
            </summary>
            <value>A collection of <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> objects.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseActivity.WorkComplete">
            <summary>
            Gets or sets a value that represents the completion of the activity.
            </summary>
            <value>A <see cref="T:System.Single" /> in the range [0..1]. The default value is <strong>0</strong>.</value>
            <remarks>When setting the value, <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.OnActivityChanging(NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)" /> is called with the appropriate event.
            If the operation is not canceled using the <see cref="P:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs.Cancel" />
            property of the event, it sets the new value by calling <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.SetWorkComplete(System.Single)" /> and calls
            <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.OnActivityChanged(NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)" />.
            </remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.DataGridAppearanceColumn">
            <summary>
            A <strong>DataGridColumn</strong> that displays the appearance of the style.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Web.UI.TimeScale">
            <summary>
            Defines a time scale component that contains several <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> objects.
            </summary>
            <remarks>
            <p>The <strong>TimeScale</strong> class defines a time scale component that contains
            several <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> objects.</p>
            <p><img src="timescale.png" /></p>
            <p>The <see cref="P:NickLee.Views.Gantt.Web.UI.TimeScale.Rows" /> property gives access to the <strong>TimeScaleRow</strong> collection.</p>
            <p>Each row represents a particular <see cref="T:NickLee.Views.Gantt.TimeUnit" /> and is responsible for drawing itself.</p>
            <p>When the <see cref="T:NickLee.Views.Gantt.ITimeLine" /> is connected to this time scale changes, it may be useful to
            change the rows of the time scale, to display only relevant rows. The <see cref="P:NickLee.Views.Gantt.Web.UI.TimeScale.RowPolicy" /> property
            specifies the policy used to recompute rows when the zoom factor changes. When <see cref="P:NickLee.Views.Gantt.Web.UI.TimeScale.RowPolicy" /> is
            set to <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowPolicy">Manual</see>, the time scale does not change its rows when the zoom factor changes.
            In this case, you can use the <see cref="E:NickLee.Views.Gantt.Web.UI.TimeScale.AdjustRows" /> event to manage the rows.</p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.TimeScale.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Web.UI.TimeScale" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.TimeScale.AddParsedSubObject(System.Object)">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.AddParsedSubObject(System.Object)">Control.AddParsedSubObject</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.TimeScale.Dispose">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.Dispose">Control.Dispose</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.TimeScale.FilterViewStateProperties(System.Collections.IDictionary)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Web.UI.ImageControl.FilterViewStateProperties(System.Collections.IDictionary)">ImageControl.FilterViewStateProperties</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.TimeScale.OnClick(System.Web.UI.ImageClickEventArgs)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Web.UI.ImageControl.OnClick(System.Web.UI.ImageClickEventArgs)">ImageControl.OnClick</see>.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.TimeScale.AdjustRows">
            <summary>
            Occurs when the rows of the time scale must be recomputed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.TimeScale.RowsChanged">
            <summary>
            Occurs when the rows of the time scale have changed.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.TimeScale.AutoSize">
            <summary>
            Gets or sets a value indicating whether the control automatically adjusts its height to the font height.
            </summary>
            <value><see langword="true" /> if the control adjusts its height to closely fit
            its contents; <see langword="false" /> otherwise. The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.TimeScale.EnableRowViewState">
            <summary>
            Gets or sets a value indicating whether the <see cref="P:NickLee.Views.Gantt.Web.UI.TimeScale.Rows" /> property
            should be serialized into the view state.
            </summary>
            <value><see langword="true" /> if the <strong>Rows</strong> property should
            be serialized into the view state; otherwise, <see langword="false" />.
            The default value is <see langword="true" />.</value>
            <remarks>If you do not modify the rows of the time scale during round-trips,
            you should set this property to <see langword="false" /> to speed up page loading.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.TimeScale.FlatStyle">
            <summary>
            Gets or sets the flat style appearance of the control.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Web.UI.FlatStyle" /> values.
            The default value is <strong>Standard</strong>.</value>
            <remarks>Setting this property to either <strong>Flat</strong> or <strong>Popup</strong>
            has the same effect.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.TimeScale.IsInteractive">
            <summary>
            Overridden. See <see cref="P:NickLee.Views.Web.UI.ImageControl.IsInteractive">ImageControl.IsInteractive</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.TimeScale.PaintTicks">
            <summary>
            Gets or sets a value indicating whether the time scale displays ticks.
            </summary>
            <value><see langword="true" /> if the time scale displays ticks;
            <see langword="false" /> otherwise. The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.TimeScale.RowPolicy">
            <summary>
            Gets or sets the policy used to handle the time scale rows.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowPolicy" /> values. The default value is
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowPolicy">TwoRows</see>.</value>
            <remarks>This property is used each time the zoom factor of the time scale changes to recompute
            the new rows of the time scale.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.TimeScale.Rows">
            <summary>
            Gets the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> objects.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection" /> reference.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.TimeScale.TickColor">
            <summary>
            Gets or sets the color used to draw the ticks of the control.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> structure.</value>
            <remarks>The default value for the tick color is the foreground color of
            the time scale.</remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Web.UI.ScheduleChart">
            <summary>
            A Schedule chart is a chart that displays the schedule of resources.
            </summary>
            <remarks>
            <p>The Schedule chart is made up of rows, each containing one single resource.
            The left part of the chart displays information related to resources.
            The right part of the chart shows resource reservations.</p>
            <p><img src="schedulechart.png" /></p>
            <p>The <strong>ScheduleChart</strong> control will display the information
            contained in a Gantt data model. You will set the Gantt data model of a <strong>ScheduleChart</strong>
            using the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttModel" /> property.</p>
            </remarks>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ResourceTable" />
        </member>
        <member name="T:NickLee.Views.Gantt.Web.UI.HierarchyChart">
            <summary>
            Defines the <see langword="abstract" /> base class for the <see cref="T:NickLee.Views.Gantt.Web.UI.GanttChart" />, <see cref="T:NickLee.Views.Gantt.Web.UI.ScheduleChart" /> and <see cref="T:NickLee.Views.Gantt.Web.UI.ReservationChart" /> classes.
            </summary>
            <remarks>The <strong>HierarchyChart</strong> is the base class for the <see cref="T:NickLee.Views.Gantt.Web.UI.GanttChart" />, <see cref="T:NickLee.Views.Gantt.Web.UI.ScheduleChart" /> and
            <see cref="T:NickLee.Views.Gantt.Web.UI.ReservationChart" /> classes.
            The left part is a <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttTable" /> that displays the activities or resources of
            a given <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />; the right part contains a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> and a
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> that displays the activities or reservations.</remarks>
            <seealso cref="T:NickLee.Views.Gantt.Web.UI.GanttChart" />
            <seealso cref="T:NickLee.Views.Gantt.Web.UI.ScheduleChart" />
            <seealso cref="T:NickLee.Views.Gantt.Web.UI.ReservationChart" />
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.AddParsedSubObject(System.Object)">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.AddParsedSubObject(System.Object)">Control.AddParsedSubObject</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.AddSelectionInterval(System.Int32,System.Int32)">
            <summary>
            Adds the rows in the specified range to the selection.
            </summary>
            <remarks>The method selects the rows in the range defined by the
            two indeces. It is not necessary that <strong>index0</strong> is smaller than <strong>index1</strong>. The
            rows at index0 and index1 are also selected.</remarks>
            <param name="index0">The first index to add to the selection.</param>
            <param name="index1">The last index to add to the selection.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.ClearSelection">
            <summary>
            Removes all the selected rows from the selection.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.CollapseAll">
            <summary>
            Collapses recursively the whole tree.
            </summary>
            <seealso cref="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.ExpandAll(System.Int32)" />
            <seealso cref="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.ShowOutlineLevel(System.Int32)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.CollapseAll(System.Int32)">
            <summary>
            Collapses the specified row and all its descendant nodes.
            </summary>
            <param name="row">The zero-based index of the row.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.CollapseRow(System.Int32)">
            <summary>
            Collapses the specified row.
            </summary>
            <param name="row">The zero-based index of the row.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.Dispose">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.Dispose">Control.Dispose</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.EnsureRowVisible(System.Int32)">
            <summary>
            Scrolls the sheet vertically so that the specified row becomes
            visible.
            </summary>
            <param name="rowIndex">The row index.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.ExpandAll">
            <summary>
            Expands recursively the whole tree.
            </summary>
            <seealso cref="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.CollapseAll(System.Int32)" />
            <seealso cref="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.ShowOutlineLevel(System.Int32)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.ExpandAll(System.Int32)">
            <summary>
            Expands the specified row and all its descendant nodes.
            </summary>
            <param name="row">The zero-based index of the row.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.ExpandRow(System.Int32)">
            <summary>
            Expands the specified row.
            </summary>
            <param name="row">The zero-based index of the row.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.FilterViewStateProperties(System.Collections.IDictionary)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Web.UI.ImageControl.FilterViewStateProperties(System.Collections.IDictionary)">ImageControl.FilterViewStateProperties</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.GenerateImageURL">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Web.UI.ImageControl.GenerateImageURL">ImageControl.GenerateImageURL</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.GetIDFromValue(System.Object)">
            <summary>
            Returns the ID of the specified object.
            </summary>
            <param name="o">An object.</param>
            <returns>A <see cref="T:System.String" /> that represents the ID of <paramref name="o" />.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.GetPrintDocument">
            <summary>
            Returns a <see cref="T:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPrintDocument" /> connected
            to this chart.
            </summary>
            <returns>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPrintDocument" /> connected
            to this chart.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.GetRowHeight(System.Int32)">
            <summary>
            Gets the height of the specified row.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <returns>The size of the specified row.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.GetRowPosition(System.Int32)">
            <summary>
            Gets the vertical offset of the specified row.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <returns>The vertical offset of the specified row.</returns>
            <remarks>The <see cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.FirstVisibleRow" /> row position is <c>0</c>.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.GetSelection">
            <summary>
            Gets the selected rows of the chart.
            </summary>
            <returns>An array of zero-based indeces of the selected rows.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.GetValueAt(System.Int32)">
            <summary>
            Gets the value of the specified row.
            </summary>
            <param name="index">The zero-based index of the row.</param>
            <returns>The value of the specified row.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.GetValueFromID(System.String)">
            <summary>
            Returns the object corresponding to the specified ID.
            </summary>
            <param name="id">The ID of the object.</param>
            <returns>An <see cref="T:System.Object" /> with the specified ID.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.IndexOfRow(System.Object)">
            <summary>
            Gets the zero-based index of the specified value in the row controller.
            </summary>
            <param name="row">The value.</param>
            <returns>The zero-based index of the specified value in the chart, or
            <c>-1</c> if <paramref name="row" /> is not in the chart.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.IsRowExpanded(System.Int32)">
            <summary>
            Gets a value indicating whether the specified row is expanded.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <returns>A value indicating whether the specified node is expanded.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.IsSelected(System.Int32)">
            <summary>
            Returns a value indicating whether the specified row is selected or not.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <returns>A value indicating whether the specified row is selected or not.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.LoadViewState(System.Object)">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.LoadViewState(System.Object)">Control.LoadViewState</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.OnClick(System.Web.UI.ImageClickEventArgs)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Web.UI.ImageControl.OnClick(System.Web.UI.ImageClickEventArgs)">ImageControl.OnClick</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.OnInit(System.EventArgs)">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)">Control.OnInit</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.OnLoad(System.EventArgs)">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)">Control.OnLoad</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.PageDown">
            <summary>
            Scrolls down the chart of a whole page.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.PageUp">
            <summary>
            Scrolls up the chart of a whole page.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.RemoveSelectedRows">
            <summary>
            Deletes the selected rows.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.RemoveSelectionInterval(System.Int32,System.Int32)">
            <summary>
            Deselects the rows in the specified range.
            </summary>
            <remarks>The method deselects the rows in the range defined by the
            two indeces. It is not necessary that <strong>index0</strong> is smaller than <strong>index1</strong>. The
            rows at <strong>index0</strong> and <strong>index1</strong> are also deselected.</remarks>
            <param name="index0">The first index to remove from the selection.</param>
            <param name="index1">The last index to remove from the selection.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.RenderImageMap(System.Web.UI.HtmlTextWriter)">
            <summary>
            This method overrides <see cref="M:NickLee.Views.Web.UI.ImageControl.RenderImageMap(System.Web.UI.HtmlTextWriter)">ImageControl.RenderImageMap</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.RenderImageMapAreas(System.Web.UI.HtmlTextWriter)">
            <summary>
            Is called to render image map areas.
            </summary>
            <param name="writer">The writer in which to put the image map areas.</param>
            <remarks>The implementation of this method create image map areas to display
            tooltips for table cells and activities.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.ResetActivityBarStyles">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.ActivityBarStyles" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.ResetGanttTableView">
            <summary>
            Resets the table view of this chart by removing the filter.
            </summary>
            <remarks>
            After calling this method, the <see cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.GanttTableNeedsMapping" /> property returns
            <see langword="false" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.SaveViewState">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.SaveViewState">Control.SaveViewState</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.ScrollDown">
            <summary>
            Scrolls down the chart of one row.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.ScrollLeft">
            <summary>
            Scrolls the time line to the left.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.ScrollRight">
            <summary>
            Scrolls the time line to the right.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.ScrollUp">
            <summary>
            Scrolls up the chart of one row.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.SetRowFilter(NickLee.Views.Windows.Forms.IRowFilter)">
            <summary>
            Sets the row filter used by the table of this chart.
            </summary>
            <param name="filter">An object implementing the <see cref="T:NickLee.Views.Windows.Forms.IRowFilter" /> interface.</param>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.RowFilter" />
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.SetRowGroup(NickLee.Views.Windows.Forms.IRowGroup)">
            <summary>
            Sets the row group used by this chart.
            </summary>
            <param name="group">An object implementing the <see cref="T:NickLee.Views.Windows.Forms.IRowGroup" /> interface.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.SetRowHeight(System.Int32,System.Int32)">
            <summary>
            Sets the height of the specified row.
            </summary>
            <param name="row">The zero-based index of the row.</param>
            <param name="height">The height of the row.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.SetRowHeights(System.Int32)">
            <summary>
            Sets the height of all the rows.
            </summary>
            <param name="height">The new height.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="height" /> is
            negative.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.SetSelected(System.Int32,System.Boolean)">
            <summary>
            Sets the selection state of a single row of the chart.
            </summary>
            <param name="row">The zero-based index of the row whose selection is being changed.</param>
            <param name="value">A value indicating whether the specified row should be selected or not.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.SetSelectionInterval(System.Int32,System.Int32)">
            <summary>
            Sets the selection to the specified range.
            </summary>
            <remarks>The method sets the selection to the range defined by the
            two indeces. It is not necessary that <strong>index0</strong> is smaller than <strong>index1</strong>. The
            rows at <strong>index0</strong> and <strong>index1</strong> are also selected.</remarks>
            <param name="index0">The first index to select.</param>
            <param name="index1">The last index to select.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.ShowOutlineLevel(System.Int32)">
            <summary>
            Displays a specified outline level.
            </summary>
            <remarks>The method will collapse and expand nodes so that only the
            specified outline level is visible. The level must be greater or equal to <strong>1</strong>.</remarks>
            <param name="level">The outline level to display.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.SortRows(System.Collections.IComparer)">
            <summary>
            Sorts the table rows using an <see cref="T:System.Collections.IComparer" />.
            </summary>
            <param name="comparer">The <see cref="T:System.Collections.IComparer" /> implementation to use when
            comparing elements. </param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.SortRows(System.String,System.Boolean)">
            <summary>
            Sorts the table rows using a mapping name.
            </summary>
            <param name="mappingName">The name of the property that will be used to sort
            the nodes.</param>
            <param name="ascending"><see langword="true" /> if the sort is ascending; <see langword="false" />
            otherwise.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.SortRows(System.Object,System.Collections.IComparer,System.Int32)">
            <summary>
            Sorts the children rows of the specified node using an <see cref="T:System.Collections.IComparer" />.
            </summary>
            <param name="node">The parent of the nodes to sort.</param>
            <param name="comparer">The <see cref="T:System.Collections.IComparer" /> implementation to use when
            comparing elements. </param>
            <param name="depth">A depth of <strong>0</strong> will only sort the children of the specified node.
            A negative depth will sort the specified node and its children recursively. Any other value
            specifies the depth of the sort algorithm.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.SortRows(System.Object,System.String,System.Boolean,System.Int32)">
            <summary>
            Sorts the children rows of the specified node using a mapping name.
            </summary>
            <param name="node">The parent of the nodes to sort.</param>
            <param name="mappingName">The name of the property that will be used to sort
            the nodes.</param>
            <param name="ascending"><see langword="true" /> if the sort is ascending; <see langword="false" />
            otherwise.</param>
            <param name="depth">A depth of <strong>0</strong> will only sort the children of the specified node.
            A negative depth will sort the specified node and its children recursively. Any other value
            specifies the depth of the sort algorithm.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.ZoomIn">
            <summary>
            Zooms in the time line.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.ZoomOut">
            <summary>
            Zooms out the time line.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.ZoomToFit">
            <summary>
            Zooms in or zooms out the sheet so that the time bounds fit the sheet.
            </summary>
            <remarks>This method zooms in or zooms out the sheet so
            that the <see cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.TimeBounds" /> fit the sheet. If the
            <see cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.TimeBounds" /> property has its default value, then the time
            bounds are computed dynamically to contain all the activities of the Gantt
            model. Calling this method will ensure that all activities of the Gantt model
            are displayed.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.TimeBounds" />
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.AdjustTimeScaleRows">
            <summary>
            Occurs when the rows of the time scale must be recomputed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.DrawGanttSheetRow">
            <summary>
            Occurs when the Gantt sheet draws rows in owner draw mode.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.GanttSheetOwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows an event handler
            listening to the <see cref="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.DrawGanttSheetRow" /> event. The event handler draws
            selected rows using a specific font. Other rows are painted using the default
            painting algorithm.
            </para>
            <code lang="C#">
            // Attach the event handler
            GanttChart chart = new GanttChart();
            chart.GanttSheetOwnerDraw = true;
            chart.DrawGanttSheetRow += new DrawGanttSheetRowEventHandler(OnDrawSheetRow);

            // The code of the event handler
            private void OnDrawSheetRow(object sender, DrawGanttSheetRowArgs e) {
            if (!e.IsRowSelected)
            e.DrawRow();
            else {
            if (e.IsPaintingBackground)
            e.Graphics.FillRectangle(e.BackBrush, e.Bounds);
            else {
            Font font = new Font(e.GanttSheet.Font, FontStyle.Italic);
            e.DrawRow(e.Bounds, e.BackBrush, e.ForeBrush, font);
            font.Dispose();
            }
            }
            }
            </code>
            <code lang="Visual Basic">
            Dim chart As New GanttChart()
            chart.GanttSheetOwnerDraw = True

            ' The code of the event handler
            Private Sub OnDrawSheetRow(ByVal sender As Object, ByVal e As DrawGanttSheetRowArgs) Handles chart.DrawGanttSheetRow
            If Not e.IsRowSelected Then
            e.DrawRow()
            Else
            If e.IsPaintingBackground Then
            e.Graphics.FillRectangle(e.BackBrush, e.Bounds)
            Else
            Dim font As New Font(e.GanttSheet.Font, FontStyle.Italic)
            e.DrawRow(e.Bounds, e.BackBrush, e.ForeBrush, font)
            font.Dispose()
            End If
            End If
            End Sub
            </code>
            </example>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.GanttSheetOwnerDraw" />
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.DrawGanttTableCell">
            <summary>
            Occurs when the table draw cells in owner draw mode.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.GanttTableOwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows an event handler
            listening to the <see cref="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.DrawGanttTableCell" /> event. The event handler draws
            expanded nodes with children using a specific font. Other nodes are painted using the default
            painting algorithm.
            </para>
            <code lang="C#">
            // Attach the event handler
            GanttChart chart = new GanttChart();
            chart.GanttTableOwnerDraw = true;
            chart.DrawGanttTableCell += new DrawTableCellEventHandler(OnDrawTableCell);

            // The code of the event handler
            private void OnDrawTableCell(object sender, DrawTableCellArgs e) {
            TreeTable table = e.TreeTable;
            object value = table.GetValueAt(e.Row);
            // If the node being drawn has children and is expanded, draw it using
            // an italic font.
            if (table.TreeModel.GetChildCount(value) != 0 &amp;&amp; table.IsRowExpanded(value)) {
            Font font = new Font(e.Font, e.Font.Style | FontStyle.Italic);
            e.DrawCell(e.Bounds, e.BackBrush, e.ForeBrush, font);
            } else
            e.DrawCell();
            }
            </code>
            <code lang="Visual Basic">
            Dim chart As New GanttChart()
            chart.GanttTableOwnerDraw = True

            ' The code of the event handler
            Private Sub OnDrawTableCell(ByVal sender As Object, ByVal e As DrawTableCellArgs) Handles table.DrawGanttTableCell
            Dim table As TreeTable = e.TreeTable
            Dim value As Object = table.GetValueAt(e.Row)
            ' If the node being drawn has children and is expanded, draw it using
            ' an italic font.
            If table.TreeModel.GetChildCount(value) &lt;&gt; 0 And table.IsRowExpanded(value)) Then
            Dim font As New Font(e.Font, e.Font.Style | FontStyle.Italic)
            e.DrawCell(e.Bounds, e.BackBrush, e.ForeBrush, font)
            Else
            e.DrawCell()
            End If
            End Sub
            </code>
            </example>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.GanttTableOwnerDraw" />
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.DrawTimeScaleRow">
            <summary>
            Occurs when the time scale draws rows in owner draw mode.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.TimeScaleOwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.TimeScaleOwnerDraw" />
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.GanttModelChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.GanttModel" /> property has changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.GanttModelChanging">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.GanttModel" /> property is changing on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.NodeStateChanged">
            <summary>
            Event fired after a node has been expanded or collapsed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.NodeStateChanging">
            <summary>
            Occurs when a node is being expanded or collapsed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.RowControllerChanged">
            <summary>
            Occurs when the row controller changes.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.SelectionChanged">
            <summary>
            Occurs when the selection has changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.TimeLineChanged">
            <summary>
            Occurs when the time line has changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.TimeLineChanging">
            <summary>
            Occurs when the time line is changing.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.TimeScaleRowsChanged">
            <summary>
            Occurs when the rows of the time scale have changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.VisibleDurationChanged">
            <summary>
            Occurs when the visible time duration has changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.VisibleWidthChanged">
            <summary>
            Occurs when the visible width has changed.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.ActivityBarHeight">
            <summary>
            Gets or sets the height of activity bars.
            </summary>
            <value>The height of activity bars.</value>
            <remarks>The default value of this property is inherited from the font height
            of the control. To reset this property to its default value, set it to <strong>-1</strong>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.ActivityBarStyles">
            <summary>
            Gets the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> that defines the graphical representation
            of activities in the sheet.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" /> that defines the graphical representation
            of activities in the sheet.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.ActivityToolTip">
            <summary>
            Gets or sets the tooltip format for activities.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the format of the tooltip that
            will be displayed when the mouse hovers activities.</value>
            <remarks>The value of this property is an expression that enables an easy customization of the
            tooltip.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample sets the string displayed by the tooltip as the concatenation of
            the activity name, the activity start time and the activity duration.
            </para>
            <code lang="C#">
            GanttSheet sheet = ...
            sheet.ActivityToolTip = "'Name : ' + Name + '\\n' + {StartTime:m} + '(' + Duration + ')'";
            </code>
            <code lang="Visual Basic">
            Dim sheet As GanttSheet = ...
            sheet.ActivityToolTip = "'Name : ' + Name + '\\n' + {StartTime:m} + '(' + Duration + ')'"
            </code>
            <para lang="C#,Visual Basic">
            Note the use of the '{' and '}' characters to specify a format for the <strong>StartTime</strong>
            property (see <see cref="T:System.Globalization.DateTimeFormatInfo" /> for details about date formats).
            </para>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.AlternatingBackColor">
            <summary>
            Gets or sets the background color of alternating rows for a ledger appearance.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the alternating background color.
            The default value is the system color for windows (<see cref="P:System.Drawing.SystemColors.Window">SystemColors.Window</see>).
            </value>
            <remarks>
            By default, all rows have the same color (the <see cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.BackColor" /> property of the control).
            When you set the <see cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.AlternatingBackColor" /> to a new color, every other row is set to the new color.
            To reset the alternating background color
            to its default value, set the property to <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.AutoGrid">
            <summary>
            Indicates whether the grid of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> should be synchronized
            with the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" />.
            </summary>
            <value><see langword="true" /> if the grid of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> should be synchronized
            with the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" />; <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.BackColor">
            <summary>
            Gets or sets the background color of the chart.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of rows in the chart.
            The default value is the system color for windows (<see cref="P:System.Drawing.SystemColors.Window">SystemColors.Window</see>).
            </value>
            <remarks>
            Whereas the <see cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.BackColor" /> property determines the color of rows
            in the chart, the <see cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.BackgroundColor" /> determines
            the color of the nonrow area, which is only visible when the chart
            is scrolled to the bottom, or if only a few rows
            are contained in the grid.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.BackgroundColor">
            <summary>
            Gets or sets the color of the nonrow area of the chart.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the chart background.
            The default value is the <see cref="P:System.Drawing.SystemColors.AppWorkspace">SystemColors.AppWorkspace</see> color.
            </value>
            <remarks>
            The background color determines the color of the nonrow area
            of the chart, which is only visible when no table is displayed
            by the <strong>TreeTable</strong>, or if the chart is scrolled to the bottom,
            or if only a few rows are contained in the chart.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.BorderColor">
            <summary>
            Overridden. See <see cref="P:System.Web.UI.WebControls.WebControl.BorderColor">WebControl.BorderColor</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.CurrentRow">
            <summary>
            Gets or sets the current row of the row controller.
            </summary>
            <value>The zero-based index of the current row of the row controller.</value>
            <remarks>When changing its <see cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.CurrentRow" />, a row controller should raise the
            appropriate <see cref="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.RowControllerChanged" /> event.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.DateIndicators">
            <summary>
            Gets the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> displayed in the Gantt sheet.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection" /> that defines the date indicators displayed on the sheet.</value>
            <example>
            <para lang="C#,Visual Basic">
            The following example adds a <see cref="T:NickLee.Views.Gantt.Windows.Forms.CurrentDateIndicator" /> in a <see cref="T:NickLee.Views.Gantt.Web.UI.HierarchyChart" />.
            </para>
            <code lang="C#">
            public void AddDateIndicator(HierarchyChart chart) {
            CurrentDateIndicator dateIndicator = new CurrentDateIndicator();
            chart.DateIndicators.Add(dateIndicator);
            }
            </code>
            <code lang="Visual Basic">
            Sub AddDateIndicator(ByVal chart As HierarchyChart)
            Dim dateIndicator As CurrentDateIndicator = New CurrentDateIndicator
            chart.DateIndicators.Add(dateIndicator)
            End Sub
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.EnableBarStyleViewState">
            <summary>
            Gets or sets a value indicating whether the <see cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.ActivityBarStyles" /> property
            should be serialized into the view state.
            </summary>
            <value><see langword="true" /> if the <strong>ActivityBarStyles</strong> property should
            be serialized into the view state; otherwise, <see langword="false" />.
            The default value is <see langword="true" />.</value>
            <remarks>If you do not modify the bar styles of the Gantt sheet during round-trips,
            you should set this property to <see langword="false" /> to speed up page loading.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.EnableDateIndicatorsViewState">
            <summary>
            Gets or sets a value indicating whether the <see cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.DateIndicators" /> property
            should be serialized into the view state.
            </summary>
            <value><see langword="true" /> if the <strong>DateIndicators</strong> property should
            be serialized into the view state; otherwise, <see langword="false" />.
            The default value is <see langword="true" />.</value>
            <remarks>If you do not modify the date indicators of the Gantt sheet during round-trips,
            you should set this property to <see langword="false" /> to speed up page loading.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.EnableStyleToolTips">
            <summary>
            Indicates whether the tooltips should be taken from activity bar styles.
            </summary>
            <value><see langword="true" /> if the tooltips should be taken from activity bar styles;
            <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.EnableTableColumnViewState">
            <summary>
            Gets or sets a value indicating whether the <see cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.TableColumns" /> property
            should be serialized into the view state.
            </summary>
            <value><see langword="true" /> if the <strong>TableColumns</strong> property should
            be serialized into the view state; otherwise, <see langword="false" />.
            The default value is <see langword="true" />.</value>
            <remarks>If you do not modify the columns of the table when during round-trips,
            you should set this property to <see langword="false" /> to speed up page loading.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.EnableTimeGridViewState">
            <summary>
            Gets or sets a value indicating whether the <see cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.TimeGrids" /> property
            should be serialized into the view state.
            </summary>
            <value><see langword="true" /> if the <strong>TimeGrids</strong> property should
            be serialized into the view state; otherwise, <see langword="false" />.
            The default value is <see langword="true" />.</value>
            <remarks>If you do not modify the time grids of the Gantt sheet during round-trips,
            you should set this property to <see langword="false" /> to speed up page loading.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.EnableTimeScaleRowViewState">
            <summary>
            Gets or sets a value indicating whether the <see cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.TimeScaleRows" /> property
            should be serialized into the view state.
            </summary>
            <value><see langword="true" /> if the <strong>TimeScaleRows</strong> property should
            be serialized into the view state; otherwise, <see langword="false" />.
            The default value is <see langword="true" />.</value>
            <remarks>If you do not modify the rows of the time scale during round-trips,
            you should set this property to <see langword="false" /> to speed up page loading.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.FirstVisibleRow">
            <summary>
            Gets or sets the first visible row of the chart.
            </summary>
            <value>The zero-based index of the first visible row of the chart.</value>
            <remarks>When changing its <see cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.FirstVisibleRow" />, a row controller should raise the
            appropriate <see cref="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.RowControllerChanged" /> event.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.FirstVisibleTime">
            <summary>
            Gets or sets the first visible time of the chart.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure that represents the first visible time of the chart.</value>
            <remarks>The first visible time is the first date displayed by the control. When the value is changed
            a <see cref="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.TimeLineChanging" /> and a <see cref="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.TimeLineChanged" /> events are raised.</remarks>
            <seealso cref="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.TimeLineChanging" />
            <seealso cref="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.TimeLineChanged" />
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.TimeLine" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.FlatStyle">
            <summary>
            Gets or sets the flat style appearance of the control.
            </summary>
            <value>One of the <see cref="T:System.Windows.Forms.FlatStyle" /> values.
            The default value is <strong>Standard</strong>.</value>
            <remarks>Setting this property to either <strong>Flat</strong>strong&gt; or <strong>Popup</strong>
            has the same effect.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.Font">
            <summary>
            Overridden. See <see cref="P:System.Web.UI.WebControls.WebControl.Font">WebControl.Font</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.ForeColor">
            <summary>
            Gets or sets the foreground color used for rows.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of rows.
            The default value is the value for window text (<see cref="P:System.Drawing.SystemColors.WindowText">SystemColors.WindowText</see>).</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.GanttModel">
            <summary>
            Gets or sets the Gantt data model for the hierarchy chart.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> that contains the scheduling data to display in
            the chart.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.GanttSheetOwnerDraw">
            <summary>
            Gets or sets a value indicating whether the code that you
            provide draws the Gantt sheet rows or not.
            </summary>
            <value>
            <see langword="true" /> if Gantt sheet rows are to be drawn using custom user
            code; <see langword="false" /> otherwise.
            </value>
            <remarks>
            <p>When the <strong>GanttSheetOwnerDraw</strong> property is set to <see langword="true" />,
            you need to handle all drawing of Gantt sheet rows. You can use
            this capability to create your own Gantt sheet rows
            displays. Use the <see cref="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.DrawGanttSheetRow" /> event to handle the drawing of
            Gantt sheet rows.</p>
            <p>When the <strong>GanttSheetOwnerDraw</strong> property is set to <see langword="false" />,
            the <strong>DrawGanttSheetRow</strong> event is not raised.</p>
            </remarks>
            <seealso cref="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.DrawGanttSheetRow" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.GanttTableNeedsMapping">
            <summary>
            Gets a value indicating whether the table of this chart is currently filtering or sorting
            the Gantt model.
            </summary>
            <value><see langword="true" /> if the table of this chart has a row filter, or sorting has been made
            on the table.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.GanttTableOwnerDraw">
            <summary>
            Gets or sets a value indicating whether the code that you
            provide draws the table cells or not.
            </summary>
            <value>
            <see langword="true" /> if table cells are to be drawn using custom user
            code; <see langword="false" /> otherwise.
            </value>
            <remarks>
            <p>When the <strong>GanttTableOwnerDraw</strong> property is set to <see langword="true" />,
            you need to handle all drawing of table cells. You can use
            this capability to create your own special table cells
            displays. Use the <see cref="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.DrawGanttTableCell" /> event to handle the drawing of
            table cells.</p>
            <p>When the <strong>GanttTableOwnerDraw</strong> property is set to <see langword="false" />,
            the <strong>DrawGanttTableCell</strong> event is not raised.</p>
            </remarks>
            <seealso cref="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.DrawGanttTableCell" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.GridLineColor">
            <summary>
            Gets or sets the color of the grid line.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the grid lines.
            The default value is the system color for controls (<see cref="P:System.Drawing.SystemColors.Control">SystemColors.Control</see>).
            </value>
            <remarks>
            No grid line is displayed if the <see cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.GridLineStyle" /> property
            is set to <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle">None</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.GridLineStyle">
            <summary>
            Gets or sets the style of horizontal grid lines.
            </summary>
            <value>
            One of the <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle" /> values.
            The default value is <strong>Solid</strong>.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.GroupBackColor">
            <summary>
            Gets or sets the background color of rows that represent groups of rows.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the background color for rows
            that represent groups of rows. The default value inherits from the <see cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.BackColor" /> property.
            </value>
            <remarks>
            To reset the group background color to its default value, set the
            property to <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.HeaderBackColor">
            <summary>
            Gets or sets the background color used for
            row headers, column headers and time scale.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the background
            color of row headers, column headers and time scale. The default value is
            the color used for
            controls (<see cref="P:System.Drawing.SystemColors.Control">SystemColors.Control</see>).</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.HeaderFont">
            <summary>
            Gets or sets the font used for the column headers of the table and for the time scale.
            </summary>
            <value>
            The <see cref="T:System.Drawing.Font" /> object that represents the text of the
            column headers of the table and of the time scale.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.HeaderForeColor">
            <summary>
            Gets or sets the color used for text
            in column headers, row headers and time scale.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground
            color in column header, row headers and time scale.
            The default value is the value used
            for controls (<see cref="P:System.Drawing.SystemColors.ControlText">SystemColors.ControlText</see>).</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.Height">
            <summary>
            Overridden. See <see cref="P:System.Web.UI.WebControls.WebControl.Height">WebControl.Height</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.NickLee#Views#Windows#Forms#IRowController#SelectionAdjusting">
            <summary>
            Gets or sets a value that indicates if the selection is currently being
            adjusted.
            </summary>
            <value><see langword="true" /> if the selection is currently being
            adjusted; <see langword="false" /> otherwise.
            </value>
            <remarks>The value is <see langword="true" /> when the mouse is dragged over the
            table to select rows.</remarks>
            <seealso cref="P:NickLee.Views.Windows.Forms.TableSelectionChangedEventArgs.IsAdjusting" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.IsInteractive">
            <summary>
            Overridden. See <see cref="P:NickLee.Views.Web.UI.ImageControl.IsInteractive">ImageControl.IsInteractive</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.LastVisibleTime">
            <summary>
            Gets or sets the last visible time of the chart.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.PaintTimeScaleTicks">
            <summary>
            Indicates whether the time scale displays ticks.
            </summary>
            <value><see langword="true" /> if the time scale displays ticks;
            <see langword="false" /> otherwise. The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.PreferredRowHeight">
            <summary>
            Gets or sets the preferred height for new rows.
            </summary>
            <value>The preferred value in pixel of a row height.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.RowCount">
            <summary>
            Gets the number of rows in the chart.
            </summary>
            <value>The number of rows in the chart.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.RowFilter">
            <summary>
            Gets or sets the row filter expression used by the table of this chart.
            </summary>
            <value>A <see cref="T:System.String" /> that represents a Boolean expression based on a Gantt
            entity to check if the table should include that specific entity. The default value
            is "" meaning that the table displays all the Gantt entities of the model.
            </value>
            <remarks>
            For details about the syntax of the expression used by this property, see XXXX.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to set a row filter
            that filters activities using different expressions.
            </para>
            <code lang="C#">
            GanttChart chart = new GanttChart();

            // To show activities whose start time is before the 1/1/2001
            chart.RowFilter = "StartTime &lt; #1/1/2001#";

            // To show milestone activities whose start time is before the 1/1/2001
            chart.RowFilter = "Milestone &amp;&amp; StartTime &lt; #1/1/2001#";

            // To show activities whose ID starts with "A"
            chart.RowFilter = "MID(ID, 0, 1) == 'A'";

            // To show activities whose completion is greater than 0.5
            chart.RowFilter = "WorkComplete &gt; 0.5";
            </code>
            <code lang="Visual Basic">
            Dim chart As New GanttChart

            ' To show activities whose start time is before the 1/1/2001
            chart.RowFilter = "StartTime &lt; #1/1/2001#"

            ' To show milestone activities whose start time is before the 1/1/2001
            chart.RowFilter = "Milestone &amp;&amp; StartTime &lt; #1/1/2001#"

            ' To show activities whose ID starts with "A"
            chart.RowFilter = "MID(ID, 0, 1) == 'A'"

            ' To show activities whose completion is greater than 0.5
            chart.RowFilter = "WorkComplete &gt; 0.5"
            </code>
            </example>
            <seealso cref="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.SetRowFilter(NickLee.Views.Windows.Forms.IRowFilter)" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.RowHeadersVisible">
            <summary>
            Gets or sets the visibility of row headers.
            </summary>
            <value>
            <see langword="true" /> if the row headers are visible,
            <see langword="false" /> otherwise.
            The default value is <see langword="true" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.RowHeaderWidth">
            <summary>
            Gets or sets the width of the row headers of the table.
            </summary>
            <value>The width of the row headers of the table.</value>
            <exception cref="T:System.ArgumentException">If the value is not a positive integer.</exception>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.SelectionBackColor">
            <summary>
            Gets or sets the background color of selected rows.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the background color of selected rows.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.SelectionForeColor">
            <summary>
            Gets or sets the foreground color of selected rows.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of selected rows.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.ShowSelectedRowsOnGanttSheet">
            <summary>
            Indicates whether the selected rows should be painted on the Gantt sheet using the <see cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.SelectionBackColor" />.
            </summary>
            <value><see langword="true" /> if the selection should be painted on the Gantt sheet; otherwise, <see langword="false" />.
            The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.ShowTooltips">
            <summary>
            Indicates whether the <see cref="T:NickLee.Views.Gantt.Web.UI.HierarchyChart" /> should display tooltips on activities.
            </summary>
            <value><see langword="true" /> if the <see cref="T:NickLee.Views.Gantt.Web.UI.HierarchyChart" />
            must display tooltips on activities; <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.SplitterPosition">
            <summary>
            Gets or sets the position of the splitter.
            </summary>
            <value>The position in pixels of the splitter.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The property value is negative.</exception>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.SplitterWidth">
            <summary>
            Gets or sets the width of the splitter.
            </summary>
            <value>The width in pixels of the splitter.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The property value is negative.</exception>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.TableColumns">
            <summary>
            Gets the collection of columns of this table.
            </summary>
            <value>The collection of columns.</value>
            <remarks>By default, the table is built without any columns.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.TableHorizontalOffset">
            <summary>
            Gets or sets the horizontal scrolling offset of the Gantt table in pixels.
            </summary>
            <value>The horizontal scrolling offset of the Gantt table in pixels.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.TextFont">
            <summary>
            Gets or sets the font used by the control to draw text.
            </summary>
            <value>A <see cref="T:System.Drawing.Font" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.TimeBounds">
            <summary>
            Gets or sets the time bounds of the Gantt sheet.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.ITimeRange" /> that represents the maximum and minimum date-time value
            that the user can scroll in the Gantt sheet. The default value is dynamically computed
            using the minimum start time and maximum end time of activities in the
            Gantt data model attached to the Gantt sheet.
            </value>
            <remarks>Although this property sets the limit of time
            scrolling in the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />, some pixels can be added to this
            scrolling range using the <see cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.TimeMargin" /> property.
            Note that the user will still be able to scroll outside the value of this time
            range using the right and left arrows of the time scrollbar.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.TimeMargin" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.TimeGrids">
            <summary>
            Gets the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> displayed in the Gantt sheet.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection" /> that defines the grids displayed on the Gantt sheet.</value>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.VerticalGridToBottom" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.TimeLine">
            <summary>
            Gets or sets the <see cref="T:NickLee.Views.Gantt.ITimeLine" /> object that controls how the object is displaying time.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.ITimeLine" /> instance that controls how the object is displaying time.</value>
            <exception cref="T:System.ArgumentException">The property value is not valid because it would
            create a circular list of <see cref="T:NickLee.Views.Gantt.ITimeLine" /> objects leading to a stack
            overflow.</exception>
            <seealso cref="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.TimeLineChanging" />
            <seealso cref="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.TimeLineChanged" />
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.FirstVisibleTime" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.TimeMargin">
            <summary>
            Gets or sets the right and left margin added to the interval of the time range.
            </summary>
            <value>An integer value that represents the margin in pixels that will be added
            to the scrolling time bounds. The default value is <strong>50</strong>.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.TimeBounds" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.TimeScaleOwnerDraw">
            <summary>
            Gets or sets a value indicating whether the code that you
            provide draws the time scale rows or not.
            </summary>
            <value>
            <see langword="true" /> if time scale rows are to be drawn using custom user
            code; <see langword="false" /> otherwise.
            </value>
            <remarks>
            <p>When the <strong>TimeScaleOwnerDraw</strong> property is set to <see langword="true" />,
            you need to handle all drawing of time scale rows. You can use
            this capability to create your own special time scale rows
            displays. Use the <see cref="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.DrawTimeScaleRow" /> event to handle the drawing of
            time scale rows.</p>
            <p>When the <strong>TimeScaleOwnerDraw</strong> property is set to <see langword="false" />,
            the <strong>DrawTimeScaleRow</strong> event is not raised.</p>
            </remarks>
            <seealso cref="E:NickLee.Views.Gantt.Web.UI.HierarchyChart.DrawTimeScaleRow" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.TimeScaleRowPolicy">
            <summary>
            Gets or sets the policy used to handle the time scale rows.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowPolicy" /> values. The default value is
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowPolicy">TwoRows</see>.</value>
            <remarks>This property is used each time the zoom factor of the time scale changes to recompute
            the new rows of the time scale.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.TimeScaleRows">
            <summary>
            Gets the rows of the time scale.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection" /> reference.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.VerticalGridToBottom">
            <summary>
            Gets or sets a value indicating if the vertical grid of the sheet should be painted on nonrow
            area of the sheet.
            </summary>
            <value><see langword="true" /> if the vertical grid is also
            painted in nonrow area of the sheet; <see langword="false" /> otherwise.
            The default value is <see langword="false" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.VisibleDuration">
            <summary>
            Gets the visible time duration displayed by the chart.
            </summary>
            <value>A <see cref="T:System.TimeSpan" /> that represents the visible time duration displayed
            by the chart.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.VisibleTimeInterval">
            <summary>
            Gets or sets the visible time interval of the control.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.VScrollBar">
            <summary>
            Gets or sets the visibility of the vertical scrollbar.
            </summary>
            <value>
            One of the <see cref="T:NickLee.Views.Windows.Forms.ScrollBarVisibility" /> values.
            The default value is <see cref="F:NickLee.Views.Windows.Forms.ScrollBarVisibility.AsNeeded" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.Width">
            <summary>
            Overridden. See <see cref="P:System.Web.UI.WebControls.WebControl.Width">WebControl.Width</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.IResourceRowController">
            <summary>
            A specialization of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.IGanttRowController" /> interface for
            resources.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.IResourceRowController.GetCurrentResource">
            <summary>
            When implemented by a class, retrieves the current resource.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.IResourceRowController.GetResourceAt(System.Int32)">
            <summary>
            When implemented by a class, retrieves the <see cref="T:NickLee.Views.Gantt.Data.IResource" /> at the specified index.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.IResourceRowController.GetSelectedResources">
            <summary>
            When implemented by a class, retrieves an array of the selected resources.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleChart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Web.UI.ScheduleChart" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleChart.Collapse(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Collapses the specified resource.
            </summary>
            <param name="resource">An <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to collapse.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleChart.CollapseAll(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Collapses the specified resource and all its children.
            </summary>
            <param name="resource">An <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to collapse.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleChart.Dispose">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.Dispose">Control.Dispose</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleChart.Expand(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Expands the specified resource.
            </summary>
            <param name="resource">An <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to expand.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleChart.ExpandAll(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Expands the specified resource and all its children.
            </summary>
            <param name="resource">An <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to expand.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleChart.GetCurrentResource">
            <summary>
            Returns the current resource in the table.
            </summary>
            <returns>The current <see cref="T:NickLee.Views.Gantt.Data.IResource" /> in the table.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleChart.GetIDFromValue(System.Object)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.GetIDFromValue(System.Object)">HierarchyChart.GetIDFromValue</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleChart.GetResourceAt(System.Int32)">
            <summary>
            Gets the resource displayed at the specified row index.
            </summary>
            <param name="rowIndex">The row index.</param>
            <returns>The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> displayed at the specified row index.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleChart.GetRowHeight(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Gets the height of the specified resource.
            </summary>
            <param name="resource">The resource.</param>
            <returns>The height of <paramref name="resource" />.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="resource" /> is not
            part of the Gantt model.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleChart.GetSelectedResources">
            <summary>
            Retrieves an array containing the selected resources.
            </summary>
            <returns>An array containing the selected resources.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleChart.GetValueFromID(System.String)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.GetValueFromID(System.String)">HierarchyChart.GetValueFromID</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleChart.IndentResource(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Indents the specified resource.
            </summary>
            <param name="resource">The resource to indent.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleChart.IsExpanded(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Gets a value indicating whether the specified resource is expanded.
            </summary>
            <param name="resource">An <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to test.</param>
            <returns>A value indicating whether the specified resource is expanded.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleChart.IsRowVisible(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Gets a value indicating whether the specified resource is visible.
            </summary>
            <param name="resource">An <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to test.</param>
            <returns>A value indicating whether the specified resource is visible.</returns>
            <remarks>
            A resource is said to be visible when all its ancestors are expanded.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleChart.MoveResourceDown(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Moves down the specified resource.
            </summary>
            <param name="resource">The resource to move down.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleChart.MoveResourceUp(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Moves up the specified resource.
            </summary>
            <param name="resource">The resource to move up.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleChart.NewResource(System.String,System.String)">
            <summary>
            Creates a new resource as a sibling of the current row.
            </summary>
            <param name="id">The unique identifier of the new resource.</param>
            <param name="name">The name of the new resource.</param>
            <returns>The zero-based index of the row containing the new resource.</returns>
            <remarks>If <paramref name="id" /> is <see langword="null" />, a unique ID provided by
            the model will be used.
            If <paramref name="name" /> is <see langword="null" />, the table is
            automatically placed in editing mode to edit the resource name.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleChart.OutdentResource(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Outdents the specified resource.
            </summary>
            <param name="resource">The resource to outdent.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleChart.RenderImageMapAreas(System.Web.UI.HtmlTextWriter)">
            <summary>
            Is called to render image map areas.
            </summary>
            <param name="writer">The writer in which to put the image map areas.</param>
            <remarks>The implementation of this method create image map areas to display
            tooltips for visible reservations.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.ActivityToolTip" />
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleChart.SetRowHeight(NickLee.Views.Gantt.Data.IResource,System.Int32)">
            <summary>
            Sets the height of the specified resource.
            </summary>
            <param name="resource">The resource.</param>
            <param name="height">The new height.</param>
            <exception cref="T:System.ArgumentException"><paramref name="resource" /> is not
            part of the Gantt model.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="height" /> is
            negative.</exception>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.ScheduleChart.LayoutReservations">
            <summary>
            Event fired to allow the customization of the layout of reservations
            in a row.
            </summary>
            <remarks>This event is fired after the row has been layouted according to
            the <see cref="P:NickLee.Views.Gantt.Web.UI.ScheduleChart.ActivityLayoutStyle" /> property. If you plan to completely
            redefine a new layout, set the <see cref="P:NickLee.Views.Gantt.Web.UI.ScheduleChart.ActivityLayoutStyle" /> property
            to <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle">Simple</see>
            to improve performances.
            </remarks>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.ScheduleChart.QueryReservationZOrder">
            <summary>
            Event fired to enable the specification of the z-Order of a reservation
            in a row.
            </summary>
            <remarks>The layout of activities in a row is controlled by the <see cref="P:NickLee.Views.Gantt.Web.UI.ScheduleChart.ActivityLayoutStyle" />
            property. Activities will be sorted by their Start Time so that
            an activity starting earlier than another activity will be drawn before. You
            can modify this behavior by specifying a z-order for each reservation.
            </remarks>
            <example>
            <para lang="C#"> The following example shows how to make the reservation
            of type Maintenance drawn below all other reservations by setting a smaller
            z-order.
            </para>
            <code lang="C#">
            myScheduleSheet.QueryReservationZOrder += new QueryReservationZOrderEventHandler(GetZOrder);
            private void GetZOrder(object source, QueryReservationZOrderEventArgs e)
            {
            if (e.Reservation.Activity is Maintenance)
            e.ZOrder = 0;
            else
            e.ZOrder = 1;
            }
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.ScheduleChart.RowLayoutStyle">
            <summary>
            Event that is fired to query the layout style that will be used to layout
            the reservation of a specified resource.
            </summary>
            <remarks>Handling this event allows you to specify an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle" /> per
            row of the <see cref="T:NickLee.Views.Gantt.Web.UI.ScheduleSheet" />.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScheduleChart.ActivityLayoutStyle">
            <summary>
            Gets or sets the style used to layout activities in a row of the Gantt sheet.
            </summary>
            <remarks>This property will change the style of layout for all
            the rows of the schedule sheet. You can also specify a layout style per
            row by handling the <see cref="E:NickLee.Views.Gantt.Web.UI.ScheduleChart.RowLayoutStyle" /> event.</remarks>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle" /> values. The
            default value is <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle">Pretty</see>.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Web.UI.ResourceTable">
            <summary>
            Defines a table that displays the hierarchy of resources.
            </summary>
            <remarks>
            <p>The <see cref="T:NickLee.Views.Gantt.Web.UI.ResourceTable" /> is a hierarchical table where each row
            displays a resource and each column a property of the resource in the row.</p>
            <p><img src="resourcetable.png" /></p>
            By default the table contains two columns: a column that displays information on the
            resource as bitmaps (see <see cref="T:NickLee.Views.Gantt.Windows.Forms.InfoColumn" />) and a second column that displays the
            name of the resource. You can modify the columns of the table
            using the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.Columns" /> property.<p />
            In order to display scheduling information, the table must be connected
            to a Gantt data model (<see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />) through the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttTable.GanttModel" />
            property.
            </remarks>
            <seealso cref="T:NickLee.Views.Gantt.Web.UI.ActivityTable" />
            <seealso cref="T:NickLee.Views.Gantt.Web.UI.ReservationTable" />
        </member>
        <member name="T:NickLee.Views.Gantt.Web.UI.GanttTable">
            <summary>
            A specialization of the <see cref="T:NickLee.Views.Web.UI.TreeTable" /> connected to a Gantt model.
            </summary>
            <remarks>The <strong>GanttTable</strong> class is the <see langword="abstract" />
            base class for the <see cref="T:NickLee.Views.Gantt.Web.UI.ActivityTable" />, <see cref="T:NickLee.Views.Gantt.Web.UI.ResourceTable" /> and
            <see cref="T:NickLee.Views.Gantt.Web.UI.ReservationTable" /> classes.
            The <strong>GanttTable</strong> base class defines the properties that are
            common to the Gantt tables. In particular, it defines the connection to
            a Gantt data model through the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttTable.GanttModel" /> property.
            </remarks>
            <seealso cref="T:NickLee.Views.Gantt.Web.UI.ActivityTable" />
            <seealso cref="T:NickLee.Views.Gantt.Web.UI.ResourceTable" />
            <seealso cref="T:NickLee.Views.Gantt.Web.UI.ReservationTable" />
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttTable.Dispose">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.Dispose">Control.Dispose</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttTable.GetIDFromValue(System.Object)">
            <summary>
            Returns the ID of the specified object.
            </summary>
            <param name="o">An object.</param>
            <returns>A <see cref="T:System.String" /> that represents the ID <paramref name="o" />.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttTable.GetValueFromID(System.String)">
            <summary>
            Returns the object corresponding to the specified ID.
            </summary>
            <param name="id">The ID of the object.</param>
            <returns>An <see cref="T:System.Object" /> with the specified ID.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttTable.IndentNode(System.Object)">
            <summary>
            Indents the specified node.
            </summary>
            <param name="node">The node to indent.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttTable.MoveDown(System.Object)">
            <summary>
            Moves down the specified node.
            </summary>
            <param name="node">The node to move down.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttTable.MoveUp(System.Object)">
            <summary>
            Moves up the specified node.
            </summary>
            <param name="node">The node to move up.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttTable.OnLoad(System.EventArgs)">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)">Control.OnLoad</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttTable.OutdentNode(System.Object)">
            <summary>
            Outdents the specified node.
            </summary>
            <param name="node">The node to outdent.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttTable.RemoveSelectedRows">
            <summary>
            Deletes the selected rows.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttTable.ResetView">
            <summary>
            Resets the table view by removing the filter.
            </summary>
            <remarks>
            After calling this method, the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttTable.NeedsMapping" /> property returns
            <see langword="false" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttTable.SaveViewState">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.SaveViewState">Control.SaveViewState</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttTable.SetRowFilter(NickLee.Views.Windows.Forms.IRowFilter)">
            <summary>
            Sets the row filter used by this table.
            </summary>
            <param name="filter">An object implementing the
            <see cref="T:NickLee.Views.Windows.Forms.IRowFilter" /> interface.</param>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.GanttTable.RowFilter" />
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttTable.SetRowGroup(NickLee.Views.Windows.Forms.IRowGroup)">
            <summary>
            Sets the row group used by this table.
            </summary>
            <param name="group">An object implementing the <see cref="T:NickLee.Views.Windows.Forms.IRowGroup" /> interface.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttTable.SortRows(System.Collections.IComparer)">
            <summary>
            Sorts the table rows using an <see cref="T:System.Collections.IComparer" />.
            </summary>
            <param name="comparer">The <see cref="T:System.Collections.IComparer" /> implementation to use when
            comparing elements. </param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttTable.SortRows(System.String,System.Boolean)">
            <summary>
            Sorts the table rows using a mapping name.
            </summary>
            <param name="mappingName">The name of the property that will be used to sort
            the nodes.</param>
            <param name="ascending"><see langword="true" /> if the sort is ascending; <see langword="false" />
            otherwise.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttTable.SortRows(System.Object,System.Collections.IComparer,System.Int32)">
            <summary>
            Sorts the children of the specified node using an <see cref="T:System.Collections.IComparer" />.
            </summary>
            <param name="node">The parent of the nodes to sort.</param>
            <param name="comparer">The <see cref="T:System.Collections.IComparer" /> implementation to use when
            comparing elements. </param>
            <param name="depth">A depth of <strong>0</strong> will only sort the children of the specified node.
            A negative depth will sort the specified node and its children recursively. Any other value
            specifies the depth of the sort algorithm.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttTable.SortRows(System.Object,System.String,System.Boolean,System.Int32)">
            <summary>
            Sorts the children of the specified node using a mapping name.
            </summary>
            <param name="node">The parent of the nodes to sort.</param>
            <param name="mappingName">The name of the property that will be used to sort
            the nodes.</param>
            <param name="ascending"><see langword="true" /> if the sort is ascending; <see langword="false" />
            otherwise.</param>
            <param name="depth">A depth of <strong>0</strong> will only sort the children of the specified node.
            A negative depth will sort the specified node and its children recursively. Any other value
            specifies the depth of the sort algorithm.</param>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.GanttTable.GanttModelChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttTable.GanttModel" /> property has changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.GanttTable.GanttModelChanging">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttTable.GanttModel" /> property is changing on the control.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttTable.GanttModel">
            <summary>
            Gets or sets the Gantt data model (<see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />)
            containing the data to display in this table.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> that contains the data to display in the table.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttTable.NeedsMapping">
            <summary>
            Gets a value indicating whether the table is currently filtering or sorting
            the Gantt model.
            </summary>
            <value><see langword="true" /> if the table has a row filter, or sorting has been made
            on the table.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttTable.RowFilter">
            <summary>
            Gets or sets the row filter expression used by this table.
            </summary>
            <value>A <see cref="T:System.String" /> that represents a Boolean expression based on a Gantt
            entity to check if the table should include that specific entity. The default value
            is "" meaning that the table displays all the Gantt entities of the model.
            </value>
            <exception cref="T:System.ArgumentNullException">The property value is <see langword="null" />.
            </exception>
            <remarks>
            For details about the syntax of the expression used by this property, see XXXX.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to set a row filter
            that filters activities using different expressions.
            </para>
            <code lang="C#">
            ActivityTable table = new ActivityTable();

            // To show activities whose start time is before the 1/1/2001
            table.RowFilter = "StartTime &lt; #1/1/2001#";

            // To show milestone activities whose start time is before the 1/1/2001
            table.RowFilter = "Milestone &amp;&amp; StartTime &lt; #1/1/2001#";

            // To show activities whose ID starts with "A"
            table.RowFilter = "MID(ID, 0, 1) == 'A'";

            // To show activities whose completion is greater than 0.5
            table.RowFilter = "WorkComplete &gt; 0.5";
            </code>
            <code lang="Visual Basic">
            Dim table As New ActivityTable

            ' To show activities whose start time is before the 1/1/2001
            table.RowFilter = "StartTime &lt; #1/1/2001#"

            ' To show milestone activities whose start time is before the 1/1/2001
            table.RowFilter = "Milestone &amp;&amp; StartTime &lt; #1/1/2001#"

            ' To show activities whose ID starts with "A"
            table.RowFilter = "MID(ID, 0, 1) == 'A'"

            ' To show activities whose completion is greater than 0.5
            table.RowFilter = "WorkComplete &gt; 0.5"
            </code>
            </example>
            <seealso cref="M:NickLee.Views.Gantt.Web.UI.GanttTable.SetRowFilter(NickLee.Views.Windows.Forms.IRowFilter)" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttTable.TreeModel">
            <summary>
            Redefines <see cref="P:NickLee.Views.Web.UI.TreeTable.TreeModel">TreeTable.TreeModel</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ResourceTable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Web.UI.ResourceTable" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ResourceTable.GetCurrentResource">
            <summary>
            Returns the current resource in the table.
            </summary>
            <returns>The current <see cref="T:NickLee.Views.Gantt.Data.IResource" /> in the table.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ResourceTable.GetIDFromValue(System.Object)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Gantt.Web.UI.GanttTable.GetIDFromValue(System.Object)">GanttTable.GetIDFromValue</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ResourceTable.GetResourceAt(System.Int32)">
            <summary>
            Retrieves the <see cref="T:NickLee.Views.Gantt.Data.IResource" /> at the specified index.
            </summary>
            <param name="rowIndex">The zero-based index of the resource to
            retrieve.</param>
            <returns>The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> at the specified index.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ResourceTable.GetSelectedResources">
            <summary>
            Returns an array of the selected resources in the table.
            </summary>
            <returns>An array of <see cref="T:NickLee.Views.Gantt.Data.IResource" /> objects.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ResourceTable.GetValueFromID(System.String)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Gantt.Web.UI.GanttTable.GetValueFromID(System.String)">GanttTable.GetValueFromID</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ResourceTable.NewResource(System.String,System.String)">
            <summary>
            Creates a new resource as a sibling of the current row.
            </summary>
            <param name="id">The unique identifier of the new resource.</param>
            <param name="name">The name of the new resource.</param>
            <returns>The zero-based index of the row containing the new resource.</returns>
            <remarks>If <paramref name="id" /> is <see langword="null" />, a unique ID provided by
            the model will be used.
            If <paramref name="name" /> is <see langword="null" />, the table is
            automatically placed in editing mode to edit the resource name.</remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.DefaultTimeSampler">
            <summary>
            A simple implementation of the <see cref="T:NickLee.Views.Gantt.ITimeSampler" /> interface.
            </summary>
            <remarks>This default implementation uses a <see cref="T:NickLee.Views.Gantt.DefaultTimeIterator" />
            to iterate on dates.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to enumerate days between two dates.
            </para>
            <code lang="C#">
            DefaultTimeSampler sampler = new DefaultTimeSampler(new DateTime(2000, 1, 1), new DateTime(2000, 1, 4), TimeUnit.Day);
            foreach (DateTime day in sampler)
            Console.WriteLine(day);
            </code>
            <code lang="Visual Basic">
            Dim sampler As New DefaultTimeSampler(New DateTime(2000, 1, 1), New DateTime(2000, 1, 4), TimeUnit.Day)
            For Each day As DateTime In sampler
            Console.WriteLine(day)
            Next
            </code>
            </example>
            <seealso cref="T:NickLee.Views.Gantt.TimeSamplerEnumerator" />
        </member>
        <member name="M:NickLee.Views.Gantt.DefaultTimeSampler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.DefaultTimeSampler" /> class.
            </summary>
            <remarks>
            <p>The default value for the <see cref="P:NickLee.Views.Gantt.TimeRange.StartTime" /> property is <see cref="F:System.DateTime.MinValue">DateTime.MinValue</see>.</p>
            <p>The default value for the <see cref="P:NickLee.Views.Gantt.TimeRange.EndTime" /> property is <see cref="F:System.DateTime.MaxValue">DateTime.MaxValue</see>.</p>
            <p>The default value for the <see cref="P:NickLee.Views.Gantt.DefaultTimeSampler.TimeUnit" /> property is <see cref="F:NickLee.Views.Gantt.TimeUnit.Day">TimeUnit.Day</see>.</p>
            <p>The default value for the <see cref="P:NickLee.Views.Gantt.DefaultTimeSampler.Steps" /> property is <strong>1</strong>.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to enumerate days between two dates.
            </para>
            <code lang="C#">
            DefaultTimeSampler sampler = new DefaultTimeSampler(new DateTime(2000, 1, 1), new DateTime(2000, 1, 4), TimeUnit.Day);
            foreach (DateTime day in sampler)
            Console.WriteLine(day);
            </code>
            <code lang="Visual Basic">
            Dim sampler As New DefaultTimeSampler(New DateTime(2000, 1, 1), New DateTime(2000, 1, 4), TimeUnit.Day)
            For Each day As DateTime In sampler
            Console.WriteLine(day)
            Next
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.DefaultTimeSampler.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.DefaultTimeSampler" /> class
            using the specified parameters.
            </summary>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
            <remarks>
            <p>The default value for the <see cref="P:NickLee.Views.Gantt.DefaultTimeSampler.TimeUnit" /> property is <see cref="F:NickLee.Views.Gantt.TimeUnit.Day">TimeUnit.Day</see>.</p>
            <p>The default value for the <see cref="P:NickLee.Views.Gantt.DefaultTimeSampler.Steps" /> property is <strong>1</strong>.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to enumerate days between two dates.
            </para>
            <code lang="C#">
            DefaultTimeSampler sampler = new DefaultTimeSampler(new DateTime(2000, 1, 1), new DateTime(2000, 1, 4), TimeUnit.Day);
            foreach (DateTime day in sampler)
            Console.WriteLine(day);
            </code>
            <code lang="Visual Basic">
            Dim sampler As New DefaultTimeSampler(New DateTime(2000, 1, 1), New DateTime(2000, 1, 4), TimeUnit.Day)
            For Each day As DateTime In sampler
            Console.WriteLine(day)
            Next
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.DefaultTimeSampler.#ctor(System.DateTime,System.DateTime,NickLee.Views.Gantt.TimeUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.DefaultTimeSampler" /> class
            using the specified parameters.
            </summary>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
            <param name="timeUnit">The time unit.</param>
            <remarks>
            <p>The default value for the <see cref="P:NickLee.Views.Gantt.DefaultTimeSampler.Steps" /> property is <strong>1</strong>.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to enumerate days between two dates.
            </para>
            <code lang="C#">
            DefaultTimeSampler sampler = new DefaultTimeSampler(new DateTime(2000, 1, 1), new DateTime(2000, 1, 4), TimeUnit.Day);
            foreach (DateTime day in sampler)
            Console.WriteLine(day);
            </code>
            <code lang="Visual Basic">
            Dim sampler As New DefaultTimeSampler(New DateTime(2000, 1, 1), New DateTime(2000, 1, 4), TimeUnit.Day)
            For Each day As DateTime In sampler
            Console.WriteLine(day)
            Next
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.DefaultTimeSampler.#ctor(System.DateTime,System.DateTime,NickLee.Views.Gantt.TimeUnit,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.DefaultTimeSampler" /> class
            using the specified parameters.
            </summary>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
            <param name="timeUnit">The time unit.</param>
            <param name="steps">The number of time units between two consecutive dates.</param>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to enumerate days between two dates.
            </para>
            <code lang="C#">
            DefaultTimeSampler sampler = new DefaultTimeSampler(new DateTime(2000, 1, 1), new DateTime(2000, 1, 4), TimeUnit.Day);
            foreach (DateTime day in sampler)
            Console.WriteLine(day);
            </code>
            <code lang="Visual Basic">
            Dim sampler As New DefaultTimeSampler(New DateTime(2000, 1, 1), New DateTime(2000, 1, 4), TimeUnit.Day)
            For Each day As DateTime In sampler
            Console.WriteLine(day)
            Next
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.DefaultTimeSampler.#ctor(System.DateTime,System.DateTime,System.TimeSpan,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.DefaultTimeSampler" /> class
            using the specified parameters.
            </summary>
            <param name="startTime">The start time.</param>
            <param name="endTime">The end time.</param>
            <param name="duration">The duration between two dates.</param>
            <param name="steps">The number of time units between two consecutive dates.</param>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to enumerate days between two dates.
            </para>
            <code lang="C#">
            DefaultTimeSampler sampler = new DefaultTimeSampler(new DateTime(2000, 1, 1), new DateTime(2000, 1, 4), TimeUnit.Day);
            foreach (DateTime day in sampler)
            Console.WriteLine(day);
            </code>
            <code lang="Visual Basic">
            Dim sampler As New DefaultTimeSampler(New DateTime(2000, 1, 1), New DateTime(2000, 1, 4), TimeUnit.Day)
            For Each day As DateTime In sampler
            Console.WriteLine(day)
            Next
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.DefaultTimeSampler.Dispose">
            <summary>
            Implements the <see cref="M:System.IDisposable.Dispose">IDisposable.Dispose</see> method.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.DefaultTimeSampler.GetEnumerator">
            <summary>
            Gets an enumerator on the time sampler.
            </summary>
            <returns>A <see cref="T:System.Collections.IEnumerator" /> instance.</returns>
            <remarks>This method returns an instance of the <see cref="T:NickLee.Views.Gantt.TimeSamplerEnumerator" />
            class.</remarks>
            <seealso cref="T:NickLee.Views.Gantt.TimeSamplerEnumerator" />
        </member>
        <member name="M:NickLee.Views.Gantt.DefaultTimeSampler.GetNextTime(System.DateTime)">
            <summary>
            Computes the next date after the specified date.
            </summary>
            <returns>A <see cref="T:System.DateTime" /> structure.</returns>
            <seealso cref="M:NickLee.Views.Gantt.DefaultTimeSampler.GetPreviousTime(System.DateTime)" />
        </member>
        <member name="M:NickLee.Views.Gantt.DefaultTimeSampler.GetPreviousTime(System.DateTime)">
            <summary>
            Computes the previous date before the specified date.
            </summary>
            <returns>A <see cref="T:System.DateTime" /> structure.</returns>
            <seealso cref="M:NickLee.Views.Gantt.DefaultTimeSampler.GetNextTime(System.DateTime)" />
        </member>
        <member name="E:NickLee.Views.Gantt.DefaultTimeSampler.TimeIteratorChanged">
            <summary>
            Occurs when the time iterator has changed.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.DefaultTimeSampler.ReferenceDate">
            <summary>
            A date used as a reference to compute date intervals.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure. The default value is <b>1/1/2001</b>.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.DefaultTimeSampler.UnitDuration" />
            <seealso cref="P:NickLee.Views.Gantt.DefaultTimeSampler.Steps" />
            <seealso cref="P:NickLee.Views.Gantt.DefaultTimeSampler.TimeUnit" />
        </member>
        <member name="P:NickLee.Views.Gantt.DefaultTimeSampler.Steps">
            <summary>
            Gets or sets the number of <see cref="P:NickLee.Views.Gantt.DefaultTimeSampler.TimeUnit" /> steps between two
            consecutive iterations.
            </summary>
            <value>An <see cref="T:System.Int32" /> that represents the number of
            <see cref="P:NickLee.Views.Gantt.DefaultTimeSampler.TimeUnit" /> steps between two consecutive iterations.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">The property value is less than
            <strong>1</strong>.</exception>
            <seealso cref="P:NickLee.Views.Gantt.DefaultTimeSampler.UnitDuration" />
            <seealso cref="P:NickLee.Views.Gantt.DefaultTimeSampler.Steps" />
            <seealso cref="P:NickLee.Views.Gantt.DefaultTimeSampler.TimeUnit" />
        </member>
        <member name="P:NickLee.Views.Gantt.DefaultTimeSampler.TimeLine">
            <summary>
            Gets or sets the <see cref="T:NickLee.Views.Gantt.ITimeLine" /> object connected to
            this iterator.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.ITimeLine" /> reference. The default value is <see langword="null" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.DefaultTimeSampler.TimeUnit">
            <summary>
            Gets or sets the time unit for the time iterator.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.TimeUnit" /> values.</value>
            <seealso cref="P:NickLee.Views.Gantt.DefaultTimeSampler.UnitDuration" />
            <seealso cref="P:NickLee.Views.Gantt.DefaultTimeSampler.Steps" />
            <seealso cref="P:NickLee.Views.Gantt.DefaultTimeSampler.ReferenceDate" />
        </member>
        <member name="P:NickLee.Views.Gantt.DefaultTimeSampler.UnitDuration">
            <summary>
            Gets or sets the duration between two dates.
            </summary>
            <value>A <see cref="T:System.TimeSpan" /> structure. The default value corresponds to the
            duration of a day.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">The duration is negative or null.</exception>
            <remarks>This property is used only if the <see cref="P:NickLee.Views.Gantt.DefaultTimeSampler.TimeUnit" /> property is
            set to <see cref="T:NickLee.Views.Gantt.TimeUnit">TimeUnit.None</see>.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.DefaultTimeSampler.TimeUnit" />
            <seealso cref="P:NickLee.Views.Gantt.DefaultTimeSampler.Steps" />
            <seealso cref="P:NickLee.Views.Gantt.DefaultTimeSampler.ReferenceDate" />
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttModelUndoManager">
            <summary>
            Handles Gantt model events to provide undo/redo.
            </summary>
            <remarks><p>This class listens to a Gantt data model and keeps all the events raised by the model
            in a stack to enable undo/redo operations. Once the undo manager has been installed on a Gantt
            data model using the <see cref="P:NickLee.Views.Gantt.Data.GanttModelUndoManager.GanttModel" /> property, use the <see cref="M:NickLee.Views.Gantt.Data.GanttModelUndoManager.Undo" /> and <see cref="M:NickLee.Views.Gantt.Data.GanttModelUndoManager.Redo" />
            methods to undo or redo actions. To know whether undoing or redoing actions is possible, use
            the <see cref="P:NickLee.Views.Gantt.Data.GanttModelUndoManager.CanUndo" /> and <see cref="P:NickLee.Views.Gantt.Data.GanttModelUndoManager.CanRedo" /> properties.</p>
            <p>If you need to consider a sequence of events as a single action, you can create a macro. Use
            the <see cref="M:NickLee.Views.Gantt.Data.GanttModelUndoManager.BeginMacro" /> method to start recording a macro. When done, use the <see cref="M:NickLee.Views.Gantt.Data.GanttModelUndoManager.EndMacro" /> method.
            All the actions recorded during the macro will be undone or redone by a single call to <see cref="M:NickLee.Views.Gantt.Data.GanttModelUndoManager.Undo" /> or
            <see cref="M:NickLee.Views.Gantt.Data.GanttModelUndoManager.Redo" />. Note that a macro being recorded can be canceled by calling <see cref="M:NickLee.Views.Gantt.Data.GanttModelUndoManager.RollbackMacro" />.</p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUndoManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.GanttModelUndoManager" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUndoManager.#ctor(NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.GanttModelUndoManager" /> class
            connected to the specified Gantt model.
            </summary>
            <param name="model">The Gantt data model.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUndoManager.BeginMacro">
            <summary>
            Starts a macro-command.
            </summary>
            <remarks><p>A macro-command is a list of commands that can be undone in
            an atomic way.</p>
            <p>Macros can be nested: if <see cref="M:NickLee.Views.Gantt.Data.GanttModelUndoManager.BeginMacro" /> is called and a macro is
            already being recorded, you need to call <see cref="M:NickLee.Views.Gantt.Data.GanttModelUndoManager.EndMacro" /> twice to close the macro.</p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUndoManager.Dispose(System.Boolean)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)">MarshalByValueComponent.Dispose</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUndoManager.EndMacro">
            <summary>
            Ends a macro-command.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the undo manager is not
            recording a macro.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUndoManager.IsUndoable(System.Object)">
            <summary>
            Indicates whether the specified command is undoable.
            </summary>
            <param name="command">The event that occurred in the Gantt model.</param>
            <returns><see langword="true" /> if the command is undoable;
            <see langword="false" /> otherwise.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="command" /> is not an
            instance of one of the following classes: <strong>ActivitiesChangeEventArgs</strong>,
            <strong>ResourcesChangeEventArgs</strong>, <strong>ConstraintsChangeEventArgs</strong>,
            <strong>ReservationsChangeEventArgs</strong>.</exception>
            <remarks>The parameter <paramref name="command" /> can be an instance of the following classes:
            <ul>
            <li><see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /></li>
            <li><see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /></li>
            <li><see cref="T:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs" /></li>
            <li><see cref="T:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs" /></li>
            </ul>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUndoManager.MustIgnoreCommand(System.Object)">
            <summary>
            Indicates whether the specified command should be ignored.
            </summary>
            <param name="command">The event that occurred in the Gantt model.</param>
            <returns><see langword="true" /> if the command must be ignored;
            <see langword="false" /> otherwise.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="command" /> is not an
            instance of one of the following classes: <strong>ActivitiesChangeEventArgs</strong>,
            <strong>ResourcesChangeEventArgs</strong>, <strong>ConstraintsChangeEventArgs</strong>,
            <strong>ReservationsChangeEventArgs</strong>.</exception>
            <remarks>The parameter <paramref name="command" /> can be an instance of the following classes:
            <ul>
            <li><see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /></li>
            <li><see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /></li>
            <li><see cref="T:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs" /></li>
            <li><see cref="T:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs" /></li>
            </ul>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUndoManager.OnGanttModelChanged(System.Object)">
            <summary>
            Is called when the Gantt data model being listened to has changed.
            </summary>
            <param name="command">The event that occurs on the Gantt model.</param>
            <remarks>The parameter <paramref name="command" /> can be an instance of the following classes:
            <ul>
            <li><see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /></li>
            <li><see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /></li>
            <li><see cref="T:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs" /></li>
            <li><see cref="T:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs" /></li>
            </ul>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUndoManager.OnUndoRedoChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Data.GanttModelUndoManager.UndoRedoChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
            <remarks>Called when the undo manager is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUndoManager.Redo">
            <summary>
            Redoes the last undone command.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the undo manager is recording a
            macro.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUndoManager.Reset">
            <summary>
            Empties the undo and redo commands lists.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUndoManager.RollbackMacro">
            <summary>
            Rolls back the macro being recorded.
            </summary>
            <remarks>This method should be called when a macro being recorded cannot be
            completed.</remarks>
            <exception cref="T:System.InvalidOperationException">If the undo manager is not
            recording a macro.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUndoManager.Undo">
            <summary>
            Undoes the last command that occurred on the Gantt model.
            </summary>
            <exception cref="T:System.InvalidOperationException">If the undo manager is recording a
            macro.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUndoManager.UndoCommand(System.Object)">
            <summary>
            Undoes the specified command.
            </summary>
            <param name="command">The command to undo.</param>
            <exception cref="T:System.ArgumentException"><paramref name="command" /> is not an
            instance of one of the following classes: <strong>ActivitiesChangeEventArgs</strong>,
            <strong>ResourcesChangeEventArgs</strong>, <strong>ConstraintsChangeEventArgs</strong>,
            <strong>ReservationsChangeEventArgs</strong>.</exception>
            <remarks>The parameter <paramref name="command" /> can be an instance of the following classes:
            <ul>
            <li><see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /></li>
            <li><see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /></li>
            <li><see cref="T:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs" /></li>
            <li><see cref="T:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs" /></li>
            </ul>
            </remarks>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.GanttModelUndoManager.UndoRedoChanged">
            <summary>
            Occurs when commands have been added to or removed from the undo/redo manager.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttModelUndoManager.CanRedo">
            <summary>
            Gets a value indicating whether the <see cref="M:NickLee.Views.Gantt.Data.GanttModelUndoManager.Redo" /> method can be called.
            </summary>
            <value><see langword="true" /> if the redo stack is not empty;
            <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttModelUndoManager.CanUndo">
            <summary>
            Gets a value indicating whether the <see cref="M:NickLee.Views.Gantt.Data.GanttModelUndoManager.Undo" /> method can be called.
            </summary>
            <value><see langword="true" /> if the undo stack is not empty;
            <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttModelUndoManager.GanttModel">
            <summary>
            Gets or sets the model this object listens to.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttModelUndoManager.IsInMacro">
            <summary>
            Gets a value indicating whether a macro-command is being recorded.
            </summary>
            <value><see langword="true" /> if a macro-command is being recorded;
            <see langword="false" /> otherwise.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.BaseResourceCollection">
            <summary>
            Defines a collection of <see cref="T:NickLee.Views.Gantt.Data.BaseResource" /> objects.
            </summary>
            <remarks>This class is used by the <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModel" /> class.</remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.IResourceCollection">
            <summary>
            Represents a collection of <see cref="T:NickLee.Views.Gantt.Data.IResource" /> objects.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IResourceCollection.Add(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            When implemented by a class, adds the specified resource at the end of the collection.
            </summary>
            <param name="resource">The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to add.</param>
            <returns>The zero-based index of the position of the inserted resource.</returns>
            <remarks>The Gantt model must be notified of the change in the collection using the
            <see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IResourceCollection.AddRange(NickLee.Views.Gantt.Data.IResource[])">
            <summary>
            When implemented by a class, adds the specified resources at the end of the collection.
            </summary>
            <param name="resources">An array of <see cref="T:NickLee.Views.Gantt.Data.IResource" /> objects.</param>
            <remarks>The Gantt model must be notified of the change in the collection using the
            <see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IResourceCollection.Clear">
            <summary>
            When implemented by a class, removes all resources from the collection.
            </summary>
            <remarks>The Gantt model must be notified of the change in the collection using the
            <see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IResourceCollection.Contains(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            When implemented by a class, determines if the specified <see cref="T:NickLee.Views.Gantt.Data.IResource" /> is a member of the collection.
            </summary>
            <param name="resource">The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to locate in the collection.</param>
            <returns><see langword="true" /> if the <see cref="T:NickLee.Views.Gantt.Data.IResource" /> is a member of the collection;
            <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IResourceCollection.IndexOf(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            When implemented by a class, retrieves the index of a specific resource in the collection.
            </summary>
            <param name="resource">The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to locate in the collection.</param>
            <returns>The zero-based index of the resource found in the collection;
            <strong>-1</strong> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IResourceCollection.Insert(System.Int32,NickLee.Views.Gantt.Data.IResource)">
            <summary>
            When implemented by a class, inserts a resource into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index where <paramref name="resource" /> should be inserted.</param>
            <param name="resource">The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to insert.</param>
            <remarks>The Gantt model must be notified of the change in the collection using the
            <see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IResourceCollection.InsertRange(System.Int32,NickLee.Views.Gantt.Data.IResource[])">
            <summary>
            When implemented by a class, inserts resources into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index where the new resources should be inserted.</param>
            <param name="resources">An array of the resources to insert.</param>
            <remarks>The Gantt model must be notified of the change in the collection using the
            <see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IResourceCollection.Remove(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            When implemented by a class, removes the specified resource from the collection.
            </summary>
            <param name="resource">The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to remove.</param>
            <remarks>The Gantt model must be notified of the change in the collection using the
            <see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IResourceCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            When implemented by a class, removes a range of resources from the collection.
            </summary>
            <param name="index">The zero-based starting index of the range of resources to remove.</param>
            <param name="count">The number of resources to remove.</param>
            <remarks>The Gantt model must be notified of the change in the collection using the
            <see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IResourceCollection.GanttModel">
            <summary>
            When implemented by a class, gets the Gantt model to which this collection belongs.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IResourceCollection.Item(System.Int32)">
            <summary>
            When implemented by a class, gets the <see cref="T:NickLee.Views.Gantt.Data.IResource" /> at the specified indexed location in the collection.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> at the specified indexed location in the collection.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IResourceCollection.Resource">
            <summary>
            When implemented by a class, gets the resource that owns the collection.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IResource" /> instance, or <see langword="null" />
            if the collection is the root collection in the Gantt model.</value>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.#ctor(NickLee.Views.Gantt.Data.BaseGanttModel)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.BaseResourceCollection" /> class.
            </summary>
            <param name="model">The Gantt data model for the collection.</param>
            <remarks>This constructor is only used by the Gantt data model to create the
            root resource collection.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.#ctor(NickLee.Views.Gantt.Data.BaseResource)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.BaseResourceCollection" /> class.
            </summary>
            <param name="resource">The parent resource for the collection.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.Add(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Adds the specified resource at the end of the collection.
            </summary>
            <param name="resource">The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to add.</param>
            <returns>The zero-based index of the position of the inserted resource.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.AddRange(NickLee.Views.Gantt.Data.IResource[])">
            <summary>
            Adds the specified resources at the end of the collection.
            </summary>
            <param name="resources">An array of <see cref="T:NickLee.Views.Gantt.Data.IResource" /> objects.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.Contains(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Determines if the specified <see cref="T:NickLee.Views.Gantt.Data.IResource" /> is a member of the collection.
            </summary>
            <param name="resource">The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to locate in the collection.</param>
            <returns><see langword="true" /> if the <see cref="T:NickLee.Views.Gantt.Data.IResource" /> is a member of the collection;
            <see langword="false" />, otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.NickLee#Views#Gantt#Data#IResourceCollection#RemoveRange(System.Int32,System.Int32)">
            <summary>
            Defines a collection of <see cref="T:NickLee.Views.Gantt.Data.BaseResource" /> objects.
            </summary>
            <remarks>This class is used by the <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModel" /> class.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.IndexOf(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Retrieves the index of a specific resource in the collection.
            </summary>
            <param name="resource">The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to locate in the collection.</param>
            <returns>The zero-based index of the resource found in the collection;
            <strong>-1</strong> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.Insert(System.Int32,NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Inserts a resource into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="resource" /> should be inserted.</param>
            <param name="resource">The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to insert.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.InsertRange(System.Int32,NickLee.Views.Gantt.Data.IResource[])">
            <summary>
            Inserts resources into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which the new resources should be inserted.</param>
            <param name="resources">An array of the resources to insert.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.OnClear">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnClear">CollectionBase.OnClear</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.OnClearComplete">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnClearComplete">CollectionBase.OnClearComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">CollectionBase.OnInsert</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">CollectionBase.OnInsertComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.OnInsertRange(System.Int32,System.Collections.ICollection)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Util.Collections.SimpleCollectionBase.OnInsertRange(System.Int32,System.Collections.ICollection)">SimpleCollectionBase.OnInsertRange</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.OnInsertRangeComplete(System.Int32,System.Collections.ICollection)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Util.Collections.SimpleCollectionBase.OnInsertRangeComplete(System.Int32,System.Collections.ICollection)">SimpleCollectionBase.OnInsertRangeComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.OnMove(System.Int32,System.Int32)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Util.Collections.SimpleCollectionBase.OnMove(System.Int32,System.Int32)">SimpleCollectionBase.OnMove</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.OnMoveComplete(System.Int32,System.Int32)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Util.Collections.SimpleCollectionBase.OnMoveComplete(System.Int32,System.Int32)">SimpleCollectionBase.OnMoveComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.OnRemove(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">CollectionBase.OnRemove</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">CollectionBase.OnRemoveComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.OnRemoveRange(System.Int32,System.Collections.ICollection)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Util.Collections.SimpleCollectionBase.OnRemoveRange(System.Int32,System.Collections.ICollection)">SimpleCollectionBase.OnRemoveRange</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.OnRemoveRangeComplete(System.Int32,System.Collections.ICollection)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Util.Collections.SimpleCollectionBase.OnRemoveRangeComplete(System.Int32,System.Collections.ICollection)">SimpleCollectionBase.OnRemoveRangeComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.OnResourceCollectionChanged(NickLee.Views.Gantt.Data.ResourcesChangeEventArgs)">
            <summary>
            Notifies the Gantt data model that the collection has changed.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /> that contains the event data.</param>
            <remarks>This method must be called each time the collection has changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.OnResourceCollectionChanging(NickLee.Views.Gantt.Data.ResourcesChangeEventArgs)">
            <summary>
            Notifies the Gantt data model that the collection is changing.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /> that contains the event data.</param>
            <remarks>This method must be called each time the collection is changing.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.OnValidate(System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)">CollectionBase.OnValidate</see>.
            </summary>
            <exception cref="T:System.InvalidCastException"><paramref name="value" /> is not a
            <see cref="T:NickLee.Views.Gantt.Data.BaseResource" />.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.Remove(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Removes the specified resource from the collection.
            </summary>
            <param name="resource">The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to remove.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.ToString">
            <summary>
            This member overrides <see cref="M:System.Object.ToString">Object.ToString</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.ToString(System.IFormatProvider)">
            <summary>
            Formats the string using the specified <see cref="T:System.IFormatProvider" />.
            </summary>
            <param name="formatProvider">The format provider used to format the string.</param>
            <returns>The string representation of this object.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.ToString(System.String)">
            <summary>
            Formats the string using the specified format.
            </summary>
            <param name="format">The format used to format the string.</param>
            <returns>The string representation of this object.</returns>
            <remarks>This method returns the concatenation of the child resources separated by a
            comma. If <paramref name="format" /> is <strong>i</strong> or <strong>I</strong>, the identifier is used to
            represent a resource; otherwise, its name is used.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseResourceCollection.ToString(System.String,System.IFormatProvider)">
            <summary>
            Formats the string using the specified format and <see cref="T:System.IFormatProvider" />.
            </summary>
            <param name="format">The format used to format the string.</param>
            <param name="formatProvider">The format provider used to format the string.</param>
            <returns>The string representation of this object.</returns>
            <remarks>This method returns the concatenation of the child resources separated by a
            comma. If <paramref name="format" /> is <strong>i</strong> or <strong>I</strong>, the identifier is used to
            represent a resource; otherwise, its name is used.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseResourceCollection.GanttModel">
            <summary>
            Gets the Gantt data model to which this collection belongs.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseResourceCollection.InnerList">
            <summary>
            This member overrides <see cref="P:System.Collections.CollectionBase.InnerList">CollectionBase.InnerList</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseResourceCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Data.IResource" /> at the specified indexed location in the collection.
            </summary>
            <param name="index">The zero-based index of the resource to get.</param>
            <value>The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> at the specified index.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseResourceCollection.Resource">
            <summary>
            Gets the resource that owns the collection.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IResource" /> instance, or <see langword="null" />
            if the collection is the root collection in the Gantt data model.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Gantt.Data.IGanttModel.ActivitiesChanging" /> and
            <see cref="E:NickLee.Views.Gantt.Data.IGanttModel.ActivitiesChanged" /> events of an <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />.
            </summary>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to handle the
            <strong>IGanttModel.ActivitiesChanged</strong> event.
            </para>
            <code lang="C#">
            SimpleGanttModel model = new SimpleGanttModel();
            model.ActivitiesChanged += new ActivitiesChangeEventHandler(ActivitiesChanged);

            private void ActivitiesChanged(object sender, ActivitiesChangeEventArgs args) {
            switch(args.Action) {
            case ActivitiesAction.Add:
            Console.WriteLine("Activities added.");
            break;
            case ActivitiesAction.Delete:
            Console.WriteLine("Activities deleted.");
            break;
            case ActivitiesAction.PropertyChange:
            Console.WriteLine("Activities Changed.");
            break;
            case ActivitiesAction.Move:
            Console.WriteLine("Activities Moved.");
            break;
            case ActivitiesAction.Reset:
            Console.WriteLine("Activities Reset.");
            break;
            }
            }
            </code>
            <code lang="Visual Basic">
            Dim WithEvents model As New SimpleGanttModel

            Private Sub ActivitiesChanged(ByVal sender As Object, ByVal args As ActivitiesChangeEventArgs) Handles model.ActivitiesChanged
            Select Case args.Action
            Case ActivitiesAction.Add
            Console.WriteLine("Activities added.")
            Exit Sub
            Case ActivitiesAction.Delete
            Console.WriteLine("Activities deleted.")
            Exit Sub
            Case ActivitiesAction.PropertyChange
            Console.WriteLine("Activities Changed.")
            Exit Sub
            Case ActivitiesAction.Move
            Console.WriteLine("Activities Moved.")
            Exit Sub
            Case ActivitiesAction.Reset
            Console.WriteLine("Activities Reset.")
            Exit Sub
            End Select
            End Sub
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> class, notifying
            that all the activities of the Gantt model have been changed.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs.#ctor(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> class, notifying
            that the specified activity, including its hierarchy, has been changed.
            </summary>
            <param name="activity">The activity that has been changed.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs.#ctor(NickLee.Views.Gantt.Data.ActivitiesAction,NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> class.
            </summary>
            <param name="action">The <see cref="T:NickLee.Views.Gantt.Data.ActivitiesAction" /> that causes the event.</param>
            <param name="activity">The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> on which the action was taken.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs.#ctor(NickLee.Views.Gantt.Data.ActivitiesAction,NickLee.Views.Gantt.Data.IActivity,System.Int32,NickLee.Views.Gantt.Data.IActivity[])">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> class, notifying
            that the specified activities have been added or removed from the Gantt model.
            </summary>
            <param name="action">The <see cref="T:NickLee.Views.Gantt.Data.ActivitiesAction" /> that causes the event.</param>
            <param name="activity">The activity that had its subactivities changed.</param>
            <param name="index">The zero-based index where the change started.</param>
            <param name="children">An array of <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> objects.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs.#ctor(NickLee.Views.Gantt.Data.IActivity,System.String,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> class, notifying
            that the specified activity had one of its property changed.
            </summary>
            <param name="activity">The activity that has been changed.</param>
            <param name="propertyName">The property that has been changed, or <see langword="null" /> to
            specify that all the properties have been changed.</param>
            <param name="value">The new value of the property.</param>
            <param name="oldValue">The old value of the property.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs.#ctor(NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.IActivity,System.Int32,NickLee.Views.Gantt.Data.IActivity,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> class, notifying
            that the specified activity was moved.
            </summary>
            <param name="activity">The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> that was moved.</param>
            <param name="oldParent">The previous parent activity.</param>
            <param name="oldIndex">The previous zero-based index of the activity in the previous parent.</param>
            <param name="newParent">The new parent activity.</param>
            <param name="index">The new zero-based index of the activity in the new parent.</param>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs.Action">
            <summary>
            Gets the action that has occurred on the activities of the Gantt model.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Data.ActivitiesAction" /> values.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs.Activity">
            <summary>
            Gets the activity upon which an action has occurred.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> instance, or
            <see langword="null" /> if the action concerns every
            activities in the Gantt model.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the operation should be canceled.
            </summary>
            <value><see langword="true" /> if the operation should be canceled;
            <see langword="false" /> otherwise. The default value is <see langword="false" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs.Children">
            <summary>
            Gets the activities that was added or removed.
            </summary>
            <value>An array of <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> objects.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs.Index">
            <summary>
            Gets the zero-based index where the action started.
            </summary>
            <value>A zero-based index.</value>
            <remarks>This property is also used to represent the new index
            of an activity in a move operation.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs.NewParent">
            <summary>
            Gets the new parent activity in a move operation.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs.OldIndex">
            <summary>
            Gets the zero-based index of the activity before the move operation.
            </summary>
            <value>A zero-based index.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs.OldParent">
            <summary>
            Gets the previous parent activity in a move operation.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs.OldValue">
            <summary>
            Gets the old value of the property that has changed.
            </summary>
            <value>An <see cref="T:System.Object" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs.Property">
            <summary>
            Gets the property that has changed.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the property that has
            changed on the <see cref="T:NickLee.Views.Gantt.Data.IActivity" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs.Synthetic">
            <summary>
            Gets or sets a value indicating whether the operation is synthetic.
            </summary>
            <value><see langword="true" /> if the operation is synthetic;
            <see langword="false" /> otherwise. The default value is <see langword="false" />.</value>
            <remarks>A synthetic event is not recorded by the <see cref="T:NickLee.Views.Gantt.Data.GanttModelUndoManager" />.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs.TimeEvent">
            <summary>
            Gets or sets a value indicating whether the operation is changing activity time bounds.
            </summary>
            <value><see langword="true" /> if the operation changes activity time bounds;
            <see langword="false" /> otherwise. The default value is <see langword="true" /> when the activity property
            being changed is <see cref="P:NickLee.Views.Gantt.Data.IActivity.StartTime">IActivity.StartTime</see>, <see cref="P:NickLee.Views.Gantt.Data.IActivity.EndTime">IActivity.EndTime</see>,
            <see cref="P:NickLee.Views.Gantt.Data.IActivity.EndTime">IActivity.Duration</see> or
            <see cref="P:NickLee.Views.Gantt.Data.IActivity.TimeInterval">IActivity.TimeInterval</see>.</value>
            <remarks>This value is used to recompute the time interval of summary activities when children are
            changing.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs.Value">
            <summary>
            Gets or sets the new value of the property that has changed.
            </summary>
            <value>An <see cref="T:System.Object" /> instance.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.NonWorkingTimeGrid">
            <summary>
            Defines a grid that paints nonworking time areas.
            </summary>
            <remarks>
            The <strong>NonWorkingTimeGrid</strong> is a grid that displays nonworking time on a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" />
            component.
            <p>You can add grid to
            a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" /> using the <strong>TimeGrids</strong> property.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to add grids to an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" />.
            </para>
            <code lang="C#">
            ActivitySheet sheet = new ActivitySheet();
            // Delete default time grids
            sheet.TimeGrids.Clear();
            // Add a new grid that draws ticks each hour
            TimeGrid grid = new DefaultTimeGrid();
            grid.TimeUnit = TimeUnit.Hour;
            sheet.TimeGrids.Add(grid);
            </code>
            <code lang="Visual Basic">
            Dim sheet As New ActivitySheet
            ' Delete default time grids
            sheet.TimeGrids.Clear()
            ' Add a new grid that draws ticks each hour
            Dim grid as New DefaultTimeGrid
            grid.TimeUnit = TimeUnit.Hour
            sheet.TimeGrids.Add(grid)
            </code>
            </example>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.TimeRangeGrid" />
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid">
            <summary>
            Defines a vertical grid for the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" />.
            </summary>
            <remarks>
            The <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> class is the <see langword="abstract" /> base class
            for vertical time grids in a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" /> component. You can add grid to
            a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" /> using the <strong>TimeGrids</strong> property.
            The concrete implementation of <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> are <see cref="T:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid" /> and <see cref="T:NickLee.Views.Gantt.Windows.Forms.WorkingTimesGrid" />.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to add grids to an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" />.
            </para>
            <code lang="C#">
            ActivitySheet sheet = new ActivitySheet();
            // Delete default time grids
            sheet.TimeGrids.Clear();
            // Add a new grid that draws ticks each hour
            TimeGrid grid = new DefaultTimeGrid();
            grid.TimeUnit = TimeUnit.Hour;
            sheet.TimeGrids.Add(grid);
            </code>
            <code lang="Visual Basic">
            Dim sheet As New ActivitySheet
            ' Delete default time grids
            sheet.TimeGrids.Clear()
            ' Add a new grid that draws ticks each hour
            Dim grid as New DefaultTimeGrid
            grid.TimeUnit = TimeUnit.Hour
            sheet.TimeGrids.Add(grid)
            </code>
            </example>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.WorkingTimesGrid" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeGrid.OnTimeGridChanged(System.EventArgs)">
            <summary>
            Invoked when a property of the grid has changed.
            </summary>
            <remarks>Called when the grid is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeGrid.Paint(System.Drawing.Graphics,System.Drawing.RectangleF)">
            <summary>
            Paints the grid in the specified rectangle.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics" /> object to paint the grid to.</param>
            <param name="rect">A <see cref="T:System.Drawing.RectangleF" /> object that defines the area where the grid should be
            painted.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeGrid.SetTimeControl(NickLee.Views.Gantt.Windows.Forms.TimeControl)">
            <summary>
            Sets the time control of the grid.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.TimeGrid._showOnTop">
            <summary>
            Indicates if the grid is a front grid.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.TimeGrid._timeControl">
            <summary>
            The <strong>TimeControl</strong> that contains this grid.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.TimeGrid._visible">
            <summary>
            Indicates if the grid is visible or not.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.TimeGrid.TimeGridChanged">
            <summary>
            Occurs when the grid has changed.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeGrid.RightToLeft">
            <summary>
            Indicates if the grid is painted in right-to-left.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeGrid.ShowOnTop">
            <summary>
            Gets or sets a value that indicates if the grid should be a front grid.
            </summary>
            <value>A value that indicates whether the grid should be a front grid. The
            default value is <see langword="false" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeGrid.TimeControl">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" /> that contains this grid object.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" /> that displays this grid or <see langword="null" /> if
            no control is displaying this grid. </value>
            <remarks>The property value may be <see langword="null" /> if the grid has not been
            assigned to any <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" />.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeGrid.Visible">
            <summary>
            Gets or sets a value that indicates if the grid should be painted.
            </summary>
            <value>A value that indicates whether the grid should be painted. The
            default value is <see langword="true" />.</value>
            <remarks>When setting this property to <see langword="false" /> the grid
            will not be displayed at all.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.NonWorkingTimeGrid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.NonWorkingTimeGrid" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.NonWorkingTimeGrid.Paint(System.Drawing.Graphics,System.Drawing.RectangleF)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.TimeGrid.Paint(System.Drawing.Graphics,System.Drawing.RectangleF)">TimeGrid.Paint</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.NonWorkingTimeGrid.PaintNonWorkingTime(System.Drawing.Graphics,System.Drawing.Brush,NickLee.Views.Gantt.DateTimeInterval,System.Drawing.RectangleF)">
            <summary>
            Paints the specified time interval as a nonworking time area.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics" /> object to draw to.</param>
            <param name="brush">A <see cref="T:System.Drawing.Brush" /> to fill the rectangle that defines the week-end.</param>
            <param name="interval">A <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> object that represents the time interval of the nonworking time.</param>
            <param name="rect">A <see cref="T:System.Drawing.RectangleF" /> object that represents the week-end.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.NonWorkingTimeGrid.PaintNonWorkingTimeIntervals(System.Drawing.Graphics,System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
            Paints the nonworking days.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics" /> object to paint to.</param>
            <param name="brush">A <see cref="T:System.Drawing.Brush" /> used to fill the nonworking days.</param>
            <param name="rect">The rectangle inside which nonworking days should be painted.</param>
            <remarks>This implementation only paints the week-ends as nonworking days.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.NonWorkingTimeGrid.BackColor">
            <summary>
            Gets or sets the background color of nonworking time areas.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of nonworking time areas.
            </value>
            <remarks>This property is used only if the <see cref="P:NickLee.Views.Gantt.Windows.Forms.NonWorkingTimeGrid.UseHatch" /> property is <see langword="true" />.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.NonWorkingTimeGrid.ForeColor">
            <summary>
            Gets or sets the foreground color of nonworking time areas.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of nonworking time areas.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.NonWorkingTimeGrid.FridayWorkingHours">
            <summary>
            Gets or sets the working hours for Fridays.
            </summary>
            <value>An array of <see cref="T:NickLee.Views.Gantt.DateTimeInterval" />.
            Note that only the hours of the <see cref="T:System.DateTime" />
            structure are relevant here.</value>
            <remarks>Overlapping intervals will be compacted.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.NonWorkingTimeGrid.HatchStyle">
            <summary>
            Gets or sets the style of hatch for grid.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> that is used to paint the grid when
            the <see cref="P:NickLee.Views.Gantt.Windows.Forms.NonWorkingTimeGrid.UseHatch" /> property is set to <see langword="true" />.
            The default value is <strong>Percent25</strong>.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.NonWorkingTimeGrid.MondayWorkingHours">
            <summary>
            Gets or sets the working hours for Mondays.
            </summary>
            <value>An array of <see cref="T:NickLee.Views.Gantt.DateTimeInterval" />.
            Note that only the hours of the <see cref="T:System.DateTime" />
            structure are relevant here.</value>
            <remarks>Overlapping intervals will be compacted.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.NonWorkingTimeGrid.PaintOnlyWeekEnds">
            <summary>
            Gets or sets a value indicating whether the grid should only paint the week-ends.
            </summary>
            <value><see langword="true" /> if the grid only paints week-ends, <see langword="false" /> otherwise.
            The default value is <see langword="false" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.NonWorkingTimeGrid.SaturdayWorkingHours">
            <summary>
            Gets or sets the working hours for Saturdays.
            </summary>
            <value>An array of <see cref="T:NickLee.Views.Gantt.DateTimeInterval" />.
            Note that only the hours of the <see cref="T:System.DateTime" />
            structure are relevant here.</value>
            <remarks>Overlapping intervals will be compacted.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.NonWorkingTimeGrid.SundayWorkingHours">
            <summary>
            Gets or sets the working hours for Sundays.
            </summary>
            <value>An array of <see cref="T:NickLee.Views.Gantt.DateTimeInterval" />.
            Note that only the hours of the <see cref="T:System.DateTime" />
            structure are relevant here.</value>
            <remarks>Overlapping intervals will be compacted.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.NonWorkingTimeGrid.ThursdayWorkingHours">
            <summary>
            Gets or sets the working hours for Thursdays.
            </summary>
            <value>An array of <see cref="T:NickLee.Views.Gantt.DateTimeInterval" />.
            Note that only the hours of the <see cref="T:System.DateTime" />
            structure are relevant here.</value>
            <remarks>Overlapping intervals will be compacted.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.NonWorkingTimeGrid.TuesdayWorkingHours">
            <summary>
            Gets or sets the working hours for Tuesdays.
            </summary>
            <value>An array of <see cref="T:NickLee.Views.Gantt.DateTimeInterval" />.
            Note that only the hours of the <see cref="T:System.DateTime" />
            structure are relevant here.</value>
            <remarks>Overlapping intervals will be compacted.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.NonWorkingTimeGrid.UseHatch">
            <summary>
            Gets or sets a value indicating whether the hatch brush will be used to fill the
            background of the bar.
            </summary>
            <value><see langword="true" /> if the background of the bar is hatched,
            <see langword="false" /> otherwise.
            The default value is <see langword="false" />.
            </value>
            <remarks>When the property returns <see langword="true" /> the
            value of the <see cref="P:NickLee.Views.Gantt.Windows.Forms.NonWorkingTimeGrid.HatchStyle" /> property is used to fill the background
            of the bar.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.NonWorkingTimeGrid.WednesdayWorkingHours">
            <summary>
            Gets or sets the working hours for Wednesdays.
            </summary>
            <value>An array of <see cref="T:NickLee.Views.Gantt.DateTimeInterval" />.
            Note that only the hours of the <see cref="T:System.DateTime" />
            structure are relevant here.</value>
            <remarks>Overlapping intervals will be compacted.</remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.Design.ScrollGanttSheetDesigner">
            <summary>
            Defines a designer for the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.ScrollGanttSheetDesigner.#ctor">
            <summary>
            Creates and initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.Design.ScrollGanttSheetDesigner" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.ScrollGanttSheetDesigner.PostFilterProperties(System.Collections.IDictionary)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)">ComponentDesigner.PostFilterProperties</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.Design.ScrollGanttSheetDesigner.AssociatedComponents">
            <summary>
            This member overrides <see cref="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents">ComponentDesigner.AssociatedComponents</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.Design.ScrollGanttSheetDesigner.Verbs">
            <summary>
            This member overrides <see cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs">ComponentDesigner.Verbs</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.ConstraintLinkStyleEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.ConstraintLinkStyleEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.CreateActivityEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.CreateActivity" /> event of
            the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" /> class.
            </summary>
            <remarks>A <see cref="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.CreateActivity" /> event is raised when the user
            creates an activity using the mouse pointer in a <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CreateActivityEventArgs.DefaultCreateActivity">
            <summary>
            The default method for creating the activity and adding it in the model.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CreateActivityEventArgs.GanttModel">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> where the activity must be added.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CreateActivityEventArgs.Resource">
            <summary>
            Gets an <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to which the created activity may be assigned.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to which the created activity may be
            assigned or <see langword="null" /> if no resource must be assigned to the activity.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CreateActivityEventArgs.TimeInterval">
            <summary>
            Gets the time interval that defines the start and end time of the activity that must be
            created.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewer">
            <summary>
            Internal editor used in WorkingTimesEditor
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewer.FireEvent(System.Object,System.EventArgs)">
            <summary>
            Fires an event based on key in the Events list.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewer.LayoutScrollBars">
            <summary>
            Places the scrollbars depending on the orientation.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewer.OnBorderStyleChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewer.BorderStyle" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>BorderStyle</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewer.OnCreateControl">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnCreateControl">Control.OnCreateControl</see>
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewer.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">Control.SetBoundsCore</see>.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarViewer._borderStyle">
            <summary>
            The border style. The initialization must be done here.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarViewer.BorderStyleChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewer.BorderStyle" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarViewer.SelectionChanged">
            <summary>
            Occurs when the selection is changed on the control.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewer.BorderStyle">
            <summary>
            Gets or sets the border style of the control.
            </summary>
            <value>
            One of the <see cref="T:System.Windows.Forms.BorderStyle" /> values. The default value is <strong>Fixed3D</strong>.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewer.Calendar">
            <summary>
            Gets or sets the edited calendar.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewer.CreateParams">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.CreateParams">Control.CreateParams</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewer.FirstVisibleDate">
            <summary>
            Gets or sets the first visible date.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewer.RightToLeft">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.RightToLeft">Control.RightToLeft</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewer.VScrollBarWidth">
            <summary>
            Gets the displayed width of the vertical scrollbar.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Web.UI.Design.CalendarViewDesigner">
            <summary>
            Defines a designer for the <see cref="T:NickLee.Views.Gantt.Web.UI.CalendarView" /> control.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.Design.CalendarViewDesigner.Verbs">
            <summary>
            Overridden. See <see cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs">ComponentDesigner.Verbs</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Web.UI.CalendarView">
            <summary>
            A calendar control displaying activities of a Gantt model.
            </summary>
            <remarks>
            The <see cref="T:NickLee.Views.Gantt.Web.UI.CalendarView" /> control displays the activities of a <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />
            in a calendar as in the picture below.
            <p><img src="calendarview.png" /></p>
            The control can display all the activities of the Gantt model specified by the <see cref="P:NickLee.Views.Gantt.Web.UI.CalendarView.GanttModel" />
            property. You can also display only the activities assigned to a specified resource by setting the <see cref="P:NickLee.Views.Gantt.Web.UI.CalendarView.Resource" />
            property.<p />
            By default activities are displayed in the same order as in the Gantt model but you can change the order using
            the <see cref="P:NickLee.Views.Gantt.Web.UI.CalendarView.SortBy" /> and <see cref="P:NickLee.Views.Gantt.Web.UI.CalendarView.AscendingSort" /> properties.<p />
            Activities will be displayed according to a style defined by the <see cref="P:NickLee.Views.Gantt.Web.UI.CalendarView.BarStyles" /> property. The default style
            collection contains a style for "Normal" activities and a style for "Milestone" this means that "Summary" activities
            will not be displayed. The style of the bar defined by the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> class defines the colors
            of the bar as well as the text displayed in the bar. You can also decide wheter the start and end time of the bar will
            be rounded to the beginning and end of a day using the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.BarRounding" /> property of the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> class.
            </remarks>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" />
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.CalendarView.#ctor">
            <summary>
            Creates and initializes a new <see cref="T:NickLee.Views.Gantt.Web.UI.CalendarView" /> object.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.CalendarView.AddParsedSubObject(System.Object)">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.AddParsedSubObject(System.Object)">Control.AddParsedSubObject</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.CalendarView.Dispose">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.Dispose">Control.Dispose</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.CalendarView.FilterViewStateProperties(System.Collections.IDictionary)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Web.UI.ImageControl.FilterViewStateProperties(System.Collections.IDictionary)">ImageControl.FilterViewStateProperties</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.CalendarView.GenerateImageURL">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Web.UI.ImageControl.GenerateImageURL">ImageControl.GenerateImageURL</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.CalendarView.HitTest(System.Drawing.Point)">
            <summary>
            Gets information about the control at a specified point on the screen.
            </summary>
            <param name="point">A <see cref="T:System.Drawing.Point" /> that represents single x,y coordinate.
            </param>
            <returns>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView.HitTestInfo" /> that contains specific information about the schedule sheet.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.CalendarView.LoadViewState(System.Object)">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.LoadViewState(System.Object)">Control.LoadViewState</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.CalendarView.OnClick(System.Web.UI.ImageClickEventArgs)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Web.UI.ImageControl.OnClick(System.Web.UI.ImageClickEventArgs)">ImageControl.OnClick</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.CalendarView.OnInit(System.EventArgs)">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)">Control.OnInit</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.CalendarView.RenderImageMap(System.Web.UI.HtmlTextWriter)">
            <summary>
            This method overrides <see cref="M:NickLee.Views.Web.UI.ImageControl.RenderImageMap(System.Web.UI.HtmlTextWriter)">ImageControl.RenderImageMap</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.CalendarView.RenderImageMapAreas(System.Web.UI.HtmlTextWriter)">
            <summary>
            Is called to render image map areas.
            </summary>
            <param name="writer">The writer in which to put the image map areas.</param>
            <remarks>The implementation of this method create image map areas to display
            tooltips for visible activities.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.CalendarView.ActivityToolTip" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.ActivityToolTip">
            <summary>
            Gets or sets the tooltip format for activities.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the format of the tooltip that
            will be displayed when the mouse hovers activities.</value>
            <remarks>The value of this property is an expression that enables an easy customization of the
            tooltip.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample sets the string displayed by the tooltip as the concatenation of
            the activity name, the activity start time and the activity duration.
            </para>
            <code lang="C#">
            CalendarView calendar = ...
            calendar.ActivityToolTip = "'Name : ' + Name + '\\n' + {StartTime:m} + '(' + Duration + ')'";
            </code>
            <code lang="Visual Basic">
            Dim calendar As CalendarView = ...
            calendar.ActivityToolTip = "'Name : ' + Name + '\\n' + {StartTime:m} + '(' + Duration + ')'"
            </code>
            <para lang="C#,Visual Basic">
            Note the use of the '{' and '}' characters to specify a format for the <strong>StartTime</strong>
            property (see <see cref="T:System.Globalization.DateTimeFormatInfo" /> for details about date formats).
            </para>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.AlternatingBackColor">
            <summary>
            Gets or sets the background color of alternating month for a ledger appearance.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the alternating background color.
            The default value is the system color for windows (<see cref="P:System.Drawing.SystemColors.Window">SystemColors.Window</see>).
            </value>
            <remarks>
            By default, all days have the same color (the <see cref="P:NickLee.Views.Gantt.Web.UI.CalendarView.BackColor" /> property of the control).
            When you set the <strong>AlternatingBackColor</strong> to a new color, all the other months are set to the new color.
            To reset the alternating background color
            to its default value, set the property to <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.AscendingSort">
            <summary>
            Indicates whether the sorting of activities in a cell is ascending or descending.
            </summary>
            <remarks>Activities displayed for a particular day are sorted using the <see cref="P:NickLee.Views.Gantt.Web.UI.CalendarView.SortBy" />
            property. When this property is <see langword="true" /> the sorting will be done in ascending order.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.AutoFit">
            <summary>
            Gets or sets a value that indicates if the column width is
            automatically adjusted so that all columns are visible.
            </summary>
            <value><see langword="true" /> if the width of columns are automatically
            adjusted so that all columns are always visible. The default value is
            <see langword="false" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.BackColor">
            <summary>
            Overridden. See <see cref="P:System.Web.UI.WebControls.WebControl.BackColor">Control.BackColor</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.BackgroundColor">
            <summary>
            Gets or sets the color of the non-row area of the calendar.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the calendar background.
            The default value is the <see cref="P:System.Drawing.SystemColors.AppWorkspace">SystemColors.AppWorkspace</see> color.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.BarStyles">
            <summary>
            Gets the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> that defines the graphical representation
            of activities in the calendar.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection" /> that defines the graphical representation
            of activities in the calendar.</value>
            <remarks>
            When the <see cref="T:NickLee.Views.Gantt.Web.UI.CalendarView" /> needs to display
            an activity, then it looks inside its collection of styles and paints the bar style that
            correspond to the activity. To detect if a particular style corresponds to an activity, it uses the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.StyleFor" /> property of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" />. This property defines a Boolean expression
            that will be evaluated for this purpose.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.BorderColor">
            <summary>
            Overridden. See <see cref="P:System.Web.UI.WebControls.WebControl.BorderColor">WebControl.BorderColor</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.CellHeaderColor">
            <summary>
            Gets or sets the background color of cell headers.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.CellHeaderDateFormat">
            <summary>
            Gets or sets the date format used to display dates in the cell header.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.ColumnWidth">
            <summary>
            Gets or sets the width of a column.
            </summary>
            <value>The width of a column.</value>
            <remarks>The property value is not taken into account when the <see cref="P:NickLee.Views.Gantt.Web.UI.CalendarView.AutoFit" />
            property is <see langword="true" /></remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.CompactLayout">
            <summary>
            Indicates whether the layout of activities attempt to
            compact the activities so that more activities are visible.
            </summary>
            <remarks>When the value is <see langword="true" /> the sorting of activities
            defined by the <see cref="P:NickLee.Views.Gantt.Web.UI.CalendarView.SortBy" /> property will not be respected.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.CompactWeekEnd">
            <summary>
            Indicates whether the weekend is displayed in one single column.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.DayGridLineColor">
            <summary>
            Gets or sets the color of the vertical grid line.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the vertical grid lines.
            The default value is the system color for controls (<see cref="P:System.Drawing.SystemColors.Control">SystemColors.Control</see>).
            </value>
            <remarks>
            No grid line is displayed if the <see cref="P:NickLee.Views.Gantt.Web.UI.CalendarView.DayGridLineStyle" /> property
            is set to <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle">None</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.DayGridLineStyle">
            <summary>
            Gets or sets the style of vertical grid lines.
            </summary>
            <value>
            One of the <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle" /> values.
            The default value is <see cref="F:NickLee.Views.Windows.Forms.GridLineStyle.Solid" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.EnableBarStyleViewState">
            <summary>
            Gets or sets a value indicating whether the <see cref="P:NickLee.Views.Gantt.Web.UI.CalendarView.BarStyles" /> property
            should be serialized into the view state.
            </summary>
            <value><see langword="true" /> if the <strong>BarStyles</strong> property should
            be serialized into the view state; otherwise, <see langword="false" />.
            The default value is <see langword="true" />.</value>
            <remarks>If you do not modify the bar styles of the calendar during round-trips,
            you should set this property to <see langword="false" /> to speed up page loading.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.FirstVisibleDate">
            <summary>
            Gets or sets the first visible date.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.FlatStyle">
            <summary>
            Gets or sets the flat style appearance of the control.
            </summary>
            <value>One of the <see cref="T:System.Windows.Forms.FlatStyle" /> values.
            The default value is <b>Standard</b>.</value>
            <remarks>Setting this property to either <b>Flat</b> or <b>Popup</b>
            has the same effect.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.Font">
            <summary>
            Overridden. See <see cref="P:System.Web.UI.WebControls.WebControl.Font">WebControl.Font</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.ForeColor">
            <summary>
            Overridden. See <see cref="P:System.Web.UI.WebControls.WebControl.ForeColor">Control.ForeColor</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.GanttModel">
            <summary>
            Gets or sets the Gantt data model (<see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />)
            containing the data to display in this calendar.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> that contains the data to display in the calendar.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.HeaderBackColor">
            <summary>
            Gets or sets the background color used for
            row and column headers.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the background
            color of column headers. The default value is
            the color used for
            controls (<see cref="P:System.Drawing.SystemColors.Control">SystemColors.Control</see>).</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.HeaderFont">
            <summary>
            Gets or sets the font used for column headers.
            </summary>
            <value>
            The <see cref="T:System.Drawing.Font" /> object that represents the header text.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.HeaderForeColor">
            <summary>
            Gets or sets the color used for text
            in column headers.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground
            color in column headers.
            The default value is the value used
            for controls (<see cref="P:System.Drawing.SystemColors.ControlText">SystemColors.ControlText</see>).</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.Height">
            <summary>
            Overridden. See <see cref="P:System.Web.UI.WebControls.WebControl.Height">WebControl.Height</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.HorizontalOffset">
            <summary>
            Gets or sets the horizontal scrolling offset of the control in pixels.
            </summary>
            <value>The horizontal scrolling offset of the control in pixels.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.IsInteractive">
            <summary>
            Overridden. See <see cref="P:NickLee.Views.Web.UI.ImageControl.IsInteractive">ImageControl.IsInteractive</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.Resource">
            <summary>
            Gets or sets a resource for which activities will be displayed.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Data.IResource" /> for which activities will be displayed. When the value
            is not <langword langword="null" /> only activities affected to the
            specified resource will be displayed.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.RowHeight">
            <summary>
            Gets or sets the height of the rows.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.ShowTooltips">
            <summary>
            Indicates whether the <see cref="T:NickLee.Views.Gantt.Web.UI.CalendarView" /> should display tooltips on activities.
            </summary>
            <value><see langword="true" /> if the <see cref="T:NickLee.Views.Gantt.Web.UI.CalendarView" />
            must display tooltips on activities; <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.SortBy">
            <summary>
            Gets or sets the name of a property of activities used to sort the activities displayed in a day.
            </summary>
            <value>A string that represents the name of a property of an activity used to sort the activities
            diaplyed in a day. The default value is "" meaning that activities will be in the order of the
            gantt data model.</value>
            <remarks>Note that the sorting will be done in ascending or descending order depending on the
            <see cref="P:NickLee.Views.Gantt.Web.UI.CalendarView.AscendingSort" /> property</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.TextFont">
            <summary>
            Gets or sets the font used by the control to draw text.
            </summary>
            <value>A <see cref="T:System.Drawing.Font" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.WeekGridLineColor">
            <summary>
            Gets or sets the color of the horizontal grid line.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the horizontal grid lines.
            The default value is the system color for controls (<see cref="P:System.Drawing.SystemColors.Control">SystemColors.Control</see>).
            </value>
            <remarks>
            No grid line is displayed if the <see cref="P:NickLee.Views.Gantt.Web.UI.CalendarView.WeekGridLineStyle" /> property
            is set to <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle">None</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.WeekGridLineStyle">
            <summary>
            Gets or sets the style of horizontal grid lines.
            </summary>
            <value>
            One of the <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle" /> values.
            The default value is <see cref="F:NickLee.Views.Windows.Forms.GridLineStyle.Solid" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.CalendarView.Width">
            <summary>
            Overridden. See <see cref="P:System.Web.UI.WebControls.WebControl.Width">WebControl.Width</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.NamespaceDoc">
            <summary>
            The <strong>NickLee.Views.Gantt</strong> namespace contains utility classes that
            are used thoughout the NickLee Gantt for .NET library.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.LinearTimeLine">
            <summary>
            A time line object with a linear conversion between date and pixels on the screen.
            </summary>
            <remarks>
            <p>The <see cref="T:NickLee.Views.Gantt.LinearTimeLine" /> converts time information in a linear way.</p>
            <p>The <see cref="P:NickLee.Views.Gantt.LinearTimeLine.Zoom" /> and <see cref="P:NickLee.Views.Gantt.LinearTimeLine.UnitDuration" /> properties
            control the conversion of <see cref="T:System.DateTime" /> structures into
            <see cref="T:System.Double" /> values.</p>
            <p>This time line is the default time line for Gantt Controls.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to create and use a <strong>LinearTimeLine</strong> object.
            </para>
            <code lang="C#">
            LinearTimeLine timeLine = new LinearTimeLine();
            timeLine.FirstVisibleTime = new DateTime(2000, 1, 1);
            </code>
            <code lang="Visual Basic">
            Dim timeLine As New LinearTimeLine
            timeLine.FirstVisibleTime = New DateTime(2000, 1, 1)
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.LinearTimeLine.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.LinearTimeLine" /> class.
            </summary>
            <remarks>The default reference time is <see cref="P:System.DateTime.Now">DateTime.Now</see>.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to create and use a <strong>LinearTimeLine</strong> object.
            </para>
            <code lang="C#">
            LinearTimeLine timeLine = new LinearTimeLine();
            timeLine.FirstVisibleTime = new DateTime(2000, 1, 1);
            </code>
            <code lang="Visual Basic">
            Dim timeLine As New LinearTimeLine
            timeLine.FirstVisibleTime = New DateTime(2000, 1, 1)
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.LinearTimeLine.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.LinearTimeLine" /> class using
            the specified first visible time.
            </summary>
            <param name="time">The first visible time.</param>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to create and use a <strong>LinearTimeLine</strong> object.
            </para>
            <code lang="C#">
            LinearTimeLine timeLine = new LinearTimeLine();
            timeLine.FirstVisibleTime = new DateTime(2000, 1, 1);
            </code>
            <code lang="Visual Basic">
            Dim timeLine As New LinearTimeLine
            timeLine.FirstVisibleTime = New DateTime(2000, 1, 1)
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.LinearTimeLine.GetNextTime(System.DateTime)">
            <summary>
            Gets the next valid time after the specified time.
            </summary>
            <param name="time">A <see cref="T:System.DateTime" /> structure.</param>
            <returns>The next valid time after the specified time</returns>
            <remarks>The implementation of this method returns <paramref name="time" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.LinearTimeLine.GetPreviousTime(System.DateTime)">
            <summary>
            Gets the previous valid time before the specified time.
            </summary>
            <param name="time">A <see cref="T:System.DateTime" /> structure.</param>
            <returns>The previous valid time before the specified time</returns>
            <remarks>The implementation of this method returns <paramref name="time" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.LinearTimeLine.GetSizeOf(System.TimeSpan)">
            <summary>
            Computes the size of the specified duration when the time line is linear.
            </summary>
            <param name="duration">a <see cref="T:System.TimeSpan" /> structure.</param>
            <returns>The size of the specified duration when the time line is linear.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration" /> is negative.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.LinearTimeLine.GetTime(System.DateTime,System.Double)">
            <summary>
            Converts the specified <see cref="T:System.Double" /> value to a date.
            </summary>
            <param name="reference">The reference time.</param>
            <param name="units">The double value to convert.</param>
            <returns>A <see cref="T:System.DateTime" /> structure that corresponds to the conversion
            of <paramref name="units" /> when the reference of the time is
            <paramref name="reference" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.LinearTimeLine.GetUnits(System.DateTime,System.DateTime)">
            <summary>
            Gets the distance in pixels between two dates.
            </summary>
            <param name="startTime">The first time.</param>
            <param name="endTime">The second time.</param>
            <returns>A <see cref="T:System.Double" /> that corresponds to the
            distance in pixels between the two dates.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.LinearTimeLine.OnTimeLineChanged(NickLee.Views.Gantt.TimeLineChangeEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.LinearTimeLine.TimeLineChanged" /> event.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.TimeLineChangeEventArgs" /> that contains the event data.</param>
            <remarks><p>Called when the time line is changed.</p></remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.LinearTimeLine.OnTimeLineChanging(NickLee.Views.Gantt.TimeLineChangeEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.LinearTimeLine.TimeLineChanging" /> event.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.TimeLineChangeEventArgs" /> that contains the event data.</param>
            <remarks><p>Called before the time line is changed.</p></remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.LinearTimeLine.SetTimeInterval(System.DateTime,System.DateTime,System.Single)">
            <summary>
            Changes the time conversion of the time line to match the specified time range.
            </summary>
            <param name="startTime">The start time of the time range.</param>
            <param name="endTime">The end time of the time range.</param>
            <param name="width">The width of the time line.</param>
            <remarks>After calling this method, the <see cref="P:NickLee.Views.Gantt.LinearTimeLine.FirstVisibleTime" /> should be
            <paramref name="startTime" />, and calling <see cref="M:NickLee.Views.Gantt.LinearTimeLine.GetTime(System.DateTime,System.Double)" /> with
            <paramref name="startTime" /> and <paramref name="endTime" /> as parameters
            should return <paramref name="width" />.</remarks>
        </member>
        <member name="E:NickLee.Views.Gantt.LinearTimeLine.TimeLineChanged">
            <summary>
            Occurs when the time line has changed.
            </summary>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to handle the
            <strong>ITimeLine.TimeLineChanged</strong> event.
            </para>
            <code lang="C#">
            LinearTimeLine timeLine = new LinearTimeLine();
            timeLine.TimeLineChanged += new TimeLineChangeEventHandler(TimeLineChanged);

            private void TimeLineHasChanged(object sender, TimeLineChangeEventArgs args) {
            if (args.EventType == TimeLineEventType.FirstVisibleTimeChanged) {
            Console.WriteLine("The new first visible time is : " + args.FirstVisibleTime.ToString());
            } else {
            Console.WriteLine("The time line conversion has changed");
            }
            }
            </code>
            <code lang="Visual Basic">
            Dim WithEvents timeLine As new LinearTimeLine

            Private Sub TimeLineHasChanged(ByVal sender As Object, ByVal args As NickLee.Views.Gantt.TimeLineChangeEventArgs) Handles timeLine.TimeLineChanged
            If args.EventType = NickLee.Views.Gantt.TimeLineEventType.FirstVisibleTimeChanged Then
            Console.WriteLine("The new first visible time is : " + args.FirstVisibleTime.ToString())
            Else
            Console.WriteLine("The time line conversion has changed")
            End If
            End Sub
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.LinearTimeLine.TimeLineChanging">
            <summary>
            Occurs when the time line is changing.
            </summary>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to handle the
            <strong>ITimeLine.TimeLineChanged</strong> event.
            </para>
            <code lang="C#">
            LinearTimeLine timeLine = new LinearTimeLine();
            timeLine.TimeLineChanged += new TimeLineChangeEventHandler(TimeLineChanged);

            private void TimeLineHasChanged(object sender, TimeLineChangeEventArgs args) {
            if (args.EventType == TimeLineEventType.FirstVisibleTimeChanged) {
            Console.WriteLine("The new first visible time is : " + args.FirstVisibleTime.ToString());
            } else {
            Console.WriteLine("The time line conversion has changed");
            }
            }
            </code>
            <code lang="Visual Basic">
            Dim WithEvents timeLine As new LinearTimeLine

            Private Sub TimeLineHasChanged(ByVal sender As Object, ByVal args As NickLee.Views.Gantt.TimeLineChangeEventArgs) Handles timeLine.TimeLineChanged
            If args.EventType = NickLee.Views.Gantt.TimeLineEventType.FirstVisibleTimeChanged Then
            Console.WriteLine("The new first visible time is : " + args.FirstVisibleTime.ToString())
            Else
            Console.WriteLine("The time line conversion has changed")
            End If
            End Sub
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.LinearTimeLine.Adjusting">
            <summary>
            Gets or sets a value indicating whether the time line is being adjusted.
            </summary>
            <value><see langword="true" /> if the time line is being adjusted; otherwise
            <see langword="false" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.LinearTimeLine.FirstVisibleTime">
            <summary>
            Gets or sets the first visible time of the time line.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure that represents the first visible
            time of the time line.</value>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to create and use a <strong>LinearTimeLine</strong> object.
            </para>
            <code lang="C#">
            LinearTimeLine timeLine = new LinearTimeLine();
            timeLine.FirstVisibleTime = new DateTime(2000, 1, 1);
            </code>
            <code lang="Visual Basic">
            Dim timeLine As New LinearTimeLine
            timeLine.FirstVisibleTime = New DateTime(2000, 1, 1)
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.LinearTimeLine.IsLinear">
            <summary>
            Gets a value indicating whether the time line is linear.
            </summary>
            <value><see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.LinearTimeLine.MaxZoom">
            <summary>
            Gets or sets the maximum value of the zoom factor.
            </summary>
            <value>A <see cref="T:System.Double" /> value that represents the maximum
            zoom value.</value>
            <remarks>The zoom factor cannot be changed to a value that is more than the maximum
            zoom factor. When setting this property, if the zoom factor is superior than the
            maximum zoom factor, the zoom factor value is set to the maximum zoom factor.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.LinearTimeLine.MinZoom">
            <summary>
            Gets or sets the minimum value of the zoom factor.
            </summary>
            <value>A <see cref="T:System.Double" /> value that represents the minimum
            zoom value.</value>
            <remarks>The zoom factor cannot be changed to a value that is less than the minimum
            zoom factor. When setting this property, if the zoom factor is inferior than the
            minimum zoom factor, the zoom factor value is set to the minimum zoom factor.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.LinearTimeLine.UnitDuration">
            <summary>
            Gets or sets the duration of a unit.
            </summary>
            <value>A <see cref="T:System.TimeSpan" /> structure that represents the duration
            of <strong>1</strong> unit when the zoom factor is <strong>1</strong>.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.LinearTimeLine.Zoom">
            <summary>
            Gets or sets the zoom factor of the time line.
            </summary>
            <value>A <see cref="T:System.Double" /> value that represents the zoom factor of
            the time line.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection">
            <summary>
            A collection of <see cref="T:System.ComponentModel.PropertyDescriptor" /> with notification.
            </summary>
            <remarks><p>This class is similar to the <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />
            class, except that it adds a notification mechanism through the <see cref="E:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection.CollectionChanged" /> event.</p>
            <p>To modify the collection, use the <see cref="M:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection.Clear" />, <see cref="M:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection.Add(System.String,System.Type,System.Object)" />, and <see cref="M:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection.Remove(System.ComponentModel.PropertyDescriptor)" />
            methods.</p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection.Add(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Adds the specified <see cref="T:System.ComponentModel.PropertyDescriptor" /> to the collection.
            </summary>
            <param name="pd">The <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
            <exception cref="T:System.ArgumentException">If the name of <paramref name="pd" /> is
            already used by another property descriptor of the collection.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection.Add(System.String,System.Type,System.Object)">
            <summary>
            Adds a property descriptor using the specified name, type and default value.
            </summary>
            <param name="name">The name of the property descriptor.</param>
            <param name="type">The type of the property descriptor.</param>
            <param name="defaultValue">The default value of the property descriptor.</param>
            <remarks>This method creates a property descriptor bound to the type returned by
            the <see cref="P:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection.ComponentType" /> property.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection.Add(System.String,System.Type,System.Object,System.Boolean,System.ComponentModel.TypeConverter,System.Drawing.Design.UITypeEditor,System.Attribute[])">
            <summary>
            Adds a property descriptor using the specified parameters.
            </summary>
            <param name="name">The name of the property descriptor.</param>
            <param name="type">The type of the property descriptor.</param>
            <param name="defaultValue">The default value of the property descriptor.</param>
            <param name="readOnly"><see langword="true" /> if the property descriptor should be read-only;
            Otherwise, <see langword="false" />.</param>
            <param name="converter">A <see cref="T:System.ComponentModel.TypeConverter" /> for the property descriptor.</param>
            <param name="editor">A <see cref="T:System.Drawing.Design.UITypeEditor" /> for the property descriptor.</param>
            <param name="attrs">An array of <see cref="T:System.Attribute" /> for the propertyDescriptor.</param>
            <remarks>This method creates a property descriptor bound to the type returned by
            the <see cref="P:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection.ComponentType" /> property.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire collection to an array, starting at the specified index number.
            </summary>
            <param name="array">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to copy elements of the collection
            to</param>
            <param name="index">The index of the <paramref name="array" /> parameter at which
            copying begins.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection.GetEnumerator">
            <summary>
            Returns an enumerator for this class.
            </summary>
            <returns>An enumerator for this class.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection.OnCollectionChanged">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection.CollectionChanged" /> event.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection.Remove(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Removes a property descriptor from the collection.
            </summary>
            <param name="pd">The <see cref="T:System.ComponentModel.PropertyDescriptor" />.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection.Remove(System.String)">
            <summary>
            Removes a property descriptor from the collection using its name.
            </summary>
            <param name="name">The name of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> to remove.</param>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection.CollectionChanged">
            <summary>
            Occurs when the collection is changed.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection.ComponentType">
            <summary>
            Gets the type of components this collection is bound to.
            </summary>
            <value>
            A <see cref="T:System.Type" /> that must implement the <see cref="T:NickLee.Views.Gantt.Data.INamedIndexerProvider" />
            interface.
            </value>
            <remarks>
            This property is used when calling <see cref="M:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection.Add(System.String,System.Type,System.Object)" /> to
            to create a real property descriptor.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection.Count">
            <summary>
            Gets the number of property descriptors in the collection.
            </summary>
            <value>The number of property descriptors in the collection.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
            <value><see langword="true" /> if access to the collection is synchronized (thread-safe);
            otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection.Item(System.String)">
            <summary>
            Gets a property descriptor using its name.
            </summary>
            <value>A <see cref="T:System.ComponentModel.PropertyDescriptor" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
            <value>An object that can be used to synchronize access to the collection.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.BaseReadOnlyConstraintCollection">
            <summary>
            Defines a read-only collection of <see cref="T:NickLee.Views.Gantt.Data.BaseConstraint" /> objects.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReadOnlyConstraintCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.BaseReadOnlyConstraintCollection" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReadOnlyConstraintCollection.ToString">
            <summary>
            This member overrides <see cref="M:System.Object.ToString">Object.ToString</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReadOnlyConstraintCollection.ToString(System.IFormatProvider)">
            <summary>
            Formats the string using the specified <see cref="T:System.IFormatProvider" />.
            </summary>
            <param name="formatProvider">The format provider used to format the string.</param>
            <returns>The string representation of this object.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReadOnlyConstraintCollection.ToString(System.String)">
            <summary>
            Formats the string using the specified format.
            </summary>
            <param name="format">The format used to format the string.</param>
            <returns>The string representation of this object.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReadOnlyConstraintCollection.ToString(System.String,System.IFormatProvider)">
            <summary>
            Formats the string using the specified format and <see cref="T:System.IFormatProvider" />.
            </summary>
            <param name="format">The format used to format the string.</param>
            <param name="formatProvider">The format provider used to format the string.</param>
            <returns>The string representation of this object.</returns>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ScheduleChart">
            <summary>
            A Schedule chart is a chart that displays the schedule of resources.
            </summary>
            <remarks>
            <p>The Schedule chart is made up of rows, each containing one single resource.
            The left part of the chart displays information related to resources.
            The right part of the chart shows resource reservations.</p>
            <p><img src="schedulechart.png" /></p>
            <p>The <strong>ScheduleChart</strong> control will display the information
            contained in a Gantt data model. You will set the Gantt data model of a <strong>ScheduleChart</strong>
            using the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttModel" /> property.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to create a <strong>ScheduleChart</strong>
            and assign a Gantt data model to it.
            </para>
            <code lang="C#">
            Form form = new Form();

            // Creates the schedule chart
            ScheduleChart chart = new ScheduleChart();
            chart.Dock = DockStyle.Fill;

            // Adds the control to the form
            form.Controls.Add(chart);

            // Creates a Gantt model
            IGanttModel model = new SimpleGanttModel();
            IActivity activity = model.NewActivity();
            activity.Name = "My Activity";
            activity.StartTime = DateTime.Now;
            activity.Duration = TimeSpan.FromDays(5);
            model.Activities.Add(activity);
            IResource resource = model.NewResource();
            resource.Name = "My Resource";
            model.Resources.Add(resource);
            model.Reservations.Add(model.NewReservation(activity, resource));

            // Assign Gantt model to the chart
            chart.GanttModel = model;

            // Change start visible time
            chart.FirstVisibleTime = DateTime.Now;

            Application.Run(form);
            </code>
            <code lang="Visual Basic">
            Dim form1 As Form = New Form

            'Creates the schedule chart
            Dim chart As ScheduleChart = New ScheduleChart
            chart.Dock = DockStyle.Fill
            form.Controls.Add(chart)

            'Creates a Gantt model
            Dim model As IGanttModel = New SimpleGanttModel
            Dim activity As IActivity = model.NewActivity
            activity.Name = "My Activity"
            activity.StartTime = DateTime.Now
            activity.Duration = TimeSpan.FromDays(5)
            model.Activities.Add(activity)
            Dim resource As IResource = model.NewResource
            resource.Name = "My Resource"
            model.Resources.Add(resource)
            model.Reservations.Add(model.NewReservation(activity, resource))

            'Assign Gantt model to the chart
            chart.GanttModel = model

            'Change start visible time
            chart.FirstVisibleTime = DateTime.Now
            Application.Run(form)
            </code>
            </example>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ResourceTable" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleChart" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.Collapse(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Collapses the specified resource.
            </summary>
            <param name="resource">An <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to collpase.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.CollapseAll(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Collapses the specified resource and all its children.
            </summary>
            <param name="resource">An <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to collapse.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.CreateGanttTable">
            <summary>
            Creates the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ResourceTable" /> control displayed in this Schedule chart.
            </summary>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ResourceTable" /> class.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.CreateScrollGanttSheet">
            <summary>
            Creates the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet" /> control displayed in this Schedule chart.
            </summary>
            <returns>A new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet" /> class.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.Expand(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Expands the specified resource.
            </summary>
            <param name="resource">An <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to expand.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.ExpandAll(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Expands the specified resource and all its children.
            </summary>
            <param name="resource">An <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to expand.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.GetCurrentResource">
            <summary>
            Returns the current resource in the table.
            </summary>
            <returns>The current <see cref="T:NickLee.Views.Gantt.Data.IResource" /> in the table.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.GetResourceAt(System.Int32)">
            <summary>
            Gets the resource displayed at the specified row index.
            </summary>
            <param name="rowIndex">The row index.</param>
            <returns>The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> displayed at the specified row index.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.GetRowHeight(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Gets the height of the specified resource.
            </summary>
            <param name="resource">The resource.</param>
            <returns>The height of <paramref name="resource" />.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="resource" /> is not
            part of the gantt model.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.GetSelectedResources">
            <summary>
            Retrieves an array containing the selected resources.
            </summary>
            <returns>An array containing the selected resources.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.IndentResource(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Indents the specified resource.
            </summary>
            <param name="resource">The resource to indent.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.IsExpanded(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Gets a value indicating whether the specified resource is expanded.
            </summary>
            <param name="resource">An <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to test.</param>
            <returns>A value indicating whether the specified resource is expanded.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.IsRowVisible(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Gets a value indicating whether the specified resource is visible.
            </summary>
            <param name="resource">An <see cref="T:NickLee.Views.Gantt.Data.IResource" /> to test.</param>
            <returns>A value indicating whether the specified resource is visible.</returns>
            <remarks>
            A resource is said to be visible when all its ancestors are expanded.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.MoveResourceDown(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Moves down the specified resource.
            </summary>
            <param name="resource">The resource to move down.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.MoveResourceUp(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Moves up the specified resource.
            </summary>
            <param name="resource">The resource to move up.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.NewResource(System.String,System.String)">
            <summary>
            Creates a new resource as a sibling of the current row.
            </summary>
            <param name="id">The unique identifier of the new resource.</param>
            <param name="name">The name of the new resource.</param>
            <returns>The zero-based index of the row containing the new resource.</returns>
            <remarks>If <paramref name="id" /> is <see langword="null" />, a unique ID provided by
            the model will be used.
            If <paramref name="name" /> is <see langword="null" />, the table is
            automatically placed in editing mode to edit the resource name.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.OutdentResource(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Outdents the specified resource.
            </summary>
            <param name="resource">The resource to outdent.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.SetRowHeight(NickLee.Views.Gantt.Data.IResource,System.Int32)">
            <summary>
            Sets the height of the specified resource.
            </summary>
            <param name="resource">The resource.</param>
            <param name="height">The new height.</param>
            <exception cref="T:System.ArgumentException"><paramref name="resource" /> is not
            part of the gantt model.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="height" /> is
            negative.</exception>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.ActivityLayoutStyleChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.ActivityLayoutStyle" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.BeforeMoveReservation">
            <summary>
            Event fired before a reservation is moved to another resource.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.CanCopyReservationChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.CanCopyReservation" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.CanMoveReservationChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.CanMoveReservation" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.CopyReservationCursorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.CopyReservationCursor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.LayoutReservations">
            <summary>
            Event fired to allow the customization of the layout of reservations
            in a row.
            </summary>
            <remarks>This event is fired only if the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.ActivityLayoutStyle" /> is
            set to <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle">User</see>.
            </remarks>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.MoveReservationCursorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.MoveReservationCursor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.QueryReservationZOrder">
            <summary>
            Event fired to allow the specification of the z-Order of a reservation
            in a row.
            </summary>
            <remarks>The layout of activities in a row is controlled by the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.ActivityLayoutStyle" />
            property. Activities will be sorted by their Start Time so that
            an activity starting earlier another activity will be drawn before. You
            can modify this behavior by specifying a z-Order for each reservation.
            </remarks>
            <example>
            <para lang="C#"> The following example shows how to make the reservation
            of type Maintenance drawn below all other reservations by setting a smaller
            z-order.
            </para>
            <code lang="C#">
            myScheduleSheet.QueryReservationZOrder += new QueryReservationZOrderEventHandler(GetZOrder);
            private void GetZOrder(object source, QueryReservationZOrderEventArgs e)
            {
            if (e.Reservation.Activity is Maintenance)
            e.ZOrder = 0;
            else
            e.ZOrder = 1;
            }
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.RowLayoutStyle">
            <summary>
            Event that is fired to query the layout style that will be used to layout
            the reservation of a specified resource.
            </summary>
            <remarks>Handling this event allows to specify an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle" /> per
            row of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" />.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.ActivityLayoutStyle">
            <summary>
            Gets or sets the style used to layout activities in a row of the Gantt sheet.
            </summary>
            <remarks>This property will change the style of layout for all
            the rows of the schedule sheet. You can also specify a layout style per
            row by handling the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.RowLayoutStyle" /> event.</remarks>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle" /> values. The
            default value is <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle">Pretty</see>.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.CanCopyReservation">
            <summary>
            Gets or sets a value indicating whether reservations
            can be copied onto other resources using the mouse pointer.
            </summary>
            <value>
            <see langword="true" /> if reservations can be copied onto other resources
            using the mouse; <see langword="false" /> otherwise.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.CanMoveReservation">
            <summary>
            Gets or sets a value indicating whether reservations
            can have their assigned resource changed using the mouse pointer.
            </summary>
            <value>
            <see langword="true" /> if reservations can have their resource changed
            using the mouse; <see langword="false" /> otherwise.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.CopyReservationCursor">
            <summary>
            Gets the cursor that is used when the user drags a reservation to copy it.
            </summary>
            <value>
            A <see cref="T:System.Windows.Forms.Cursor" /> that is used when the user drags a reservation to copy it.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.GanttSheet">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> used to display the reservations of a Gantt model.
            </summary>
            <value>
            The <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> that displays the reservations of a Gantt model.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.GanttTable">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ResourceTable" /> used to display the
            resource hierarchy in a Gantt model.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ResourceTable" /> control that displays the
            resource hierarchy in a Gantt model.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScheduleChart.MoveReservationCursor">
            <summary>
            Gets the cursor that is used when the user drags a reservation to change its resource.
            </summary>
            <value>
            A <see cref="T:System.Windows.Forms.Cursor" /> that is used when the user drags a reservation to change its resource.
            </value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ResourceTable">
            <summary>
            Defines a table that displays the hierarchy of resources.
            </summary>
            <remarks>
            <p>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ResourceTable" /> is a hierarchical table where each row
            displays a resource and each column a property of the resource in the row.</p>
            <p><img src="resourcetable.png" /></p>
            By default the table contains two columns: a column that displays information on the
            resource as bitmaps (see <see cref="T:NickLee.Views.Gantt.Windows.Forms.InfoColumn" />) and a second column that displays the
            name of the resource. You can modify the columns of the table
            using the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.Columns" /> property.<p />
            In order to display scheduling information, the table must be connected
            to a Gantt data model (<see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />) through the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttTable.GanttModel" />
            property.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to get the <strong>ResourceTable</strong>
            from a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleChart" />.
            </para>
            <code lang="C#">
            ScheduleChart chart = new ScheduleChart();
            ResourceTable table = chart.GanttTable;
            </code>
            <code lang="Visual Basic">
            Dim chart As New ScheduleChart
            Dim table as ResourceTable = chart.GanttTable
            </code>
            <p />
            <para lang="C#,Visual Basic">The following code sample shows how to create an <strong>ResourceTable</strong>
            and assign a Gantt data model to display.
            </para>
            <code lang="C#">
            Form form = new Form();

            // Creates the activity table
            ResourceTable table = new ResourceTable();
            table.Dock = DockStyle.Fill;

            // Adds the table to the form
            form.Controls.Add(table);

            // Creates a Gantt model
            IGanttModel model = new SimpleGanttModel();
            IResource resource = model.NewResource();
            resource.Name = "My Resource";
            model.Resources.Add(resource);

            // Assign Gantt model to the table
            table.GanttModel = model;

            Application.Run(form);
            </code>
            <code lang="Visual Basic">
            Dim form As New Form

            ' Creates the activity table
            Dim table As New ResourceTable
            table.Dock = DockStyle.Fill

            ' Adds the table to the form
            form.Controls.Add(table)

            ' Creates a Gantt model
            Dim model As IGanttModel = New SimpleGanttModel
            Dim resource As IResource = model.NewResource
            resource.Name = "My Activity"
            model.Resources.Add(resource)
            ' Assign Gantt model to the table
            table.GanttModel = model
            Application.Run(form)
            </code>
            <p />
            <para lang="C#,Visual Basic">You will find an example that creates a <strong>ResourceTable</strong>
            and connect it with a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" /> and a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" />
            in the description of <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" />.
            </para>
            </example>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityTable" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationTable" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ResourceTable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ResourceTable" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ResourceTable.#ctor(NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ResourceTable" /> class with
            the specified Gantt model.
            </summary>
            <param name="model">The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> that contains the information to display.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ResourceTable.ColumnChanged(NickLee.Views.Windows.Forms.TableColumn,System.Boolean)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Windows.Forms.TreeTable.ColumnChanged(NickLee.Views.Windows.Forms.TableColumn,System.Boolean)">TreeTable.ColumnChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ResourceTable.CopyToClipboard">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.CopyToClipboard">GanttTable.CopyToClipboard</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ResourceTable.CreateDefaultColumns">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Windows.Forms.TreeTable.CreateDefaultColumns">TreeTable.CreateDefaultColumns</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ResourceTable.CreateTreeModel(NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.CreateTreeModel(NickLee.Views.Gantt.Data.IGanttModel)">GanttTable.CreateTreeModel</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ResourceTable.CutToClipboard">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.CutToClipboard">GanttTable.CutToClipboard</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ResourceTable.GetCurrentResource">
            <summary>
            Returns the current resource in the table.
            </summary>
            <returns>The current <see cref="T:NickLee.Views.Gantt.Data.IResource" /> in the table.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ResourceTable.GetResourceAt(System.Int32)">
            <summary>
            Retrieves the <see cref="T:NickLee.Views.Gantt.Data.IResource" /> at the specified index.
            </summary>
            <param name="rowIndex">The zero-based index of the resource to
            retrieve.</param>
            <returns>The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> at the specified index.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ResourceTable.GetSelectedResources">
            <summary>
            Returns an array of the selected resources in the table.
            </summary>
            <returns>An array of <see cref="T:NickLee.Views.Gantt.Data.IResource" /> objects.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ResourceTable.MoveNode(System.Object,System.Object,System.Int32)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.MoveNode(System.Object,System.Object,System.Int32)">GanttTable.MoveNode</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ResourceTable.NewResource(System.String,System.String)">
            <summary>
            Creates a new resource as a sibling of the current row.
            </summary>
            <param name="id">The unique identifier of the new resource.</param>
            <param name="name">The name of the new resource.</param>
            <returns>The zero-based index of the row containing the new resource.</returns>
            <remarks>If <paramref name="id" /> is <see langword="null" />, a unique ID provided by
            the model will be used.
            If <paramref name="name" /> is <see langword="null" />, the table is
            automatically placed in editing mode to edit the resource name.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ResourceTable.NodesChanged(NickLee.Views.Windows.Forms.TreeModelChangeEventArgs)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Windows.Forms.TreeTable.NodesChanged(NickLee.Views.Windows.Forms.TreeModelChangeEventArgs)">TreeTable.NodesChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ResourceTable.OnGanttModelChanging(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.OnGanttModelChanging(System.EventArgs)">GanttTable.OnGanttModelChanging</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ResourceTable.PasteFromClipboard">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.PasteFromClipboard">GanttTable.PasteFromClipboard</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ResourceTable.RemoveSelectedRows">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.RemoveSelectedRows">GanttTable.RemoveSelectedRows</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ReservationTable">
            <summary>
            A specialization of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttTable" /> class for reservations.
            </summary>
            <remarks>
            <p>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationTable" /> is a
            hierarchical table where each row represents a reservation
            and each column represents a property of the reservation in the row.
            </p>
            <p>
            <img src="ReservationTable.png" /></p>
            By default, the table contains three columns: a column that displays the activity of the reservation,
            a column that displays the resource of the reservation, and a column that displays the units used
            by the reservation. You can modify the columns of the table
            using the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.Columns" /> property.<p />
            In order to display scheduling information, the table must be connected
            to a Gantt data model (<see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />) through the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttTable.GanttModel" />
            property.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to get the <strong>ReservationTable</strong>
            from a <strong>ReservationChart</strong>.
            </para>
            <code lang="C#">
            ReservationChart chart = new ReservationChart();
            ReservationTable table = chart.GanttTable;
            </code>
            <code lang="Visual Basic">
            Dim chart as New ReservationChart
            Dim table as ReservationTable = chart.GanttTable
            </code>
            <p />
            <para lang="C#,Visual Basic">The following code sample shows how to create an <strong>ReservationTable</strong>
            and assign a Gantt data model to display.
            </para>
            <code lang="C#">
            Form form = new Form();

            // Creates the activity table
            ReservationTable table = new ReservationTable();
            table.Dock = DockStyle.Fill;

            // Adds the table to the form
            form.Controls.Add(table);

            // Creates a Gantt model
            IGanttModel model = new SimpleGanttModel();
            IActivity activity = model.NewActivity();
            activity.Name = "My Activity";
            activity.StartTime = DateTime.Now;
            activity.Duration = TimeSpan.FromDays(5);
            model.Activities.Add(activity);

            // Assigns Gantt model to the table
            table.GanttModel = model;

            Application.Run(form);
            </code>
            <code lang="Visual Basic">
            Dim form As New Form

            ' Creates the activity table
            Dim table As New ReservationTable
            table.Dock = DockStyle.Fill

            ' Adds the table to the form
            form.Controls.Add(table)

            ' Creates a Gantt model
            Dim model As IGanttModel = New SimpleGanttModel
            Dim activity As IActivity = model.NewActivity
            activity.Name = "My Activity"
            activity.StartTime = DateTime.Now
            activity.Duration = TimeSpan.FromDays(5)
            model.Activities.Add(activity)
            ' Assigns Gantt model to the table
            table.GanttModel = model
            Application.Run(form)
            </code>
            <p />
            <para lang="C#,Visual Basic">You will find an example that creates a <strong>ReservationTable</strong>
            and connects it with a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" /> and a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" />
            in the description of <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" />.
            </para>
            </example>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ResourceTable" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationTable" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationTable.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationTable" /> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationTable" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationTable.#ctor(NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationTable" /> class with
            the specified Gantt model.
            </summary>
            <param name="model">The Gantt model.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationTable.CopyToClipboard">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.CopyToClipboard">GanttTable.CopyToClipboard</see>.
            </summary>
            <remarks>This operation is not supported on this object. Calling this method will throw
            a <see cref="T:System.NotSupportedException" /> exception.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationTable.CreateDefaultColumns">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Windows.Forms.TreeTable.CreateDefaultColumns">TreeTable.CreateDefaultColumns</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationTable.CreateTreeModel(NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.CreateTreeModel(NickLee.Views.Gantt.Data.IGanttModel)">GanttTable.CreateTreeModel</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationTable.CutToClipboard">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.CutToClipboard">GanttTable.CutToClipboard</see>.
            </summary>
            <remarks>This operation is not supported on this object. Calling this method will throw
            a <see cref="T:System.NotSupportedException" /> exception.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationTable.GetCurrentReservation">
            <summary>
            Returns the current reservation in the table.
            </summary>
            <returns>The current <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> in the table.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationTable.GetReservationAt(System.Int32)">
            <summary>
            Retrieves the <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> at the specified index.
            </summary>
            <param name="rowIndex">The zero-based index of the reservation to
            retrieve.</param>
            <returns>The <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> at the specified index.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationTable.GetSelectedReservations">
            <summary>
            Returns an array of the selected reservations in the table.
            </summary>
            <returns>An array of <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> objects.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationTable.MoveNode(System.Object,System.Object,System.Int32)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.MoveNode(System.Object,System.Object,System.Int32)">GanttTable.MoveNode</see>.
            </summary>
            <remarks>This method does not support hierarchy changes of nodes. As a result,
            calling this method with a new parent node that is not <see langword="null" />
            will throw a <see cref="T:System.NotSupportedException" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationTable.OnGanttModelChanging(System.EventArgs)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.OnGanttModelChanging(System.EventArgs)">GanttTable.OnGanttModelChanging</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationTable.PasteFromClipboard">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.PasteFromClipboard">GanttTable.PasteFromClipboard</see>.
            </summary>
            <remarks>This operation is not supported on this object. Calling this method will throw
            a <see cref="T:System.NotSupportedException" /> exception.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationTable.RemoveSelectedRows">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.RemoveSelectedRows">GanttTable.RemoveSelectedRows</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.QueryActivityEditableEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.QueryActivityEditable" /> event of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.NamespaceDoc">
            <summary>
            The <strong>NickLee.Views.Gantt.Windows.Forms</strong> namespace contains the Gantt
            Windows Forms control. In particular the namespace contains the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttChart" />
            and <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleChart" /> classes.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.Design.CalendarViewDesigner">
            <summary>
            Defines a designer for the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" /> control.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.CalendarViewDesigner.#ctor">
            <summary>
            Creates and initializes a new instance
            of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.Design.CalendarViewDesigner" /> class.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.Design.CalendarViewDesigner.Verbs">
            <summary>
            This member overrides <see cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs">ComponentDesigner.Verbs</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ConstraintLinkStyle">
            <summary>
            Specifies the style of constraint links in an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" />.
            </summary>
            <remarks>Use the members of this enumeration to set the
            value of the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintLinkStyle" /> property in the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" /> class. The default value is <strong>Direct</strong>.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)">TypeConverter.CanConvertTo</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)">TypeConverter.ConvertTo</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.BeforeMoveReservationEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.BeforeMoveReservation" /> event of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.TimeUnit">
            <summary>
            Defines units of time.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.SimpleConstraint">
            <summary>
            Defines a relatively simple, memory-based implementation of the <see cref="T:NickLee.Views.Gantt.Data.IConstraint" />
            interface that can be extended in a straightforward manner for more complex needs.
            </summary>
            <remarks>
            <see cref="T:NickLee.Views.Gantt.Data.SimpleConstraint" /> does not provide any connection to a persistent datastore
            itself. See <see cref="T:NickLee.Views.Gantt.Data.GanttModelAdapter" /> for using a Gantt data model with ADO.NET.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to populate a <see cref="T:NickLee.Views.Gantt.Data.SimpleGanttModel" />.
            </para>
            <code lang="C#">
            private void Populate(IGanttModel model) {
            IActivity activity;
            IResource[] resources = new IResource[10];
            IActivity[] activities = new IActivity[20];
            IReservation[] reservations = new IReservation[20];

            for (int i = 0; i &lt; 10; ++i) {
            // First create the resource...
            resources[i] = model.NewResource();
            resources[i].Name = "Room " + i.ToString();

            // Add a conference in the morning
            activity = model.NewActivity();
            activity.Name = "Morning Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4));
            activities[i*2] = activity;

            // Create the reservation for this activity
            reservations[i*2] = model.NewReservation(activity, resources[i]);

            // Add a conference in the afternoon
            activity = model.NewActivity();
            activity.Name = "Afternoon Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4));
            activities[i*2 + 1] = activity;

            // Create the reservation for this activity
            reservations[i*2 + 1] = model.NewReservation(activity, resources[i]);
            }
            model.Activities.AddRange(activities);
            model.Resources.AddRange(resources);
            model.Reservations.AddRange(reservations);
            }
            </code>
            <code lang="Visual Basic">
            Sub Populate(ByVal model As IGanttModel)
            Dim activity As IActivity
            Dim resources(10) As IResource
            Dim activities(20) As IActivity
            Dim reservations(20) As IReservation

            For i As Integer = 0 To 9

            ' First create the resource...
            resources(i) = model.NewResource()
            resources(i).Name = "Room " + i.ToString()

            ' Add a conference in the morning
            activity = model.NewActivity()
            activity.Name = "Morning Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4))
            activities(i * 2) = activity

            ' Create the reservation for this activity
            reservations(i * 2) = model.NewReservation(activity, resources(i))

            ' Add a conference in the afternoon
            activity = model.NewActivity()
            activity.Name = "Afternoon Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4))
            activities(i * 2 + 1) = activity

            ' Create the reservation for this activity
            reservations(i * 2 + 1) = model.NewReservation(activity, resources(i))

            Next

            model.Activities.AddRange(activities)
            model.Resources.AddRange(resources)
            model.Reservations.AddRange(reservations)
            End Sub
            </code>
            </example>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.BaseConstraint">
            <summary>
            Defines an <see langword="abstract" /> implementation of the <see cref="T:NickLee.Views.Gantt.Data.IConstraint" />
            interface that can be extended in a straightforward manner for more complex needs.
            </summary>
            <remarks>
            <p>This class is used by the <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModel" /> class.</p>
            <p><see cref="T:NickLee.Views.Gantt.Data.BaseConstraint" /> implements the properties of the <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> interface,
            but delegates them to dedicated methods in order to allow another implementation than a simple memory
            implementation. For example, the <see cref="P:NickLee.Views.Gantt.Data.BaseConstraint.Info" /> property is implemented by the <see cref="T:NickLee.Views.Gantt.Data.BaseConstraint" />
            class, but it delegates the real storage of the property to the <see langword="abstract" /> methods <see cref="M:NickLee.Views.Gantt.Data.BaseConstraint.GetInfo" /> and
            <see cref="M:NickLee.Views.Gantt.Data.BaseConstraint.SetInfo(System.String)" />.
            The <see cref="P:NickLee.Views.Gantt.Data.BaseConstraint.Info" /> property handles notification to the model, leaving the real storage to be implemented
            by <see cref="M:NickLee.Views.Gantt.Data.BaseConstraint.GetInfo" /> and <see cref="M:NickLee.Views.Gantt.Data.BaseConstraint.SetInfo(System.String)" /> in a subclass.</p>
            </remarks>
            <seealso cref="T:NickLee.Views.Gantt.Data.SimpleConstraint" />
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to populate a <see cref="T:NickLee.Views.Gantt.Data.SimpleGanttModel" />.
            </para>
            <code lang="C#">
            private void Populate(IGanttModel model) {
            IActivity activity;
            IResource[] resources = new IResource[10];
            IActivity[] activities = new IActivity[20];
            IReservation[] reservations = new IReservation[20];

            for (int i = 0; i &lt; 10; ++i) {
            // First create the resource...
            resources[i] = model.NewResource();
            resources[i].Name = "Room " + i.ToString();

            // Add a conference in the morning
            activity = model.NewActivity();
            activity.Name = "Morning Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4));
            activities[i*2] = activity;

            // Create the reservation for this activity
            reservations[i*2] = model.NewReservation(activity, resources[i]);

            // Add a conference in the afternoon
            activity = model.NewActivity();
            activity.Name = "Afternoon Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4));
            activities[i*2 + 1] = activity;

            // Create the reservation for this activity
            reservations[i*2 + 1] = model.NewReservation(activity, resources[i]);
            }
            model.Activities.AddRange(activities);
            model.Resources.AddRange(resources);
            model.Reservations.AddRange(reservations);
            }
            </code>
            <code lang="Visual Basic">
            Sub Populate(ByVal model As IGanttModel)
            Dim activity As IActivity
            Dim resources(10) As IResource
            Dim activities(20) As IActivity
            Dim reservations(20) As IReservation

            For i As Integer = 0 To 9

            ' First create the resource...
            resources(i) = model.NewResource()
            resources(i).Name = "Room " + i.ToString()

            ' Add a conference in the morning
            activity = model.NewActivity()
            activity.Name = "Morning Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4))
            activities(i * 2) = activity

            ' Create the reservation for this activity
            reservations(i * 2) = model.NewReservation(activity, resources(i))

            ' Add a conference in the afternoon
            activity = model.NewActivity()
            activity.Name = "Afternoon Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4))
            activities(i * 2 + 1) = activity

            ' Create the reservation for this activity
            reservations(i * 2 + 1) = model.NewReservation(activity, resources(i))

            Next

            model.Activities.AddRange(activities)
            model.Resources.AddRange(resources)
            model.Reservations.AddRange(reservations)
            End Sub
            </code>
            </example>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.IConstraint">
            <summary>
            Defines the abstract behavior of a constraint between two <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> objects.
            </summary>
            <remarks>
            Each constraint is defined by a type, its <strong>From</strong> activity, and its <strong>To</strong> activity.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to populate a <see cref="T:NickLee.Views.Gantt.Data.SimpleGanttModel" />.
            </para>
            <code lang="C#">
            private void Populate(IGanttModel model) {
            IActivity activity;
            IResource[] resources = new IResource[10];
            IActivity[] activities = new IActivity[20];
            IReservation[] reservations = new IReservation[20];

            for (int i = 0; i &lt; 10; ++i) {
            // First create the resource...
            resources[i] = model.NewResource();
            resources[i].Name = "Room " + i.ToString();

            // Add a conference in the morning
            activity = model.NewActivity();
            activity.Name = "Morning Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4));
            activities[i*2] = activity;

            // Create the reservation for this activity
            reservations[i*2] = model.NewReservation(activity, resources[i]);

            // Add a conference in the afternoon
            activity = model.NewActivity();
            activity.Name = "Afternoon Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4));
            activities[i*2 + 1] = activity;

            // Create the reservation for this activity
            reservations[i*2 + 1] = model.NewReservation(activity, resources[i]);
            }
            model.Activities.AddRange(activities);
            model.Resources.AddRange(resources);
            model.Reservations.AddRange(reservations);
            }
            </code>
            <code lang="Visual Basic">
            Sub Populate(ByVal model As IGanttModel)
            Dim activity As IActivity
            Dim resources(10) As IResource
            Dim activities(20) As IActivity
            Dim reservations(20) As IReservation

            For i As Integer = 0 To 9

            ' First create the resource...
            resources(i) = model.NewResource()
            resources(i).Name = "Room " + i.ToString()

            ' Add a conference in the morning
            activity = model.NewActivity()
            activity.Name = "Morning Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4))
            activities(i * 2) = activity

            ' Create the reservation for this activity
            reservations(i * 2) = model.NewReservation(activity, resources(i))

            ' Add a conference in the afternoon
            activity = model.NewActivity()
            activity.Name = "Afternoon Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4))
            activities(i * 2 + 1) = activity

            ' Create the reservation for this activity
            reservations(i * 2 + 1) = model.NewReservation(activity, resources(i))

            Next

            model.Activities.AddRange(activities)
            model.Resources.AddRange(resources)
            model.Reservations.AddRange(reservations)
            End Sub
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IConstraint.FromActivity">
            <summary>
            When implemented by a class, gets the source or <strong>From</strong> activity for this constraint.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> object that represents the source of the constraint.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IConstraint.GanttModel">
            <summary>
            When implemented by a class, gets the Gantt model associated with the constraint.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IConstraint.Info">
            <summary>
            When implemented by a class, gets or sets text information about the constraint.
            </summary>
            <value>A <see cref="T:System.String" /> that represents text information about the
            constraint.</value>
            <remarks>When setting the value, the model must be notified of the property change using the
            <see cref="T:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IConstraint.IsInModel">
            <summary>
            When implemented by a class, indicates whether the constraint has already been added to the model.
            </summary>
            <value><see langword="true" /> if the constraint has been added to the model;
            <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IConstraint.ToActivity">
            <summary>
            When implemented by a class, gets the destination or <strong>To</strong> activity for this constraint.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> object that represents the destination of the constraint.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IConstraint.Type">
            <summary>
            When implemented by a class, gets or sets the type of this constraint.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Data.ConstraintType" /> values.</value>
            <remarks>When setting the value, the model must be notified of the property change using the
            <see cref="T:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseConstraint.#ctor(NickLee.Views.Gantt.Data.BaseGanttModel,NickLee.Views.Gantt.Data.BaseActivity,NickLee.Views.Gantt.Data.BaseActivity)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.BaseConstraint" /> class.
            </summary>
            <param name="model">The Gantt data model.</param>
            <param name="fromActivity">The source activity of the constraint.</param>
            <param name="toActivity">The destination activity of the constraint.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="model" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="fromActivity" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="toActivity" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="fromActivity" /> and <paramref name="toActivity" /> are the referencing the same activity.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="fromActivity" /> is not part of <paramref name="model" />.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="toActivity" /> is not part of <paramref name="model" />.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseConstraint.GetConstraintType">
            <summary>
            Gets the type of the constraint.
            </summary>
            <returns>One of the <see cref="T:NickLee.Views.Gantt.Data.ConstraintType" /> values.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseConstraint.GetCustomProperty(System.String)">
            <summary>
            Gets a custom property by its name.
            </summary>
            <param name="name">The name of the custom property.</param>
            <returns>The value for the property specified by <paramref name="name" />, or
            <see langword="null" /> if no such property exists.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseConstraint.GetInfo">
            <summary>
            Gets text information about the constraint.
            </summary>
            <returns>Text information about the constraint.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseConstraint.OnConstraintChanged(NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs)">
            <summary>
            Is called to notify the Gantt data model that the constraint has changed.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs" /> that contains the event data.</param>
            <remarks><p>Called when the resource is changed.</p></remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseConstraint.OnConstraintChanging(NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs)">
            <summary>
            Is called to notify the Gantt data model that the constraint is changing.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs" /> that contains the event data.</param>
            <remarks><p>Called before the constraint is changed.</p></remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseConstraint.SetConstraintType(NickLee.Views.Gantt.Data.ConstraintType)">
            <summary>
            Sets the type of the constraint.
            </summary>
            <param name="type">One of the <see cref="T:NickLee.Views.Gantt.Data.ConstraintType" /> values.</param>
            <remarks>The implementation of this method must not notify the model, which is done by the
            <see cref="T:NickLee.Views.Gantt.Data.ConstraintType" /> property.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseConstraint.SetCustomProperty(System.String,System.Object)">
            <summary>
            Sets a custom property on the constraint.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="value">The value of the property.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseConstraint.SetInfo(System.String)">
            <summary>
            Sets text information about the constraint.
            </summary>
            <param name="info">The new text information of the constraint.</param>
            <remarks>The implementation of this method must not notify the model, which is done by the
            <see cref="P:NickLee.Views.Gantt.Data.BaseConstraint.Info" /> property.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseConstraint.ToString">
            <summary>
            This member overrides <see cref="M:System.Object.ToString">Object.ToString</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseConstraint.FromActivity">
            <summary>
            Gets the source or <strong>From</strong> activity for this constraint.
            </summary>
            <value>The source <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> for this constraint.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseConstraint.GanttModel">
            <summary>
            Gets the Gantt data model associated with the constraint.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseConstraint.Info">
            <summary>
            Gets or sets text information about the constraint.
            </summary>
            <value>A <see cref="T:System.String" /> that represents text information about the
            constraint.</value>
            <remarks>When setting the value, <see cref="M:NickLee.Views.Gantt.Data.BaseConstraint.OnConstraintChanging(NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs)" /> is called with the appropriate event.
            If the operation is not canceled using the <see cref="P:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs.Cancel" />
            property of the event, it sets the new value by calling <see cref="M:NickLee.Views.Gantt.Data.BaseConstraint.SetInfo(System.String)" /> and calls
            <see cref="M:NickLee.Views.Gantt.Data.BaseConstraint.OnConstraintChanged(NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs)" />.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseConstraint.IsInModel">
            <summary>
            Indicates whether the constraint has already been added to the model.
            </summary>
            <value><see langword="true" /> if the constraint has been added to the model;
            <see langword="false" />, otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseConstraint.Item(System.String)">
            <summary>
            Gets or sets the custom property with the specified name.
            </summary>
            <value>The custom property with the specified name.</value>
            <remarks>Custom properties must be added to the Gantt data model before using this indexer.
            See the <see cref="P:NickLee.Views.Gantt.Data.BaseGanttModel.CustomConstraintProperties" /> property for details.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseConstraint.ToActivity">
            <summary>
            Gets the destination or <strong>To</strong> activity for this constraint.
            </summary>
            <value>The destination <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> for this constraint.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseConstraint.Type">
            <summary>
            Gets or sets the type of this constraint.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Data.ConstraintType" /> values.</value>
            <remarks>When setting the value, <see cref="M:NickLee.Views.Gantt.Data.BaseConstraint.OnConstraintChanging(NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs)" /> is called with the appropriate event.
            If the operation is not canceled using the <see cref="P:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs.Cancel" />
            property of the event, it sets the new value by calling <see cref="M:NickLee.Views.Gantt.Data.BaseConstraint.SetConstraintType(NickLee.Views.Gantt.Data.ConstraintType)" /> and calls
            <see cref="M:NickLee.Views.Gantt.Data.BaseConstraint.OnConstraintChanged(NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs)" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleConstraint.#ctor(NickLee.Views.Gantt.Data.SimpleGanttModel,NickLee.Views.Gantt.Data.SimpleActivity,NickLee.Views.Gantt.Data.SimpleActivity,NickLee.Views.Gantt.Data.ConstraintType)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.SimpleConstraint" /> class.
            </summary>
            <param name="model">The Gantt model.</param>
            <param name="fromActivity">The source activity of the constraint.</param>
            <param name="toActivity">The destination activity of the constraint.</param>
            <param name="type">The type of the constraint.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleConstraint.GetConstraintType">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseConstraint.GetConstraintType">BaseConstraint.GetConstraintType</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleConstraint.GetCustomProperty(System.String)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.GetCustomProperty(System.String)">BaseActivity.GetCustomProperty</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleConstraint.GetInfo">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseConstraint.GetInfo">BaseConstraint.GetInfo</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleConstraint.SetConstraintType(NickLee.Views.Gantt.Data.ConstraintType)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseConstraint.SetConstraintType(NickLee.Views.Gantt.Data.ConstraintType)">BaseConstraint.SetConstraintType</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleConstraint.SetCustomProperty(System.String,System.Object)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.SetCustomProperty(System.String,System.Object)">BaseActivity.SetCustomProperty</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleConstraint.SetInfo(System.String)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseConstraint.SetInfo(System.String)">BaseConstraint.SetInfo</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.ProjectSchedulingModel">
            <summary>
            A Gantt data model with automatic project scheduling capabilities.
            </summary>
            <remarks>
            This subclass of <see cref="T:NickLee.Views.Gantt.Data.SimpleGanttModel" /> is a Gantt data model that supports automatic computation
            of the critical path as well as a resource leveling system that allows to remove resource overallocations.
            The model is composed of activities defined by the class <see cref="T:NickLee.Views.Gantt.Data.SchedulingActivity" />, resources defined by the class
            <see cref="T:NickLee.Views.Gantt.Data.SchedulingResource" />, contraints of the type <see cref="T:NickLee.Views.Gantt.Data.SchedulingConstraint" /> and reservations defined
            by the class <see cref="T:NickLee.Views.Gantt.Data.SchedulingReservation" />. The computation of the scheduling is done automatically every time
            something changes in the data model.
            The model computes the start date and end date of each activity taking into account the project
            start date (<see cref="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.StartDate" />), the duration of the activity (<see cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.Duration">SchedulingActivity.Duration</see>), the activity
            dependencies (<see cref="T:NickLee.Views.Gantt.Data.SchedulingConstraint" />), the constraints on the activity
            (<see cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.Constraint">SchedulingActivity.Constraint</see>, the project calendar (<see cref="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.Calendar" /> property), the calendar
            of resources (<see cref="P:NickLee.Views.Gantt.Data.SchedulingResource.Calendar">SchedulingResource.Calendar</see>) as well as the resources assigned to each
            activity. If the <see cref="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.AutomaticResourceLeveling" /> property is <see langword="true" /> then
            the scheduling system will try to remove resource overallocation by delaying activities
            (<see cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.LevelingDelay">SchedulingActivity.LevelingDelay</see>).
            The scheduling can be controled through the following properties:
            The <see cref="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.AutomaticResourceLeveling" /> property allows to turn on or off the resource leveling system.
            The <see cref="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.ClearDelaysBeforeLeveling" /> property tells the resource leveling to clear all leveling information before
            leveling or not.
            The <see cref="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.MultipleCriticalPath" /> property tells the critical path to compute one or several critical paths.
            Since the scheduling is done for each modification of the model, the <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModel" />
            defines a system that allows to minimize the number of re-scheduling when modifying several properties
            of the model. In order to achieve this you can use the <see cref="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.BeginScheduleSession" />
            and <see cref="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.EndScheduleSession" /> methods to embrace several modifications of the model.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.#ctor">
            <summary>
            Creates and initializes a new <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModel" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.BeginInit">
            <summary>
            Begins the initialization of a <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModel" /> that is used on a form or used by
            another component. The initialization occurs at run time.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.BeginScheduleSession">
            <summary>
            Starts a scheduling session.
            </summary>
            <remarks>During a scheduling session, no automatic scheduling is performed until
            the <see cref="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.EndScheduleSession" /> session is called. Note that sessions can
            be nested.</remarks>
            <seealso cref="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.EndScheduleSession" />
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.BeginUpdate">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModel.BeginUpdate">SimpleGanttModel.BeginUpdate</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.ClearLeveling">
            <summary>
            Clears all leveling delays on activities.
            </summary>
            <remarks>The method clears the resets the leveling
            delays (<see cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.LevelingDelay" />) of all activities
            in the model to zero. Calling the method will recompute a new schedule for the
            project.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.EndInit">
            <summary>
            Ends the initialization of a <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModel" /> that is used on a form or used by
            another component. The initialization occurs at run time.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.EndScheduleSession">
            <summary>
            Ends a scheduling session.
            </summary>
            <remarks>During a scheduling session, no automatic scheduling is performed until
            the <see cref="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.EndScheduleSession" /> session is called. Note that sessions can
            be nested.</remarks>
            <seealso cref="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.BeginScheduleSession" />
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.EndUpdate">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModel.EndUpdate">SimpleGanttModel.EndUpdate</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.FinishSchedule">
            <summary>
            Ends the computation of the schedule.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.InvalidateSchedule">
            <summary>
            Invalidates the schedule of the model.
            </summary>
            <remarks>Tells the model that the schedule of the project needs to be recomputed. In
            the general cases you do not need to call the method since the schedule is automatically
            recomputed when something changes in the project.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.NewActivity">
            <summary>
            Creates a new activity of type <see cref="T:NickLee.Views.Gantt.Data.SchedulingActivity" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.NewConstraint(NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.ConstraintType)">
            <summary>
            Creates a new constraint of type <see cref="T:NickLee.Views.Gantt.Data.SchedulingConstraint" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.NewReservation(NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Creates a new reservation of type <see cref="T:NickLee.Views.Gantt.Data.SchedulingReservation" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.NewResource">
            <summary>
            Creates a new resource of type <see cref="T:NickLee.Views.Gantt.Data.SchedulingResource" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.OnActivitiesChanged(NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)">
            <summary>
            This method overrides <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModel.OnActivitiesChanged(NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)">BaseGanttModel.OnActivitiesChanged</see>
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.OnBeginSchedule(System.EventArgs)">
            <summary>
            Invoked when the computation of the schedule starts.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.OnCalendarChanged(System.EventArgs)">
            <summary>
            Invoked when the calendar of the model changes in some way.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.OnConstraintsChanged(NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs)">
            <summary>
            This method overrides <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModel.OnConstraintsChanged(NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs)">BaseGanttModel.OnConstraintsChanged</see>
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.OnEndSchedule(System.EventArgs)">
            <summary>
            Invoked when the computation of the schedule ends.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.OnLevelingProgress(NickLee.Views.Gantt.Data.LevelingProgressEventArgs)">
            <summary>
            Invoked when the resource leveling algorithm has progressed or has found
            some overallocations that cannot be resolved.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.Data.LevelingProgressEventArgs" /> object that containts the
            event data.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.OnReservationsChanged(NickLee.Views.Gantt.Data.ReservationsChangeEventArgs)">
            <summary>
            This method overrides <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModel.OnReservationsChanged(NickLee.Views.Gantt.Data.ReservationsChangeEventArgs)">BaseGanttModel.OnReservationsChanged</see>
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.OnResourcesChanged(NickLee.Views.Gantt.Data.ResourcesChangeEventArgs)">
            <summary>
            This method overrides <see cref="M:NickLee.Views.Gantt.Data.BaseGanttModel.OnResourcesChanged(NickLee.Views.Gantt.Data.ResourcesChangeEventArgs)">BaseGanttModel.OnResourcesChanged</see>
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.SaveBaseline">
            <summary>
            Saves the current status of the model in a baseline.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.Schedule">
            <summary>
            Computes the schedule of the model.
            </summary>
            <remarks>
            Recomputes the schedule of the project.
            In general case you do not need to call the method directly,
            because the method is called automatically when something changes is the model. If you
            need to tell the model that the schedule is no more valid
            use <see cref="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.InvalidateSchedule" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.Schedule(System.Boolean,System.Boolean)">
            <summary>
            Computes the schedule of the model.
            </summary>
            <param name="leveling">When set to <see langword="true" />, resource leveling will be done.</param>
            <param name="clearDelays">When set to  <see langword="true" /> leveling delays will be cleared before leveling.</param>
            <remarks>
            Computes a new schedule for the project. In general you do not need to call this
            method since the schedule is automatically recomputed when needed.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.SetEndDate(System.DateTime)">
            <summary>
            Changes the end date of the project.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.StartSchedule">
            <summary>
            Starts the computation of the schedule.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.ProjectSchedulingModel._automaticResourceLeveling">
            <summary>
            Indicates whether resource leveling is automatic or manual.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.ProjectSchedulingModel._calendar">
            <summary>
            The calendar of the model.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.ProjectSchedulingModel._calendars">
            <summary>
            Collection of base calendars for the model.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.ProjectSchedulingModel._clearLevelingInfoBeforeLeveling">
            <summary>
            Indicates whether leveling delays will be cleared before automatic leveling.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.ProjectSchedulingModel._computingSchedule">
            <summary>
            Indicates whether the schedule is being computed.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.ProjectSchedulingModel._criticalThreshold">
            <summary>
            Defines the threshold used to consider an activity as critical.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.ProjectSchedulingModel._dayspermonth">
            <summary>
            Number of days per month (used for display and editing).
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.ProjectSchedulingModel._endDate">
            <summary>
            Computed end date of the project;
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.ProjectSchedulingModel._leveling">
            <summary>
            Indicates that we are currently computing the leveling
            in the model.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.ProjectSchedulingModel._loading">
            <summary>
            Used when loading from SDXL file.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.ProjectSchedulingModel._minutesperday">
            <summary>
            Number of hours per day (used for display and editing).
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.ProjectSchedulingModel._minutesperweek">
            <summary>
            Number of hours per week (used for display and editing).
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.ProjectSchedulingModel._multipleCriticalPath">
            <summary>
            Indicates that several critical paths are computed
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.ProjectSchedulingModel._progressEvent">
            <summary>
            Internal instance of leveling progress event.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.ProjectSchedulingModel._scheduler">
            <summary>
            The Scheduling algorithm
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.ProjectSchedulingModel._scheduleSession">
            <summary>
            Defines the number of BegingSchedule/EndSchedule Sessions.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.ProjectSchedulingModel._scheduleValid">
            <summary>
            Indicates whether the schedule is valid or not.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.ProjectSchedulingModel._startDate">
            <summary>
            Start date of the project;
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.ProjectSchedulingModel.DateUnknown">
            <summary>
            A <see cref="T:System.DateTime" /> value that represents an unknown date value.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.ProjectSchedulingModel.BeginSchedule">
            <summary>
            Occurs when the computation of the schedule starts.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.ProjectSchedulingModel.CalendarChanged">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.Calendar" /> property has changed on the model.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.ProjectSchedulingModel.EndSchedule">
            <summary>
            Occurs when the computation of the schedule is finished.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.ProjectSchedulingModel.LevelingProgress">
            <summary>
            Event fired to indicate a progress during resource leveling. The event
            is also fired when an overallocation cannot be resolved during resource leveling.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.AutomaticResourceLeveling">
            <summary>
            Gets or sets a values to turn on or off the automatic resource leveling.
            </summary>
            <value>A boolean value that indicates whether resource leveling is turned on or off in the model.
            When the value is <see langword="true" /> then the model will try to remove resource overallocations by
            delaying activities. The default value is <see langword="true" />.</value>
            <remarks>Setting the value to <see langword="true" /> will reschedule the project.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.ClearDelaysBeforeLeveling" />
            <seealso cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.LevelingDelay" />
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.BaseCalendars">
            <summary>
            Gets the collection of base calendars of the project.
            </summary>
            <value>
            A <see cref="T:NickLee.Views.Gantt.Data.CalendarCollection" /> collection that contains the base calendars
            for the project. The base callendars are calendars that can be used for the project
            (see <see cref="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.Calendar" /> or for activity calendars <see cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.Calendar" />.
            Calendars in this collection can also be used as base calendars for resource calendars
            (see <see cref="P:NickLee.Views.Gantt.Data.SchedulingResource.Calendar" />. By default the collection contains three
            calendars: the standard calendar (<see cref="F:NickLee.Views.Gantt.WorkCalendar.Standard" />), the 24 hours calendar
            (see <see cref="F:NickLee.Views.Gantt.WorkCalendar.TwentyFourHours" />) and the
            night shift calendar (see <see cref="F:NickLee.Views.Gantt.WorkCalendar.NightShift" />).
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.Calendar">
            <summary>
            Gets or sets the calendar for the model.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> object that represents the working and nonworking times
            of the project. The default value is a standard calendar (see <see cref="F:NickLee.Views.Gantt.WorkCalendar.Standard" />.
            </value>
            <remarks>
            The project calendar defines the default working and nonworking times of the
            project. When no specific calendar is assigned to an activity or to resources assigned to
            this activity then the activity will be scheduled within the working times of this calendar.
            Note that the value must be contained in the list of base calendars of the project
            (see <see cref="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.BaseCalendars" /> otherwise an exception will be thrown. Changing the
            value of this property will reshedule the project.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.ClearDelaysBeforeLeveling">
            <summary>
            Indicates whether the scheduling should clear leveling delays
            before leveling or not.
            </summary>
            <value>A boolean value that indicated whether leveling delays should be reset to zero
            before the resource leveling recomputes the leveling.
            The default value is <see langword="true" /></value>
            <seealso cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.LevelingDelay" />
            <seealso cref="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.AutomaticResourceLeveling" />
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.CriticalSlackThreshold">
            <summary>
            Gets or sets the maximum slack allowed before an activity becomes critical.
            </summary>
            <value>A <see cref="T:System.TimeSpan" /> that represents the maximum slack before an activity becomes
            critial.
            When the activity total slack (<see cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.TotalSlack" />) if above this
            threshold then the activity is considered as a critical
            activity. The default value is an empty duration meaning that the activity is critical as
            soon as it has no slack. This threshold can be usefull if you want to be notified that an activity
            will soon become critical but still has some days of slack.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.DaysPerMonth">
            <summary>
            Gets or sets the number of days per month.
            </summary>
            <value>
            A number that represents the number of days of work per month. The default value is 20.
            </value>
            <remarks>The value is used to display or edit a working duration.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.EndDate">
            <summary>
            Gets the end date of the project.
            </summary>
            <value>A <see cref="T:System.DateTime" /> object that represents the end date of the project. This
            date is computed as the latest end date of all activities in the project.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.InScheduleSession">
            <summary>
            Indicates that the model is currenlty in a scheduling session.
            </summary>
            <remarks>
            A scheduling session can be started using <see cref="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.BeginScheduleSession" />
            and ended by <see cref="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.EndScheduleSession" />. During a scheduling
            session, no automatic scheduling is performed until
            the <see cref="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.EndScheduleSession" /> session is called.
            Note that sessions can be nested.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.MinutesPerDay">
            <summary>
            Gets or sets the number of minutes per day.
            </summary>
            <value>
            A number that represents the number of minutes of work per day. The default value is 480.
            </value>
            <remarks>The value is used to display or edit a working duration.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.MinutesPerWeek">
            <summary>
            Gets or sets the number of minutes per week.
            </summary>
            <value>
            A number that represents the number of minutes of work per week. The default value is 2400.
            </value>
            <remarks>The value is used to display or edit a working duration.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.MultipleCriticalPath">
            <summary>
            Indicates whether the model computes one or several critical paths.
            </summary>
            <value>A boolean value that indicates whether the <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModel" /> will
            compute a single critical path or one critical path for each independant network
            of activities in the model. The default value is <see langword="false" /></value>
            <remarks>
            Usualy the model assigns the late finish of activities with no successors
            to the model end date. When this property is set to true, then the late finish
            of those activities are assigned to their early finish date making them critical.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.StartDate">
            <summary>
            Gets or sets the start date of the project.
            </summary>
            <value>A <see cref="T:System.DateTime" /> object that represents the starting date of the project.
            The default value is set to the creation date of the <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModel" />.
            </value>
            <remarks>Represents the starting date of the project. Changing the project start date will
            recompute a schedule for the project.</remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.NamespaceDoc">
            <summary>
            The <strong>NickLee.Views.Gantt.Data</strong> contains classes that define the
            data that can be displayed in a Gantt Chart control. In particular the namespace
            defines the <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> interface.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet">
            <summary>
            Defines a control that contains a time scale and an activity sheet.
            </summary>
            <remarks><p>This control contains a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> control and
            an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" /> control.</p>
            <p><img src="scrollactivitysheet.png" /></p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.CreateGanttSheet">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.CreateGanttSheet">ScrollGanttSheet.CreateGanttSheet</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.ResetConstraintToolTip">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.ConstraintToolTip" /> property to its default value.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.BeforeCreateConstraint">
            <summary>
            Event fired before a constraint is created using the mouse.
            </summary>
            <remarks>When the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.CanCreateConstraint" /> property is <see langword="true" />, the
            user can create a constraint by selecting the origin and destination activity using the
            mouse pointer. Before
            the constraint is created, this event is raised so that you can cancel the creation or
            notify the user of some particular case.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.CanCreateConstraint" />
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.CanCreateConstraintChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.CanCreateConstraint" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.ConstraintLinkStyleChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.ConstraintLinkStyle" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.ConstraintsColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.ConstraintsColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.ConstraintsOwnerDrawChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.ConstraintsOwnerDraw" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.ConstraintToolTipChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.ConstraintToolTip" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.CreateConstraintCursorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.CreateConstraintCursor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.DrawConstraintLink">
            <summary>
            Occurs when the activity sheet draws constraint links in owner draw mode.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.ConstraintsOwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows an event handler
            listening to the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.DrawConstraintLink" /> event. The event handler draws
            constraint links using a specific pen that depends on the constraint.
            </para>
            <code lang="C#">
            private void OnDrawConstraintLink(object sender, DrawConstraintLinkEventArgs e) {
            Pen pen = ComputePen(e.Constraint);
            e.DrawConstraintLink(pen, e.Brush);
            }
            </code>
            <code lang="Visual Basic">
            Private Sub OnDrawSheetRow(ByVal sender As Object, ByVal e As DrawConstraintLinkEventArgs)
            Dim pen as Pen = ComputePen(e.Constraint)
            e.DrawConstraintLink(pen, e.Brush)
            End Sub
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.HitTestConstraintLink">
            <summary>
            Occurs when the activity sheet does hit testing on constraint links in owner draw mode.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.ConstraintsOwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.CanCreateConstraint">
            <summary>
            Gets or sets a value indicating whether constraints
            can be created using the mouse.
            </summary>
            <value>
            <see langword="true" /> if constraints can be created
            using the mouse; <see langword="false" /> otherwise.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.ConstraintLinkStyle">
            <summary>
            Gets or sets the style of constraint links between activities.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ConstraintLinkStyle" /> values. The default
            is <strong>Direct</strong>.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.ConstraintsColor" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.ConstraintsColor">
            <summary>
            Gets or sets the color of constraints links.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> used to draw the constraints links.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.ConstraintsOwnerDraw">
            <summary>
            Gets or sets a value indicating whether the code that you
            provide draws the constraint links or not.
            </summary>
            <value>
            <see langword="true" /> if constraint links are to be drawn using custom user
            code; <see langword="false" /> otherwise.
            </value>
            <remarks>
            <p>When the <strong>ConstraintsOwnerDraw</strong> property is set to <see langword="true" />,
            you need to handle the drawing and hit testing of constraint links.
            Use the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.DrawConstraintLink" /> event to handle the drawing of
            constraint links.
            Use the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.HitTestConstraintLink" /> event to handle the hit testing of
            constraint links.
            </p>
            <p>When the <strong>ConstraintsOwnerDraw</strong> property is set to <see langword="false" />,
            the <strong>DrawConstraintLink</strong> and <strong>HitTestConstraintLink</strong> events are not raised.</p>
            </remarks>
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.DrawConstraintLink" />
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.HitTestConstraintLink" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.ConstraintToolTip">
            <summary>
            Gets or sets the tooltip format for constraints.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the format of the tooltip that
            will be displayed when the mouse hovers constraints.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.CreateConstraintCursor">
            <summary>
            Gets the cursor that is used when the user creates a constraint using the
            mouse pointer.
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Cursor" /> that is used when the user creates a constraint using the
            mouse pointer.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.GanttSheet">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" /> used to display the activity hierarchy
            in a Gantt model.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" /> used to display the activities.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet.RowController">
            <summary>
            Redefines <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollGanttSheet.RowController" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ResourceDialog">
            <summary>
            Displays a dialog window from which the user can edit the values of a resource.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ResourceDialog.#ctor">
            <summary>
            Creates and initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ResourceDialog" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ResourceDialog.Dispose(System.Boolean)">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ResourceDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ResourceDialog.OnResourceChanged">
            <summary>
            Is called when the resource inspected by the dialog has changed.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ResourceDialog.OnVisibleChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">Control.OnVisibleChanged</see>
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ResourceDialog.ValidateDialog">
            <summary>
            Invoked when the users validates the dialog.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ResourceDialog._resource">
            <summary>
            The edited resource.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ResourceDialog.baseCalendarLabel">
            <summary>
            The <see cref="T:System.Windows.Forms.Label" /> for the base calendar name.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ResourceDialog.buttonCancel">
            <summary>
            The cancel button.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ResourceDialog.buttonOK">
            <summary>
            The ok button.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ResourceDialog.calendarTab">
            <summary>
            The <see cref="T:System.Windows.Forms.TabPage" /> the contains calendar on the resource.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ResourceDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ResourceDialog.generalTab">
            <summary>
            The <see cref="T:System.Windows.Forms.TabPage" /> the contains general information on the resource.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ResourceDialog.nameLabel">
            <summary>
            The <see cref="T:System.Windows.Forms.Label" /> for Name.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ResourceDialog.nameTextBox">
            <summary>
            The <see cref="T:System.Windows.Forms.TextBox" /> for name.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ResourceDialog.notesLabel">
            <summary>
            The <see cref="T:System.Windows.Forms.Label" /> for notes.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ResourceDialog.notesTab">
            <summary>
            The <see cref="T:System.Windows.Forms.TabPage" /> the contains notes on the resource.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ResourceDialog.noteTextBox">
            <summary>
            The <see cref="T:System.Windows.Forms.TextBox" /> for notes.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ResourceDialog.tabControl">
            <summary>
            The main <see cref="T:System.Windows.Forms.TabControl" /> the contains information on the resource.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ResourceDialog.typeCombo">
            <summary>
            The <see cref="T:System.Windows.Forms.ComboBox" /> to edit the type of the resource.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ResourceDialog.typeLabel">
            <summary>
            The <see cref="T:System.Windows.Forms.Label" /> for the type of resource.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ResourceDialog.unitsLabel">
            <summary>
            The <see cref="T:System.Windows.Forms.Label" /> for Units.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ResourceDialog.unitsTextBox">
            <summary>
            The <see cref="T:System.Windows.Forms.TextBox" /> for units.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ResourceDialog.workingTimesEditor">
            <summary>
            The <see cref="T:NickLee.Views.Gantt.Windows.Forms.WorkingTimesEditor" /> to edit the calendar of the resource.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ResourceDialog.AutoScaleBaseSize">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Form.AutoScaleBaseSize">Form.AutoScaleBaseSize</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ResourceDialog.ClientSize">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Form.ClientSize">Form.ClientSize</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ResourceDialog.Resource">
            <summary>
            Gets or sets the resource edited by this dialog box.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> edited by this dialog.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ResourceDialog.Text">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.Text">Control.Text</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.QueryReservationZOrderEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.QueryReservationZOrder" /> event of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.Design.LoadChartDesigner">
            <summary>
            Defines a designer for the <see cref="T:NickLee.Views.Gantt.Windows.Forms.LoadChart" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.LoadChartDesigner.PostFilterProperties(System.Collections.IDictionary)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)">ComponentDesigner.PostFilterProperties</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.Design.LoadChartDesigner.AssociatedComponents">
            <summary>
            This member overrides <see cref="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents">ComponentDesigner.AssociatedComponents</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.BarSymbolShapeEditor">
            <summary>
            Provides a user interface to select a <see cref="T:NickLee.Views.Gantt.Windows.Forms.BarSymbolShape" /> object.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.BarSymbolShapeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used
            to gain additional context information.
            </param>
            <returns>An <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that indicates the style
            of editor used by <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" />.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.BarSymbolShapeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Indicates whether the specified context supports the painting of a representation of an object value within the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
            <returns><see langword="true" /> if <see cref="M:NickLee.Views.Gantt.Windows.Forms.BarSymbolShapeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" /> is implemented; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.BarSymbolShapeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>
            Paints a representation of the value of an object using the specified <see cref="T:System.Drawing.Design.PaintValueEventArgs" />.
            </summary>
            <param name="e">A <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> that indicates what to paint and where to paint it. </param>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ActivityBar">
            <summary>
            Defines the graphical representation of the bar that represents an activity or reservation in a <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />.
            </summary>
            <remarks>The <strong>ActivityBar</strong> is a part of the activity bar style (<see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />) which
            fully defines a representation of an activity or reservation. The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />
            is composed of an <strong>ActivityBar</strong> surrounded by two optional symbols defined by the
            class <see cref="T:NickLee.Views.Gantt.Windows.Forms.BarSymbol" />. Use the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.Bar" /> property of
            an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> to change the bar of an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />.
            </remarks>
            <example>
            Look at the description of <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> for an example of using
            the <strong>ActivityBar</strong> class.
            </example>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.BarSymbol" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBar.#ctor">
            <summary>
            Creates and initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBar" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBar.Clone">
            <summary>
            Copies the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBar" />.
            </summary>
            <returns>A new <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBar" /> object.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBar.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBar" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBar.Dispose(System.Boolean)">
            <summary>
            Disposes of the resources (other than memory) used by the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBar" /> object.
            </summary>
            <param name="disposing"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBar.Finalize">
            <summary>
            Overridden. See <see cref="M:System.Object.Finalize">Object.Finalize</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBar.GetBounds(System.Drawing.Graphics,System.Drawing.RectangleF)">
            <summary>
            Computes the bounds of the bar with respect to the height of the activity
            bar style.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics" /> object to perform the measures.</param>
            <param name="bounds">A <see cref="T:System.Drawing.RectangleF" /> object that defines the position and size of the bar style.</param>
            <returns>The bounds of the bar.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBar.GetBounds(System.Drawing.Graphics,System.Object,System.Drawing.RectangleF)">
            <summary>
            Computes the bounds of the bar with respect to the height of the activity
            bar style.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics" /> object to perform the measures.</param>
            <param name="obj">The object whose bounds are asked for.</param>
            <param name="bounds">A <see cref="T:System.Drawing.RectangleF" /> object that defines the position and size of the bar style.</param>
            <returns>The bounds of the bar.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBar.OnActivityBarChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivityBar.ActivityBarChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.
            </param>
            <remarks>When subclassing the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBar" /> class, you must call this
            method when the value of a property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBar.Paint(System.Drawing.Graphics,System.Object,System.Drawing.RectangleF)">
            <summary>
            Paints the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBar" />.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> object to draw to.</param>
            <param name="obj">The object being painted. It can be an <see cref="T:NickLee.Views.Gantt.Data.IActivity" />
            or an <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> reference.</param>
            <param name="barBounds">The rectangle that defines the bounds of the bar.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBar.ResetSecondColor">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.SecondColor" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBar.ShouldSerializeSecondColor">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.SecondColor" /> property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from
            its default; <see langword="false" /> otherwise.
            </returns>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBar._borderColor">
            <summary>
            The border color of the bar.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBar._bottomOffset">
            <summary>
            The bottom offset between 0 and 1 (percentage of height).
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBar._color">
            <summary>
            The primary color of the bar.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBar._fillStyle">
            <summary>
            Indicates the fill style.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBar._hatchstyle">
            <summary>
            The hatch style.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBar._secondColor">
            <summary>
            The second color of the bar.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBar._style">
            <summary>
            The style that contains this object.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBar._topOffset">
            <summary>
            The top offset between 0 and 1 (percentage of height).
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ActivityBar.ActivityBarChanged">
            <summary>
            Occurs when a property of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBar" /> changes.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.BorderColor">
            <summary>
            Gets or sets the border color of the bar.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the border color of the bar.
            The default value is <see cref="P:System.Drawing.Color.Black">Color.Black</see>.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.Color" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.SecondColor" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.BottomMargin">
            <summary>
            Gets or sets the margin at the bottom of the bar.
            </summary>
            <value>A floating point value between 0 and 1 that defines the bottom margin
            of the bar with respect to the height of the bar style. The default value
            is 0.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The value must be between 0 and 1.</exception>
            <remarks>A value of 1 means that the bar shape is not visible.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.TopMargin" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.Color">
            <summary>
            Gets or sets the background color of the bar.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the background color of the bar.
            The default value is <see cref="P:System.Drawing.Color.LightSkyBlue">Color.LightSkyBlue</see>.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.BorderColor" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.SecondColor" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.FillStyle">
            <summary>
            Gets or sets a value indicating the method that will be used to fill the
            background of the bar.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarFillStyle" /> values.
            The default value is <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarFillStyle">HorizontalGradient</see>.
            </value>
            <remarks>Depending on the value of this property, other properties are used to
            control the filling of the bar.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.HatchStyle" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.Color" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.SecondColor" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.HatchBackColor">
            <summary>
            Gets the color used as the background color of the hatch brush.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the background color of the hatch brush.
            The default value is <see cref="P:System.Drawing.Color.Transparent">Color.Transparent</see>.
            </value>
            <remarks>
            When the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.FillStyle" /> property is set to <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarFillStyle">Hatch</see> then
            the bar is filled with a hatch brush. The foreground color of the hatch is defined
            by the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.Color" /> property and the background color of the hatch is
            defined by the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.SecondColor" /> property unless the second color has its
            default value which means that the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.Color" /> and <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.SecondColor" />
            properties have the same value. In this case the property returns <see cref="P:System.Drawing.Color.Transparent">Color.Transparent</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.HatchStyle">
            <summary>
            Gets or sets the style of hatch for the bar.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> that is used to fill the bar when
            the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.FillStyle" /> property is set to <see cref="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarFillStyle.Hatch" />.
            The default value is <strong>Percent50</strong>.
            </value>
            <remarks>The bar will be filled with a hatch brush only if the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.FillStyle" /> property is set to <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarFillStyle">Hatch</see>.
            In this case the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.Color" /> property is used as the foreground of the hatch and
            the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.SecondColor" /> property as the background of the hatch.
            </remarks>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarFillStyle" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.SecondColor">
            <summary>
            Gets or sets the second color of the bar.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the second color of the bar.
            By default this property has the same value as the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.Color" /> property.
            </value>
            <remarks>
            This color is used to draw
            the background of the hatch brush if the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.FillStyle" /> property returns
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarFillStyle">Hatch</see>. If no hatch brush is used and the values
            of the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.Color" /> and <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.SecondColor" /> properties are different,
            then a linear gradient is used to fill the bar with <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.Color" /> and
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.SecondColor" /> as color bounds.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.BorderColor" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.Color" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.Style">
            <summary>
            Sets the activity bar style that contains this object.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.TopMargin">
            <summary>
            Gets or sets the margin at the top of the bar.
            </summary>
            <value>A floating point value between 0 and 1 that defines the top margin
            of the bar with respect to the height of the bar style. The default value
            is 0.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The value must be between 0 and 1.</exception>
            <remarks>A value of 1 means that the bar shape is not visible.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.BottomMargin" />
        </member>
        <member name="M:NickLee.Views.Gantt.Period.WorkBetween(System.DateTime,System.DateTime)">
            <summary>
            Computes the amount of work between two dates.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.LevelingProgressEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Gantt.Data.ProjectSchedulingModel.LevelingProgress" /> event of a <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModel" /> .
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.LevelingProgressEventArgs.#ctor(System.Single)">
            <summary>
            Creates a new <see cref="T:NickLee.Views.Gantt.Data.LevelingProgressEventArgs" />.
            </summary>
            <param name="progress">The percentage of progress.</param>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.LevelingProgressEventArgs.CannotResolve">
            <summary>
            Indicates that a resource overallocation cannot be resolved.
            </summary>
            <value><see langword="true" /> if an overallocation cannot be resolved; <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.LevelingProgressEventArgs.OverallocatedResource">
            <summary>
            Gets the resource for which overallocation cannot be resolved.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Data.IResource" /> that represents the resource for which overallocation cannot be resolved.</value>
            <remarks>The value is only valid when <see cref="P:NickLee.Views.Gantt.Data.LevelingProgressEventArgs.CannotResolve" /> is <see langword="true" />.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.LevelingProgressEventArgs.OverallocationDate">
            <summary>
            Gets the date of the overallocation that cannot be resolved.
            </summary>
            <value>A <see cref="T:System.DateTime" /> that represents the date of the overallocation that cannot be resolved.</value>
            <remarks>The value is only valid when <see cref="P:NickLee.Views.Gantt.Data.LevelingProgressEventArgs.CannotResolve" /> is <see langword="true" />.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.LevelingProgressEventArgs.PercentComplete">
            <summary>
            Gets the percentage of completion of the resource leveling.
            </summary>
            <value>A value that represents the percentage of completion of the resource leveling.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.LevelingProgressEventArgs.Skip">
            <summary>
            Gets or sets a value that allows to skip an overallocation problem
            and continue resolving overallocations.
            </summary>
            <value>
            When set to <see langword="true" /> tells the resource leveling system to skip
            the overallocation problem and continue leveling.
            When set to <see langword="false" /> tells the resource leveling system to stop leveling.
            The value is only valid when <see cref="P:NickLee.Views.Gantt.Data.LevelingProgressEventArgs.CannotResolve" /> is <see langword="true" />.</value>&gt;
        </member>
        <member name="T:NickLee.Views.Gantt.Data.LagFormat">
            <summary>
            Defines the format of the lead or lag time of a <see cref="T:NickLee.Views.Gantt.Data.SchedulingConstraint" />.
            </summary>
            <remarks>Use the members of this enumeration to set the
            value of the <see cref="P:NickLee.Views.Gantt.Data.SchedulingConstraint.LagFormat" /> property in the
            <see cref="T:NickLee.Views.Gantt.Data.SchedulingConstraint" /> class.
            </remarks>
            <seealso cref="T:NickLee.Views.Gantt.Data.SchedulingConstraint" />
        </member>
        <member name="T:NickLee.Views.Gantt.Data.BaseCalendarsTypeConverter">
            <summary>
            Type converter to convert base calendars of a <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModel" />
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.ActivityConstraintType">
            <summary>
            Defines a constraint that can be applied to a <see cref="T:NickLee.Views.Gantt.Data.SchedulingActivity" />.
            </summary>
            <remarks>Use the value of this enumeration to define the type of a constraint in
            <see cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.Constraint" /> property of
            the <see cref="T:NickLee.Views.Gantt.Data.SchedulingActivity" /> class.
            </remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.ActivitiesTimeRange">
            <summary>
            This implementation of the <see cref="T:NickLee.Views.Gantt.ITimeRange" /> interface listens to a
            <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> and automatically adjusts its bounds according to
            the activities located in the Gantt model.
            </summary>
            <remarks><p>This class is used by an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" /> to
            update its time bounds.</p>
            <p>Use the <see cref="P:NickLee.Views.Gantt.GanttTimeRange.GanttModel" /> property to connect a
            <strong>ActivitiesTimeRange</strong> to a Gantt data model.</p>
            </remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.GanttTimeRange">
            <summary>
            This <see langword="abstract" /> implementation of the <see cref="T:NickLee.Views.Gantt.ITimeRange" /> interface serves as base class for
            the <see cref="T:NickLee.Views.Gantt.ActivitiesTimeRange" />, <see cref="T:NickLee.Views.Gantt.ReservationsTimeRange" /> and <see cref="T:NickLee.Views.Gantt.ResourceTimeRange" />
            classes.
            </summary>
            <remarks>Use the <see cref="P:NickLee.Views.Gantt.GanttTimeRange.GanttModel" /> property to connect a
            <strong>GanttTimeRange</strong> to a Gantt data model.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.GanttTimeRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.GanttTimeRange" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.GanttTimeRange.#ctor(NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.GanttTimeRange" /> class connected
            to the specified <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> instance.
            </summary>
            <param name="model">A <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> instance to listen to.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.GanttTimeRange.OnGanttModelChanged">
            <summary>
            Is called when the <see cref="P:NickLee.Views.Gantt.GanttTimeRange.GanttModel" /> property has changed.
            </summary>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.GanttTimeRange.OnGanttModelChanging">
            <summary>
            Is called when the <see cref="P:NickLee.Views.Gantt.GanttTimeRange.GanttModel" /> property is going to change.
            </summary>
            <remarks>The default implementation does nothing.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.GanttTimeRange.EndTime">
            <summary>
            This member overrides <see cref="P:NickLee.Views.Gantt.TimeRange.EndTime">TimeRange.EndTime</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.GanttTimeRange.GanttModel">
            <summary>
            Gets or sets the Gantt model to listen to.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> reference.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.GanttTimeRange.RealBounds">
            <summary>
            Gets the real bounds of the time range, without the margins.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.GanttTimeRange.StartTime">
            <summary>
            This member overrides <see cref="P:NickLee.Views.Gantt.TimeRange.StartTime">TimeRange.StartTime</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.GanttTimeRange.TimeMargin">
            <summary>
            Gets or sets the time margin that will be added after computing
            the time interval of the activities located in the Gantt model.
            </summary>
            <value>A <see cref="T:System.TimeSpan" /> structure. The default value is
            <see cref="F:System.TimeSpan.Zero" />.</value>
        </member>
        <member name="M:NickLee.Views.Gantt.ActivitiesTimeRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.ActivitiesTimeRange" /> class.
            </summary>
            <remarks>To connect this instance to a Gantt data model, use
            the <see cref="P:NickLee.Views.Gantt.GanttTimeRange.GanttModel" /> property.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.ActivitiesTimeRange.#ctor(NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.ActivitiesTimeRange" /> class connected
            to the specified <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> instance.
            </summary>
            <param name="model">A <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> instance to listen to.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.ActivitiesTimeRange.OnGanttModelChanged">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.GanttTimeRange.OnGanttModelChanged">GanttTimeRange.OnGanttModelChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.ActivitiesTimeRange.OnGanttModelChanging">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.GanttTimeRange.OnGanttModelChanging">GanttTimeRange.OnGanttModelChanging</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet">
            <summary>
            A component containing a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> and a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" />.
            </summary>
            <remarks>
            <p>This control contains a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> control and
            a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" /> control.</p>
            <p><img src="scrollschedulesheet.png" /></p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet.CreateGanttSheet">
            <summary>
            Creates the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> subcontrol used by this control.
            </summary>
            <returns>A new <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" /> instance.</returns>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet.ActivityLayoutStyleChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet.ActivityLayoutStyle" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet.BeforeMoveReservation">
            <summary>
            Event fired before a reservation is moved to another resource.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet.CanCopyReservationChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet.CanCopyReservation" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet.CanMoveReservationChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet.CanMoveReservation" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet.CopyReservationCursorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet.CopyReservationCursor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet.LayoutReservations">
            <summary>
            Event fired to allow the customization of the layout of reservations
            in a row.
            </summary>
            <remarks>This event is fired only if the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet.ActivityLayoutStyle" /> is
            set to <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle">User</see>.
            </remarks>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet.MoveReservationCursorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet.MoveReservationCursor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet.QueryReservationZOrder">
            <summary>
            Event fired to allow the specification of the z-Order of a reservation
            in a row.
            </summary>
            <remarks>The layout of activities in a row is controlled by the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet.ActivityLayoutStyle" />
            property. Activities will be sorted by their Start Time so that
            an activity starting earlier another activity will be drawn before. You
            can modify this behavior by specifying a z-Order for each reservation.
            </remarks>
            <example>
            <para lang="C#"> The following example shows how to make the reservation
            of type Maintenance drawn below all other reservations by setting a smaller
            z-order.
            </para>
            <code lang="C#">
            myScheduleSheet.QueryReservationZOrder += new QueryReservationZOrderEventHandler(GetZOrder);
            private void GetZOrder(object source, QueryReservationZOrderEventArgs e)
            {
            if (e.Reservation.Activity is Maintenance)
            e.ZOrder = 0;
            else
            e.ZOrder = 1;
            }
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet.RowLayoutStyle">
            <summary>
            Event that is fired to query the layout style that will be used to layout
            the reservation of a specified resource.
            </summary>
            <remarks>Handling this event allows to specify an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle" /> per
            row of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" />.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet.ActivityLayoutStyle">
            <summary>
            Gets or sets the style used to layout activities in a row of the Gantt sheet.
            </summary>
            <remarks>This property will change the style of layout for all
            the rows of the schedule sheet. You can also specify a layout style per
            row by handling the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet.RowLayoutStyle" /> event.</remarks>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle" /> values. The
            default value is <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle">Pretty</see>.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet.CanCopyReservation">
            <summary>
            Gets or sets a value indicating whether reservations
            can be copied onto other resources using the mouse pointer.
            </summary>
            <value>
            <see langword="true" /> if reservations can be copied onto other resources
            using the mouse; <see langword="false" /> otherwise.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet.CanMoveReservation">
            <summary>
            Gets or sets a value indicating whether reservations
            can have their assigned resource changed using the mouse pointer.
            </summary>
            <value>
            <see langword="true" /> if reservations can have their resource changed
            using the mouse; <see langword="false" /> otherwise.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet.CopyReservationCursor">
            <summary>
            Gets the cursor that is used when the user drags a reservation to copy it.
            </summary>
            <value>
            A <see cref="T:System.Windows.Forms.Cursor" /> that is used when the user drags a reservation to copy it.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet.GanttSheet">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" /> used to display the resource hierarchy
            in a Gantt model.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" /> control that displays the resource hierarchy
            in a Gantt model.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet.MoveReservationCursor">
            <summary>
            Gets the cursor that is used when the user drags a reservation to change its resource.
            </summary>
            <value>
            A <see cref="T:System.Windows.Forms.Cursor" /> that is used when the user drags a reservation to change its resource.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ScrollScheduleSheet.RowController">
            <summary>
            Gets or sets the row controller for the Schedule sheet.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.IResourceRowController" /> object that defines the
            data to display in the Schedule sheet. The default value is <see langword="null" />.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.IActivityRowController">
            <summary>
            A specialization of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.IGanttRowController" /> interface for
            activities.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.IActivityRowController.GetActivityAt(System.Int32)">
            <summary>
            When implemented by a class, retrieves the <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> at the specified index.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.IActivityRowController.GetCurrentActivity">
            <summary>
            When implemented by a class, retrieves the current activity.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.IActivityRowController.GetSelectedActivities">
            <summary>
            When implemented by a class, retrieves an array of the selected activities.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.DrawGanttSheetRowEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.DrawRow" /> event
            of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> class.
            </summary>
            <remarks>A <see cref="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.DrawRow" /> event is raised to draw
            the Gantt sheet rows of owner draw <strong>GanttSheet</strong> objects.
            It contains all the information needed for the user to paint the
            specified row, including the row index, the row bounding box,
            and the <see cref="T:System.Drawing.Graphics" /> object on which the drawing should
            be done.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows an event handler
            listening to the <see cref="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.DrawRow" /> event. The event handler draws
            selected rows using a specific font. Other rows are painted using the default
            painting algorithm.
            </para>
            <code lang="C#">
            private void OnDrawSheetRow(object sender, DrawGanttSheetRowEventArgs e) {
            if (!e.IsRowSelected)
            e.DrawRow();
            else {
            if (e.IsPaintingBackground)
            e.Graphics.FillRectangle(e.BackBrush, e.Bounds);
            else {
            Font font = new Font(e.GanttSheet.Font, FontStyle.Italic);
            e.DrawRow(e.Bounds, e.BackBrush, e.ForeBrush, font);
            font.Dispose();
            }
            }
            }
            </code>
            <code lang="Visual Basic">
            Private Sub OnDrawSheetRow(ByVal sender As Object, ByVal e As DrawGanttSheetRowEventArgs)
            If Not e.IsRowSelected Then
            e.DrawRow()
            Else
            If e.IsPaintingBackground Then
            e.Graphics.FillRectangle(e.BackBrush, e.Bounds)
            Else
            Dim font As New Font(e.GanttSheet.Font, FontStyle.Italic)
            e.DrawRow(e.Bounds, e.BackBrush, e.ForeBrush, font)
            font.Dispose()
            End If
            End If
            End Sub
            </code>
            </example>
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.DrawRow" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OwnerDraw" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DrawGanttSheetRowEventArgs.DrawRow">
            <summary>
            Draws the Gantt sheet row using the information provided in this instance.
            </summary>
            <remarks>Call this method to draw the Gantt sheet row if you want to keep
            the original drawing of the row, that is, as if the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OwnerDraw" />
            property was set to <see langword="false" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DrawGanttSheetRowEventArgs.DrawRow(System.Drawing.Rectangle,System.Drawing.Brush,System.Drawing.Brush,System.Drawing.Font)">
            <summary>
            Draws the Gantt sheet row with the specified parameters.
            </summary>
            <param name="bounds">The bounds of the Gantt sheet row being drawn.</param>
            <param name="backBrush">The background <see cref="T:System.Drawing.Brush" /> to
            draw the Gantt sheet row with.</param>
            <param name="foreBrush">The foreground <see cref="T:System.Drawing.Brush" /> to
            draw the Gantt sheet row with.</param>
            <param name="font">The <see cref="T:System.Drawing.Font" /> to use.</param>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DrawGanttSheetRowEventArgs.BackBrush">
            <summary>
            Gets the background brush used to paint the Gantt sheet row.
            </summary>
            <value>The background <see cref="T:System.Drawing.Brush" /> of the Gantt sheet row
            being draw.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DrawGanttSheetRowEventArgs.Bounds">
            <summary>
            Gets the bounds of the Gantt sheet row being drawn.
            </summary>
            <value>A <see cref="T:System.Drawing.Rectangle" /> structure that contains the bounds of
            the Gantt sheet row being drawn.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DrawGanttSheetRowEventArgs.Font">
            <summary>
            Gets the font used to paint the Gantt sheet row.
            </summary>
            <value>The <see cref="T:System.Drawing.Font" /> used to paint the
            Gantt sheet row.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DrawGanttSheetRowEventArgs.ForeBrush">
            <summary>
            Gets the foreground brush used to paint the Gantt sheet row.
            </summary>
            <value>The foreground <see cref="T:System.Drawing.Brush" /> of the Gantt sheet row
            being draws.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DrawGanttSheetRowEventArgs.GanttSheet">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> being drawn.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> being drawn.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DrawGanttSheetRowEventArgs.Graphics">
            <summary>
            Gets the graphics surface to draw the Gantt sheet row on.
            </summary>
            <value>
            The <see cref="T:System.Drawing.Graphics" /> surface to draw the Gantt sheet row on.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DrawGanttSheetRowEventArgs.IsPaintingBackground">
            <summary>
            Indicates whether the Gantt sheet row background is being painted.
            </summary>
            <value><see langword="true" /> if the Gantt sheet row background is being painted;
            <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DrawGanttSheetRowEventArgs.IsRightToLeft">
            <summary>
            Indicates whether the Gantt sheet row is being painted in right-to-left mode.
            </summary>
            <value><see langword="true" /> if the Gantt sheet row is being painted
            in right-to-left mode; <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DrawGanttSheetRowEventArgs.IsRowSelected">
            <summary>
            Indicates whether the row of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> being painted is selected or not.
            </summary>
            <value><see langword="true" /> if the row being painted is selected; otherwise
            <see langword="false" />.
            </value>&gt;
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DrawGanttSheetRowEventArgs.Row">
            <summary>
            Gets the zero-based index of the Gantt sheet row being drawn.
            </summary>
            <value>The zero-based index of the Gantt sheet row being drawn.</value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.DrawGanttSheetRowEventArgs.GanttSheet" />
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.Design.TimeGridCollectionEditor">
            <summary>
            The collection editor for the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> in a
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.TimeGridCollectionEditor.#ctor(System.Type)">
            <summary>
            Creates the collection editor.
            </summary>
            <param name="type">The collection type</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.TimeGridCollectionEditor.CreateCollectionItemType">
            <summary>
            The edited type is <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.TimeGridCollectionEditor.CreateNewItemTypes">
            <summary>
            Allows to create <see cref="T:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid" /> and
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.NonWorkingTimeGrid" /> instances.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.Design.ActivityBarStyleConverter">
            <summary>
            Provides a type converter to convert <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> objects
            to and from other representations.
            </summary>
            <remarks>This converter can only convert a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> object
            to an <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.ActivityBarStyleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)">TypeConverter.CanConvertTo</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.ActivityBarStyleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)">TypeConverter.ConvertTo</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.Design.ActivityBarStyleCollectionSerializer">
            <summary>
            A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> for the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.ActivityBarStyleCollectionSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
            <summary>
            Deserializes the specified serialized CodeDOM object into an object.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.ActivityBarStyleCollectionSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
            <summary>
            Serializes the specified object into a CodeDOM object.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.BeforeEditActivityEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.BeforeEditActivity" /> event of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />.
            </summary>
            <remarks>The <see cref="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.BeforeEditActivity" /> event occurs before the
            user modifies the time interval of an activity in the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />.
            A <strong>BeforeEditActivityEventArgs</strong> provides the <see cref="P:NickLee.Views.Gantt.Windows.Forms.BeforeEditActivityEventArgs.Cancel" /> property
            to indicate whether the modification should be canceled.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.BeforeEditActivityEventArgs.#ctor(NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.DateTimeInterval,NickLee.Views.Gantt.DateTimeInterval,NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle,NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.EditAction)">
            <summary>
            Creates and initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.BeforeEditActivityEventArgs" /> class.
            </summary>
            <param name="activity">The activity modified.</param>
            <param name="oldInterval">The old interval.</param>
            <param name="newInterval">The new interval.</param>
            <param name="style">The style being edited.</param>
            <param name="action">The type of modification.</param>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.BeforeEditActivityEventArgs._action">
            <summary>
            The type of action that is going to be performed.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.BeforeEditActivityEventArgs._activity">
            <summary>
            The activity modified.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.BeforeEditActivityEventArgs._cancel">
            <summary>
            Indicates if the modification is canceled.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.BeforeEditActivityEventArgs._newInterval">
            <summary>
            The new time interval of the activity.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.BeforeEditActivityEventArgs._oldInterval">
            <summary>
            The old time interval of the activity.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.BeforeEditActivityEventArgs._style">
            <summary>
            The style being modified.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.BeforeEditActivityEventArgs.Action">
            <summary>
            Gets the action being performed on the editied activity.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.EditAction" /> values.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.BeforeEditActivityEventArgs.Activity">
            <summary>
            Gets the activity that will be modified.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> that represents the activity that will be modified.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.BeforeEditActivityEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the modification of the activity
            should be canceled.
            </summary>
            <value>
            <see langword="true" /> if the modification should
            be canceled; <see langword="false" /> otherwise.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.BeforeEditActivityEventArgs.NewTimeInterval">
            <summary>
            Gets or sets the new time interval of the activity
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> that represents the new time interval that will be
            set on the activity.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.BeforeEditActivityEventArgs.OldTimeInterval">
            <summary>
            Gets the old time interval of the activity bar being edited.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> that represents the old time interval of the activity bar being edited.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.BeforeEditActivityEventArgs.Property">
            <summary>
            Gets the name of the property that is going to be modified.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the name of the property that will be
            modified.</value>
            <remarks>The value can be either <strong>StartTime</strong>, <strong>EndTime</strong> or <strong>TimeInterval</strong>.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.BeforeEditActivityEventArgs.Style">
            <summary>
            Gets the style that initiated the edition.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> reference.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Web.UI.ReservationChart">
            <summary>
            A Reservation chart is a chart that displays reservations.
            </summary>
            <remarks>
            <p>The reservation chart is made up of rows, each containing one single reservation.
            The left part of the chart displays information related to reservations.
            The right part of the chart shows a graphical representation of reservations.</p>
            <p><img src="reservationchart.png" /></p>
            <p>The <strong>ReservationChart</strong> control will display the information
            contained in a Gantt data model. You will set the Gantt data model of a <strong>ReservationChart</strong>
            using the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttModel" /> property.</p>
            </remarks>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationSheet" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationTable" />
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationChart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Web.UI.ScheduleChart" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationChart.Collapse(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Collapses the specified reservation.
            </summary>
            <param name="reservation">An <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> to collapse.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationChart.CollapseAll(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Collapses the specified reservation and all its children.
            </summary>
            <param name="reservation">An <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> to collapse.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationChart.Expand(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Expands the specified reservation.
            </summary>
            <param name="reservation">An <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> to expand.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationChart.ExpandAll(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Expands the specified reservation and all its children.
            </summary>
            <param name="reservation">An <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> to expand.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationChart.GetCurrentReservation">
            <summary>
            Returns the current reservation in the table.
            </summary>
            <returns>The current <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> in the table.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationChart.GetIDFromValue(System.Object)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.GetIDFromValue(System.Object)">HierarchyChart.GetIDFromValue</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationChart.GetReservationAt(System.Int32)">
            <summary>
            Gets the reservation displayed at the specified row index.
            </summary>
            <param name="rowIndex">The row index.</param>
            <returns>The <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> displayed at the specified row index.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationChart.GetRowHeight(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Gets the height of the specified reservation.
            </summary>
            <param name="reservation">The reservation.</param>
            <returns>The height of <paramref name="reservation" />.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="reservation" /> is not
            part of the gantt model.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationChart.GetSelectedReservations">
            <summary>
            Retrieves an array containing the selected reservations.
            </summary>
            <returns>An array containing the selected reservations.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationChart.GetValueFromID(System.String)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.GetValueFromID(System.String)">HierarchyChart.GetValueFromID</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationChart.IsExpanded(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Gets a value indicating whether the specified reservation is expanded.
            </summary>
            <param name="reservation">An <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> to test.</param>
            <returns>A value indicating whether the specified reservation is expanded.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationChart.IsRowVisible(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Gets a value indicating whether the specified reservation is visible.
            </summary>
            <param name="reservation">An <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> to test.</param>
            <returns>A value indicating whether the specified reservation is visible.</returns>
            <remarks>
            A reservation is said to be visible when all its ancestors are expanded.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationChart.MoveReservationUp(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Moves up the specified reservation.
            </summary>
            <param name="reservation">The reservation to move up.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationChart.MoveResourceDown(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Moves down the specified reservation.
            </summary>
            <param name="reservation">The reservation to move down.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationChart.RenderImageMapAreas(System.Web.UI.HtmlTextWriter)">
            <summary>
            Is called to render image map areas.
            </summary>
            <param name="writer">The writer in which to put the image map areas.</param>
            <remarks>The implementation of this method create image map areas to display
            tooltips for visible reservations.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.ActivityToolTip" />
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationChart.SetRowHeight(NickLee.Views.Gantt.Data.IReservation,System.Int32)">
            <summary>
            Sets the height of the specified reservation.
            </summary>
            <param name="reservation">The reservation.</param>
            <param name="height">The new height.</param>
            <exception cref="T:System.ArgumentException"><paramref name="reservation" /> is not
            part of the gantt model.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="height" /> is
            negative.</exception>
        </member>
        <member name="T:NickLee.Views.Gantt.Web.UI.ActivityTable">
            <summary>
            A specialization of the <see cref="T:NickLee.Views.Gantt.Web.UI.GanttTable" /> class for activities.
            </summary>
            <remarks>
            <p>The <see cref="T:NickLee.Views.Gantt.Web.UI.ActivityTable" /> is a
            hierarchical table where each row represents an activity
            and each column represents a property of the activity in the row.
            </p>
            <p>
            <img src="activitytable.png" /></p>
            By default the table contains six columns: a column that displays information on the
            activity as bitmaps (see <see cref="T:NickLee.Views.Gantt.Windows.Forms.InfoColumn" />), a second column that displays the
            name of the resource, columns for the duration, the start time and end time of the
            activity and a column that list the resources assigned to the activity. You can modify the columns of the table
            using the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.Columns" /> property.<p />
            In order to display scheduling information, the table must be connected
            to a Gantt data model (<see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />) through the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttTable.GanttModel" />
            property.
            </remarks>
            <seealso cref="T:NickLee.Views.Gantt.Web.UI.ResourceTable" />
            <seealso cref="T:NickLee.Views.Gantt.Web.UI.ReservationTable" />
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ActivityTable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Web.UI.ActivityTable" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ActivityTable.GetActivityAt(System.Int32)">
            <summary>
            Retrieves the <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> at the specified index.
            </summary>
            <param name="rowIndex">The zero-based index of the activity to
            retrieve.</param>
            <returns>The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> at the specified index.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ActivityTable.GetCurrentActivity">
            <summary>
            Returns the current activity in the table.
            </summary>
            <returns>The current <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> in the table.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ActivityTable.GetIDFromValue(System.Object)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Gantt.Web.UI.GanttTable.GetIDFromValue(System.Object)">GanttTable.GetIDFromValue</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ActivityTable.GetSelectedActivities">
            <summary>
            Returns an array of the selected activities in the table.
            </summary>
            <returns>An array of <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> objects.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ActivityTable.GetValueFromID(System.String)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Gantt.Web.UI.GanttTable.GetValueFromID(System.String)">GanttTable.GetValueFromID</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ActivityTable.NewActivity(System.String,System.String,NickLee.Views.Gantt.DateTimeInterval)">
            <summary>
            Creates a new activity as a sibling of the current row.
            </summary>
            <param name="id">The unique identifier of the new activity.</param>
            <param name="name">The name of the new activity.</param>
            <param name="interval">The initial time interval for the activity.</param>
            <returns>The zero-based index of the row containing the new activity.</returns>
            <remarks>If <paramref name="id" /> is <see langword="null" />, a unique ID provided by
            the model will be used.
            If <paramref name="name" /> is <see langword="null" />, the table is
            automatically placed in editing mode to edit the activity name.</remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.TimeUtil">
            <summary>
            Utility class to handle <see cref="T:System.DateTime" /> structure.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.TimeUtil.AddTimeUnit(System.DateTime,NickLee.Views.Gantt.TimeUnit,System.Int32)">
            <summary>
            Adds the specified amount of time to the given <see cref="T:System.DateTime" /> structure.
            </summary>
            <param name="time">A <see cref="T:System.DateTime" /> structure.</param>
            <param name="unit">One of the <see cref="T:NickLee.Views.Gantt.TimeUnit" /> values.</param>
            <param name="count">The number of time units to add.</param>
            <returns>A new <see cref="T:System.DateTime" /> structure.</returns>
            <remarks>No exception is thrown by this method. If an exception occurs when computing the date,
            the returned value is <see cref="F:System.DateTime.MinValue" /> if <paramref name="count" /> is negative, and
            <see cref="F:System.DateTime.MaxValue" /> if <paramref name="count" /> is positive or null.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.TimeUtil.Max(System.DateTime,System.DateTime)">
            <summary>
            Computes the maximum of two dates.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.TimeUtil.Min(System.DateTime,System.DateTime)">
            <summary>
            Computes the minimum of two dates.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.DefaultTimeIterator">
            <summary>
            An implementation of the <see cref="T:NickLee.Views.Gantt.ITimeIterator" /> interface that
            uses a <see cref="T:NickLee.Views.Gantt.TimeUnit" /> to iterate on dates.
            </summary>
            <remarks>
            <p>This implementation has two modes: It uses either a <see cref="T:NickLee.Views.Gantt.TimeUnit" /> or
            a <see cref="T:System.TimeSpan" /> to iterate on dates. Use the right constructor to choose between the
            two modes.</p>
            <p>
            For example, if the time unit is <see cref="T:NickLee.Views.Gantt.TimeUnit">Day</see>, the iterator
            will iterate on days: calling <see cref="M:NickLee.Views.Gantt.DefaultTimeIterator.GetPreviousTime(System.DateTime)" /> with <strong>1/1/2003 12:00 PM</strong>
            will return <strong>1/1/2003</strong>. Calling <see cref="M:NickLee.Views.Gantt.DefaultTimeIterator.GetNextTime(System.DateTime)" /> with <strong>1/1/2003 12:00 PM</strong>
            will return <strong>1/2/2003</strong>.
            </p>
            </remarks>
            <seealso cref="T:NickLee.Views.Gantt.ITimeIterator" />
        </member>
        <member name="M:NickLee.Views.Gantt.DefaultTimeIterator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.DefaultTimeIterator" /> class.
            </summary>
            <remarks>The default time unit is <see cref="T:NickLee.Views.Gantt.TimeUnit">TimeUnit.Day</see>.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.DefaultTimeIterator.#ctor(NickLee.Views.Gantt.TimeUnit,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.DefaultTimeIterator" /> class
            using the specified parameters.
            </summary>
            <param name="timeUnit">One of the <see cref="T:NickLee.Views.Gantt.TimeUnit" /> values.</param>
            <param name="steps">The number of <see cref="T:NickLee.Views.Gantt.TimeUnit" /> steps between two
            consecutive iterations.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="steps" /> is less than
            <strong>1</strong>.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.DefaultTimeIterator.#ctor(System.TimeSpan,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.DefaultTimeIterator" /> class
            using the specified parameters.
            </summary>
            <param name="duration">The duration between two dates.</param>
            <param name="steps">The number of steps between two consecutive iterations.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="steps" /> is less than
            <strong>1</strong>.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.DefaultTimeIterator.Dispose">
            <summary>
            Implements the <see cref="M:System.IDisposable.Dispose">IDisposable.Dispose</see> method.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.DefaultTimeIterator.GetNextTime(System.DateTime)">
            <summary>
            Computes the next date after the specified date.
            </summary>
            <returns>A <see cref="T:System.DateTime" /> structure.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.DefaultTimeIterator.GetPreviousTime(System.DateTime)">
            <summary>
            Computes the previous date before the specified date.
            </summary>
            <returns>A <see cref="T:System.DateTime" /> structure.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.DefaultTimeIterator.OnTimeIteratorChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.DefaultTimeIterator.TimeIteratorChanged" /> event.
            </summary>
            <param name="e">A <see cref="T:System.EventArgs" /> that contains the
            event data.</param>
            <remarks><p>Called when the iterator is changed.</p></remarks>
        </member>
        <member name="E:NickLee.Views.Gantt.DefaultTimeIterator.TimeIteratorChanged">
            <summary>
            Occurs when the time iterator has changed.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.DefaultTimeIterator.ReferenceDate">
            <summary>
            Gets or sets the date used as a reference to compute date intervals.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure. The default value is <b>1/1/2001</b>.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.DefaultTimeIterator.Steps">
            <summary>
            Gets or sets the number of <see cref="P:NickLee.Views.Gantt.DefaultTimeIterator.TimeUnit" /> steps between two
            consecutive iterations.
            </summary>
            <value>An integer value that represents the number of <see cref="P:NickLee.Views.Gantt.DefaultTimeIterator.TimeUnit" /> steps between two
            consecutive iterations. The default value is <strong>1</strong>.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The property value is less than
            <strong>1</strong>.</exception>
        </member>
        <member name="P:NickLee.Views.Gantt.DefaultTimeIterator.TimeLine">
            <summary>
            Gets or sets the <see cref="T:NickLee.Views.Gantt.ITimeLine" /> object connected to
            this iterator.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.ITimeLine" /> reference. The default value is <see langword="null" />.
            </value>
            <remarks>This property is used by the <see cref="M:NickLee.Views.Gantt.DefaultTimeIterator.GetNextTime(System.DateTime)" /> and <see cref="M:NickLee.Views.Gantt.DefaultTimeIterator.GetPreviousTime(System.DateTime)" />
            methods to skip dates that might not be part of the time line.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.DefaultTimeIterator.TimeUnit">
            <summary>
            Gets or sets the time unit for the time iterator.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.TimeUnit" /> values.
            The default value is <see cref="T:NickLee.Views.Gantt.TimeUnit">TimeUnit.Day</see>.
            </value>
            <remarks>When this property is set to <see cref="T:NickLee.Views.Gantt.TimeUnit">TimeUnit.None</see>, the <see cref="P:NickLee.Views.Gantt.DefaultTimeIterator.UnitDuration" />
            is used to iterate over dates.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.DefaultTimeIterator.UnitDuration" />
        </member>
        <member name="P:NickLee.Views.Gantt.DefaultTimeIterator.UnitDuration">
            <summary>
            Gets or sets the duration between two dates.
            </summary>
            <value>A <see cref="T:System.TimeSpan" /> structure. The default value corresponds to the
            duration of a day.
            </value>
            <exception cref="T:System.ArgumentOutOfRangeException">The duration is negative or null.</exception>
            <remarks>This property is used only if the <see cref="P:NickLee.Views.Gantt.DefaultTimeIterator.TimeUnit" /> property is
            set to <see cref="T:NickLee.Views.Gantt.TimeUnit">TimeUnit.None</see>.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.DefaultTimeIterator.TimeUnit" />
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttModelAdapterEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:NickLee.Views.Gantt.Data.GanttModelAdapter.RowFilled" /> and
            <see cref="E:NickLee.Views.Gantt.Data.GanttModelAdapter.RowUpdated" /> events of a <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Gantt.Data.IGanttModel.ConstraintsChanging" /> and
            <see cref="E:NickLee.Views.Gantt.Data.IGanttModel.ConstraintsChanged" /> events of an <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />.
            </summary>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to handle the
            <strong>IGanttModel.ConstraintsChanged</strong> event.
            </para>
            <code lang="C#">
            SimpleGanttModel model = new SimpleGanttModel();
            model.ConstraintsChanged += new ConstraintsChangeEventHandler(ConstraintsChanged);

            private void ConstraintsChanged(object sender, ConstraintsChangeEventArgs args) {
            switch(args.Action) {
            case ConstraintsAction.Add:
            Console.WriteLine("Constraints added.");
            break;
            case ConstraintsAction.Delete:
            Console.WriteLine("Constraints deleted.");
            break;
            case ConstraintsAction.PropertyChange:
            Console.WriteLine("Constraints Changed.");
            break;
            case ConstraintsAction.Reset:
            Console.WriteLine("Constraints Reset.");
            break;
            }
            }
            </code>
            <code lang="Visual Basic">
            Dim WithEvents model As New SimpleGanttModel

            Private Sub ConstraintsChanged(ByVal sender As Object, ByVal args As ConstraintsChangeEventArgs) Handles model.ConstraintsChanged
            Select Case args.Action
            Case ConstraintsAction.Add
            Console.WriteLine("Constraints added.")
            Exit Sub
            Case ConstraintsAction.Delete
            Console.WriteLine("Constraints deleted.")
            Exit Sub
            Case ConstraintsAction.PropertyChange
            Console.WriteLine("Constraints Changed.")
            Exit Sub
            Case ConstraintsAction.Reset
            Console.WriteLine("Constraints Reset.")
            Exit Sub
            End Select
            End Sub
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs" /> class, notifying
            that all the constraints of the Gantt model have been changed.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs.#ctor(NickLee.Views.Gantt.Data.IConstraint,NickLee.Views.Gantt.Data.ConstraintsAction)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs" /> class.
            </summary>
            <param name="constraint">The <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> on which the action was taken.</param>
            <param name="action">The <see cref="T:NickLee.Views.Gantt.Data.ConstraintsAction" /> that causes the event.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs.#ctor(NickLee.Views.Gantt.Data.IConstraint[],NickLee.Views.Gantt.Data.ConstraintsAction)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs" /> class.
            </summary>
            <param name="constraints">The array of <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> objects on which the
            action was taken.</param>
            <param name="action">The <see cref="T:NickLee.Views.Gantt.Data.ConstraintsAction" /> that causes the event.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs.#ctor(NickLee.Views.Gantt.Data.IConstraint,System.String,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs" /> class, notifying
            that the specified constraint had one of its property changed.
            </summary>
            <param name="constraint">The constraint that has been changed.</param>
            <param name="propertyName">The property that has been changed, or <see langword="null" /> to
            specify that all the properties have been changed.</param>
            <param name="value">The new value of the property.</param>
            <param name="oldValue">The old value of the property.</param>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs.Action">
            <summary>
            Gets the action that has occurred on the constraints of the Gantt model.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Data.ConstraintsAction" /> values.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the operation should be canceled.
            </summary>
            <value><see langword="true" /> if the operation should be canceled;
            <see langword="false" /> otherwise. The default value is <see langword="false" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs.Constraint">
            <summary>
            Gets the constraint upon which an action has occurred.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> instance, or
            <see langword="null" /> if the action concerns every
            constraints in the Gantt model.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs.Constraints">
            <summary>
            Gets the constraints upon which an action has occurred.
            </summary>
            <value>An array of <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> objects.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs.OldValue">
            <summary>
            Gets the old value of the property that has changed.
            </summary>
            <value>An <see cref="T:System.Object" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs.Property">
            <summary>
            Gets the property that has changed.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the property that has
            changed on the <see cref="T:NickLee.Views.Gantt.Data.IConstraint" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs.Synthetic">
            <summary>
            Gets or sets a value indicating whether the operation is synthetic.
            </summary>
            <value><see langword="true" /> if the operation is synthetic;
            <see langword="false" /> otherwise. The default value is <see langword="false" />.</value>
            <remarks>A synthetic event is not recorded by the <see cref="T:NickLee.Views.Gantt.Data.GanttModelUndoManager" />.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs.Value">
            <summary>
            Gets or sets the new value of the property that has changed.
            </summary>
            <value>An <see cref="T:System.Object" /> instance.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.TimeRangeGrid">
            <summary>
            Defines a grid that fills a time interval.
            </summary>
            <remarks><p>You can add grid to a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" /> component using
            the <strong>TimeGrids</strong> property.</p>
            <p>Use the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeRangeGrid.TimeRange" /> property to change the time range of the grid.
            </p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to add grids to an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" />.
            </para>
            <code lang="C#">
            ActivitySheet sheet = new ActivitySheet();
            // Delete default time grids
            sheet.TimeGrids.Clear();
            // Add a new grid that draws ticks each hour
            TimeGrid grid = new DefaultTimeGrid();
            grid.TimeUnit = TimeUnit.Hour;
            sheet.TimeGrids.Add(grid);
            </code>
            <code lang="Visual Basic">
            Dim sheet As New ActivitySheet
            ' Delete default time grids
            sheet.TimeGrids.Clear()
            ' Add a new grid that draws ticks each hour
            Dim grid as New DefaultTimeGrid
            grid.TimeUnit = TimeUnit.Hour
            sheet.TimeGrids.Add(grid)
            </code>
            </example>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.WorkingTimesGrid" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeRangeGrid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeRangeGrid" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeRangeGrid.#ctor(NickLee.Views.Gantt.DateTimeInterval)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeRangeGrid" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeRangeGrid.#ctor(NickLee.Views.Gantt.ITimeRange)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeRangeGrid" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeRangeGrid.Paint(System.Drawing.Graphics,System.Drawing.RectangleF)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.TimeGrid.Paint(System.Drawing.Graphics,System.Drawing.RectangleF)">TimeGrid.Paint</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeRangeGrid.BackColor">
            <summary>
            Gets or sets the background color of the grid.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the background color of the grid.
            </value>
            <remarks>This property is used only if the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeRangeGrid.UseHatch" /> property is <see langword="true" />.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeRangeGrid.EndTime">
            <summary>
            Gets or sets the end time of the grid time range.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeRangeGrid.ForeColor">
            <summary>
            Gets or sets the foreground color of the grid.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the foreground color of
            the grid.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeRangeGrid.HatchStyle">
            <summary>
            Gets or sets the style of hatch for grid.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> that is used to paint the grid when
            the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeRangeGrid.UseHatch" /> property is set to <see langword="true" />.
            The default value is <strong>Percent25</strong>.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeRangeGrid.PaintInside">
            <summary>
            Gets or sets a value indicating whether the grid should be painted inside or
            outside the grid time range.
            </summary>
            <value><see langword="true" /> if the grid background is painted inside the time range,
            <see langword="false" /> otherwise.
            The default value is <see langword="true" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeRangeGrid.StartTime">
            <summary>
            Gets or sets the start time of the grid time range.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeRangeGrid.TimeRange">
            <summary>
            Gets or sets the time range of the grid.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.ITimeRange" /> reference.</value>
            <remarks>The grid will be painted inside or outside the selected time range
            depending on the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeRangeGrid.PaintInside" /> property value.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeRangeGrid.UseHatch">
            <summary>
            Gets or sets a value indicating whether the hatch brush will be used to fill
            the grid background.
            </summary>
            <value><see langword="true" /> if the grid background is hatched,
            <see langword="false" /> otherwise.
            The default value is <see langword="true" />.
            </value>
            <remarks>When the property returns <see langword="true" /> the
            value of the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeRangeGrid.HatchStyle" /> property is used to fill the
            grid background.</remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.RowLayoutStyleEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.RowLayoutStyle" /> event of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" />.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.RowLayoutStyleEventArgs.ActivityLayoutStyle">
            <summary>
            Gets or sets the style used to layout activities for the specified resource.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle" /> values.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.RowLayoutStyleEventArgs.Resource">
            <summary>
            Gets the resource for which we query the layout style.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> for whiwh we query
            the layout style.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.Design.WorkCalendarDesigner.Verbs">
            <summary>
            This member overrides <see cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs">ComponentDesigner.Verbs</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.Design.GanttSheetDesigner">
            <summary>
            Defines a designer for the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.GanttSheetDesigner.#ctor">
            <summary>
            Creates and initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.Design.GanttSheetDesigner" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.GanttSheetDesigner.PostFilterProperties(System.Collections.IDictionary)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)">ComponentDesigner.PostFilterProperties</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.Design.GanttSheetDesigner.AssociatedComponents">
            <summary>
            This member overrides <see cref="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents">ComponentDesigner.AssociatedComponents</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.Design.GanttSheetDesigner.Verbs">
            <summary>
            This member overrides <see cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs">ComponentDesigner.Verbs</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection">
            <summary>
            Represents a collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> objects.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection.Add(NickLee.Views.Gantt.Windows.Forms.DateIndicator)">
            <summary>
            Adds a <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> with the specified value to the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection" />.
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> to add.</param>
            <returns>
            The index at which the new element was inserted.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection.Contains(NickLee.Views.Gantt.Windows.Forms.DateIndicator)">
            <summary>
            Gets a value indicating whether the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection" /> contains the specified <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" />.
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> to locate.</param>
            <returns>
            <see langword="true" /> if the <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> is contained in the collection;
            <see langword="false" /> otherwise.
            </returns>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection.IndexOf(NickLee.Views.Gantt.Windows.Forms.DateIndicator)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection.CopyTo(NickLee.Views.Gantt.Windows.Forms.DateIndicator[],System.Int32)">
            <summary>
            Copies the <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection" /> values to a one-dimensional <see cref="T:System.Array" /> instance at the
            specified index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection" />.</param>
            <param name="index">The index in <paramref name="array" /> where copying begins.</param>
            <exception cref="T:System.ArgumentException"><paramref name="array" /> is multidimensional. -or- The number of elements in the <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection" /> is greater than the available space between <paramref name="arrayIndex" /> and the end of <paramref name="array" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />. </exception>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index" /> is less than <paramref name="array" /> lowbound. </exception>
            <seealso cref="T:System.Array" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection.IndexOf(NickLee.Views.Gantt.Windows.Forms.DateIndicator)">
            <summary>
            Returns the index of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> in
            the <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection" />.
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> to locate.</param>
            <returns>
            The index of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> of <paramref name="value" /> in the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection" />, if found; <strong>-1</strong> otherwise.
            </returns>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection.Contains(NickLee.Views.Gantt.Windows.Forms.DateIndicator)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection.Insert(System.Int32,NickLee.Views.Gantt.Windows.Forms.DateIndicator)">
            <summary>
            Inserts a <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> into the <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection" /> at the specified index.
            </summary>
            <param name="index">The zero-based index where <paramref name="value" /> should be inserted.</param>
            <param name=" value">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> to insert.</param>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection.Add(NickLee.Views.Gantt.Windows.Forms.DateIndicator)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection.OnClear">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnClear">CollectionBase.OnClear</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">CollectionBase.OnInsert</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection.OnRemove(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">CollectionBase.OnRemoveComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">CollectionBase.OnSetComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection.Remove(NickLee.Views.Gantt.Windows.Forms.DateIndicator)">
            <summary>
            Removes a specific <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> from the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection" />.
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> to remove from the <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection" /> .</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is not found in the collection. </exception>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> at the specified index in the collection.
            </summary>
            <param name="index">The zero-based index of the entry to locate in the collection.</param>
            <value>
            The entry at the specified index of the collection.
            </value>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index" /> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator">
            <summary>
            Represents a vertical line that indicates a particular date in a <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />.
            </summary>
            <remarks>
            A <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> can display several date indicators. To add a date indicator in
            a <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> use the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.DateIndicators" /> property.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">
            The following example adds a <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> in a <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />.
            </para>
            <code lang="C#">
            public void AddDateIndicator(GanttSheet sheet) {
            DateIndicator dateIndicator = new DateIndicator();
            dateIndicator.Time = DateTime.Now;
            sheet.DateIndicators.Add(dateIndicator);
            }
            </code>
            <code lang="Visual Basic">
            Sub AddDateIndicator(ByVal sheet As GanttSheet)
            Dim dateIndicator As DateIndicator = New DateIndicator
            dateIndicator.Time = DateTime.Now
            sheet.DateIndicators.Add(dateIndicator)
            End Sub
            </code>
            </example>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.CurrentDateIndicator" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DateIndicator.#ctor">
            <summary>
            Creates and initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DateIndicator.Invalidate">
            <summary>
            Invalidates the area occupied by the indicator.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DateIndicator.Paint(System.Drawing.Graphics,System.Drawing.RectangleF)">
            <summary>
            Paints the time control object.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics" /> object to paint to.</param>
            <param name="rect">A <see cref="T:System.Drawing.RectangleF" /> object that defines the area where
            the indicator should be drawn.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DateIndicator.SetTimeControl(NickLee.Views.Gantt.Windows.Forms.TimeControl)">
            <summary>
            Invoked when the indicator is associated with or disassociated from a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" />.
            </summary>
            <param name="tc">A <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" /> object when the indicator is
            attached to a new <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" /> or <see langword="null" /> when the indicator is
            detached from a time control.</param>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DateIndicator.Color">
            <summary>
            Gets or sets the color of the indicator.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the color of the indicator.
            The default value is <see cref="P:System.Drawing.SystemColors.WindowText">SystemColors.WindowText</see>.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DateIndicator.DashStyle">
            <summary>
            Gets or sets the dash style used to display the indicator.
            </summary>
            <value>A <see cref="T:System.Drawing.Drawing2D.DashStyle" /> object used to draw the indicator line.
            The default value is <strong>Dot</strong>.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DateIndicator.Time">
            <summary>
            Gets or sets the date displayed by this indicator.
            </summary>
            <value>A <see cref="T:System.DateTime" /> object that represents the date that this indicator displays.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DateIndicator.TimeControl">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" /> object where this indicator is displayed.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" /> object where this
            indicator is displayed or <see langword="null" /> if this indicator is not attached to
            any time control object.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Web.UI.GanttChart">
            <summary>
            A Gantt chart is a chart that displays activities.
            </summary>
            <remarks>
            <p>The <see cref="T:NickLee.Views.Gantt.Web.UI.GanttChart" /> is made up of rows,
            each containing one single activity. The left part of the Gantt chart displays
            activities as a tree structure and shows related information, such as start and end time.
            The right part of the chart displays a graphical representation of the duration
            of activities over time.</p>
            <p><img src="ganttchart.png" /></p>
            <p>The <strong>GanttChart</strong> control will display the information
            contained in a Gantt data model. You will set the data model of a <strong>GanttChart</strong>
            using the <see cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.GanttModel" /> property.</p>
            </remarks>
            <seealso cref="T:NickLee.Views.Gantt.Web.UI.GanttTable" />
            <seealso cref="T:NickLee.Views.Gantt.Web.UI.GanttSheet" />
            <seealso cref="T:NickLee.Views.Gantt.Web.UI.TimeScale" />
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttChart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Web.UI.GanttChart" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttChart.Collapse(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Collapses the specified activity.
            </summary>
            <param name="activity">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to collapse.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttChart.CollapseAll(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Collapses the specified activity and all its children.
            </summary>
            <param name="activity">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to collapse.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttChart.Expand(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Expands the specified activity.
            </summary>
            <param name="activity">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to expand.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttChart.ExpandAll(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Expands the specified activity and all its children.
            </summary>
            <param name="activity">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to expand.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttChart.GetActivityAt(System.Int32)">
            <summary>
            Retrieves the activity of the specified index.
            </summary>
            <param name="rowIndex">The zero-based index of the activity to retrieve.</param>
            <returns>The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> located at the specified index.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttChart.GetCurrentActivity">
            <summary>
            Returns the current activity in the table.
            </summary>
            <returns>The current <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> in the table.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttChart.GetIDFromValue(System.Object)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.GetIDFromValue(System.Object)">HierarchyChart.GetIDFromValue</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttChart.GetRowHeight(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Gets the height of the specified activity.
            </summary>
            <param name="activity">The activity.</param>
            <returns>The height of <paramref name="activity" />.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="activity" /> is not
            part of the Gantt model.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttChart.GetSelectedActivities">
            <summary>
            Retrieves an array containing the selected activities.
            </summary>
            <returns>An array containing the selected activities.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttChart.GetValueFromID(System.String)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Gantt.Web.UI.HierarchyChart.GetValueFromID(System.String)">HierarchyChart.GetValueFromID</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttChart.IndentActivity(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Indents the specified activity.
            </summary>
            <param name="activity">The activity to indent.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttChart.IsExpanded(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Gets a value indicating whether the specified activity is expanded.
            </summary>
            <param name="activity">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to test.</param>
            <returns>A value indicating whether the specified activity is expanded.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttChart.IsRowVisible(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Gets a value indicating whether the specified activity is visible.
            </summary>
            <param name="activity">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to test.</param>
            <returns>A value indicating whether the specified activity is visible.</returns>
            <remarks>
            An activity is said to be visible when all its ancestors are expanded.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttChart.MoveActivityDown(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Moves down the specified activity.
            </summary>
            <param name="activity">The activity to move down.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttChart.MoveActivityUp(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Moves up the specified activity.
            </summary>
            <param name="activity">The activity to move up.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttChart.NewActivity(System.String,System.String,NickLee.Views.Gantt.DateTimeInterval)">
            <summary>
            Creates a new activity as a sibling of the current row.
            </summary>
            <param name="id">The unique identifier of the new activity.</param>
            <param name="name">The name of the new activity.</param>
            <param name="interval">The initial time interval for the activity.</param>
            <returns>The zero-based index of the row containing the new activity.</returns>
            <remarks>If <paramref name="id" /> is <see langword="null" />, a unique ID provided by
            the model will be used.
            If <paramref name="name" /> is <see langword="null" />, the table is
            automatically placed in editing mode to edit the activity name.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttChart.OutdentActivity(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Outdents the specified activity.
            </summary>
            <param name="activity">The activity to outdent.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttChart.RenderImageMapAreas(System.Web.UI.HtmlTextWriter)">
            <summary>
            Is called to render image map areas.
            </summary>
            <param name="writer">The writer in which to put the image map areas.</param>
            <remarks>The implementation of this method creates image map areas to display
            tooltips for visible activities.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.HierarchyChart.ActivityToolTip" />
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.GanttChart.SetRowHeight(NickLee.Views.Gantt.Data.IActivity,System.Int32)">
            <summary>
            Sets the height of the specified activity.
            </summary>
            <param name="activity">The activity.</param>
            <param name="height">The new height.</param>
            <exception cref="T:System.ArgumentException"><paramref name="activity" /> is not
            part of the Gantt model.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="height" /> is
            negative.</exception>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.GanttChart.DrawConstraintLink">
            <summary>
            Occurs when the activity sheet draws constraint links in owner draw mode.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttChart.ConstraintsOwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows an event handler
            listening to the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.DrawConstraintLink" /> event. The event handler draws
            constraint links using a specific pen that depends on the constraint.
            </para>
            <code lang="C#">
            private void OnDrawConstraintLink(object sender, DrawConstraintLinkEventArgs e) {
            Pen pen = ComputePen(e.Constraint);
            e.DrawConstraintLink(pen, e.Brush);
            }
            </code>
            <code lang="Visual Basic">
            Private Sub OnDrawSheetRow(ByVal sender As Object, ByVal e As DrawConstraintLinkEventArgs)
            Dim pen as Pen = ComputePen(e.Constraint)
            e.DrawConstraintLink(pen, e.Brush)
            End Sub
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.GanttChart.HitTestConstraintLink">
            <summary>
            Occurs when the activity sheet does hit testing on constraint links in owner draw mode.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttChart.ConstraintsOwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttChart.ConstraintLinkStyle">
            <summary>
            Gets or sets the style of constraint links between activities.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ConstraintLinkStyle" /> values. The default
            is <strong>Direct</strong>.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.GanttChart.ConstraintsColor" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttChart.ConstraintsColor">
            <summary>
            Gets or sets the color of constraints links.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> used to draw the constraints links.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.GanttChart.ConstraintsOwnerDraw">
            <summary>
            Gets or sets a value indicating whether the code that you
            provide draws the constraint links or not.
            </summary>
            <value>
            <see langword="true" /> if constraint links are to be drawn using custom user
            code; <see langword="false" /> otherwise.
            </value>
            <remarks>
            <p>When the <strong>ConstraintsOwnerDraw</strong> property is set to <see langword="true" />,
            you need to handle the drawing and hit testing of constraint links.
            Use the <see cref="E:NickLee.Views.Gantt.Web.UI.GanttChart.DrawConstraintLink" /> event to handle the drawing of
            constraint links.
            Use the <see cref="E:NickLee.Views.Gantt.Web.UI.GanttChart.HitTestConstraintLink" /> event to handle the hit testing of
            constraint links.
            </p>
            <p>When the <strong>ConstraintsOwnerDraw</strong> property is set to <see langword="false" />,
            the <strong>DrawConstraintLink</strong> and <strong>HitTestConstraintLink</strong> events are not raised.</p>
            </remarks>
            <seealso cref="E:NickLee.Views.Gantt.Web.UI.GanttChart.DrawConstraintLink" />
            <seealso cref="E:NickLee.Views.Gantt.Web.UI.GanttChart.HitTestConstraintLink" />
        </member>
        <member name="T:NickLee.Views.Gantt.Data.ReservationsChangeEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:NickLee.Views.Gantt.Data.IGanttModel.ReservationsChanging" /> and
            <see cref="E:NickLee.Views.Gantt.Data.IGanttModel.ReservationsChanged" /> events of a <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.IActivityCollection">
            <summary>
            Represents a collection of <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> objects.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IActivityCollection.Add(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            When implemented by a class, adds the specified activity at the end of the collection.
            </summary>
            <param name="activity">The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to add.</param>
            <returns>The zero-based index of the position of the inserted activity.</returns>
            <remarks>The Gantt model must be notified of the change in the collection using the
            <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IActivityCollection.AddRange(NickLee.Views.Gantt.Data.IActivity[])">
            <summary>
            When implemented by a class, adds the specified activities at the end of the collection.
            </summary>
            <param name="activities">An array of <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> objects.</param>
            <remarks>The Gantt model must be notified of the change in the collection using the
            <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IActivityCollection.Clear">
            <summary>
            When implemented by a class, removes all activities from the collection.
            </summary>
            <remarks>The Gantt model must be notified of the change in the collection using the
            <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IActivityCollection.Contains(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            When implemented by a class, determines if the specified <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> is a member of the collection.
            </summary>
            <param name="activity">The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to locate in the collection.</param>
            <returns><see langword="true" /> if the <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> is a member of the collection;
            <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IActivityCollection.IndexOf(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            When implemented by a class, retrieves the index of a specific activity in the collection.
            </summary>
            <param name="activity">The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to locate in the collection.</param>
            <returns>The zero-based index of the activity found in the collection;
            <strong>-1</strong> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IActivityCollection.Insert(System.Int32,NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            When implemented by a class, inserts an activity into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="activity" /> should be inserted.</param>
            <param name="activity">The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to insert.</param>
            <remarks>The Gantt model must be notified of the change in the collection using the
            <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IActivityCollection.InsertRange(System.Int32,NickLee.Views.Gantt.Data.IActivity[])">
            <summary>
            When implemented by a class, inserts activities into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index where the new activities should be inserted.</param>
            <param name="activities">An array of the activities to insert.</param>
            <remarks>The Gantt model must be notified of the change in the collection using the
            <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IActivityCollection.Remove(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            When implemented by a class, removes the specified activity from the collection.
            </summary>
            <param name="activity">The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to remove.</param>
            <remarks>The Gantt model must be notified of the change in the collection using the
            <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.IActivityCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            When implemented by a class, removes a range of activities from the collection.
            </summary>
            <param name="index">The zero-based starting index of the range of activities to remove.</param>
            <param name="count">The number of activities to remove.</param>
            <remarks>The Gantt model must be notified of the change in the collection using the
            <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> event class.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IActivityCollection.Activity">
            <summary>
            When implemented by a class, gets the activity that owns the collection.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> instance, or <see langword="null" />
            if the collection is the root collection in the Gantt model.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IActivityCollection.GanttModel">
            <summary>
            When implemented by a class, gets the Gantt model to which this collection belongs.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.IActivityCollection.Item(System.Int32)">
            <summary>
            When implemented by a class, gets the <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> at the specified indexed location in the collection.
            </summary>
            <param name="index">The zero-based index of the activity to get.</param>
            <value>The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> at the specified index.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttModelAdapterEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Gantt.Data.GanttModelAdapter.RowFilled" /> and
            <see cref="E:NickLee.Views.Gantt.Data.GanttModelAdapter.RowUpdated" /> events of a <see cref="T:NickLee.Views.Gantt.Data.GanttModelAdapter" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelAdapterEventArgs.#ctor(System.Data.DataRow,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.GanttModelAdapterEventArgs" /> class.
            </summary>
            <param name="row">A <see cref="P:NickLee.Views.Gantt.Data.GanttModelAdapterEventArgs.DataRow" />.</param>
            <param name="entity">An object that represents a Gantt entity. It can be
            an <see cref="T:NickLee.Views.Gantt.Data.IActivity" />, an <see cref="T:NickLee.Views.Gantt.Data.IResource" />,
            an <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> or an <see cref="T:NickLee.Views.Gantt.Data.IReservation" />.</param>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttModelAdapterEventArgs.DataRow">
            <summary>
            Gets the data row of the event.
            </summary>
            <value>A <see cref="T:System.Data.DataRow" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttModelAdapterEventArgs.Entity">
            <summary>
            Gets the Gantt entity of the event.
            </summary>
            <value>An object that represents a Gantt entity. It can be an <see cref="T:NickLee.Views.Gantt.Data.IActivity" />,
            an <see cref="T:NickLee.Views.Gantt.Data.IResource" />, an <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> or an
            <see cref="T:NickLee.Views.Gantt.Data.IReservation" />.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.BadConstraintPathException">
            <summary>
            The exception that is thrown when an invalid constraint path has been detected in a <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModel" />.
            </summary>
            <remarks>This exception is thrown when a cycle has been detected in a constraint path.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BadConstraintPathException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.BadConstraintPathException" /> class with a specified error message.
            </summary>
            <param name="str">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BadConstraintPathException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.BadConstraintPathException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="str">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.
            If the <paramref name="innerException" /> parameter is not a <see langword="null" /> reference,
            the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.GanttTableColumnDialog">
            <summary>
            Displays a dialog window from which the user can edit the values of a <see cref="T:NickLee.Views.Windows.Forms.TableColumn" />.
            </summary>
            <remarks>This dialog is dedicated to tables displaying Gantt objects.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTableColumnDialog.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttTableColumnDialog" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTableColumnDialog.Dispose(System.Boolean)">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTableColumnDialog.GetBrowsableProperties">
            <summary>
            Gets the list of properties that will be proposed to the user for choosing the mapping name of the column.
            </summary>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> containing properties of <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> objects.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTableColumnDialog.GetFormatDescriptions(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Gets the descriptions of the format for the specified property descriptor.
            </summary>
            <param name="pd">An instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class.</param>
            <returns>An array of <see cref="T:System.String" /> objects containing the descriptions of the available
            formats for the specified property descriptor.</returns>
            <remarks>When overriding this method, be sure to override <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttTableColumnDialog.GetFormats(System.ComponentModel.PropertyDescriptor)" /> as well.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTableColumnDialog.GetFormats(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Gets the formats for the specified property descriptor.
            </summary>
            <param name="pd">An instance of the <see cref="T:System.ComponentModel.PropertyDescriptor" /> class.</param>
            <returns>An array of <see cref="T:System.String" /> objects containing the available
            formats for the specified property descriptor.</returns>
            <remarks>When overriding this method, be sure to override <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttTableColumnDialog.GetFormatDescriptions(System.ComponentModel.PropertyDescriptor)" /> as well.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttTableColumnDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.GanttTableColumnDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttTableColumnDialog.GanttModel">
            <summary>
            Gets or sets the <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> connected to this dialog.
            </summary>
            <remarks>This property is used to retrieve dynamic properties on the Gantt data model
            when it implements the <see cref="T:NickLee.Views.Gantt.Data.IPropertyDescriptorProvider" /> interface.
            </remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.DrawConstraintLinkEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.DrawConstraintLink" /> event of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.Design.TimeGridConverter">
            <summary>
            Provides a type converter to convert <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> objects
            to and from other representations.
            </summary>
            <remarks>This converter can only convert a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> object
            to an <see cref="T:System.ComponentModel.Design.Serialization.InstanceDescriptor" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.TimeGridConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)">TypeConverter.CanConvertTo</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.TimeGridConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)">TypeConverter.ConvertTo</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle">
            <summary>
            Defines the graphical representation of the bar that represents an activity in a <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" />.
            </summary>
            <remarks>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> defines the representation of an activity in a
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" />. In the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" /> activities are represented by a bar.
            The appearance of these bars are defined by the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> class. This
            class defines the colors used to display a bar (such as the background color,
            the color of the border) and also the text displayed in the bar. The <strong>CalendarViewBarStyle</strong>
            also defines the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.StyleFor" /> property. The value of this property is an expression that
            will be evaluated to check if a the style can be used to represent a particular activity.
            For example is the value of the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.StyleFor" /> property is 'Milestone' then the style
            only applies to activities that are defined as milestones (Milestone property set to <see langword="true" />).
            When an activity need to be displayed in the <strong>CalendarView</strong> then the <strong>CalendarView</strong>
            checks in its collection of styles (property <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.BarStyles">CalendarView.BarStyles</see>
            for a style that can be used to display this activity.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample creates two bar styles, one for milestones and one for
            normal activities and add them in the style collection.
            </para>
            <code lang="C#">
            CalendarView view = new CalendarView();

            CalendarViewBarStyle normal = new CalendarViewBarStyle();
            normal.FillStyle = CalendarBarFillStyle.Solid;
            normal.BorderColor = SystemColors.WindowText;
            normal.Color = SystemColors.Window;
            normal.StyleFor = "Normal";
            normal.ForeColor = SystemColors.WindowText;
            normal.DisplayedText = "(Name==\"\"?ID:Name)+\",\"+Duration";

            CalendarViewBarStyle milestone = new CalendarViewBarStyle();
            milestone.FillStyle = CalendarBarFillStyle.Solid;
            milestone.BorderColor = SystemColors.WindowText;
            milestone.Color = SystemColors.WindowText;
            milestone.StyleFor = "Milestone";
            milestone.ForeColor = SystemColors.Window;
            milestone.DisplayedText="Name==\"\"?ID:Name";

            view.BarStyles.AddRange(new CalendarViewBarStyle[] {normal, milestone});
            </code>
            <code lang="Visual Basic">
            Dim view As CalendarView = New CalendarView
            Dim normal As CalendarViewBarStyle = New CalendarViewBarStyle
            normal.FillStyle = CalendarBarFillStyle.Solid
            normal.BorderColor = SystemColors.WindowText
            normal.Color = SystemColors.Window
            normal.StyleFor = "Normal"
            normal.ForeColor = SystemColors.WindowText
            normal.DisplayedText = "(Name==""""?ID:Name)+"",""+Duration"
            Dim milestone As CalendarViewBarStyle = New CalendarViewBarStyle
            milestone.FillStyle = CalendarBarFillStyle.Solid
            milestone.BorderColor = SystemColors.WindowText
            milestone.Color = SystemColors.WindowText
            milestone.StyleFor = "Milestone"
            milestone.ForeColor = SystemColors.Window
            milestone.DisplayedText = "Name==""""?ID:Name"

            view.BarStyles.AddRange(New CalendarViewBarStyle() {normal, milestone})
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.#ctor">
            <summary>
            Creates a new <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.Accept(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Checks if this <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> can be used to display the specified
            activity.
            </summary>
            <param name="activity">The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to test.</param>
            <returns><see langword="true" /> if this <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> can be applied to the specified
            activity; <see langword="false" /> otherwise.</returns>
            <remarks>The method is called by the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" /> control to check if the style must
            be used to draw the specified activity. The default implementation evaluates the expression defined
            by the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.StyleFor" /> property.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.StyleFor" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.GetText(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Gets the text displayed by this <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> for the specified activity.
            </summary>
            <param name="activity">The activity to get the property value from.</param>
            <returns>The text that will be displayed by this <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.OnBarRoundingChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.BarRoundingChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.OnStyleChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.StyleChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.OnStyleForChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.StyleForChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.ResetSecondColor">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.SecondColor" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.ShouldSerializeSecondColor">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.SecondColor" /> property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from
            its default; <see langword="false" /> otherwise.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.ToString">
            <summary>
            Returns a string representation of the object.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle._borderColor">
            <summary>
            The border color of the bar.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle._color">
            <summary>
            The primary color of the bar.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle._expression">
            <summary>
            Result of parsing _styleFor.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle._foreColor">
            <summary>
            The primary color of the bar.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle._secondColor">
            <summary>
            The second color of the bar.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.BarRoundingChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.BarRounding" /> property changes.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.StyleChanged">
            <summary>
            Occurs when a property that changes the appearance of the bar changes.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.StyleForChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.StyleFor" /> property changes.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.BarRounding">
            <summary>
            Indicates whether the start and end time of the bars are rounded
            to the beginning and end of a day.
            </summary>
            <value><see langword="true" /> if the start and end time of the bars are rounded
            to the beginning and end of a day; <see langword="false" /> otherwise.
            The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.BorderColor">
            <summary>
            Gets or sets the border color of the bar.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the border color of the bar.
            The default value is <see cref="P:System.Drawing.Color.Black">Color.Black</see>.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.Color" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.SecondColor" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.ForeColor" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.Color">
            <summary>
            Gets or sets the background color of the bar.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the background color of the bar.
            The default value is <see cref="P:System.Drawing.Color.LightSkyBlue">Color.LightSkyBlue</see>.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.BorderColor" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.SecondColor" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.ForeColor" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.DisplayedText">
            <summary>
            Gets or sets the expression value that will be displayed.
            </summary>
            <value>
            A string that represents an expression. The default value is
            "Name".
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.FillStyle">
            <summary>
            Gets or sets a value indicating the method that will be used to fill the
            background of the bar.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarBarFillStyle" /> values.
            The default value is <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarBarFillStyle">Solid</see>.
            </value>
            <remarks>Depending on the value of this property, other properties are used to
            control the filling of the bar.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.HatchStyle" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.Color" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.SecondColor" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.ForeColor">
            <summary>
            Gets or sets the foreground color of the bar.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of the bar.
            The default value is <see cref="P:System.Drawing.Color.Black">Color.Black</see>.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.Color" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.SecondColor" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.BorderColor" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.FormatInfo">
            <summary>
            Gets or sets the culture specific information used to determine how values are formatted.
            </summary>
            <value>An object that implements the <see cref="T:System.IFormatProvider" /> interface,
            such as the <see cref="T:System.Globalization.CultureInfo" /> class.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.HatchBackColor">
            <summary>
            Gets the color used as the background color of the hatch brush.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the background color of the hatch brush.
            The default value is <see cref="P:System.Drawing.Color.Transparent">Color.Transparent</see>.
            </value>
            <remarks>
            When the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.FillStyle" /> property is set to <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarBarFillStyle">Hatch</see> then
            the bar if filled with a hatch brush. The foreground color of the hatch is defined
            by the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.Color" /> property and the background color of the hatch is
            defined by the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.SecondColor" /> property unless the second color has its
            default value which means that the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.Color" /> and <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.SecondColor" />
            properties have the same value. In this case the property returns <see cref="P:System.Drawing.Color.Transparent">Color.Transparent</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.HatchStyle">
            <summary>
            Gets or sets the style of hatch for the bar.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> that is used to fill the bar when
            the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.FillStyle" /> property is set to <see cref="F:NickLee.Views.Gantt.Windows.Forms.CalendarBarFillStyle.Hatch" />.
            The default value is <strong>Percent50</strong>.
            </value>
            <remarks>The bar will be filled with a hatch brush only if the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.FillStyle" /> property is set to <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarBarFillStyle">Hatch</see>.
            In this case the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.Color" /> property is used as the foreground of the hatch and
            the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.SecondColor" /> property as the background of the hatch.
            </remarks>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarBarFillStyle" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.SecondColor">
            <summary>
            Gets or sets the second color of the bar.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the second color of the bar.
            By default this property has the same value as the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.Color" /> property.
            </value>
            <remarks>
            This color is used to draw
            the background of the hatch brush if the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.FillStyle" /> property returns
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarBarFillStyle">Hatch</see>. If no hatch brush is used and the values
            of the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.Color" /> and <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.SecondColor" /> properties are different,
            then a linear gradient is used to fill the bar with <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.Color" /> and
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.SecondColor" /> as color bounds.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.BorderColor" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.Color" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.StyleFor">
            <summary>
            Gets or sets an expression that will be evaluated to test if this style
            matches a particular activity.
            </summary>
            <value>A <see cref="T:System.String" /> that represents a Boolean expression based on an activity to check if the
            style must be used to draw a particular activity. The default value is "" meaning that the style can
            be applied to all activities.
            </value>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to apply a style to activities whose <strong>StartTime</strong> is
            after a specific date.
            </para>
            <code lang="C#">
            CalendarViewBarStyle style = new CalendarViewBarStyle();
            style.StyleFor = "StartTime &gt; #1/1/2000#";
            </code>
            <code lang="Visual Basic">
            Dim  style As CalendarViewBarStyle = new CalendarViewBarStyle
            style.StyleFor = "StartTime &gt; #1/1/2000#"
            </code>
            </example>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ActivityTable">
            <summary>
            A specialization of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttTable" /> class for activities.
            </summary>
            <remarks>
            <p>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityTable" /> is a
            hierarchical table where each row represents an activity
            and each column represents a property of the activity in the row.
            </p>
            <p>
            <img src="activitytable.png" /></p>
            By default the table contains six columns: a column that displays information on the
            activity as bitmaps (see <see cref="T:NickLee.Views.Gantt.Windows.Forms.InfoColumn" />), a second column that displays the
            name of the resource, columns for the duration, the start time and end time of the
            activity and a column that list the resources assigned to the activity. You can modify the columns of the table
            using the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.Columns" /> property.<p />
            In order to display scheduling information, the table must be connected
            to a Gantt data model (<see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />) through the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttTable.GanttModel" />
            property.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to get the <strong>ActivityTable</strong>
            from a <strong>GanttChart</strong>.
            </para>
            <code lang="C#">
            GanttChart chart = new GanttChart();
            ActivityTable table = chart.GanttTable;
            </code>
            <code lang="Visual Basic">
            Dim chart As New GanttChart
            Dim table As ActivityTable = chart.GanttTable
            </code>
            <p />
            <para lang="C#,Visual Basic">The following code sample shows how to create an <strong>ActivityTable</strong>
            and assign a Gantt data model to display.
            </para>
            <code lang="C#">
            Form form = new Form();

            // Creates the activity table
            ActivityTable table = new ActivityTable();
            table.Dock = DockStyle.Fill;

            // Adds the table to the form
            form.Controls.Add(table);

            // Creates a Gantt model
            IGanttModel model = new SimpleGanttModel();
            IActivity activity = model.NewActivity();
            activity.Name = "My Activity";
            activity.StartTime = DateTime.Now;
            activity.Duration = TimeSpan.FromDays(5);
            model.Activities.Add(activity);

            // Assign Gantt model to the table
            table.GanttModel = model;

            Application.Run(form);
            </code>
            <code lang="Visual Basic">
            Dim form As New Form

            ' Creates the activity table
            Dim table As New ActivityTable
            table.Dock = DockStyle.Fill

            ' Adds the table to the form
            form.Controls.Add(table)

            ' Creates a Gantt model
            Dim model As IGanttModel = New SimpleGanttModel
            Dim activity As IActivity = model.NewActivity
            activity.Name = "My Activity"
            activity.StartTime = DateTime.Now
            activity.Duration = TimeSpan.FromDays(5)
            model.Activities.Add(activity)
            ' Assign Gantt model to the table
            table.GanttModel = model
            Application.Run(form)
            </code>
            <p />
            <para lang="C#,Visual Basic">You will find an example that creates a <strong>ActivityTable</strong>
            and connect it with a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" /> and a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" />
            in the description of <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" />.
            </para>
            </example>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ResourceTable" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationTable" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityTable.#ctor">
            <overloads>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityTable" /> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityTable" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityTable.#ctor(NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityTable" /> class with
            the specified Gantt model.
            </summary>
            <param name="model">The Gantt model.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityTable.ColumnChanged(NickLee.Views.Windows.Forms.TableColumn,System.Boolean)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Windows.Forms.TreeTable.ColumnChanged(NickLee.Views.Windows.Forms.TableColumn,System.Boolean)">TreeTable.ColumnChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityTable.CopyToClipboard">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.CopyToClipboard">GanttTable.CopyToClipboard</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityTable.CreateDefaultColumns">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Windows.Forms.TreeTable.CreateDefaultColumns">TreeTable.CreateDefaultColumns</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityTable.CreateTreeModel(NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.CreateTreeModel(NickLee.Views.Gantt.Data.IGanttModel)">GanttTable.CreateTreeModel</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityTable.CutToClipboard">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.CutToClipboard">GanttTable.CutToClipboard</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityTable.GetActivityAt(System.Int32)">
            <summary>
            Retrieves the <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> at the specified index.
            </summary>
            <param name="rowIndex">The zero-based index of the activity to
            retrieve.</param>
            <returns>The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> at the specified index.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityTable.GetCurrentActivity">
            <summary>
            Returns the current activity in the table.
            </summary>
            <returns>The current <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> in the table.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityTable.GetSelectedActivities">
            <summary>
            Returns an array of the selected activities in the table.
            </summary>
            <returns>An array of <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> objects.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityTable.MoveNode(System.Object,System.Object,System.Int32)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.MoveNode(System.Object,System.Object,System.Int32)">GanttTable.MoveNode</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityTable.NewActivity(System.String,System.String,NickLee.Views.Gantt.DateTimeInterval)">
            <summary>
            Creates a new activity as a sibling of the current row.
            </summary>
            <param name="id">The unique identifier of the new activity.</param>
            <param name="name">The name of the new activity.</param>
            <param name="interval">The initial time interval for the activity.</param>
            <returns>The zero-based index of the row containing the new activity.</returns>
            <remarks>If <paramref name="id" /> is <see langword="null" />, a unique ID provided by
            the model will be used.
            If <paramref name="name" /> is <see langword="null" />, the table is
            automatically placed in editing mode to edit the activity name.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityTable.NodesChanged(NickLee.Views.Windows.Forms.TreeModelChangeEventArgs)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Windows.Forms.TreeTable.NodesChanged(NickLee.Views.Windows.Forms.TreeModelChangeEventArgs)">TreeTable.NodesChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityTable.OnGanttModelChanging(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.OnGanttModelChanging(System.EventArgs)">GanttTable.OnGanttModelChanging</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityTable.PasteFromClipboard">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.PasteFromClipboard">GanttTable.PasteFromClipboard</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityTable.RemoveSelectedRows">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttTable.RemoveSelectedRows">GanttTable.RemoveSelectedRows</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle">
            <summary>
            Specifies the style of layout in a row of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" />.
            </summary>
            <remarks>Uses the members of this enumeration to set the value of
            the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.ActivityLayoutStyle" /> property in the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" /> class. The default value is <strong>Pretty</strong>.
            </remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.SimpleReservation">
            <summary>
            Defines a relatively simple, memory-based implementation of the <see cref="T:NickLee.Views.Gantt.Data.IReservation" />
            interface that can be extended in a straightforward manner for more complex needs.
            </summary>
            <remarks>
            <see cref="T:NickLee.Views.Gantt.Data.SimpleReservation" /> does not provide any connection to a persistent datastore
            itself. See <see cref="T:NickLee.Views.Gantt.Data.GanttModelAdapter" /> for using a Gantt data model with ADO.NET.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to populate a <see cref="T:NickLee.Views.Gantt.Data.SimpleGanttModel" />.
            </para>
            <code lang="C#">
            private void Populate(IGanttModel model) {
            IActivity activity;
            IResource[] resources = new IResource[10];
            IActivity[] activities = new IActivity[20];
            IReservation[] reservations = new IReservation[20];

            for (int i = 0; i &lt; 10; ++i) {
            // First create the resource...
            resources[i] = model.NewResource();
            resources[i].Name = "Room " + i.ToString();

            // Add a conference in the morning
            activity = model.NewActivity();
            activity.Name = "Morning Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4));
            activities[i*2] = activity;

            // Create the reservation for this activity
            reservations[i*2] = model.NewReservation(activity, resources[i]);

            // Add a conference in the afternoon
            activity = model.NewActivity();
            activity.Name = "Afternoon Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4));
            activities[i*2 + 1] = activity;

            // Create the reservation for this activity
            reservations[i*2 + 1] = model.NewReservation(activity, resources[i]);
            }
            model.Activities.AddRange(activities);
            model.Resources.AddRange(resources);
            model.Reservations.AddRange(reservations);
            }
            </code>
            <code lang="Visual Basic">
            Sub Populate(ByVal model As IGanttModel)
            Dim activity As IActivity
            Dim resources(10) As IResource
            Dim activities(20) As IActivity
            Dim reservations(20) As IReservation

            For i As Integer = 0 To 9

            ' First create the resource...
            resources(i) = model.NewResource()
            resources(i).Name = "Room " + i.ToString()

            ' Add a conference in the morning
            activity = model.NewActivity()
            activity.Name = "Morning Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4))
            activities(i * 2) = activity

            ' Create the reservation for this activity
            reservations(i * 2) = model.NewReservation(activity, resources(i))

            ' Add a conference in the afternoon
            activity = model.NewActivity()
            activity.Name = "Afternoon Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4))
            activities(i * 2 + 1) = activity

            ' Create the reservation for this activity
            reservations(i * 2 + 1) = model.NewReservation(activity, resources(i))

            Next

            model.Activities.AddRange(activities)
            model.Resources.AddRange(resources)
            model.Reservations.AddRange(reservations)
            End Sub
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleReservation.#ctor(NickLee.Views.Gantt.Data.SimpleGanttModel,NickLee.Views.Gantt.Data.SimpleActivity,NickLee.Views.Gantt.Data.SimpleResource)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.SimpleReservation" /> class.
            </summary>
            <param name="model">The Gantt model.</param>
            <param name="activity">The activity of the reservation.</param>
            <param name="resource">The resource of the reservation.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleReservation.GetCustomProperty(System.String)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.GetCustomProperty(System.String)">BaseActivity.GetCustomProperty</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleReservation.GetInfo">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseReservation.GetInfo">BaseReservation.GetInfo</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleReservation.GetUnits">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseReservation.GetUnits">BaseReservation.GetUnits</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleReservation.SetCustomProperty(System.String,System.Object)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.SetCustomProperty(System.String,System.Object)">BaseActivity.SetCustomProperty</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleReservation.SetInfo(System.String)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseReservation.SetInfo(System.String)">BaseReservation.SetInfo</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleReservation.SetUnits(System.Single)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseReservation.SetUnits(System.Single)">BaseReservation.SetUnits</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.SimpleActivity">
            <summary>
            Defines a relatively simple, memory-based implementation of the <see cref="T:NickLee.Views.Gantt.Data.IActivity" />
            interface that can be extended in a straightforward manner for more complex needs.
            </summary>
            <remarks>
            <see cref="T:NickLee.Views.Gantt.Data.SimpleActivity" /> does not provide any connection to a persistent datastore
            itself. See <see cref="T:NickLee.Views.Gantt.Data.GanttModelAdapter" /> for using a Gantt data model with ADO.NET.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to populate a <see cref="T:NickLee.Views.Gantt.Data.SimpleGanttModel" />.
            </para>
            <code lang="C#">
            private void Populate(IGanttModel model) {
            IActivity activity;
            IResource[] resources = new IResource[10];
            IActivity[] activities = new IActivity[20];
            IReservation[] reservations = new IReservation[20];

            for (int i = 0; i &lt; 10; ++i) {
            // First create the resource...
            resources[i] = model.NewResource();
            resources[i].Name = "Room " + i.ToString();

            // Add a conference in the morning
            activity = model.NewActivity();
            activity.Name = "Morning Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4));
            activities[i*2] = activity;

            // Create the reservation for this activity
            reservations[i*2] = model.NewReservation(activity, resources[i]);

            // Add a conference in the afternoon
            activity = model.NewActivity();
            activity.Name = "Afternoon Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4));
            activities[i*2 + 1] = activity;

            // Create the reservation for this activity
            reservations[i*2 + 1] = model.NewReservation(activity, resources[i]);
            }
            model.Activities.AddRange(activities);
            model.Resources.AddRange(resources);
            model.Reservations.AddRange(reservations);
            }
            </code>
            <code lang="Visual Basic">
            Sub Populate(ByVal model As IGanttModel)
            Dim activity As IActivity
            Dim resources(10) As IResource
            Dim activities(20) As IActivity
            Dim reservations(20) As IReservation

            For i As Integer = 0 To 9

            ' First create the resource...
            resources(i) = model.NewResource()
            resources(i).Name = "Room " + i.ToString()

            ' Add a conference in the morning
            activity = model.NewActivity()
            activity.Name = "Morning Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4))
            activities(i * 2) = activity

            ' Create the reservation for this activity
            reservations(i * 2) = model.NewReservation(activity, resources(i))

            ' Add a conference in the afternoon
            activity = model.NewActivity()
            activity.Name = "Afternoon Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4))
            activities(i * 2 + 1) = activity

            ' Create the reservation for this activity
            reservations(i * 2 + 1) = model.NewReservation(activity, resources(i))

            Next

            model.Activities.AddRange(activities)
            model.Resources.AddRange(resources)
            model.Reservations.AddRange(reservations)
            End Sub
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleActivity.#ctor(NickLee.Views.Gantt.Data.SimpleGanttModel)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.SimpleActivity" /> class.
            </summary>
            <param name="model">The Gantt model.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleActivity.GetAllowSummary">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.GetAllowSummary">BaseActivity.GetAllowSummary</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleActivity.GetCustomProperty(System.String)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.GetCustomProperty(System.String)">BaseActivity.GetCustomProperty</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleActivity.GetID">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.GetID">BaseActivity.GetID</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleActivity.GetInfo">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.GetInfo">BaseActivity.GetInfo</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleActivity.GetMilestone">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.GetMilestone">BaseActivity.GetMilestone</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleActivity.GetName">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.GetName">BaseActivity.GetName</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleActivity.GetTimeInterval">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.GetTimeInterval">BaseActivity.GetTimeInterval</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleActivity.GetWorkComplete">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.GetWorkComplete">BaseActivity.GetWorkComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleActivity.SetAllowSummary(System.Boolean)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.SetAllowSummary(System.Boolean)">BaseActivity.SetAllowSummary</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleActivity.SetCustomProperty(System.String,System.Object)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.SetCustomProperty(System.String,System.Object)">BaseActivity.SetCustomProperty</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleActivity.SetID(System.String)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.SetID(System.String)">BaseActivity.SetID</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleActivity.SetInfo(System.String)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.SetInfo(System.String)">BaseActivity.SetInfo</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleActivity.SetMilestone(System.Boolean)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.SetMilestone(System.Boolean)">BaseActivity.SetMilestone</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleActivity.SetName(System.String)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.SetName(System.String)">BaseActivity.SetName</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleActivity.SetTimeInterval(NickLee.Views.Gantt.DateTimeInterval)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.SetTimeInterval(NickLee.Views.Gantt.DateTimeInterval)">BaseActivity.SetTimeInterval</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleActivity.SetWorkComplete(System.Single)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.SetWorkComplete(System.Single)">BaseActivity.SetWorkComplete</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Gantt.Data.IGanttModel.ResourcesChanging" /> and
            <see cref="E:NickLee.Views.Gantt.Data.IGanttModel.ResourcesChanged" /> events of an <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />.
            </summary>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to handle the
            <strong>IGanttModel.ResourcesChanged</strong> event.
            </para>
            <code lang="C#">
            SimpleGanttModel model = new SimpleGanttModel();
            model.ResourcesChanged += new ResourcesChangeEventHandler(ResourcesChanged);

            private void ResourcesChanged(object sender, ResourcesChangeEventArgs args) {
            switch(args.Action) {
            case ResourcesAction.Add:
            Console.WriteLine("Resources added.");
            break;
            case ResourcesAction.Delete:
            Console.WriteLine("Resources deleted.");
            break;
            case ResourcesAction.PropertyChange:
            Console.WriteLine("Resources Changed.");
            break;
            case ResourcesAction.Move:
            Console.WriteLine("Resources Moved.");
            break;
            case ResourcesAction.Reset:
            Console.WriteLine("Resources Reset.");
            break;
            }
            }
            </code>
            <code lang="Visual Basic">
            Dim WithEvents model As New SimpleGanttModel

            Private Sub ResourcesChanged(ByVal sender As Object, ByVal args As ResourcesChangeEventArgs) Handles model.ResourcesChanged
            Select Case args.Action
            Case ResourcesAction.Add
            Console.WriteLine("Resources added.")
            Exit Sub
            Case ResourcesAction.Delete
            Console.WriteLine("Resources deleted.")
            Exit Sub
            Case ResourcesAction.PropertyChange
            Console.WriteLine("Resources Changed.")
            Exit Sub
            Case ResourcesAction.Move
            Console.WriteLine("Resources Moved.")
            Exit Sub
            Case ResourcesAction.Reset
            Console.WriteLine("Resources Reset.")
            Exit Sub
            End Select
            End Sub
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /> class, notifying
            that all the resources of the Gantt model have been changed.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs.#ctor(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /> class, notifying
            that the specified resource, including its hierarchy, has been changed.
            </summary>
            <param name="resource">The resource that has been changed.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs.#ctor(NickLee.Views.Gantt.Data.ResourcesAction,NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /> class.
            </summary>
            <param name="action">The <see cref="T:NickLee.Views.Gantt.Data.ResourcesAction" /> that causes the event.</param>
            <param name="resource">The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> on which the action was taken.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs.#ctor(NickLee.Views.Gantt.Data.IResource,System.String,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /> class, notifying
            that the specified resource had one of its property changed.
            </summary>
            <param name="resource">The resource that has been changed.</param>
            <param name="propertyName">The property that has been changed, or <see langword="null" /> to
            specify that all the properties have been changed.</param>
            <param name="value">The new value of the property.</param>
            <param name="oldValue">The old value of the property.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs.#ctor(NickLee.Views.Gantt.Data.ResourcesAction,NickLee.Views.Gantt.Data.IResource,System.Int32,NickLee.Views.Gantt.Data.IResource[])">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /> class, notifying
            that the specified resources have been added or removed from the Gantt model.
            </summary>
            <param name="action">The <see cref="T:NickLee.Views.Gantt.Data.ResourcesAction" /> that causes the event.</param>
            <param name="resource">The resource that had its subresources changed.</param>
            <param name="index">The zero-based index where the change started.</param>
            <param name="children">An array of <see cref="T:NickLee.Views.Gantt.Data.IResource" /> objects.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs.#ctor(NickLee.Views.Gantt.Data.IResource,NickLee.Views.Gantt.Data.IResource,System.Int32,NickLee.Views.Gantt.Data.IResource,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /> class, notifying
            that the specified resource was moved.
            </summary>
            <param name="resource">The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> that was moved.</param>
            <param name="oldParent">The previous parent resource.</param>
            <param name="oldIndex">The previous zero-based index of the resource in the previous parent.</param>
            <param name="newParent">The new parent resource.</param>
            <param name="index">The new zero-based index of the resource in the new parent.</param>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs.Action">
            <summary>
            Gets the action that has occurred on the resources of the Gantt model.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Data.ResourcesAction" /> values.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the operation should be canceled.
            </summary>
            <value><see langword="true" /> if the operation should be canceled;
            <see langword="false" /> otherwise. The default value is <see langword="false" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs.Children">
            <summary>
            Gets the resources that was added or removed.
            </summary>
            <value>An array of <see cref="T:NickLee.Views.Gantt.Data.IResource" /> objects.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs.Index">
            <summary>
            Gets the zero-based index where the action started.
            </summary>
            <value>A zero-based index.</value>
            <remarks>This property is also used to represent the new index
            of a resource in a move operation.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs.NewParent">
            <summary>
            Gets the new parent resource in a move operation.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IResource" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs.OldIndex">
            <summary>
            Gets the zero-based index of the resource before the move operation.
            </summary>
            <value>A zero-based index.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs.OldParent">
            <summary>
            Gets the previous parent resource in a move operation.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IResource" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs.OldValue">
            <summary>
            Gets the old value of the property that has changed.
            </summary>
            <value>An <see cref="T:System.Object" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs.Property">
            <summary>
            Gets the property that has changed.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the property that has
            changed on the <see cref="T:NickLee.Views.Gantt.Data.IResource" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs.Resource">
            <summary>
            Gets the resource upon which an action has occurred.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IResource" /> instance, or
            <see langword="null" /> if the action concerns every
            resources in the Gantt model.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs.Synthetic">
            <summary>
            Gets or sets a value indicating whether the operation is synthetic.
            </summary>
            <value><see langword="true" /> if the operation is synthetic;
            <see langword="false" /> otherwise. The default value is <see langword="false" />.</value>
            <remarks>A synthetic event is not recorded by the <see cref="T:NickLee.Views.Gantt.Data.GanttModelUndoManager" />.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs.Value">
            <summary>
            Gets or sets the new value of the property that has changed.
            </summary>
            <value>An <see cref="T:System.Object" /> instance.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.ReservationsAction">
            <summary>
            Describes an action performed on <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> objects.
            </summary>
            <remarks>This enumeration is used by the <see cref="T:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs" /> class.</remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttModelUtil">
            <summary>
            Contains helpful <see langword="static" /> methods to be used on Gantt data model.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUtil.GetActivities(NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Returns an array containing all the activities of the specified model.
            </summary>
            <param name="model">The Gantt model.</param>
            <returns>An array that contains all the activities of <paramref name="model" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUtil.GetResources(NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Returns an array containing all the resources of the specified model.
            </summary>
            <param name="model">The Gantt model.</param>
            <returns>An array that contains all the resources of <paramref name="model" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUtil.GetViolatedConstraints(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Gets the constraints being violated by the specified activity.
            </summary>
            <param name="activity">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> instance.</param>
            <returns>An array of <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> that contains all the constraints
            being violated by <paramref name="activity" />.</returns>
            <remarks>A constraint is said to be violated when:<br />
            <list type="table">
            <listheader>
            <term>Constraint Type</term>
            <description>Condition</description>
            </listheader>
            <item>
            <term>End To Start</term>
            <description>The start time of the destination activity is less than the
            end time of the source activity.</description>
            </item>
            <item>
            <term>Start To Start</term>
            <description>The start time of the destination activity is less than the
            start time of the source activity.</description>
            </item>
            <item>
            <term>End To End</term>
            <description>The end time of the destination activity is less than the
            end time of the source activity.</description>
            </item>
            <item>
            <term>Start To End</term>
            <description>The end time of the destination activity is less than the
            start time of the source activity.</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUtil.IsAnAncestorActivity(NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Tests if an activity is an ancestor of another one.
            </summary>
            <param name="parent">The parent activity</param>
            <param name="node">The child activity to test.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUtil.IsAnAncestorResource(NickLee.Views.Gantt.Data.IResource,NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Tests if a resource is an ancestor of another one.
            </summary>
            <param name="parent">The parent resource</param>
            <param name="node">The child resource.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUtil.SortActivities(NickLee.Views.Gantt.Data.IActivityCollection,System.Collections.IComparer,System.Int32)">
            <summary>
            Sorts the specified <see cref="T:NickLee.Views.Gantt.Data.IActivityCollection" /> using an <see cref="T:System.Collections.IComparer" />.
            </summary>
            <param name="activities">The collection to sort.</param>
            <param name="comparer">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements. </param>
            <param name="depth">A depth of <strong>0</strong> will only sort the specified collection.
            A negative depth will sort the specified collection and its children recursively. Any other value specifies the depth
            of the sort algorithm.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUtil.SortActivities(NickLee.Views.Gantt.Data.IActivityCollection,System.String,System.Boolean,System.Int32)">
            <summary>
            Sorts the specified <see cref="T:NickLee.Views.Gantt.Data.IActivityCollection" /> using a mapping name.
            </summary>
            <param name="activities">The collection to sort.</param>
            <param name="mappingName">The name of the property that will be used to sort the collection.</param>
            <param name="ascending"><see langword="true" /> if the sort is ascending; <see langword="false" /> otherwise.</param>
            <param name="depth">A depth of <strong>0</strong> will only sort the specified collection.
            A negative depth will sort the specified collection and its children recursively. Any other value specifies the depth
            of the sort algorithm.</param>
            <exception cref="T:System.ArgumentException"><paramref name="mappingName" /> cannot
            be mapped to an activity property.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUtil.SortResources(NickLee.Views.Gantt.Data.IResourceCollection,System.Collections.IComparer,System.Int32)">
            <summary>
            Sorts the specified <see cref="T:NickLee.Views.Gantt.Data.IResourceCollection" /> using an <see cref="T:System.Collections.IComparer" />.
            </summary>
            <param name="resources">The collection to sort.</param>
            <param name="comparer">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements. </param>
            <param name="depth">A depth of <strong>0</strong> will only sort the specified collection.
            A negative depth will sort the specified collection and its children recursively. Any other value specifies the depth
            of the sort algorithm.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUtil.SortResources(NickLee.Views.Gantt.Data.IResourceCollection,System.String,System.Boolean,System.Int32)">
            <summary>
            Sorts the specified <see cref="T:NickLee.Views.Gantt.Data.IResourceCollection" /> using a mapping name.
            </summary>
            <param name="resources">The collection to sort.</param>
            <param name="mappingName">The name of the property that will be used to sort the collection.</param>
            <param name="ascending"><see langword="true" /> if the sort is ascending; <see langword="false" /> otherwise.</param>
            <param name="depth">A depth of <strong>0</strong> will only sort the specified collection.
            A negative depth will sort the specified collection and its children recursively. Any other value specifies the depth
            of the sort algorithm.</param>
            <exception cref="T:System.ArgumentException"><paramref name="mappingName" /> cannot
            be mapped to a resource property.</exception>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttModelUtil.ActivitiesEnumerator">
            <summary>
            An enumerator on all the activities of an <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> object.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUtil.ActivitiesEnumerator.#ctor(NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.GanttModelUtil.ActivitiesEnumerator" /> class.
            </summary>
            <param name="model">The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> to enumerate.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUtil.ActivitiesEnumerator.Dispose">
            <summary>
            Implements the <see cref="M:System.IDisposable.Dispose">IDisposable.Dispose</see> method.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUtil.ActivitiesEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><see langword="true" /> if the enumerator was successfully advanced to
            the next element; <see langword="false" /> if the enumerator has passed the
            end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified
            after the enumerator was created.
            </exception>
            <remarks>
            <p>After an enumerator is created or after a <see cref="M:NickLee.Views.Gantt.Data.GanttModelUtil.ActivitiesEnumerator.Reset" />,
            an enumerator is positioned before the first element of the collection,
            and the first call to <strong>MoveNext</strong> moves the enumerator over
            the first element of the collection.
            </p>
            <p>After the end of the collection is passed, subsequent calls to
            <strong>MoveNext</strong> return <see langword="false" /> until
            <strong>Reset</strong> is called.
            </p>
            <p>
            An enumerator remains valid as long as the collection remains unchanged.
            If changes are made to the collection, such as adding, modifying or
            deleting elements, the enumerator is irrecoverably invalidated and the next
            call to <strong>MoveNext</strong> or <strong>Reset</strong> throws an
            <see cref="T:System.InvalidOperationException" />. If the collection is
            modified between <strong>MoveNext</strong> and <strong>Current</strong>,
            <strong>Current</strong> will return the element that it is set to,
            even if the enumerator is already invalidated.
            </p>
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Data.GanttModelUtil.ActivitiesEnumerator.Current" />
            <seealso cref="M:NickLee.Views.Gantt.Data.GanttModelUtil.ActivitiesEnumerator.Reset" />
            <seealso cref="M:System.Collections.IEnumerator.MoveNext">IEnumerator.MoveNext</seealso>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUtil.ActivitiesEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified
            after the enumerator was created.
            </exception>
            <remarks>
            <p><strong>Reset</strong> moves the enumerator to the beginning of the
            collection, before the first element. After <strong>Reset</strong>,
            <see cref="M:NickLee.Views.Gantt.Data.GanttModelUtil.ActivitiesEnumerator.MoveNext" /> must be called to advance the enumerator to the
            first element of the collection before reading the value of <see cref="P:NickLee.Views.Gantt.Data.GanttModelUtil.ActivitiesEnumerator.Current" />.
            </p>
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Data.GanttModelUtil.ActivitiesEnumerator.Current" />
            <seealso cref="M:NickLee.Views.Gantt.Data.GanttModelUtil.ActivitiesEnumerator.MoveNext" />
            <seealso cref="M:System.Collections.IEnumerator.Reset">IEnumerator.Reset</seealso>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttModelUtil.ActivitiesEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <value>The current element in the collection.</value>
            <exception cref="T:System.InvalidOperationException">The enumerator is positionned
            before the first element of the collection, or after the last element.
            </exception>
            <remarks>
            <p>After an enumerator is created or after a <see cref="M:NickLee.Views.Gantt.Data.GanttModelUtil.ActivitiesEnumerator.Reset" />,
            <see cref="M:NickLee.Views.Gantt.Data.GanttModelUtil.ActivitiesEnumerator.MoveNext" /> must be called to advance the enumerator to
            the first element of the collection before reading the value of
            <strong>Current</strong>; otherwise, <strong>Current</strong> is
            undefined.
            </p>
            <p><strong>Current</strong> also throws an exception if the last call to
            <strong>MoveNext</strong> returned <see langword="false" />, which
            indicates the end of the collection.
            </p>
            <p><strong>Current</strong> does not move the position of the enumerator
            and consecutive calls to <strong>Current</strong> return the same object
            until either <strong>MoveNext</strong> or <strong>Reset</strong> is called.
            </p>
            <p>
            An enumerator remains valid as long as the collection remains unchanged.
            If changes are made to the collection, such as adding, modifying or
            deleting elements, the enumerator is irrecoverably invalidated and the next
            call to <strong>MoveNext</strong> or <strong>Reset</strong> throws an
            <see cref="T:System.InvalidOperationException" />. If the collection is
            modified between <strong>MoveNext</strong> and <strong>Current</strong>,
            <strong>Current</strong> will return the element that it is set to,
            even if the enumerator is already invalidated.
            </p>
            </remarks>
            <seealso cref="M:NickLee.Views.Gantt.Data.GanttModelUtil.ActivitiesEnumerator.MoveNext" />
            <seealso cref="M:NickLee.Views.Gantt.Data.GanttModelUtil.ActivitiesEnumerator.Reset" />
            <seealso cref="P:System.Collections.IEnumerator.Current">IEnumerator.Current</seealso>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttModelUtil.ActivitiesEnumerator.GanttModel">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> this enumerator enumerates.
            </summary>
            <value>
            The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> object enumerated by this enumerator.
            </value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttModelUtil.PropertyDescriptorComparer">
            <summary>
            A Comparer that uses a PropertyDescriptor.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttModelUtil.ResourcesEnumerator">
            <summary>
            An enumerator on all the resource of an <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> object.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUtil.ResourcesEnumerator.#ctor(NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.GanttModelUtil.ResourcesEnumerator" /> class.
            </summary>
            <param name="model">The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> to enumerate.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUtil.ResourcesEnumerator.Dispose">
            <summary>
            Implements the <see cref="M:System.IDisposable.Dispose">IDisposable.Dispose</see> method.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUtil.ResourcesEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><see langword="true" /> if the enumerator was successfully advanced to
            the next element; <see langword="false" /> if the enumerator has passed the
            end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified
            after the enumerator was created.
            </exception>
            <remarks>
            <p>After an enumerator is created or after a <see cref="M:NickLee.Views.Gantt.Data.GanttModelUtil.ResourcesEnumerator.Reset" />,
            an enumerator is positioned before the first element of the collection,
            and the first call to <strong>MoveNext</strong> moves the enumerator over
            the first element of the collection.
            </p>
            <p>After the end of the collection is passed, subsequent calls to
            <strong>MoveNext</strong> return <see langword="false" /> until
            <strong>Reset</strong> is called.
            </p>
            <p>
            An enumerator remains valid as long as the collection remains unchanged.
            If changes are made to the collection, such as adding, modifying or
            deleting elements, the enumerator is irrecoverably invalidated and the next
            call to <strong>MoveNext</strong> or <strong>Reset</strong> throws an
            <see cref="T:System.InvalidOperationException" />. If the collection is
            modified between <strong>MoveNext</strong> and <strong>Current</strong>,
            <strong>Current</strong> will return the element that it is set to,
            even if the enumerator is already invalidated.
            </p>
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Data.GanttModelUtil.ResourcesEnumerator.Current" />
            <seealso cref="M:NickLee.Views.Gantt.Data.GanttModelUtil.ResourcesEnumerator.Reset" />
            <seealso cref="M:System.Collections.IEnumerator.MoveNext">IEnumerator.MoveNext</seealso>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttModelUtil.ResourcesEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified
            after the enumerator was created.
            </exception>
            <remarks>
            <p><strong>Reset</strong> moves the enumerator to the beginning of the
            collection, before the first element. After <strong>Reset</strong>,
            <see cref="M:NickLee.Views.Gantt.Data.GanttModelUtil.ResourcesEnumerator.MoveNext" /> must be called to advance the enumerator to the
            first element of the collection before reading the value of <see cref="P:NickLee.Views.Gantt.Data.GanttModelUtil.ResourcesEnumerator.Current" />.
            </p>
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Data.GanttModelUtil.ResourcesEnumerator.Current" />
            <seealso cref="M:NickLee.Views.Gantt.Data.GanttModelUtil.ResourcesEnumerator.MoveNext" />
            <seealso cref="M:System.Collections.IEnumerator.Reset">IEnumerator.Reset</seealso>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttModelUtil.ResourcesEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <value>The current element in the collection.</value>
            <exception cref="T:System.InvalidOperationException">The enumerator is positionned
            before the first element of the collection, or after the last element.
            </exception>
            <remarks>
            <p>After an enumerator is created or after a <see cref="M:NickLee.Views.Gantt.Data.GanttModelUtil.ResourcesEnumerator.Reset" />,
            <see cref="M:NickLee.Views.Gantt.Data.GanttModelUtil.ResourcesEnumerator.MoveNext" /> must be called to advance the enumerator to
            the first element of the collection before reading the value of
            <strong>Current</strong>; otherwise, <strong>Current</strong> is
            undefined.
            </p>
            <p><strong>Current</strong> also throws an exception if the last call to
            <strong>MoveNext</strong> returned <see langword="false" />, which
            indicates the end of the collection.
            </p>
            <p><strong>Current</strong> does not move the position of the enumerator
            and consecutive calls to <strong>Current</strong> return the same object
            until either <strong>MoveNext</strong> or <strong>Reset</strong> is called.
            </p>
            <p>
            An enumerator remains valid as long as the collection remains unchanged.
            If changes are made to the collection, such as adding, modifying or
            deleting elements, the enumerator is irrecoverably invalidated and the next
            call to <strong>MoveNext</strong> or <strong>Reset</strong> throws an
            <see cref="T:System.InvalidOperationException" />. If the collection is
            modified between <strong>MoveNext</strong> and <strong>Current</strong>,
            <strong>Current</strong> will return the element that it is set to,
            even if the enumerator is already invalidated.
            </p>
            </remarks>
            <seealso cref="M:NickLee.Views.Gantt.Data.GanttModelUtil.ResourcesEnumerator.MoveNext" />
            <seealso cref="M:NickLee.Views.Gantt.Data.GanttModelUtil.ResourcesEnumerator.Reset" />
            <seealso cref="P:System.Collections.IEnumerator.Current">IEnumerator.Current</seealso>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttModelUtil.ResourcesEnumerator.GanttModel">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> this enumerator enumerates.
            </summary>
            <value>
            The <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> object enumerated by this enumerator.
            </value>
        </member>
        <member name="T:NickLee.Views.Gantt.WorkCalendar">
            <summary>
            Represents a calendar that defines working and nonworking periods as
            well as working times for each day.
            </summary>
            <remarks>
            A work calendar object allows to store working and nonworking times. The object also provide methods
            to navigate in the working and nonworking periods, you may for example get the next or previous
            working date from a date or compute the amount of work between two dates. The nonworking periods
            of a <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> object can be displayed in the grid of the Gantt controls
            using a <see cref="T:NickLee.Views.Gantt.Windows.Forms.WorkingTimesGrid" /> object. You may also edit the content of a work calendar using
            a <see cref="T:NickLee.Views.Gantt.Windows.Forms.WorkingTimesEditor" /> or a
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.WorkingTimesDialog" />
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code creates a calendar where friday is a nonworking day,
            where the working times on monday are 7AM-1PM and 3PM-8PM and where the period from January 1 to January 7
            2005 is a nonworking period.
            </para>
            <code lang="C#">
            WorkCalendar myCalendar = new WorkCalendar();
            myCalendar.SetNonWorking(DayOfWeek.Friday);

            WorkingTime[] times = new WorkingTime[2];
            times[0] = new WorkingTime(TimeSpan.FromHours(7), TimeSpan.FromHours(13));
            times[1] = new WorkingTime(TimeSpan.FromHours(15), TimeSpan.FromHours(20));

            myCalendar.SetWorkingTimes(DayOfWeek.Monday, times);

            myCalendar.SetNonWorking(new DateTime(2005,1,1), new DateTime(2005, 1,7));
            </code>
            <code lang="Visual Basic">
            DIM myCalendar As WorkCalendar = New WorkCalendar
            myCalendar.SetNonWorking(DayOfWeek.Friday)

            DIM times(1) As WorkingTime
            times(0) = new WorkingTime(TimeSpan.FromHours(7), TimeSpan.FromHours(13))
            times(1) = new WorkingTime(TimeSpan.FromHours(15), TimeSpan.FromHours(20))

            myCalendar.SetWorkingTimes(DayOfWeek.Monday, times)

            myCalendar.SetNonWorking(New DateTime(2005,1,1), New DateTime(2005, 1,7))
            </code>
            </example>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.WorkingTimesGrid" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.WorkingTimesEditor" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.WorkingTimesDialog" />
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.#ctor">
            <summary>
            Creates a new <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> based on the standard calendar.
            </summary>
            <remarks>Creates a new calendar with the standard calendar as the base calendar.</remarks>
            <seealso cref="F:NickLee.Views.Gantt.WorkCalendar.Standard" />
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> based on the standard calendar.
            </summary>
            <remarks>Creates a new calendar with the standard calendar as the base calendar.</remarks>
            <param name="name">The name of the calendar.</param>
            <seealso cref="F:NickLee.Views.Gantt.WorkCalendar.Standard" />
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.#ctor(System.String,NickLee.Views.Gantt.WorkCalendar)">
            <summary>
            Creates a new <see cref="T:NickLee.Views.Gantt.WorkCalendar" />.
            </summary>
            <param name="name">The name of the calendar.</param>
            <param name="baseCalendar">The base calendar or <see langword="null" /> to create a base calendar. Note
            that the parameter must be a base calendar.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.Add(System.DateTime,System.TimeSpan)">
            <summary>
            Adds the specified amount of work to the specified date.
            </summary>
            <param name="time">The <see cref="T:System.DateTime" /> object.</param>
            <param name="work">A <see cref="T:System.TimeSpan" /> representing the amount of work to add.  If the
            value is a negative value the method will return <paramref name="time" />.</param>
            <returns>The resulting date and time.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.BeginInit">
            <summary>
            Begins the initialization of a <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> that is used on a form or used
            by another component. The initialization occurs at run time.
            </summary>
            <remarks>The Visual Studio .NET design environment uses this method
            to start the initialization of a component that is used on a form
            or used by another component. The <see cref="M:NickLee.Views.Gantt.WorkCalendar.EndInit" /> method ends the
            initialization. The use of <strong>BeginInit</strong> and <strong>EndInit</strong> methods prevents the
            control from being used before it is fully initialized.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.Clone">
            <summary>
            Creates a copy of this calendar.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.CopyFrom(NickLee.Views.Gantt.WorkCalendar)">
            <summary>
            Copies the working time specification from the specified calendar
            </summary>
            <remarks>The method copies all the working and nonworking times of the specified
            calendar to this calendar. All the information of this calendar is replaced by the information
            from the specified calendar. Only the name is not changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.Create24Hours">
            <summary>
            Create the 24Hours Calendar
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.CreateDefaultWorkingDay(NickLee.Views.Gantt.WorkCalendar,System.DayOfWeek)">
            <summary>
            Creates default working day with default working times
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.CreateNightShift">
            <summary>
            Create the NightShift Calendar
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.CreateStandard">
            <summary>
            Create the Standard Calendar
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.Dispose(System.Boolean)">
            <summary>
            Disposes the object.
            </summary>
            <remarks>The method disposes the calendar. If the calendar is the base
            calendar of other calendars, the sub calendars are not disposed but since
            their base calendar is disposed,
            their base calendar is changed to the calendar <see cref="F:NickLee.Views.Gantt.WorkCalendar.Standard" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.EndInit">
            <summary>
            Ends the initialization of a <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> that is used on a form or
            used by another component. The initialization occurs at run time.
            </summary>
            <remarks>
            The Visual Studio .NET design environment uses this method to end
            the initialization of a component that is used on a form or used by
            another component. The <see cref="M:NickLee.Views.Gantt.WorkCalendar.BeginInit" /> method starts the initialization.
            The use of <strong>BeginInit</strong> and <strong>EndInit</strong> methods prevents the control
            from being used before it is fully initialized.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.Equals(NickLee.Views.Gantt.WorkCalendar)">
            <summary>
            Tests if the calendar is the same as another calendar.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.FireEvent(System.Object,System.EventArgs)">
            <summary>
            Fires an event based on key in the Events list.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.GetPeriods">
            <summary>
            Gets all the specific period defined in this calendar.
            </summary>
            <remarks>Returns an array of <see cref="T:NickLee.Views.Gantt.WorkingPeriod" /> that represent
            a nonworking period or a working period with special working times.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.GetWorkingTimes(System.DateTime)">
            <summary>
            Gets the working times for the specified date.
            </summary>
            <param name="date">The date.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.GetWorkingTimes(System.DayOfWeek)">
            <summary>
            Gets the working times for the specified week day.
            </summary>
            <param name="dayOfWeek">The week day.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.HasNextNonWorkingTime(System.DateTime)">
            <summary>
            Checks if there is a non-working period following the specified date.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.HasNextWorkingTime(System.DateTime)">
            <summary>
            Checks if there is a working time following the specified date.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.HasPreviousWorkingTime(System.DateTime)">
            <summary>
            Checks if there is a working time before the specified date.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.HasStandardWorkingTimes(System.DateTime)">
            <summary>
            Indicates if the specified date has standard working times.
            </summary>
            <param name="date">The date to test.</param>
            <returns><see langword="true" /> if the working times are from 8AM to 12AM and from 1PM to 5PM.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.HasStandardWorkingTimes(System.DayOfWeek)">
            <summary>
            Indicates if the specified day of week has standard working times.
            </summary>
            <param name="dayOfWeek">The day of week.</param>
            <returns><see langwork="true" /> if the working times are from 8AM to 12AM and from 1PM to 5PM.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.InheritBasePeriods">
            <summary>
            Inherit periods from base calendar.
            Removes all old base periods if any ank keep specific periods.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.IsDefaultDayOfWeek(System.DayOfWeek)">
            <summary>
            Checks is the week days uses default specification.
            </summary>
            <param name="dayOfWeek"></param>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.IsDefaultWorkingDay(System.DateTime)">
            <summary>
            Indicates if the specified date has default (base calendar) specification.
            </summary>
            <param name="date">The date.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.IsDefaultWorkingDay(System.DayOfWeek)">
            <summary>
            Indicates if the specified day of week has default (base calendar) specification.
            </summary>
            <param name="dayOfWeek">The day of week.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.IsModifiedFromBaseCalendar">
            <summary>
            Checks if the calendar is modified from its base calendar.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.IsModifiedPeriod(System.DateTime)">
            <summary>
            Indicates if the specified date is in a period modififed from the base calendar.
            </summary>
            <param name="date">The date.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.IsWorkingDay(System.DateTime)">
            <summary>
            Indicates if the specified date is a working day.
            </summary>
            <param name="date">The date to test.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.IsWorkingDay(System.DayOfWeek)">
            <summary>
            Indicates if the specified day of week is a working day.
            </summary>
            <param name="dayOfWeek">The day of week.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.NextNonWorkingTime(System.DateTime)">
            <summary>
            Computes the next non-working date and time from the specified date.
            </summary>
            <param name="time">The date/time.</param>
            <returns>The resulting date and time.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.NextWorkingTime(System.DateTime)">
            <summary>
            Computes the next working date and time from the specified date.
            </summary>
            <param name="time">The date/time.</param>
            <returns>The resulting date and time.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.OnBaseCalendarChanged">
            <summary>
            Invoked when the base calendar has changed in some way.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.OnCalendarNameChanged(System.Object,System.EventArgs)">
            <summary>
            Invoked when the name of the calendar has changed.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.OnChanged(System.EventArgs)">
            <summary>
            Invoked when the calendar changes in some way.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.PreviousWorkingTime(System.DateTime)">
            <summary>
            Computes the previous working date and time from the specified date.
            </summary>
            <remarks>The method computes the previous working time from a specified date.</remarks>
            <param name="time">The date/time.</param>
            <returns>The resulting date and time.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.Remove(System.DateTime,System.TimeSpan)">
            <summary>
            Removes the specified amount of work from the specified date.
            </summary>
            <remarks>The method computes a new date by removing the specified amount of
            working time from the specified date.</remarks>
            <param name="time">The <see cref="T:System.DateTime" /> object.</param>
            <param name="work">A <see cref="T:System.TimeSpan" /> representing the amount of work to remove. If the
            value is a negative value the method will return <paramref name="time" />.</param>
            <returns>The resulting date and time.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.ResetToDefault(System.DayOfWeek)">
            <summary>
            Specifies that the week day uses default specification from the base calendar.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.ResetToDefault(System.DateTime,System.DateTime)">
            <summary>
            Resets the specified period to default working/nonworking times.
            </summary>
            <param name="start">The start date of the period.</param>
            <param name="end">The end date of the period.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.SetNonWorking(System.DayOfWeek)">
            <summary>
            Sets the specified day of week as a non-working day.
            </summary>
            <param name="dayOfWeek">The day of week.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.SetNonWorking(System.DateTime,System.DateTime)">
            <summary>
            Sets the specified period as a non-working period.
            </summary>
            <param name="from">The start date of the period.</param>
            <param name="to">The end date of the period.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.SetWorkingTimes(System.DayOfWeek,NickLee.Views.Gantt.WorkingTime[])">
            <summary>
            Sets the working times for the specified week day.
            </summary>
            <param name="dayOfWeek">The week day.</param>
            <param name="times">The new working times.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.SetWorkingTimes(System.DateTime,System.DateTime,NickLee.Views.Gantt.WorkingTime[])">
            <summary>
            Changes the working times on the specified period.
            </summary>
            <param name="from">The start date of the period.</param>
            <param name="to">The end date of the period.</param>
            <param name="times">The working times.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.StandardWorkBetween(System.DateTime,System.DateTime)">
            <summary>
            Computes the work between two dates without considering specific
            working or nonworking periods.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.ToString">
            <summary>
            Converts the object to a string representation.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkCalendar.WorkBetween(System.DateTime,System.DateTime)">
            <summary>
            Computes the amount of working time between the two specified dates.
            </summary>
            <remarks>
            The method computes the amount of working time between the two specified dates.
            The result can be a negative time span if the second parameter is smaller than
            the first one.
            </remarks>
        </member>
        <member name="F:NickLee.Views.Gantt.WorkCalendar._baseCalendar">
            <summary>
            The base calendar if any.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.WorkCalendar._calendar">
            <summary>
            A Calendar for date computation.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.WorkCalendar._disableevents">
            <summary>
            Temporary disable OnChanged events.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.WorkCalendar._initializing">
            <summary>
            For Begin/EndInit
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.WorkCalendar._name">
            <summary>
            Name of calendar.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.WorkCalendar._periods">
            <summary>
            List of periods (Period) defining specific
            working or nonworking periods
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.WorkCalendar._subCalendars">
            <summary>
            Array of weak reference on sub calendars
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.WorkCalendar._workingDays">
            <summary>
            Specifies the working times for each day of week.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.WorkCalendar.NightShift">
            <summary>
            Defines the night shift work calendar.
            </summary>
            <remarks>This calendar is a base calendar with
            no non-working periods. Note that you cannot change this calendar.
            </remarks>
        </member>
        <member name="F:NickLee.Views.Gantt.WorkCalendar.OneDay">
            <summary>
            One day or 24 hours ticks.
            </summary>
            <remarks>This calendar is a base calendar.
            Note that you cannot change this calendar.
            </remarks>
        </member>
        <member name="F:NickLee.Views.Gantt.WorkCalendar.Standard">
            <summary>
            Defines the standard calendar.
            </summary>
            <remarks>This calendar is a base calendar that defines
            the week-end as a non-working period
            and working times from 8 AM to 12 AM and
            from 1PM to 5PM. Note that you cannot change this calendar.
            </remarks>
        </member>
        <member name="F:NickLee.Views.Gantt.WorkCalendar.TwentyFourHours">
            <summary>
            Defines the 24hours work calendar.
            </summary>
            <remarks>This calendar is a base calendar with
            no non-working periods. Note that you cannot change this calendar.
            </remarks>
        </member>
        <member name="E:NickLee.Views.Gantt.WorkCalendar.CalendarNameChanged">
            <summary>
            Occurs when the name of the calendar has changed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.WorkCalendar.Changed">
            <summary>
            Occurs when the calendar has changed.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.WorkCalendar.BaseCalendar">
            <summary>
            Gets or sets the base calendar.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> that represents the base calendar of this calendar or <see langword="null" />
            is this calendar is a base calendar.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.WorkCalendar.CalendarName">
            <summary>
            Gets or sets the name of the calendar.
            </summary>
            <value>A string that represents the name of the calendar.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.WorkCalendar.IsBaseCalendar">
            <summary>
            Indicates if the calendar is a base calendar.
            </summary>
            <value><see langword="true" /> if the calendar is a base calendar; <see langword="false" /> otherwise.</value>
            <remarks>A base calendar is a calendar that can be used as a
            base of other calendars.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.WorkCalendar.IsPredefinedCalendar">
            <summary>
            Indicates whether the calendar is one of the predefined calendars.
            </summary>
            <value><see langword="true" /> if the calendar is one of the static calendars (<see cref="F:NickLee.Views.Gantt.WorkCalendar.Standard" />,
            <see cref="F:NickLee.Views.Gantt.WorkCalendar.TwentyFourHours" /> and <see cref="F:NickLee.Views.Gantt.WorkCalendar.NightShift" />); <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.WorkCalendar.WorkInOneWeek">
            <summary>
            Gets the amount of work in a normal week
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.WorkingTimesDialog">
            <summary>
            Defines a dialog box for editing a <see cref="T:NickLee.Views.Gantt.WorkCalendar" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.WorkingTimesDialog.#ctor">
            <summary>
            Creates a new <see cref="T:NickLee.Views.Gantt.Windows.Forms.WorkingTimesDialog" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.WorkingTimesDialog.ApplyCalendarModification">
            <summary>
            Applies the modifications to the edited calendar.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.WorkingTimesDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.WorkingTimesDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.WorkingTimesDialog.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)">Form.ProcessDialogKey</see>
            </summary>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.WorkingTimesDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.WorkingTimesDialog.Calendar">
            <summary>
            Gets or sets the edited calendar.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> that is currently edited.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.WorkingTimesDialog.FirstVisibleDate">
            <summary>
            Gets or sets the first visible date in the calendar
            displaying working times.
            </summary>
            <value>A <see cref="T:System.DateTime" /> that represents the first visible
            date in the calendar displaying working times.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPageSetupDialog">
            <summary>
            Defines a dialog box that allows you to configure the printing of a Gantt chart.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPageSetupDialog.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPageSetupDialog" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPageSetupDialog.Dispose(System.Boolean)">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPageSetupDialog.Initialize">
            <summary>
            Initializes the dialog box fields according to the current document.
            </summary>
            <exception cref="T:System.NullReferenceException">The <strong>Document</strong> property
            is <see langword="null" />.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPageSetupDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPageSetupDialog.SetUpDocument">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Windows.Forms.Printing.DocumentPageSetupDialog.SetUpDocument">DocumentPageSetupDialog.SetUpDocument</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPageSetupDialog.UpdateFields">
            <summary>
            Updates the value of the fields of the dialog.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPageSetupDialog.AutoScaleBaseSize">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Form.AutoScaleBaseSize">Form.AutoScaleBaseSize</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPageSetupDialog.ClientSize">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Form.ClientSize">Form.ClientSize</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPageSetupDialog.Document">
            <summary>
            Gets or sets the document.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPrintDocument" /> object that represents the document to print.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPageSetupDialog.Text">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.Text">Control.Text</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.LayoutReservationsEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.LayoutReservations" /> event of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LayoutReservationsEventArgs.GetYPosition(System.Int32)">
            <summary>
            Gets the vertical position of the reservation at the specified index.
            </summary>
            <param name="index">The zero-based index of the reservation.</param>
            <returns>The vertical position of the reservation at the specified index.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LayoutReservationsEventArgs.GetZOrder(System.Int32)">
            <summary>
            Gets the z-order of the reservation at the specified index.
            </summary>
            <param name="index">The zero-based index of the reservation.</param>
            <returns>The z-order of the reservation at the specified index.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LayoutReservationsEventArgs.SetYPosition(System.Int32,System.Single)">
            <summary>
            Sets the vertical position of the reservation at the specified index.
            </summary>
            <param name="index">The zero-based index of the reservation.</param>
            <param name="position">The new vertical position of the reservation.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.LayoutReservationsEventArgs.SetZOrder(System.Int32,System.Int32)">
            <summary>
            Sets the z-order of the reservation at the specified index.
            </summary>
            <param name="index">The zero-based index of the reservation.</param>
            <param name="zOrder">The new zOrder of the reservation.</param>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.LayoutReservationsEventArgs.Reservations">
            <summary>
            Gets the collection of reservations being layouted.
            </summary>
            <value>A <see cref="T:System.Collections.ICollection" /> that contains <see cref="T:NickLee.Views.Gantt.Data.IReservation" />
            instances.</value>
            <remarks>The reservations of this collection are sorted by their start time.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.LayoutReservationsEventArgs.Resource">
            <summary>
            Gets the resource for which the layout of reservations is being done.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> for which the layout of reservations
            is being done.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.HitTestConstraintLinkEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.HitTestConstraintLink" /> event of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.EditedReservation">
            <summary>
            Private class for editing predecessors
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.Design.ScrollGanttSheetAutoFormatDialog">
            <summary>
            A <c>Dialog</c> to choose predefined styles for a ScrollGanttSheet.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.ScrollGanttSheetAutoFormatDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.BarSymbolShape">
            <summary>
            Specifies the shape of symbols that can be displayed at the beginning or
            at the end of an activity bar.
            </summary>
            <remarks>Use the members of this enumeration to set the
            value of the <see cref="P:NickLee.Views.Gantt.Windows.Forms.BarSymbol.Shape" /> property in the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.BarSymbol" /> class. The default value is <strong>None</strong>
            </remarks>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.BarSymbol" />
        </member>
        <member name="T:NickLee.Views.Gantt.Web.UI.LoadChart">
            <summary>
            A chart that displays the load of a resource.
            </summary>
            <remarks>
            <p>The <see cref="T:NickLee.Views.Gantt.Web.UI.LoadChart" /> displays an area chart where the x-axis
            represents time and the y-axis represents the load of the resource.</p>
            <p><img src="loadchart.png" /></p>
            <p>The resource displayed by the chart can be set using the <see cref="P:NickLee.Views.Gantt.Web.UI.LoadChart.Resource" /> or
            <see cref="P:NickLee.Views.Gantt.Web.UI.LoadChart.ResourceID" /> properties of the <strong>LoadChart</strong> class. Once the resource
            is set, the load of a resource during a time period is computed according to the
            <see cref="P:NickLee.Views.Gantt.Data.IResource.MaxUnits" /> property of the resource and the activities that
            have been assigned to this resource during the period (see the
            <see cref="P:NickLee.Views.Gantt.Data.IResource.Reservations" /> property of the <see cref="T:NickLee.Views.Gantt.Data.IResource" />
            interface).</p>
            <p>The control defines vertical time grids through the <see cref="P:NickLee.Views.Gantt.Web.UI.LoadChart.TimeGrids" />
            property that contains a collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> objects. It can also
            display vertical lines displaying particular dates such as the current date through
            the <see cref="P:NickLee.Views.Gantt.Web.UI.LoadChart.DateIndicators" /> property.</p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.LoadChart.#ctor">
            <summary>
            Creates and initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Web.UI.LoadChart" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.LoadChart.AddParsedSubObject(System.Object)">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.AddParsedSubObject(System.Object)">Control.AddParsedSubObject</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.LoadChart.Dispose">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.Dispose">Control.Dispose</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.LoadChart.FilterViewStateProperties(System.Collections.IDictionary)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Web.UI.ImageControl.FilterViewStateProperties(System.Collections.IDictionary)">ImageControl.FilterViewStateProperties</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.LoadChart.AutoScaleUpdate">
            <summary>
            Gets or sets a value indicating if the maximum of the scale is updating
            with the visible reservations.
            </summary>
            <value>
            <see langword="true" /> if the maximum value of the scale is calculated with the
            visible reservations; <see langword="false" /> otherwise.
            </value>
            <remarks>When this property returns <see langword="false" />, the maximum value used for the scale
            is taken from the <see cref="P:NickLee.Views.Gantt.Web.UI.LoadChart.MaxScaleValue" /> property.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.LoadChart.BackColor">
            <summary>
            Gets or sets the background color of the chart.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the background.
            The default value is the system color for windows (<see cref="P:System.Drawing.SystemColors.Window">SystemColors.Window</see>).
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.LoadChart.BackgroundColor">
            <summary>
            Gets or sets the background color of the nonchart area of the control.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the nonchart area background.
            The default value inherits from the <see cref="P:NickLee.Views.Gantt.Web.UI.LoadChart.BackColor" /> property.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.LoadChart.ChartColor">
            <summary>
            Gets or sets the color of the bars of the load chart.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the bars.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.LoadChart.ChartPosition">
            <summary>
            Gets or sets the horizontal position of the chart.
            </summary>
            <value>
            An integer value that represents the horizontal position of the chart.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.LoadChart.DateIndicators">
            <summary>
            Gets the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicator" /> displayed in the control.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.DateIndicatorCollection" /> that defines the date indicators displayed on the control.</value>
            <example>
            <para lang="C#,Visual Basic">
            The following example adds a <see cref="T:NickLee.Views.Gantt.Windows.Forms.CurrentDateIndicator" /> in a <see cref="T:NickLee.Views.Gantt.Web.UI.LoadChart" />.
            </para>
            <code lang="C#">
            public void AddDateIndicator(LoadChart chart) {
            CurrentDateIndicator dateIndicator = new CurrentDateIndicator();
            chart.DateIndicators.Add(dateIndicator);
            }
            </code>
            <code lang="Visual Basic">
            Sub AddDateIndicator(ByVal chart As LoadChart)
            Dim dateIndicator As CurrentDateIndicator = New CurrentDateIndicator
            chart.DateIndicators.Add(dateIndicator)
            End Sub
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.LoadChart.EnableDateIndicatorsViewState">
            <summary>
            Gets or sets a value indicating whether the <see cref="P:NickLee.Views.Gantt.Web.UI.LoadChart.DateIndicators" /> property
            should be serialized into the view state.
            </summary>
            <value><see langword="true" /> if the <strong>DateIndicators</strong> property should
            be serialized into the view state; otherwise, <see langword="false" />.
            The default value is <see langword="true" />.</value>
            <remarks>If you do not modify the date indicators of the load chart during round-trips,
            you should set this property to <see langword="false" /> to speed up page loading.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.LoadChart.EnableTimeGridViewState">
            <summary>
            Gets or sets a value indicating whether the <see cref="P:NickLee.Views.Gantt.Web.UI.LoadChart.TimeGrids" /> property
            should be serialized into the view state.
            </summary>
            <value><see langword="true" /> if the <strong>TimeGrids</strong> property should
            be serialized into the view state; otherwise, <see langword="false" />.
            The default value is <see langword="true" />.</value>
            <remarks>If you do not modify the time grids of the load chart during round-trips,
            you should set this property to <see langword="false" /> to speed up page loading.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.LoadChart.ForeColor">
            <summary>
            Gets or sets the foreground color used for scale labels.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the color of scale labels.
            The default value is the value for window text
            (<see cref="P:System.Drawing.SystemColors.WindowText">SystemColors.WindowText</see>).
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.LoadChart.GanttModel">
            <summary>
            Gets or sets the Gantt data model (<see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />)
            containing the data to display in this control.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> that contains the data to display in the chart.</value>
            <remarks>Changing this property may also change the <see cref="P:NickLee.Views.Gantt.Web.UI.LoadChart.Resource" /> property.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.LoadChart.GridLineColor">
            <summary>
            Gets or sets the color of the grid line.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the grid lines.
            The default value is the system color for controls (<see cref="P:System.Drawing.SystemColors.Control">SystemColors.Control</see>).
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.LoadChart.GridLineStyle">
            <summary>
            Gets or sets the style of horizontal grid lines.
            </summary>
            <value>
            One of the <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle" /> values.
            The default value is <strong>Solid</strong>.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.LoadChart.IsMaterialResource">
            <summary>
            Gets or sets a value indicating if the resource is a material or not.
            </summary>
            <value>
            <see langword="true" /> if the resource is a material;
            <see langword="false" /> otherwise.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.LoadChart.MaxLineColor">
            <summary>
            Gets or sets the color of the line which represents the maximum number of units
            the resource can handle.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the line.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.LoadChart.MaxScaleValue">
            <summary>
            Gets or sets the maximum value of the scale.
            </summary>
            <value>An integer that represents the maximum value for the scale.</value>
            <remarks>This value is only used if the property <see cref="P:NickLee.Views.Gantt.Web.UI.LoadChart.AutoScaleUpdate" /> returns
            <see langword="false" />. If the value of this property is <see langword="null" /> or negative, the maximum value
            used for the scale is the maximum load for the resource, not restricted to the visible period.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.LoadChart.Resource">
            <summary>
            Gets or sets the resource that is displayed.
            </summary>
            <value>
            A <see cref="T:NickLee.Views.Gantt.Data.IResource" /> value that represents
            the resource to be displayed.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.LoadChart.ResourceID">
            <summary>
            Gets or sets the identifier of the resource to display in the control.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the unique identifier of the
            resource to display in the control.</value>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.LoadChart.GanttModel" />
            <exception cref="T:System.ArgumentNullException">The property value is <see langword="null" />.</exception>
            <remarks><p>Changing this property may also change the <see cref="P:NickLee.Views.Gantt.Web.UI.LoadChart.Resource" /> property.</p>
            <p>To set the model from which the resource should be retrieved, use the
            <see cref="P:NickLee.Views.Gantt.Web.UI.LoadChart.GanttModel" /> property.</p>
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.LoadChart.ScaleBBox">
            <summary>
            Gets the rectangle where the scale is displayed.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Rectangle" /> structure.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.LoadChart.TimeGrids">
            <summary>
            Gets the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> displayed in the load chart.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection" /> that defines the grids
            displayed on the load chart.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Web.UI.Design.HierarchyChartDesigner">
            <summary>
            Defines a designer for the <see cref="T:NickLee.Views.Gantt.Web.UI.HierarchyChart" /> control.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.Design.HierarchyChartDesigner.Verbs">
            <summary>
            Overridden. See <see cref="P:System.ComponentModel.Design.ComponentDesigner.Verbs">ComponentDesigner.Verbs</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.ResourceTimeRange">
            <summary>
            This implementation of the <see cref="T:NickLee.Views.Gantt.ITimeRange" /> interface listens to a
            <see cref="T:NickLee.Views.Gantt.Data.IResource" /> and automatically adjusts its bounds according to
            its reservations.
            </summary>
            <remarks>
            <p>This class can be used to update the time bounds of a
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.LoadChart" />.</p>
            <p>To connect a <strong>ResourceTimeRange</strong> to a resource,
            use the <see cref="P:NickLee.Views.Gantt.ResourceTimeRange.Resource" /> property.</p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.ResourceTimeRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.ResourceTimeRange" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.ResourceTimeRange.#ctor(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.ResourceTimeRange" /> class connected
            to the specified <see cref="T:NickLee.Views.Gantt.Data.IResource" /> instance.
            </summary>
            <param name="resource">A <see cref="T:NickLee.Views.Gantt.Data.IResource" /> instance to listen to.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.ResourceTimeRange.OnGanttModelChanged">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.GanttTimeRange.OnGanttModelChanged">GanttTimeRange.OnGanttModelChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.ResourceTimeRange.OnGanttModelChanging">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.GanttTimeRange.OnGanttModelChanging">GanttTimeRange.OnGanttModelChanging</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.ResourceTimeRange.Resource">
            <summary>
            Gets or sets the resource to listen to.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Data.IResource" /> instance to listen to.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.SimpleResource">
            <summary>
            Defines a relatively simple, memory-based implementation of the <see cref="T:NickLee.Views.Gantt.Data.IResource" />
            interface that can be extended in a straightforward manner for more complex needs.
            </summary>
            <remarks>
            <see cref="T:NickLee.Views.Gantt.Data.SimpleResource" /> does not provide any connection to a persistent datastore
            itself. See <see cref="T:NickLee.Views.Gantt.Data.GanttModelAdapter" /> for using a Gantt data model with ADO.NET.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to populate a <see cref="T:NickLee.Views.Gantt.Data.SimpleGanttModel" />.
            </para>
            <code lang="C#">
            private void Populate(IGanttModel model) {
            IActivity activity;
            IResource[] resources = new IResource[10];
            IActivity[] activities = new IActivity[20];
            IReservation[] reservations = new IReservation[20];

            for (int i = 0; i &lt; 10; ++i) {
            // First create the resource...
            resources[i] = model.NewResource();
            resources[i].Name = "Room " + i.ToString();

            // Add a conference in the morning
            activity = model.NewActivity();
            activity.Name = "Morning Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4));
            activities[i*2] = activity;

            // Create the reservation for this activity
            reservations[i*2] = model.NewReservation(activity, resources[i]);

            // Add a conference in the afternoon
            activity = model.NewActivity();
            activity.Name = "Afternoon Session " + i.ToString();
            activity.TimeInterval = new DateTimeInterval(new DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4));
            activities[i*2 + 1] = activity;

            // Create the reservation for this activity
            reservations[i*2 + 1] = model.NewReservation(activity, resources[i]);
            }
            model.Activities.AddRange(activities);
            model.Resources.AddRange(resources);
            model.Reservations.AddRange(reservations);
            }
            </code>
            <code lang="Visual Basic">
            Sub Populate(ByVal model As IGanttModel)
            Dim activity As IActivity
            Dim resources(10) As IResource
            Dim activities(20) As IActivity
            Dim reservations(20) As IReservation

            For i As Integer = 0 To 9

            ' First create the resource...
            resources(i) = model.NewResource()
            resources(i).Name = "Room " + i.ToString()

            ' Add a conference in the morning
            activity = model.NewActivity()
            activity.Name = "Morning Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 8, 0, 0), TimeSpan.FromHours(4))
            activities(i * 2) = activity

            ' Create the reservation for this activity
            reservations(i * 2) = model.NewReservation(activity, resources(i))

            ' Add a conference in the afternoon
            activity = model.NewActivity()
            activity.Name = "Afternoon Session " + i.ToString()
            activity.TimeInterval = New DateTimeInterval(New DateTime(2003, 7, 1, 13, 30, 0), TimeSpan.FromHours(4))
            activities(i * 2 + 1) = activity

            ' Create the reservation for this activity
            reservations(i * 2 + 1) = model.NewReservation(activity, resources(i))

            Next

            model.Activities.AddRange(activities)
            model.Resources.AddRange(resources)
            model.Reservations.AddRange(reservations)
            End Sub
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleResource.#ctor(NickLee.Views.Gantt.Data.SimpleGanttModel)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.SimpleResource" /> class.
            </summary>
            <param name="model">The Gantt model.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleResource.GetCustomProperty(System.String)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.GetCustomProperty(System.String)">BaseActivity.GetCustomProperty</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleResource.GetID">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseResource.GetID">BaseResource.GetID</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleResource.GetInfo">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseResource.GetInfo">BaseResource.GetInfo</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleResource.GetMaxUnits">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseResource.GetMaxUnits">BaseResource.GetMaxUnits</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleResource.GetName">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseResource.GetName">BaseResource.GetName</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleResource.SetCustomProperty(System.String,System.Object)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseActivity.SetCustomProperty(System.String,System.Object)">BaseActivity.SetCustomProperty</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleResource.SetID(System.String)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseResource.SetID(System.String)">BaseResource.SetID</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleResource.SetInfo(System.String)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseResource.SetInfo(System.String)">BaseResource.SetInfo</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleResource.SetMaxUnits(System.Single)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseResource.SetMaxUnits(System.Single)">BaseResource.SetMaxUnits</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SimpleResource.SetName(System.String)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Data.BaseResource.SetName(System.String)">BaseResource.SetName</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.SchedulingReservation">
            <summary>
            Defines a reservation for the <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModel" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SchedulingReservation.#ctor(NickLee.Views.Gantt.Data.ProjectSchedulingModel,NickLee.Views.Gantt.Data.SchedulingActivity,NickLee.Views.Gantt.Data.SchedulingResource)">
            <summary>
            Creates and initializes a new <see cref="T:NickLee.Views.Gantt.Data.SchedulingReservation" />.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingReservation.GanttModel">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModel" /> that containts the reservation.
            </summary>
            <value>
            The <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModel" /> that contains the reservation.
            </value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.SchedulingConstraint">
            <summary>
            Defines a constraint in a <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModel" />.
            </summary>
            <remarks>A <see cref="T:NickLee.Views.Gantt.Data.SchedulingConstraint" /> represents a dependency between two activities in the
            model. The two activities are defined by the <see cref="P:NickLee.Views.Gantt.Data.IConstraint.FromActivity" /> and
            <see cref="P:NickLee.Views.Gantt.Data.IConstraint.ToActivity" /> properties. The constraint also defines a constraint
            type (<see cref="P:NickLee.Views.Gantt.Data.IConstraint.Type" />). For example
            if the constraint type is <see cref="F:NickLee.Views.Gantt.Data.ConstraintType.EndToStart" /> if indicates that the sucessor can
            start only when the predecessor is finished.
            A lead time (an overlap between the two activities) or a lag time (a delay between the activities) can
            be specified using the <see cref="P:NickLee.Views.Gantt.Data.SchedulingConstraint.Lag" /> and <see cref="P:NickLee.Views.Gantt.Data.SchedulingConstraint.LagFormat" /> properties.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SchedulingConstraint.#ctor(NickLee.Views.Gantt.Data.ProjectSchedulingModel,NickLee.Views.Gantt.Data.SchedulingActivity,NickLee.Views.Gantt.Data.SchedulingActivity,NickLee.Views.Gantt.Data.ConstraintType)">
            <summary>
            Creates and initializes a new <see cref="T:NickLee.Views.Gantt.Data.SchedulingConstraint" />.
            </summary>
            <param name="model">A <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModel" /> that represents the project where the constraint will be added.</param>
            <param name="from">A <see cref="T:NickLee.Views.Gantt.Data.SchedulingActivity" /> that represents the origin of the constraint.</param>
            <param name="to">A <see cref="T:NickLee.Views.Gantt.Data.SchedulingActivity" /> that represents the origin of the constraint.</param>
            <param name="type">A <see cref="T:NickLee.Views.Gantt.Data.ConstraintType" /> that represents the constraint type.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SchedulingConstraint.AddLag(System.DateTime)">
            <summary>
            Adds the lag time of the contraint to the specified date.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SchedulingConstraint.GetLag">
            <summary>
            Returns the lead or lag time of the constraint expressed as a <see cref="T:System.TimeSpan" />.
            </summary>
            <remarks>
            Gets the lead or lag time for the constaint. A lead time is an overlap
            between the two activities, a lag time represents a delay between the two activities.
            A positive value represents a lag time, a negative value represents a lead time. To set
            a lead or lag time see the <see cref="P:NickLee.Views.Gantt.Data.SchedulingConstraint.Lag" /> and <see cref="P:NickLee.Views.Gantt.Data.SchedulingConstraint.LagFormat" /> property.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SchedulingConstraint.RemoveLag(System.DateTime)">
            <summary>
            Removes the lag time of the contraint to the date.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingConstraint.GanttModel">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModel" /> that containts the constraint.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModel" /> that containts the constraint.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingConstraint.Lag">
            <summary>
            Gets or sets the lead or lag time for the constraint expressed as 10th of minutes or as a percentage.
            </summary>
            <value>
            An <see cref="T:System.Int32" /> value that represents the lead or lag time for the constraint. The
            default value is zero. A lead time is an overlap
            between the two activities, a lag time represents a delay between the two activities.
            A positive value represents a lag time, a negative value represents a lead time.
            Depending on the value of the <see cref="P:NickLee.Views.Gantt.Data.SchedulingConstraint.LagFormat" /> property the value must be interpreted differently.
            If the value of the <see cref="P:NickLee.Views.Gantt.Data.SchedulingConstraint.LagFormat" /> is <see cref="F:NickLee.Views.Gantt.Data.LagFormat.EllapsedDuration" /> or
            <see cref="F:NickLee.Views.Gantt.Data.LagFormat.Duration" /> then the value represents 10th of minutes otherwise the value represents a
            percentage. You may use the <see cref="M:NickLee.Views.Gantt.Data.SchedulingConstraint.GetLag" /> method to compute the lead or
            lag time as a <see cref="T:System.TimeSpan" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingConstraint.LagFormat">
            <summary>
            Gets or sets the format for the lead or lag time of the constraint.
            </summary>
            <value>
            One of the <see cref="T:NickLee.Views.Gantt.Data.LagFormat" /> values. The default value is <see cref="F:NickLee.Views.Gantt.Data.LagFormat.Duration" />.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Data.SchedulingConstraint.Lag" />
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttDescriptor">
            <summary>
            Provides information about the properties of a Gantt type.
            </summary>
            <remarks>This class provides the <see cref="M:NickLee.Views.Gantt.Data.GanttDescriptor.GetSerializableProperties(System.Object)" /> and
            <see cref="M:NickLee.Views.Gantt.Data.GanttDescriptor.GetBrowsableProperties(System.Object)" /> method to find the properties of a Gantt type.</remarks>
            <seealso cref="T:NickLee.Views.Gantt.Data.GanttPropertyAttribute" />.
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDescriptor.GetBrowsableProperties(System.Object)">
            <summary>
            Gets the collection of browsable properties for a specified Gantt object.
            </summary>
            <param name="instance">A Gantt object.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the browsable properties
            for the specified Gantt object.
            </returns>
            <remarks>Browsable properties are available to dialogs or to expressions.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDescriptor.GetBrowsableProperties(System.Type,System.Type,NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Gets the collection of browsable properties for a specified Gantt type.
            </summary>
            <param name="baseType">The base type of <paramref name="type" />.</param>
            <param name="type">A Gantt type.</param>
            <param name="model">A Gantt model that may be used to retrieve dynamic properties.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the browsable properties
            for the specified Gantt object.
            </returns>
            <remarks><p>Browsable properties are available to dialogs or to expressions.</p>
            <p>The <paramref name="model" /> parameter is only used if <paramref name="model" />
            implements the <see cref="T:NickLee.Views.Gantt.Data.IPropertyDescriptorProvider" /> interface.</p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDescriptor.GetSerializableProperties(System.Object)">
            <summary>
            Gets the collection of serializable properties for a specified Gantt object.
            </summary>
            <param name="instance">A Gantt object.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the serializable properties
            for the specified Gantt object.
            </returns>
            <remarks>Serializable properties are serialized by the <see cref="T:NickLee.Views.Gantt.Data.GanttModelXmlSerializer" />
            class.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttDescriptor.GetSerializableProperties(System.Type,System.Type,NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Gets the collection of serializable properties for a specified Gantt type.
            </summary>
            <param name="baseType">The base type of <paramref name="type" />.</param>
            <param name="type">A Gantt type.</param>
            <param name="model">A Gantt model that may be used to retrieve dynamic properties.</param>
            <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> with the serializable properties
            for the specified Gantt type.
            </returns>
            <remarks><p>Serializable properties are serialized by the
            <see cref="T:NickLee.Views.Gantt.Data.GanttModelXmlSerializer" /> class.</p>
            <p>The <paramref name="model" /> parameter is only used if <paramref name="model" />
            implements the <see cref="T:NickLee.Views.Gantt.Data.IPropertyDescriptorProvider" /> interface.</p>
            </remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.BaseReservationCollection">
            <summary>
            Defines a collection of <see cref="T:NickLee.Views.Gantt.Data.BaseReservation" /> objects.
            </summary>
            <remarks>This class is used by the <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModel" /> class.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReservationCollection.#ctor(NickLee.Views.Gantt.Data.BaseGanttModel)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.BaseReservationCollection" /> class.
            </summary>
            <param name="model">The Gantt data model.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReservationCollection.Add(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Adds the specified reservation at the end of the collection.
            </summary>
            <param name="reservation">The <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> to add.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReservationCollection.AddRange(NickLee.Views.Gantt.Data.IReservation[])">
            <summary>
            Adds the specified reservations at the end of the collection.
            </summary>
            <param name="reservations">An array of <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> objects.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReservationCollection.Clear">
            <summary>
            Clears the collection.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReservationCollection.Contains(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Determines if the specified <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> is a member of the collection.
            </summary>
            <param name="reservation">The <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> to locate in the collection.</param>
            <returns><see langword="true" /> if the <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> is a member of the collection;
            <see langword="false" />, otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReservationCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the elements copied from the collection. The array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array where copying starts.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReservationCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> for the entire collection.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReservationCollection.OnReservationCollectionChanged(NickLee.Views.Gantt.Data.ReservationsChangeEventArgs)">
            <summary>
            Notifies the Gantt data model that the collection has changed.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs" /> that contains the event data.</param>
            <remarks>This method must be called each time the collection has changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReservationCollection.OnReservationCollectionChanging(NickLee.Views.Gantt.Data.ReservationsChangeEventArgs)">
            <summary>
            Notifies the Gantt data model that the collection is changing.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs" /> that contains the event data.</param>
            <remarks>This method must be called each time the collection is changing.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReservationCollection.Remove(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Removes the specified reservation from the collection.
            </summary>
            <param name="reservation">The <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> to remove.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReservationCollection.RemoveRange(NickLee.Views.Gantt.Data.IReservation[])">
            <summary>
            Removes the specified reservations from the collection.
            </summary>
            <param name="reservations">An array of <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> objects.</param>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseReservationCollection.Count">
            <summary>
            Gets the number of constraints actually contained in the collection.
            </summary>
            <value>The number of constraints actually contained in the collection.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseReservationCollection.GanttModel">
            <summary>
            Gets the Gantt data model to which this collection belongs.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseReservationCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
            <value><see langword="true" /> if access to the collection is synchronized (thread-safe); <see langword="false" />, otherwise. The default value is <see langword="false" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseReservationCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
            <value>An object that can be used to synchronize access to the collection.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection">
            <summary>
            A collection that stores <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> objects.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection.#ctor(NickLee.Views.Gantt.Windows.Forms.TimeScale)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection" /> class.
            </summary>
            <param name="scale">The scale that owns the collection.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="scale" /> is
            <see langword="null" />.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection.Add(NickLee.Views.Gantt.Windows.Forms.TimeScaleRow)">
            <summary>
            Adds a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> with the specified value to the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection" /> .
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> to add.</param>
            <returns>
            The index at which the new element was inserted.
            </returns>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection.AddRange(NickLee.Views.Gantt.Windows.Forms.TimeScaleRow[])" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection.AddRange(NickLee.Views.Gantt.Windows.Forms.TimeScaleRow[])">
            <summary>
            Copies the elements of an array to the end of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection" />.
            </summary>
            <param name="value">
            An array of type <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> containing the objects to add to the collection.
            </param>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection.Add(NickLee.Views.Gantt.Windows.Forms.TimeScaleRow)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection.Contains(NickLee.Views.Gantt.Windows.Forms.TimeScaleRow)">
            <summary>
            Gets a value indicating whether the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection" /> contains the specified <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" />.
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> to locate.</param>
            <returns>
            <see langword="true" /> if the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> is contained in the collection;
            <see langword="false" /> otherwise.
            </returns>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection.IndexOf(NickLee.Views.Gantt.Windows.Forms.TimeScaleRow)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection.CopyTo(NickLee.Views.Gantt.Windows.Forms.TimeScaleRow[],System.Int32)">
            <summary>
            Copies the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection" /> values to a one-dimensional <see cref="T:System.Array" /> instance at the
            specified index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> which is the destination of the values copied from <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection" />.</param>
            <param name="index">The index in <paramref name="array" /> where copying starts.</param>
            <exception cref="T:System.ArgumentException"><paramref name="array" /> is multidimensional. -or- The number of elements in the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection" /> is greater than the available space between <paramref name="arrayIndex" /> and the end of <paramref name="array" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />. </exception>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index" /> is less than <paramref name="array" /> lowbound. </exception>
            <seealso cref="T:System.Array" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection.IndexOf(NickLee.Views.Gantt.Windows.Forms.TimeScaleRow)">
            <summary>
            Returns the index of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> in
            the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection" />.
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> to locate.</param>
            <returns>
            The index of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> of <paramref name="value" /> in the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection" />, if found; <strong>-1</strong> otherwise.
            </returns>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection.Contains(NickLee.Views.Gantt.Windows.Forms.TimeScaleRow)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection.Insert(System.Int32,NickLee.Views.Gantt.Windows.Forms.TimeScaleRow)">
            <summary>
            Inserts a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> into the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection" /> at the specified index.
            </summary>
            <param name="index">The zero-based index where <paramref name="value" /> should be inserted.</param>
            <param name=" value">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> to insert.</param>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection.Add(NickLee.Views.Gantt.Windows.Forms.TimeScaleRow)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection.OnClear">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnClear">CollectionBase.OnClear</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection.OnClearComplete">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnClearComplete">CollectionBase.OnClearComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection.OnCollectionChanged">
            <summary>
            Is called to notify the time scale that the collection has changed.
            </summary>
            <remarks>Called when the collection is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">CollectionBase.OnInsert</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">CollectionBase.OnInsertComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection.OnRemove(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">CollectionBase.OnRemove</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">CollectionBase.OnRemoveComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)">CollectionBase.OnSet</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">CollectionBase.OnSetComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection.OnValidate(System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)">CollectionBase.OnValidate</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection.Remove(NickLee.Views.Gantt.Windows.Forms.TimeScaleRow)">
            <summary>
            Removes a specific <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> from the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection" />.
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> to remove from the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection" />.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is not found in the collection. </exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection.Set(NickLee.Views.Gantt.Windows.Forms.TimeScaleRow[])">
            <summary>
            Sets the contents of the collection.
            </summary>
            <param name="collection">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> array to set.</param>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection.AddRange(NickLee.Views.Gantt.Windows.Forms.TimeScaleRow[])" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection.Item(System.Int32)">
            <summary>
            Gets or sets the entry at the specified index of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" />.
            </summary>
            <param name="index">The zero-based index of the entry to locate in the collection.</param>
            <value>
            The entry at the specified index of the collection.
            </value>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index" /> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.Printing.TimePrintContext">
            <summary>
            Provides common functionalities required to print the components of a
            Gantt chart that are based on the time.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Printing.TimePrintContext.#ctor(NickLee.Views.Gantt.DateTimeInterval,System.Single)">
            <summary>
            Creates and initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.Printing.TimePrintContext" /> class.
            </summary>
            <param name="interval">The interval of time to print.</param>
            <param name="width">
            The width of the area where the time interval must be printed.
            </param>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.Printing.TimePrintContext.EndTime">
            <summary>
            Gets the end time for the printing context.
            </summary>
            <value>A <see cref="T:System.DateTime" /> object that represents the end printing time.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.Printing.TimePrintContext.StartTime">
            <summary>
            Gets the start time for the printing context.
            </summary>
            <value>A <see cref="T:System.DateTime" /> object that represents the start printing time.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.Printing.TimePrintContext.TimeLine">
            <summary>
            Gets the time line for the printing context.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.ITimeLine" /> object that represents the time line for printing.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.EditingToolTip">
            <summary>
            Tooltip displayed when editing a style.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.EditingToolTip.#cctor">
            <summary>
            Static initialization.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.DrawGanttSheetRowEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.DrawRow" /> event of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.Design.HierarchyChartAutoFormatDialog">
            <summary>
            A <c>Dialog</c> to choose predefined styles for a HierarchyChart.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.HierarchyChartAutoFormatDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.CalendarStyleCollectionSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
            <summary>
            Deserializes the specified serialized CodeDOM object into an object.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.CalendarStyleCollectionSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
            <summary>
            Serializes the specified object into a CodeDOM object.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.DataGridComboBoxColumn">
            <summary>
            <strong>DataGridComboBoxColumn</strong> - Displays a combo box.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.CalendarView">
            <summary>
            A calendar control displaying activities of a Gantt model.
            </summary>
            <remarks>
            The <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" /> control displays the activities of a <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />
            in a calendar as in the picture below.
            <p><img src="calendarview.png" /></p>
            The control can display all the activities of the Gantt model specified by the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.GanttModel" />
            property. You can also display only the activities assigned to a specified resource by setting the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.Resource" />
            property.<p />
            By default activities are displayed in the same order as in the Gantt model but you can change the order using
            the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.SortBy" /> and <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.AscendingSort" /> properties.<p />
            Activities will be displayed according to a style defined by the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.BarStyles" /> property. The default style
            collection contains a style for "Normal" activities and a style for "Milestone" this means that "Summary" activities
            will not be displayed. The style of the bar defined by the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> class defines the colors
            of the bar as well as the text displayed in the bar. You can also decide wheter the start and end time of the bar will
            be rounded to the beginning and end of a day using the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.BarRounding" /> property of the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> class.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample creates a form containing a calendar view and
            associates a Gantt data model.
            </para>
            <code lang="C#">
            Form form = new Form();
            CalendarView view = new CalendarView();
            SimpleGanttModel model = new SimpleGanttModel();
            IActivity activity =  model.NewActivity();
            activity.Name = "My Activity";
            activity.StartTime = DateTime.Now;
            activity.Duration = TimeSpan.FromDays(2);
            view.GanttModel = model;
            view.FirstVisibleDate = activity.StartTime;
            model.Activities.Add(activity);
            view.Dock = DockStyle.Fill;
            form.Controls.Add(view);
            Application.Run(form);
            </code>
            <code lang="Visual Basic">
            Dim form As Form = New Form
            Dim view As CalendarView = New CalendarView
            Dim model As SimpleGanttModel = New SimpleGanttModel
            Dim activity As IActivity = model.NewActivity
            activity.Name = "My Activity"
            activity.StartTime = DateTime.Now
            activity.Duration = TimeSpan.FromDays(2)
            view.GanttModel = model
            view.FirstVisibleDate = activity.StartTime
            model.Activities.Add(activity)
            view.Dock = DockStyle.Fill
            form.Controls.Add(view)
            Application.Run(form)
            </code>
            </example>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" />
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView.activityStartDelta">
            <summary>
            Distance in pixels for hit testing on end of activity.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView.OneDay">
            <summary>
            One day in ticks
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.#ctor">
            <summary>
            Creates and initializes a new <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" /> object.
            </summary>
            <example>
            <para lang="C#,Visual Basic">The following code sample creates a form containing a calendar view and
            associates a Gantt data model.
            </para>
            <code lang="C#">
            Form form = new Form();
            CalendarView view = new CalendarView();
            SimpleGanttModel model = new SimpleGanttModel();
            IActivity activity =  model.NewActivity();
            activity.Name = "My Activity";
            activity.StartTime = DateTime.Now;
            activity.Duration = TimeSpan.FromDays(2);
            view.GanttModel = model;
            view.FirstVisibleDate = activity.StartTime;
            model.Activities.Add(activity);
            view.Dock = DockStyle.Fill;
            form.Controls.Add(view);
            Application.Run(form);
            </code>
            <code lang="Visual Basic">
            Dim form As Form = New Form
            Dim view As CalendarView = New CalendarView
            Dim model As SimpleGanttModel = New SimpleGanttModel
            Dim activity As IActivity = model.NewActivity
            activity.Name = "My Activity"
            activity.StartTime = DateTime.Now
            activity.Duration = TimeSpan.FromDays(2)
            view.GanttModel = model
            view.FirstVisibleDate = activity.StartTime
            model.Activities.Add(activity)
            view.Dock = DockStyle.Fill
            form.Controls.Add(view)
            Application.Run(form)
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.BeginInit">
            <summary>
            Begins the initialization of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" /> that is used on a form or used
            by another component. The initialization occurs at run time.
            </summary>
            <remarks>The Visual Studio .NET design environment uses this method
            to start the initialization of a component that is used on a form
            or used by another component. The <see cref="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.EndInit" /> method ends the
            initialization. The use of <strong>BeginInit</strong> and <strong>EndInit</strong> methods prevents the
            control from being used before it is fully initialized.</remarks>																																																																													///
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.ComputeActivitiesList">
            <summary>
            Computes the list of activities that must be displayed, and sort them by start
            time.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.ComputeMaxLines">
            <summary>
            Computes the max number of lines of activities
            that can be displayed in a cell.
            </summary>
            <returns>Used by layout algo to minimise the creation of lines.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.CreateScrollBars">
            <summary>
            Creates vertical and horizontal scrollbars.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.Dispose(System.Boolean)">
            <summary>
            The member overrides <see cref="M:System.Windows.Forms.Control.Dispose(System.Boolean)">Control.Dispose(bool)</see>
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.DrawCalendarCell(System.Drawing.Graphics,System.Drawing.Rectangle,System.DateTime,System.Boolean,System.Drawing.Brush)">
            <summary>
            Draws the background, header and overflow indicator of a cell.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.EndInit">
            <summary>
            Ends the initialization of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" /> that is used on a form or
            used by another component. The initialization occurs at run time.
            </summary>
            <remarks>
            The Visual Studio .NET design environment uses this method to end
            the initialization of a component that is used on a form or used by
            another component. The <see cref="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.BeginInit" /> method starts the initialization.
            The use of <strong>BeginInit</strong> and <strong>EndInit</strong> methods prevents the control
            from being used before it is fully initialized.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.FireEvent(System.Object,System.EventArgs)">
            <summary>
            Fires an event based on key in the Events list.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.GetActivityToolTip(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Gets the text that will be displayed in the tooltip of the
            specified activity.
            </summary>
            <param name="activity">The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to compute the tooltip text for.</param>
            <returns>The tooltip text.</returns>
            <remarks>
            The tooltips for activities will be displayed only
            if the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.ShowTooltips" /> property is set to <see langword="true" />.
            The default tooltip text contains the name, start time, end time, and duration
            of the activity.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.GetEditionInterval(NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.EditAction)">
            <summary>
            Gets the interval that will be set to the activity
            when the mouse is release.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.GetFlag(System.UInt32)">
            <summary>
            Gets the value of a flag.
            </summary>
            <param name="flag">The flag.</param>
            <returns>The value of a flag.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.HandleHorizontalScroll(System.Object,System.EventArgs)">
            <summary>
            Invoked when the horizontal <strong>scrollBar</strong> value changes.
            </summary>
            <param name="sender">Sender of the event.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.HandleVerticalScrollBarScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            Invoked on the vertical scrollbar scroll event.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.HitTest(System.Drawing.Point)">
            <summary>
            Gets information about the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" /> control at a specified point on the screen.
            </summary>
            <param name="point">A <see cref="T:System.Drawing.Point" /> that represents single x,y coordinate.
            </param>
            <returns>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView.HitTestInfo" /> that contains specific information about the calendar view.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.InitColors">
            <summary>
            Initializes the colors.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.InvalidateActivityList">
            <summary>
            Called to recompute the list of activities to display.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.InvalidateActivityOrder">
            <summary>
            Called to recompute the order of activities.
            activities in _tasks must be in start time order.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.InvalidateLayout">
            <summary>
            Called to invalidate the layout
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.IsHorizontalScrollBarNeeded">
            <summary>
            Checks if the horizontal scrollbar is needed.
            </summary>
            <remarks>The computation takes into account the visibility status
            of the other scrollbar.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.IsInitializing">
            <summary>
            Gets a value indicating whether the control is being initialized.
            </summary>
            <returns><see langword="true" /> if the control is being initialized; otherwise
            <see langword="false" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.LayoutActivities">
            <summary>
            Computes the position of all activities such that the intervals
            do not overlapp.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.LayoutScrollBars">
            <summary>
            Places the scrollbars depending on the orientation.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnActivityToolTipChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.ActivityToolTip" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>ActivityToolTip</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnAlternatingBackColorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.AlternatingBackColor" /> property is changed on the control.
            </summary>
            <remarks>Called when the <strong>AlternatingBackColor</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnAscendingSortChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.AscendingSort" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>AscendingSort</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnAutoFitChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.AutoFit" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>AutoFit</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnBackColorChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)">Control.OnBackColorChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnBackgroundColorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.BackgroundColor" /> property is changed on the control.
            </summary>
            <remarks>Called when the <strong>BackgroundColor</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnBeforeEditActivity(NickLee.Views.Gantt.Windows.Forms.BeforeEditActivityEventArgs)">
            <summary>
            Invoked before the time interval of an activity is changed by the user interaction.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.Windows.Forms.BeforeEditActivityEventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnBorderStyleChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.BorderStyle" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>BorderStyle</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnCanCreateActivitiesChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.CanCreateActivities" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>CanCreateActivities</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnCanEditActivitiesChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.CanEditActivities" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>CanEditActivities</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnCellHeaderColorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.CellHeaderColor" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>CellHeaderColor</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnCellHeaderDateFormatChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.CellHeaderDateFormat" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>CellHeaderDateFormat</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnColumnWidthChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.ColumnWidth" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>ColumnWidth</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnCompactLayoutChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.CompactLayout" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>CompactLayout</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnCompactWeekEndChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.CompactWeekEnd" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>CompactWeekEnd</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnCreateActivity(NickLee.Views.Gantt.Windows.Forms.CreateActivityEventArgs)">
            <summary>
            Invoked when an activity is created using the mouse pointer.
            </summary>
            <param name="e">An <see cref="T:NickLee.Views.Gantt.Windows.Forms.CreateActivityEventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnCreateActivityCursorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.CreateActivityCursor" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>CreateActivityCursor</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnCreateControl">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnCreateControl">Control.OnCreateControl</see>
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnDayGridLineColorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.DayGridLineColor" /> property is changed on the control.
            </summary>
            <remarks>Called when the <strong>DayGridLineColor</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnDayGridLineStyleChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.DayGridLineStyle" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>DayGridLineStyle</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnFirstVisibleDateChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.FirstVisibleDate" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>FirstVisibleDate</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnFlatStyleChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.FlatStyle" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>FlatStyle</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnFontChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">Control.OnFontChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnGanttModelChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.GanttModel" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>GanttModel</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnHeaderBackColorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.HeaderBackColor" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>HeaderBackColor</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnHeaderFontChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.HeaderFont" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>HeaderFont</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnHeaderForeColorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.HeaderForeColor" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>HeaderForeColor</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnLayoutDone(System.EventArgs)">
            <summary>
            Invoked when the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" /> has finished the layout of activities.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnLayoutStarted(System.EventArgs)">
            <summary>
            Invoked when the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" /> starts the layout of activities.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">Control.OnMouseDown</see>
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">Control.OnMouseMove</see>
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)">Control.OnMouseUp</see>
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseWheel" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> containing mouse information.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnMoveCursorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.MoveCursor" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>MoveCursor</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnNonWorkingBackColorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.NonWorkingBackColor" /> property is changed on the control.
            </summary>
            <remarks>Called when the <strong>NonWorkingBackColor</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event.
            </summary>
            <param name="pe">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> containing paint data.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">Control.OnPaintBackground</see>
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnResizeCursorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.ResizeCursor" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>ResizeCursor</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnResourceChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.Resource" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>Resource</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnRowHeightChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.RowHeight" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>RowHeight</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnShowEditingToolTipsChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.ShowEditingToolTips" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>ShowEditingToolTips</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnShowToolTipsChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.ShowTooltips" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>ShowTooltips</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnSortByChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.SortBy" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>SortBy</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)">Control.OnSystemColorsChanged</see>
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnTimeRangeChanged(System.Object,NickLee.Views.Gantt.TimeRangeChangeEventArgs)">
            <summary>
            Updates the min and max scroll when activity time range changes
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnWeekGridLineColorChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.WeekGridLineColor" /> property is changed on the control.
            </summary>
            <remarks>Called when the <strong>WeekGridLineColor</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.OnWeekGridLineStyleChanged(System.EventArgs)">
            <summary>
            Invoked when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.WeekGridLineStyle" /> property is changed on the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
            <remarks>Called when the <strong>WeekGridLineStyle</strong> property
            is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.PaintRectangleBetweenScrollBars(System.Drawing.Graphics)">
            <summary>
            Paints the rectangle between the two scrollbars when needed.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.ResetActivityToolTip">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.ActivityToolTip" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.ResetBackColor">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.BackColor" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.ResetCreateActivityCursor">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.CreateActivityCursor" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.ResetForeColor">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.ForeColor" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.ResetMoveCursor">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.MoveCursor" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.ResetResizeCursor">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.ResizeCursor" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.RestoreCursor">
            <summary>
            Restores a stored cursor.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">Control.SetBoundsCore</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.SetFlag(System.UInt32,System.Boolean)">
            <summary>
            Sets or unsets the value of a flag.
            </summary>
            <param name="flag">The flag value.</param>
            <param name="value">The value of the flag</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.SetTemporaryCursor(System.Windows.Forms.Cursor)">
            <summary>
            Sets temporary a cursor so that it can be restored later.
            </summary>
            <param name="c">The cursor to set.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.ShouldSerializeAlternatingBackColor">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.AlternatingBackColor" />
            property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.ShouldSerializeCreateActivityCursor">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.CreateActivityCursor" /> property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.ShouldSerializeHeaderFont">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.HeaderFont" />
            property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.ShouldSerializeMoveCursor">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.MoveCursor" /> property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.ShouldSerializeResizeCursor">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.ResizeCursor" /> property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.SnapTime(System.DateTime)">
            <summary>
            Snaps the specified date-time value.
            </summary>
            <param name="time">A <see cref="T:System.DateTime" /> value to snap.</param>
            <returns>The snapped date-time value.</returns>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.SnapUnit" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.SnapController" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.SortActivities">
            <summary>
            Sort displayed activities by start time.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.SynchroneLayout">
            <summary>
            Layout activities in the control thread (used for ASP.NET)
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.ToImage">
            <summary>
            Creates and returns an <see cref="T:System.Drawing.Image" /> that represents the control.
            </summary>
            <returns>A <see cref="T:System.Drawing.Image" />.</returns>
            <remarks>The format of the returned image is
            <see cref="F:System.Drawing.Imaging.PixelFormat.Format32bppArgb" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.ToImage(System.Drawing.Imaging.PixelFormat)">
            <summary>
            Creates and returns an <see cref="T:System.Drawing.Image" /> that represents the control.
            </summary>
            <param name="format">The format of the returned image.</param>
            <returns>A <see cref="T:System.Drawing.Image" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.UpdateScrollBarVisibility">
            <summary>
            Updates the visibility of scrollbar.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.WndProc(System.Windows.Forms.Message@)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">Control.WndProc</see>
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._activityTooltip">
            <summary>
            Format for displaying activity tooltips.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._activityTooltipContext">
            <summary>
            Expression evaluation context for activity tooltip.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._activityTooltipExpression">
            <summary>
            Parsed expression for activity tooltip.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._alternatingBackColor">
            <summary>
            Alternating back color.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._backgroundColor">
            <summary>
            Background color.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._barStyles">
            <summary>
            Collection of styles to paint activities
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._borderStyle">
            <summary>
            The border style. The initialization must be done here.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._cellHeaderColor">
            <summary>
            Color for header of cell.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._cellHeaderDateFormat">
            <summary>
            Format of date in cell header.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._columnWidth">
            <summary>
            Column width
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._dayGridLineColor">
            <summary>
            Color of grid lines.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._dayGridLineStyle">
            <summary>
            Style for grid lines.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._displayedActivities">
            <summary>
            List of displayed activity
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._firstVisibleTime">
            <summary>
            First visible time.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._flags">
            <summary>
            Contains flag indicators.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._ganttModel">
            <summary>
            The Gantt data model displayed
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._headerBackColor">
            <summary>
            Back color of header.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._headerFont">
            <summary>
            Font of header.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._headerForeColor">
            <summary>
            Fore color of header.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._horizontalOffset">
            <summary>
            Horizontal scroll offset.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._hScrollBar">
            <summary>
            Horizontal scrollbar.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._interactionActivity">
            <summary>
            Activity being modified during interaction
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._interactionInterval">
            <summary>
            Time interval displayed during interaction
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._layoutThread">
            <summary>
            Thread for layout of activities.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._mouseDownPos">
            <summary>
            The license...
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._nonWorkingBackColor">
            <summary>
            nonworking time color
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._resource">
            <summary>
            Displayed resource.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._restoreCursor">
            <summary>
            temporary storage for cursor.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._rowHeight">
            <summary>
            Row Height
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._snapController">
            <summary>
            A time iterator that defines the way the time is snapped during
            interaction.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._snapUnit">
            <summary>
            Time unit for snapping time values during interaction.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._sortBy">
            <summary>
            Sorting property.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._tooltip">
            <summary>
            The tooltip manager.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._tooltipObject">
            <summary>
            The object that is currently holding the tooltip.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._vScrollBar">
            <summary>
            Vertical scrollbar.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._weekGridLineColor">
            <summary>
            Color of grid lines.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView._weekGridLineStyle">
            <summary>
            Style for grid lines.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.CalendarView.OverflowImage">
            <summary>
            Image for overflow in a cell.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.ActivityToolTipChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.ActivityToolTip" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.AlternatingBackColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.AlternatingBackColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.AscendingSortChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.AscendingSort" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.AutoFitChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.AutoFit" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.BackgroundColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.BackgroundColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.BeforeEditActivity">
            <summary>
            Event fired before the time interval of an activity is changed using the mouse pointer.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.BorderStyleChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.BorderStyle" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.CanCreateActivitiesChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.CanCreateActivities" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.CanEditActivitiesChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.CanEditActivities" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.CellHeaderColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.CellHeaderColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.CellHeaderDateFormatChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.CellHeaderDateFormat" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.ColumnWidthChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.ColumnWidth" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.CompactLayoutChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.CompactLayout" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.CompactWeekEndChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.CompactWeekEnd" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.CreateActivity">
            <summary>
            Occurs when an activity is created using the mouse pointer.
            </summary>
            <remarks>You may add an event handler to this event in order to implement your own way to create the
            activity and to add it in the model.</remarks>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.CreateActivityCursorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.CreateActivityCursor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.DayGridLineColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.DayGridLineColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.DayGridLineStyleChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.DayGridLineStyle" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.FirstVisibleDateChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.FirstVisibleDate" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.FlatStyleChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.FlatStyle" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.GanttModelChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.GanttModel" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.HeaderBackColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.HeaderBackColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.HeaderFontChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.HeaderFont" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.HeaderForeColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.HeaderForeColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.LayoutDone">
            <summary>
            Occurs when the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" /> has finished the layout of activities.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.LayoutStarted">
            <summary>
            Occurs when the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" /> starts the layout of activities.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.MoveCursorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.MoveCursor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.NonWorkingBackColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.NonWorkingBackColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.ResizeCursorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.ResizeCursor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.ResourceChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.Resource" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.RowHeightChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.RowHeight" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.ShowEditingToolTipsChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.ShowEditingToolTips" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.ShowToolTipsChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.ShowTooltips" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.SortByChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.SortBy" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.WeekGridLineColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.WeekGridLineColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.WeekGridLineStyleChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.WeekGridLineStyle" /> property is changed on the control.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.ActivityToolTip">
            <summary>
            Gets or sets the tooltip format for activities.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the format of the tooltip that
            will be displayed when the mouse hovers activities.</value>
            <remarks>The value of this property is an expression that enables an easy customization of the
            tooltip.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample sets the string displayed by the tooltip as the concatenation of
            the activity name, the activity start time and the activity duration.
            </para>
            <code lang="C#">
            CalendarView calendar = ...
            calendar.ActivityToolTip = "'Name : ' + Name + '\\n' + {StartTime:m} + '(' + Duration + ')'";
            </code>
            <code lang="Visual Basic">
            Dim calendar As CalendarView = ...
            calendar.ActivityToolTip = "'Name : ' + Name + '\\n' + {StartTime:m} + '(' + Duration + ')'"
            </code>
            <para lang="C#,Visual Basic">
            Note the use of the '{' and '}' characters to specify a format for the <strong>StartTime</strong>
            property (see <see cref="T:System.Globalization.DateTimeFormatInfo" /> for details about date formats).
            </para>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.AlternatingBackColor">
            <summary>
            Gets or sets the background color of alternating month for a ledger appearance.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the alternating background color.
            The default value is the system color for windows (<see cref="P:System.Drawing.SystemColors.Window">SystemColors.Window</see>).
            </value>
            <remarks>
            By default, all days have the same color (the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.BackColor" /> property of the control).
            When you set the <strong>AlternatingBackColor</strong> to a new color, all the other months are set to the new color.
            To reset the alternating background color
            to its default value, set the property to <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.AscendingSort">
            <summary>
            Indicates whether the sorting of activities in a cell is ascending or descending.
            </summary>
            <remarks>Activities displayed for a particular day are sorted using the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.SortBy" />
            property. When this property is <see langword="true" /> the sorting will be done in ascending order.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.AutoFit">
            <summary>
            Gets or sets a value that indicates if the column width is
            automatically adjusted so that all columns are visible.
            </summary>
            <value><see langword="true" /> if the width of columns are automatically
            adjusted so that all columns are always visible. The default value is
            <see langword="false" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.BackColor">
            <summary>
            Gets or sets the background color of the calendar.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of rows in the calendar.
            The default value is the system color for windows (<see cref="P:System.Drawing.SystemColors.Window">SystemColors.Window</see>).
            </value>
            <remarks>
            While the <strong>BackColor</strong> property determines the color of rows
            in the grid, the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.BackgroundColor" /> determines
            the color of the nonrow area.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.BackgroundColor">
            <summary>
            Gets or sets the color of the non-row area of the calendar.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the calendar background.
            The default value is the <see cref="P:System.Drawing.SystemColors.AppWorkspace">SystemColors.AppWorkspace</see> color.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.BarStyles">
            <summary>
            Gets the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> that defines the graphical representation
            of activities in the calendar.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection" /> that defines the graphical representation
            of activities in the calendar.</value>
            <remarks>
            When the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" /> needs to display
            an activity, then it looks inside its collection of styles and paints the bar style that
            correspond to the activity. To detect if a particular style corresponds to an activity, it uses the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle.StyleFor" /> property of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" />. This property defines a Boolean expression
            that will be evaluated for this purpose.<p />
            By default the collection contains two styles, one for "Normal" activities and one for "Milestones", the
            "summary" activities are not displayed.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.BorderStyle">
            <summary>
            Gets or sets the border style of the control.
            </summary>
            <value>
            One of the <see cref="T:System.Windows.Forms.BorderStyle" /> values. The default value is <strong>Fixed3D</strong>.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.Calendar">
            <summary>
            Gets or sets the <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> that defines the working and
            nonworking times to display.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> that defines the working and nonworking times
            to display.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.CanCreateActivities">
            <summary>
            Indicates whether the user can create activities with the mouse pointer.
            </summary>
            <value><see langword="true" /> if the user can create activities using
            the mouse pointer; <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.CanEditActivities">
            <summary>
            Indicates whether the user can modify the start time  or duration
            of the displayed activities using the mouse pointer.
            </summary>
            <value><see langword="true" /> if the user can modify the start time or duration of the displayed activities with the mouse
            pointer; <see langword="false" /> otherwise. The default value is <see langword="true" />.</value>
            <remarks>
            When the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.CanEditActivities" /> property is set to <see langword="true" />, the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" /> allows the user to change the time interval
            (<see cref="P:NickLee.Views.Gantt.Data.IActivity.TimeInterval">IActivity.TimeInterval</see> of the displayed activity using
            the mouse pointer. Dragging an activity bar allows you to move an activity
            in time. Clicking at the end allows you to resize the activity bar.
            The  the modification of the time interval will be done when the user releases the mouse button.
            Until the user releases the mouse button a rectangle is
            displayed showing the new position in time of the activity.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.CellCount">
            <summary>
            Gets the number of visible cells.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.CellHeaderColor">
            <summary>
            Gets or sets the background color of cell headers.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the background
            color of cell headers. The default value is
            the color used for
            controls (<see cref="P:System.Drawing.SystemColors.Control">SystemColors.Control</see>).
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.CellHeaderDateFormat">
            <summary>
            Gets or sets the date format used to display dates in the cell header.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the fornat used to display dates in the cell header.
            The default value is "%d".</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.CellsRectangle">
            <summary>
            Gets the <see cref="T:System.Drawing.Rectangle" /> where calendar cells are drawn.
            </summary>
            <value>A <see cref="T:System.Drawing.Rectangle" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.ColumnHeaderHeight">
            <summary>
            Gets  the height of column headers.
            </summary>
            <value>
            The height of column headers.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.ColumnWidth">
            <summary>
            Gets or sets the width of a column.
            </summary>
            <value>The width of a column.</value>
            <remarks>The property value is not taken into account when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.AutoFit" />
            property is <see langword="true" /></remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.CompactLayout">
            <summary>
            Indicates whether the layout of activities attempt to
            compact the activities so that more activities are visible.
            </summary>
            <remarks>When the value is <see langword="true" /> the sorting of activities
            defined by the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.SortBy" /> property will not be respected.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.CompactWeekEnd">
            <summary>
            Indicates whether the weekend is displayed in one single column.
            </summary>
            <value><see langword="true" /> if the weekend is displayed in one
            single column; <see langword="false" />
            otherwise. The default value is <see langword="false" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.CreateActivityCursor">
            <summary>
            Gets or sets the cursor used to indicate that an activity can be moved.
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Cursor" /> displayed to indicates that an activity can be moved.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.CreateParams">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.CreateParams">Control.CreateParams</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.DayGridLineColor">
            <summary>
            Gets or sets the color of the vertical grid line.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the vertical grid lines.
            The default value is the system color for controls (<see cref="P:System.Drawing.SystemColors.Control">SystemColors.Control</see>).
            </value>
            <remarks>
            No grid line is displayed if the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.DayGridLineStyle" /> property
            is set to <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle">None</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.DayGridLineStyle">
            <summary>
            Gets or sets the style of vertical grid lines.
            </summary>
            <value>
            One of the <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle" /> values.
            The default value is <see cref="F:NickLee.Views.Windows.Forms.GridLineStyle.Solid" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.DefaultSize">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.DefaultSize">Control.DefaultSize</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.FirstVisibleDate">
            <summary>
            Gets or sets the first visible date.
            </summary>
            <value>A <see cref="T:System.DateTime" /> that represents the first visible date of the
            control.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.FlatStyle">
            <summary>
            Gets or sets the flat style appearance of the control.
            </summary>
            <value>One of the <see cref="T:System.Windows.Forms.FlatStyle" /> values.
            The default value is <b>Standard</b>.</value>
            <remarks>Setting this property to either <b>Flat</b> or <b>Popup</b>
            has the same effect.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.Font">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.Font">Control.Font</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.ForeColor">
            <summary>
            Gets or sets the foreground color used for rows.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground color of cells.
            The default value is the value for window text (<see cref="P:System.Drawing.SystemColors.WindowText">SystemColors.WindowText</see>).</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.GanttModel">
            <summary>
            Gets or sets the Gantt data model (<see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />)
            containing the data to display in this calendar.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> that contains the data to display in the calendar.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.HeaderBackColor">
            <summary>
            Gets or sets the background color used for
            row and column headers.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the background
            color of column headers. The default value is
            the color used for
            controls (<see cref="P:System.Drawing.SystemColors.Control">SystemColors.Control</see>).</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.HeaderFont">
            <summary>
            Gets or sets the font used for column headers.
            </summary>
            <value>
            The <see cref="T:System.Drawing.Font" /> object that represents the header text.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.HeaderForeColor">
            <summary>
            Gets or sets the color used for text
            in column headers.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the foreground
            color in column headers.
            The default value is the value used
            for controls (<see cref="P:System.Drawing.SystemColors.ControlText">SystemColors.ControlText</see>).</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.HorizontalOffset">
            <summary>
            Gets or sets the horizontal scrolling offset of the control in pixels.
            </summary>
            <value>The horizontal scrolling offset of the control in pixels</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.HScrollBarHeight">
            <summary>
            Gets the displayed height of the horizontal scrollbar.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.IsHScrollBarVisible">
            <summary>
            Gets a value indicating whether the horizontal scrollbar is visible.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.LastVisibleDate">
            <summary>
            Gets the last visible date.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.MoveCursor">
            <summary>
            Gets or sets the cursor used to indicate that an activity can be moved.
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Cursor" /> displayed to indicates that an activity can be moved.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.NonWorkingBackColor">
            <summary>
            Gets or sets the back color of nonworking days.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the back color of nonworking days
            The default value is the system color for controls (<see cref="P:System.Drawing.SystemColors.Control">SystemColors.Control</see>).
            </value>
            <remarks>
            No grid line is displayed if the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.WeekGridLineStyle" /> property
            is set to <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle">None</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.ResizeCursor">
            <summary>
            Gets or sets the cursor used to change the end time of an activity.
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Cursor" /> displayed when the user changes the end time of an activity.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.Resource">
            <summary>
            Gets or sets a resource for which activities will be displayed.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Data.IResource" /> for which activities will be displayed. When the value
            is not <langword langword="null" /> only activities affected to the
            specified resource will be displayed.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.RightToLeft">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.RightToLeft">Control.RightToLeft</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.RowHeight">
            <summary>
            Gets or sets the height of the rows.
            </summary>
            <value>An int value that represents the height of rows.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.ShowEditingToolTips">
            <summary>
            Indicates whether the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" /> should display tooltips while editing activities.
            </summary>
            <value><see langword="true" /> if the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" />
            must display tooltips while editing activities; <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.ShowTooltips">
            <summary>
            Indicates whether the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" /> should display tooltips on activities.
            </summary>
            <value><see langword="true" /> if the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" />
            must display tooltips on activities; <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.SnapController">
            <summary>
            Gets or sets a time iterator that defines the way date-time values are
            snapped when the user changes the time interval of an activity using the
            mouse pointer.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.ITimeIterator" /> object that defines the way date-time values are
            snapped when the user changes the time interval of an activity using the
            mouse pointer.</value>
            <remarks>
            To snap a date-time value, the control uses the time iterator to find
            the closest date-time value.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.SnapUnit" />
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.SnapTime(System.DateTime)" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.SnapUnit">
            <summary>
            Gets or sets the time unit used for snapping date and time values.
            </summary>
            <value>
            A <see cref="T:NickLee.Views.Gantt.TimeUnit" /> that is used for snapping date and time values
            when the users changes the time interval of an activity using the mouse pointer.
            The default value is <strong>Hour</strong>.
            </value>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.SnapTime(System.DateTime)" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.SnapController" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.SortBy">
            <summary>
            Gets or sets the name of a property of activities used to sort the activities displayed in a day.
            </summary>
            <value>A string that represents the name of a property of an activity used to sort the activities
            diaplyed in a day. The default value is "" meaning that activities will be in the order of the
            gantt data model.</value>
            <remarks>Note that the sorting will be done in ascending or descending order depending on the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.AscendingSort" /> property</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.Text">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.Text">Control.Text</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.ToolTip">
            <summary>
            Gets the internal tooltip used by this control.
            </summary>
            <value>A <see cref="T:System.Windows.Forms.ToolTip" /> reference.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.VScrollBarWidth">
            <summary>
            Gets the displayed width of the vertical scrollbar.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.WeekGridLineColor">
            <summary>
            Gets or sets the color of the horizontal grid line.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the horizontal grid lines.
            The default value is the system color for controls (<see cref="P:System.Drawing.SystemColors.Control">SystemColors.Control</see>).
            </value>
            <remarks>
            No grid line is displayed if the <see cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.WeekGridLineStyle" /> property
            is set to <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle">None</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.WeekGridLineStyle">
            <summary>
            Gets or sets the style of horizontal grid lines.
            </summary>
            <value>
            One of the <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle" /> values.
            The default value is <see cref="F:NickLee.Views.Windows.Forms.GridLineStyle.Solid" />.
            </value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.CalendarView.HitTestInfo">
            <summary>
            Contains information about a part of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" /> at a
            specified coordinate.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarView.HitTestInfo.ToString">
            <summary>
            This member overrides <see cref="M:System.Object.ToString">object.ToString</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.HitTestInfo.Date">
            <summary>
            Gets the date of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" /> control that was clicked, when
            the type is <see cref="F:NickLee.Views.Gantt.Windows.Forms.CalendarView.HitTestType.Day" /> or <see cref="F:NickLee.Views.Gantt.Windows.Forms.CalendarView.HitTestType.DayHeader" />.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.HitTestInfo.Type">
            <summary>
            Gets the part of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" /> control that was clicked.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView.HitTestType" /> values.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.HitTestInfo.Activity">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> that was clicked.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.CalendarView.HitTestType">
            <summary>
            Specifies the part of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" /> control the user has clicked.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.CalendarView.PositionComparer">
            <summary>
            Comparer for sorting activities vertically in a day.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Web.UI.ReservationTable">
            <summary>
            A specialization of the <see cref="T:NickLee.Views.Gantt.Web.UI.GanttTable" /> class for reservations.
            </summary>
            <remarks>
            <p>The <see cref="T:NickLee.Views.Gantt.Web.UI.ReservationTable" /> is a
            hierarchical table where each row represents a reservation
            and each column represents a property of the reservation in the row.
            </p>
            <p>
            <img src="ReservationTable.png" /></p>
            By default the table contains three columns: a column that displays the activity of the reservation,
            a column that displays the resource of the reservation, and a column that displays the units used
            by the reservation. You can modify the columns of the table
            using the <see cref="P:NickLee.Views.Windows.Forms.TreeTable.Columns" /> property.<p />
            In order to display scheduling information, the table must be connected
            to a Gantt data model (<see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />) through the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttTable.GanttModel" />
            property.
            </remarks>
            <seealso cref="T:NickLee.Views.Gantt.Web.UI.ResourceTable" />
            <seealso cref="T:NickLee.Views.Gantt.Web.UI.ActivityTable" />
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationTable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Web.UI.ReservationTable" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationTable.GetCurrentReservation">
            <summary>
            Returns the current reservation in the table.
            </summary>
            <returns>The current <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> in the table.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationTable.GetIDFromValue(System.Object)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Gantt.Web.UI.GanttTable.GetIDFromValue(System.Object)">GanttTable.GetIDFromValue</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationTable.GetReservationAt(System.Int32)">
            <summary>
            Retrieves the <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> at the specified index.
            </summary>
            <param name="rowIndex">The zero-based index of the reservation to
            retrieve.</param>
            <returns>The <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> at the specified index.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationTable.GetSelectedReservations">
            <summary>
            Returns an array of the selected reservations in the table.
            </summary>
            <returns>An array of <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> objects.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ReservationTable.GetValueFromID(System.String)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Gantt.Web.UI.GanttTable.GetValueFromID(System.String)">GanttTable.GetValueFromID</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.TimeLineEventType">
            <summary>
            Describes an action performed on <see cref="T:NickLee.Views.Gantt.ITimeLine" /> objects.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.SchedulingResource">
            <summary>
            Defines a resource in a <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModel" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SchedulingResource.#ctor(NickLee.Views.Gantt.Data.ProjectSchedulingModel)">
            <summary>
            Creates and initializes a new <see cref="T:NickLee.Views.Gantt.Data.SchedulingResource" />.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.SchedulingResource._calendar">
            <summary>
            calendar of resource
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.SchedulingResource._type">
            <summary>
            type of resource
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingResource.BaseCalendar">
            <summary>
            Gets or sets the base calendar for the calendar of the resource.
            </summary>
            <value>
            A <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> that represents the base calendar for the resource. The
            value must be contained in the base calendar collection of
            the model (see the <see cref="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.BaseCalendars" />
            property of the <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModel" /> class).
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Data.SchedulingResource.Calendar" />
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingResource.Calendar">
            <summary>
            Gets or sets the calendar of the resource.
            </summary>
            <value> A <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> that represents the calendar of the resource.
            By default the resource has no calendar, meaning that the
            calendar of the model applies
            (<see cref="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.Calendar">ProjectSchedulingModel.Calendar</see>). The
            calendar of a resource must not be a base calendar and must be a calendar based
            on a calendar present in the base calendars of the model
            (<see cref="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.BaseCalendars">ProjectSchedulingModel.BaseCalendars</see>).
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Data.SchedulingResource.BaseCalendar" />
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingResource.GanttModel">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModel" /> that containts the resource.
            </summary>
            <value>
            The <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModel" /> that contains the resource.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingResource.Name">
            <summary>
            Gets or sets the name of the resource.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the name of the resource.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingResource.Type">
            <summary>
            Gets or sets the type of the resource.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Data.ResourceType" /> value. The default value is
            <see cref="F:NickLee.Views.Gantt.Data.ResourceType.Work" />.
            </value>
            <remarks>
            Note the only resources of type <see cref="F:NickLee.Views.Gantt.Data.ResourceType.Work" />
            will participate to the resource leveling algorithm.
            </remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.SchedulingActivity">
            <summary>
            Defines a activity for the <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModel" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SchedulingActivity.#ctor(NickLee.Views.Gantt.Data.ProjectSchedulingModel)">
            <summary>
            Creates and initializes a new <see cref="T:NickLee.Views.Gantt.Data.SchedulingActivity" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SchedulingActivity.AddWorkDuration(System.DateTime,System.TimeSpan)">
            <summary>
            Adds the specified amount of work to a date according to
            calendars associated to the activity.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SchedulingActivity.ApplyConstraintEnd(System.DateTime)">
            <summary>
            Applies activity constraint on the specified date so that
            the resulting date is a valid date for the activity end date.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SchedulingActivity.ApplyConstraintStart(System.DateTime)">
            <summary>
            Applies activity constraint on the specified date so that
            the resulting date is a valid date for the activity start date.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SchedulingActivity.CanDelay">
            <summary>
            Check if the activity can be delayed to remove resource overallocation.
            </summary>
            <remarks>
            An activity with a hard constraint such as
            <see cref="F:NickLee.Views.Gantt.Data.ActivityConstraintType.FinishOn" /> or
            <see cref="F:NickLee.Views.Gantt.Data.ActivityConstraintType.StartOn" /> or an activity that has started cannot
            be delayed.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SchedulingActivity.GetActivityConstraintTypeDisplayName(NickLee.Views.Gantt.Data.ActivityConstraintType)">
            <summary>
            Gets an internationalized display name for an <see cref="T:NickLee.Views.Gantt.Data.ActivityConstraintType" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SchedulingActivity.NextWorkingTime(System.DateTime)">
            <summary>
            Gets the next working time from a date according to calendars that
            apply to the activity.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SchedulingActivity.PreviousWorkingTime(System.DateTime)">
            <summary>
            Gets the previous working time from a date according to calendars that
            apply to the activity.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SchedulingActivity.PWT(NickLee.Views.Gantt.WorkCalendar,System.DateTime)">
            <summary>
            Returns the previous working time of a date.
            </summary>
            <remarks>The method does not change the date if the date is at the
            beginning or end of a working period. This is different from
            calling Previous working time that will never return start of a working period.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SchedulingActivity.RemoveWorkDuration(System.DateTime,System.TimeSpan)">
            <summary>
            Removes the specified amount of work from a date according to
            calendars associated to the activity.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.SchedulingActivity.SaveBaseline">
            <summary>
            Stores the baseline for the activity.
            </summary>
            <remarks>
            The method stores the current values of the
            <see cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.StartTime" />, <see cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.EndTime" /> and <see cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.Duration" />
            properties to the <see cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.BaselineStart" />, <see cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.BaselineEnd" /> anf
            <see cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.BaselineDuration" /> properties.
            </remarks>
            <seealso cref="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.SaveBaseline" />
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.ActualDuration">
            <summary>
            Represents the duration of the activity that is completed.
            </summary>
            <value>A <see cref="T:System.TimeSpan" /> value the represents the amount of time
            that is completed on the activity.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.ActualEndTime">
            <summary>
            Gets the actual end time of the activity.
            </summary>
            <value>A <see cref="T:System.DateTime" /> value the represents the date at which the
            activity was completed. The value can be <see cref="F:NickLee.Views.Gantt.Data.ProjectSchedulingModel.DateUnknown" />, if the
            activity is not finished.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.ActualStartTime">
            <summary>
            Gets or sets the actual start time of the activity.
            </summary>
            <value>A <see cref="T:System.DateTime" /> value the represents the date at which the
            activity was started. The value can be <see cref="F:NickLee.Views.Gantt.Data.ProjectSchedulingModel.DateUnknown" />, if the
            activity is not yet started.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.AutoComputeSummary">
            <summary>
            This member overrides <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.AutoComputeSummary" />.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.BaselineDuration">
            <summary>
            Gets the <see cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.Duration" /> of the activity at the time you saved
            the baseline.
            </summary>
            <value>
            A <see cref="T:System.TimeSpan" /> that represents the <see cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.Duration" /> of the activity at the time you saved
            the baseline.
            </value>
            <seealso cref="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.SaveBaseline" />
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.BaselineEnd">
            <summary>
            Gets the <see cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.EndTime" /> of the activity at the time you saved
            the baseline.
            </summary>
            <value>
            A <see cref="T:System.DateTime" /> that represents the <see cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.EndTime" /> of the activity at the time you saved
            the baseline.
            </value>
            <seealso cref="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.SaveBaseline" />
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.BaselineStart">
            <summary>
            Gets the <see cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.StartTime" /> of the activity at the time you saved
            the baseline.
            </summary>
            <value>
            A <see cref="T:System.DateTime" /> that represents the <see cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.StartTime" /> of the activity at the time you saved
            the baseline.
            </value>
            <seealso cref="M:NickLee.Views.Gantt.Data.ProjectSchedulingModel.SaveBaseline" />
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.Calendar">
            <summary>
            Gets or sets the calendar of the activity.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> object that represents the working and nonworking times
            for the activity. The default value is <see langword="null" />. Note that
            the vale must be contained in the base calendars of the model
            (see <see cref="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.BaseCalendars">ProjectSchedulingModel.BaseCalendars</see>).
            </value>
            <remarks>By default the activity has no calendar. Meaning that the
            calendar of the model applies (see <see cref="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.Calendar">ProjectSchedulingModel.Calendar</see>).
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.CompletedThrough">
            <summary>
            Gets or sets the current completion date of the activity.
            </summary>
            <value>
            A <see cref="T:System.DateTime" /> value that represents the current completion date of the activity based on the <see cref="P:NickLee.Views.Gantt.Data.BaseActivity.WorkComplete" />
            property.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.Constraint">
            <summary>
            Gets or sets the type of constraint to apply to the activity.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Data.ActivityConstraintType" /> enumeration. The
            default value is <see cref="F:NickLee.Views.Gantt.Data.ActivityConstraintType.AsSoonAsPossible" />
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.ConstraintDate" />
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.ConstraintDate">
            <summary>
            Gets the date associated with the activity constraint.
            </summary>
            <value>
            A <see cref="T:System.DateTime" /> that represents the date associated
            with the constraint (<see cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.Constraint" /> property). For example if
            the value of the <see cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.Constraint" /> property is <see cref="F:NickLee.Views.Gantt.Data.ActivityConstraintType.StartNoEarlierThan" />
            and the constraint date if January 1, 2007, it means that the activity
            should not start before this date. The value as no meaning when the <see cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.Constraint" />
            property as the value <see cref="F:NickLee.Views.Gantt.Data.ActivityConstraintType.AsSoonAsPossible" /> or
            <see cref="F:NickLee.Views.Gantt.Data.ActivityConstraintType.AsLateAsPossible" />.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.Constraint" />
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.Critical">
            <summary>
            Gets a value that tells if the activity is a critical activity.
            </summary>
            <value>
            A boolean value that indicates whether the activity is critical or not. An activity
            is critical if any delay to the activity will result to a delay of the project's end date.
            </value>
            <remarks>
            You can control the maximum amount of slack allowed for critical activities using
            the <see cref="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.CriticalSlackThreshold" />
            property of the <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModel" /> class.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.Duration">
            <summary>
            Gets or sets the amount of work that must be achieved on the activity.
            </summary>
            <value>
            A <see cref="T:System.TimeSpan" /> value that represents the amount of time necessary to
            complete the activity.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.EarlyFinish">
            <summary>
            Gets the earliest finish date of the activity.
            </summary>
            <value>
            A <see cref="T:System.DateTime" /> value that represents the earliest date that the activity can
            finish based on early finish dates of predecessors and successors and other
            constraints.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.EarlyStart">
            <summary>
            Gets the earliest start date of the activity.
            </summary>
            <value>
            A <see cref="T:System.DateTime" /> value that represents the earliest date that the activity can
            start based on early start dates of predecessors and successors and other
            constraints.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.EndTime">
            <summary>
            Gets or sets the end time of the activity.
            </summary>
            <value>
            A <see cref="T:System.DateTime" /> that represents the end time of the activity.
            </value>
            <remarks>In the <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModel" /> the start and end time of activities are
            automatically computed based on all constraints on the activities, so setting the
            end time does not really change the end time value.
            When setting the <strong>EndTime</strong> property, a constraint of type
            <see cref="F:NickLee.Views.Gantt.Data.ActivityConstraintType.FinishNoEarlierThan" />
            is set on the activity with a constraint date set to the specified date value. The
            project is then rescheduled which will recompute a new value for
            the <strong>EndTime</strong> of the activity.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.StartTime" />
            <seealso cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.Constraint" />
            <seealso cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.ConstraintDate" />
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.FreeSlack">
            <summary>
            Gets the free slack of the activity.
            </summary>
            <value>
            A <see cref="T:System.TimeSpan" /> value that represents the amount of time that the activity
            can be delayed without delaying any successor activities. If the activity has no successors,
            free slack is the amount of time that the activity
            can be delayed without delaying the entire project's end date.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.TotalSlack" />
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.GanttModel">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModel" /> that containts the activity.
            </summary>
            <value>
            The <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModel" /> that contains the activity.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.LateFinish">
            <summary>
            Gets the latest finish date of the activity.
            </summary>
            <value>
            A <see cref="T:System.DateTime" /> value that represents the latest date that the activity can
            end without delaying the end of the project.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.LateStart">
            <summary>
            Gets the latest start date of the activity.
            </summary>
            <value>
            A <see cref="T:System.DateTime" /> value that represents the latest date that the activity can
            start without delaying the end of the project.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.LeveledEarlyStart">
            <summary>
            Gets the early start date of the activity
            taking into account the leveling delay.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.LevelingDelay">
            <summary>
            Gets or sets the amount of time the activity is delayed
            from its early start date as a result of resource leveling.
            </summary>
            <value>
            A <see cref="T:System.TimeSpan" /> that represents the amount of time the activity
            is delayed from its early start date. The value can be entered or computed
            by the resource leveling when
            <see cref="P:NickLee.Views.Gantt.Data.ProjectSchedulingModel.AutomaticResourceLeveling">ProjectSchedulingModel.AutomaticResourceLeveling</see>
            is <see langword="true" />. The default value is a zero time span.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.PreleveledEnd">
            <summary>
            Gets or sets the end time of the activity before leveling.
            </summary>
            <value>A <see cref="T:System.DateTime" /> object that represents the end time of the
            activity before the resource leveling system has delayed the activity.</value>
            <seealso cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.PreleveledStart"></seealso>
            <seealso cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.LevelingDelay"></seealso>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.PreleveledStart">
            <summary>
            Gets or sets the start time of the activity before leveling.
            </summary>
            <value>A <see cref="T:System.DateTime" /> object that represents the start time of the
            activity before the resource leveling system has delayed the activity.</value>
            <seealso cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.PreleveledEnd"></seealso>
            <seealso cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.LevelingDelay"></seealso>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.PreLevelLateFinish">
            <summary>
            Gets the late finish date of the activity whitout considering the leveling delay.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.PreLevelLateStart">
            <summary>
            Gets the late start date of the activity whitout considering the leveling delay.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.Priority">
            <summary>
            Gets or sets the priority of the activity.
            </summary>
            <value>An int value that represents the priority of the activity. The default value is 500.</value>
            <remarks>
            The priority is used during resource leveling to determine which
            activity should be schedule first in case of resource overallocation. Note
            that the priority is not the only parameter that is taken into account.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.Slack">
            <summary>
            Gets the date the represents the end of the free slack.
            </summary>
            <value>A <see cref="T:System.DateTime" /> that represents the end date of the free slack of the
            activity. The free slack is the amount of time that the activity
            can be delayed without delaying any successor activities. If the activity has no successors,
            free slack is the amount of time that the activity
            can be delayed without delaying the entire project's end date.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.StartTime">
            <summary>
            Gets or sets the start time of the activity.
            </summary>
            <value>
            A <see cref="T:System.DateTime" /> that represents the start time of the activity.
            </value>
            <remarks>In the <see cref="T:NickLee.Views.Gantt.Data.ProjectSchedulingModel" /> the start and end time of activities are
            automatically computed based on all constraints on the activities, so setting the
            start time does not really change the start time value.
            When setting the <strong>StartTime</strong> property, a constraint of type
            <see cref="F:NickLee.Views.Gantt.Data.ActivityConstraintType.StartNoEarlierThan" />
            is set on the activity with a constraint date set to the specified date value. The
            project is then rescheduled which will recompute a new value for
            the <strong>StartTime</strong> of the activity.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.EndTime" />
            <seealso cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.Constraint" />
            <seealso cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.ConstraintDate" />
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.TimeInterval">
            <summary>
            Gets or sets a time interval for the activity.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.TotalSlack">
            <summary>
            Gets the total slack of the activity.
            </summary>
            <value>
            A <see cref="T:System.TimeSpan" /> value that represents the amount of time that the activity
            can be delayed without delaying the entire project's end date.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Data.SchedulingActivity.FreeSlack" />
        </member>
        <member name="P:NickLee.Views.Gantt.Data.SchedulingActivity.WorkComplete">
            <summary>
            Gets or sets a value that represents the completion of the activity.
            </summary>
            <value>A <see cref="T:System.Single" /> in the range [0..1]. The default value is <strong>0</strong>.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.TimeScale">
            <summary>
            Defines a time scale component that contains several <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> objects.
            </summary>
            <remarks>
            <p>The <strong>TimeScale</strong> class defines a time scale component that contains
            several <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> objects.</p>
            <p><img src="timescale.png" /></p>
            <p>The <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScale.Rows" /> property gives access to the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> collection.</p>
            <p>Each row represents a particular <see cref="T:NickLee.Views.Gantt.TimeUnit" /> and is responsible for drawing itself.</p>
            <p>When the <see cref="T:NickLee.Views.Gantt.ITimeLine" /> connected to this time scale changes, it may be useful to
            change the rows of the time scale, to display only relevant rows. The <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScale.RowPolicy" /> property
            specifies the policy used to recompute rows when the zoom factor changes. When <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScale.RowPolicy" /> is
            set to <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowPolicy">Manual</see>, the time scale does not change its rows when the zoom factor changes.
            In this case, you can use the <see cref="E:NickLee.Views.Gantt.Windows.Forms.TimeScale.AdjustRows" /> event to manage the rows.</p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScale.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScale.BeginInit">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.BeginInit">TimeControl.BeginInit</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScale.Dispose(System.Boolean)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.Dispose(System.Boolean)">Control.Dispose</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScale.EndInit">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.EndInit">TimeControl.EndInit</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScale.OnAdjustRows(System.EventArgs)">
            <summary>
            Is called to recompute the rows of the time scale when the zoom factor has changed.
            </summary>
            <remarks>The <see cref="E:NickLee.Views.Gantt.Windows.Forms.TimeScale.AdjustRows" /> event is fired after recomputing the time scale rows,
            allowing the user to customize them.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScale.OnCreateControl">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnCreateControl">Control.OnCreateControl</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScale.OnDrawRow(NickLee.Views.Gantt.Windows.Forms.DrawTimeScaleRowEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.TimeScale.DrawRow" /> event.
            </summary>
            <param name="e">A <see cref="T:NickLee.Views.Gantt.Windows.Forms.DrawTimeScaleRowEventArgs" /> that contains the event data.</param>
            <remarks>Called to draw a time scale row when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScale.OwnerDraw" /> property
            is set to <see langword="true" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScale.OnFontChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnFontChanged(System.EventArgs)">Control.OnFontChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScale.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">Control.OnMouseDown</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScale.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">Control.OnMouseMove</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScale.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)">Control.OnMouseUp</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScale.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)">Control.OnPaint</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScale.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">Control.OnPaintBackground</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScale.OnReferenceDateChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.OnReferenceDateChanged(System.EventArgs)">TimeControl.OnReferenceDateChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScale.OnRowPolicyChanged">
            <summary>
            Is called when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScale.RowPolicy" /> property has changed.
            </summary>
            <remarks>Called when the <strong>RowPolicy</strong> property is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScale.OnRowsChanged">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.TimeScale.RowsChanged" /> event.
            </summary>
            <remarks>Called when the rows of the time scale are changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScale.OnTimeLineChanged">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.OnTimeLineChanged">TimeControl.OnTimeLineChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScale.OnTimeLineChanged(NickLee.Views.Gantt.TimeLineChangeEventArgs)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.OnTimeLineChanged">TimeControl.OnTimeLineChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScale.OnTimeRectangleChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.TimeControl.OnTimeRectangleChanged(System.EventArgs)">TimeControl.OnTimeRectangleChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScale.PaintRows(System.Drawing.Graphics)">
            <summary>
            Paints the time scale rows.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> in which painting must be done.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScale.PaintSeparator(System.Drawing.Graphics,System.Drawing.Pen,System.Drawing.PointF,System.Single)">
            <summary>
            Paints the horizontal separator between consecutive rows.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> in which painting must be done.</param>
            <param name="pen">The <see cref="T:System.Drawing.Pen" /> to draw with.</param>
            <param name="pos">The y position of the separator.</param>
            <param name="width">The width of the separator.</param>
            <remarks>This method is not called if <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScale.PaintTicks" /> returns
            <see langword="false" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScale.PaintZoomInInterval(System.Drawing.Graphics)">
            <summary>
            Paints the interval being highlighted during a zooming operation.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> in which painting must be done.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScale.PositionToRow(System.Int32)">
            <summary>
            Retrieves the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> at the specified location.
            </summary>
            <param name="y">The y coordinate of the row to locate.</param>
            <returns>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> instance.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScale.Print(System.Drawing.Printing.PrintPageEventArgs,NickLee.Views.Gantt.Windows.Forms.Printing.TimePrintContext,System.Drawing.RectangleF)">
            <summary>
            Prints the time scale component.
            </summary>
            <param name="pe">A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains the event data.</param>
            <param name="context">
            A <see cref="T:NickLee.Views.Gantt.Windows.Forms.Printing.TimePrintContext" /> that contains common functionalities required to print the components of a Gantt chart that are based on the time.</param>
            <param name="bounds">A <see cref="T:System.Drawing.RectangleF" /> that contains the size of the area where the time scale component must be located in the printed page.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScale.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">Control.SetBoundsCore</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScale.ShouldSerializeRows">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScale.Rows" /> property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from its default;
            <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeScale.WndProc(System.Windows.Forms.Message@)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">Control.WndProc</see>.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.TimeScale._firstVisibleTime">
            <summary>
            Temporary first visible time when scrolling in non-instant time scrolling mode.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.TimeScale.AdjustRows">
            <summary>
            Occurs when the rows of the time scale must be recomputed.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.TimeScale.DrawRow">
            <summary>
            Occurs when the time scale draws rows in owner draw mode.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScale.OwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScale.OwnerDraw" />
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.TimeScale.RowsChanged">
            <summary>
            Occurs when the rows of the time scale have changed.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScale.AutoSize">
            <summary>
            Gets or sets a value indicating whether the control automatically adjusts its height to the font height.
            </summary>
            <value><see langword="true" /> if the control adjusts its height to closely fit
            its contents; <see langword="false" /> otherwise. The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScale.CanPan">
            <summary>
            Indicates whether the user can pan the time scale using the mouse pointer.
            </summary>
            <value><see langword="true" /> if the user can pan the time scale,
            with the mouse pointer; <see langword="false" /> otherwise.
            The default value is <see langword="true" />.</value>
            <remarks>
            To perform a translation in the time scale, the user can click and drag the time scale.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScale.CanZoom">
            <summary>
            Indicates whether the user can zoom the time line using the mouse pointer.
            </summary>
            <value><see langword="true" /> if the user can zoom the time line,
            with the mouse pointer; <see langword="false" /> otherwise.
            The default value is <see langword="true" />.</value>
            <remarks>
            To perform a zoom in the time scale, the user can double click
            the time scale, or press the control key while dragging the mouse over a time
            interval of the time scale.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScale.DefaultSize">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.DefaultSize">Control.DefaultSize</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScale.FirstVisibleTime">
            <summary>
            This member overrides <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.FirstVisibleTime">TimeControl.FirstVisibleTime</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScale.FlatStyle">
            <summary>
            Gets or sets the flat style appearance of the control.
            </summary>
            <value>One of the <see cref="T:System.Windows.Forms.FlatStyle" /> values.
            The default value is <b>Standard</b>.</value>
            <remarks>Setting this property to either <b>Flat</b> or <b>Popup</b>
            has the same effect.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScale.FormatInfo">
            <summary>
            Gets or sets the <see cref="T:System.IFormatProvider" /> used to format dates in this control.
            </summary>
            <value>An <see cref="T:System.IFormatProvider" /> object. The default value is an
            instance of the <see cref="T:NickLee.Views.Util.ExtendedDateTimeFormatInfo" /> class.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScale.InstantTimeScrolling">
            <summary>
            Gets or sets a value that indicates whether the scrolling is instantaneous or delayed
            until the user stops the interaction.
            </summary>
            <value>
            A value that indicates whether the scrolling is instantaneous or delayed
            until the user stops the interaction.
            The default value is <see langword="true" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScale.OwnerDraw">
            <summary>
            Gets or sets a value indicating whether the code that you
            provide draws the time scale rows or not.
            </summary>
            <value>
            <see langword="true" /> if time scale rows are to be drawn using custom user
            code; <see langword="false" /> otherwise.
            </value>
            <remarks>
            <p>When the <strong>OwnerDraw</strong> property is set to <see langword="true" />,
            you need to handle all the drawing of time scale rows. You can use
            this capability to create your own special display of time scale rows.
            Use the <see cref="E:NickLee.Views.Gantt.Windows.Forms.TimeScale.DrawRow" /> event to handle the drawing of
            time scale rows.</p>
            <p>When the <strong>OwnerDraw</strong> property is set to <see langword="false" />,
            the <strong>DrawRow</strong> event is not raised.</p>
            </remarks>
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.TimeScale.DrawRow" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScale.PaintTicks">
            <summary>
            Gets or sets a value indicating whether the time scale displays ticks.
            </summary>
            <value><see langword="true" /> if the time scale displays ticks;
            <see langword="false" /> otherwise. The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScale.RowPolicy">
            <summary>
            Gets or sets the policy used to handle the time scale rows.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowPolicy" /> values. The default value is
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowPolicy">TwoRows</see>.</value>
            <remarks>This property is used each time the zoom factor of the time scale changes to recompute
            the new rows of the time scale.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScale.Rows">
            <summary>
            Gets the collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> objects.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection" /> reference.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeScale.TickColor">
            <summary>
            Gets or sets the color used to draw the ticks of the control.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> structure.</value>
            <remarks>The default value for the tick color is the foreground color of
            the time scale.</remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.TimeScale.TimeScaleDateTimeFormatInfo">
            <summary>
            A class that handles relative time notation.
            For example : #d =&gt; number of days since the reference date)
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.SafeDataGridColumn">
            <summary>
            Subclass <strong>DataGridTextBoxColumn</strong> to assert security permission
            to display internal class <strong>EditedReservation</strong>. This
            is only necessary to run in IE with Internet permission set.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ReservationSheet">
            <summary>
            A chart that displays reservations over the time.
            </summary>
            <remarks>
            <p>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationSheet" /> is made up of rows, each containing one single reservation.
            The control displays a graphical representation of the duration of reservations over the time.</p>
            <p><img src="reservationsheet.png" /></p>
            <p>In order to display reservations, the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationSheet" /> must be connected
            to a class that implements the <see cref="T:NickLee.Views.Gantt.Windows.Forms.IReservationRowController" /> interface such
            as the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationTable" /> or <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationChart" /> classes. To connect the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationSheet" /> use the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.RowController" /> property.</p>
            <p>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationSheet" /> inherits from the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" /> class that is
            the base class for controls displaying information over the time. In particular
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" /> defines the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.FirstVisibleTime" /> property
            that is the first visible time displayed by the control and the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.VisibleDuration" /> property that defines the period of time displayed by
            the control.</p>
            <p>In order to synchronize the time of several controls that are displaying time information,
            the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" /> control also defines the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeLine" />
            property. For example, to synchronize a <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> with a
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> object, you will set the <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeControl.TimeLine" /> property
            of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> to the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> object.</p>
            <p>The base class <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> defines many appearence properties such as the
            back color, the color of selected rows, the font of the sheet, the vertical and horizontal
            grid lines.</p>
            <p>The appearance of a reservation on a line depends on the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ActivityBarStyles" />
            property that defines the styles of bar to be used for reservations depending on the type
            and current values of a reservation. For more information of this topic see <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />.</p>
            <p>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationSheet" /> has several prebuilt interactions: the user can move or resize an activity bar
            using the mouse pointer to change the activity properties displayed by the bar. This interaction can be
            disabled by setting the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.CanEditActivities" /> property to
            <see langword="false" />. When modifying an activity property
            using the mouse pointer, the modification of the activity can be done at every mouse move or
            only when the user releases the mouse button. This is controlled by the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.InstantEditing" /> property. Before an activity is modified the
            <see cref="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.BeforeEditActivity" /> event is raised that allows you to cancel the
            modification or alert the user in some particular cases.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to get the <strong>ReservationSheet</strong>
            from a <strong>ReservationChart</strong>.
            </para>
            <code lang="C#">
            ReservationChart chart = new ReservationChart();
            ReservationSheet sheet = chart.GanttSheet;
            </code>
            <code lang="Visual Basic">
            Dim chart As New ReservationChart
            Dim sheet As ReservationSheet = chart.GanttSheet
            </code>
            </example>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to recreate a Reservation Chart
            using a <strong>ReservationSheet</strong>, a <strong>ReservationTable</strong>,
            a <strong>TimeScale</strong> and a <strong>Splitter</strong>.
            </para>
            <code lang="C#">
            Form form = new Form();

            // Creates the reservation table
            ReservationTable table = new ReservationTable();
            table.Dock = DockStyle.Left;

            // Makes the column header height the same as the time scale height
            int scaleRowCount = 2;
            table.ColumnHeaderHeight = scaleRowCount * (6+Control.DefaultFont.Height) - 2;

            // Creates a panel that will contain the
            // time scale and the Gantt sheet.
            Panel panel = new Panel();
            panel.BorderStyle = BorderStyle.Fixed3D;
            panel.Dock = DockStyle.Fill;

            // Creates the time scale
            TimeScale scale = new TimeScale();
            scale.Dock = DockStyle.Top;
            scale.BorderStyle = BorderStyle.None;

            // Creates the Gantt sheet
            ReservationSheet sheet = new ReservationSheet();
            sheet.Dock = DockStyle.Fill;
            sheet.BorderStyle = BorderStyle.None;

            // Row synchronization between Gantt sheet and table
            sheet.RowController = table;

            // Time synchronization between Gantt sheet and time scale
            sheet.TimeLine = scale;

            // Adds the time scale and Gantt sheet
            panel.Controls.Add(sheet);
            panel.Controls.Add(scale);

            // Creates the splitter
            Splitter splitter = new Splitter();
            splitter.Dock = DockStyle.Left;

            // Adds the controls to the form
            form.Controls.AddRange(new Control[] {panel, splitter, table});

            // Creates a Gantt model
            IGanttModel model = new SimpleGanttModel();
            IActivity activity = model.NewActivity();
            activity.Name = "My Activity";
            activity.StartTime = DateTime.Now;
            activity.Duration = TimeSpan.FromDays(5);
            model.Activities.Add(activity);
            IResource resource = model.NewResource();
            resource.Name = "My Resource";
            model.Resources.Add(resource);
            IReservation reservation = model.NewReservation(activity, resource);
            model.Reservations.Add(reservation);

            // Assigns Gantt model to the table
            table.GanttModel = model;

            // Changes the start time of the Gantt sheet
            sheet.FirstVisibleTime = DateTime.Now;

            Application.Run(form);
            </code>
            <code lang="Visual Basic">
            Dim f As Form = New Form

            ' Creates the reservation table
            Dim table As ReservationTable = New ReservationTable
            table.Dock = DockStyle.Left

            ' Makes the column header height the same as the time scale height
            Dim scaleRowCount As Integer = 2
            table.ColumnHeaderHeight = ((scaleRowCount * (6 + Control.DefaultFont.Height)) - 2)

            ' Creates a panel that will contain the
            ' time scale and the Gantt sheet.
            Dim panel As Panel = New Panel
            panel.BorderStyle = BorderStyle.Fixed3D
            panel.Dock = DockStyle.Fill

            ' Creates the time scale
            Dim scale As TimeScale = New TimeScale
            scale.Dock = DockStyle.Top
            scale.BorderStyle = BorderStyle.None

            ' Creates the Gantt sheet
            Dim sheet As ReservationSheet = New ReservationSheet
            sheet.Dock = DockStyle.Fill
            sheet.BorderStyle = BorderStyle.None

            ' Row synchronization between Gantt sheet and table
            sheet.RowController = table

            ' Time synchronization between Gantt sheet and time scale
            sheet.TimeLine = scale

            ' Adds the time scale and Gantt sheet
            panel.Controls.Add(sheet)
            panel.Controls.Add(scale)

            ' Creates the splitter
            Dim splitter As Splitter = New Splitter
            splitter.Dock = DockStyle.Left

            ' Adds the controls to the form
            f.Controls.AddRange(New Control(3) {panel,splitter, table})

            ' Creates a Gantt model
            Dim model As IGanttModel = New SimpleGanttModel
            Dim activity As IActivity = model.NewActivity
            activity.Name = "My Activity"
            activity.StartTime = DateTime.Now
            activity.Duration = TimeSpan.FromDays(5)
            model.Activities.Add(activity)
            Dim resource as IResource = model.NewResource
            resource.Name = "My Resource"
            model.Resources.Add(resource)
            Dim reservation as IReservation = model.NewReservation(activity, resource)
            model.Reservations.Add(reservation)

            ' Assigns the Gantt model to the table
            table.GanttModel = model

            ' Changes the start time of the Gantt sheet
            sheet.FirstVisibleTime = DateTime.Now
            Application.Run(f)
            </code>
            </example>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ScrollReservationSheet" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationChart" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" />
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.FlagMovingActivity">
            <summary>
            Flag indicating if we are currently moving or resizing an activity.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.#ctor">
            <summary>
            Creates and initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationSheet" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.CreateDefaultBarStyles">
            <summary>
            Creates the default bar styles for rendering the activities.
            </summary>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ActivityBarStyles" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.CreateDefaultTimeRange">
            <summary>
            Is called to create the default time range for the Gantt sheet.
            </summary>
            <returns>A new <see cref="T:NickLee.Views.Gantt.ReservationsTimeRange" /> instance.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.FireEvent(System.Object,System.EventArgs)">
            <summary>
            Fires an event based on key in the Events list.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.GetActivityBarBounds(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Gets the bounds of the activity for the specified reservation without taking into account
            the text on the right and left of the activity bar.
            </summary>
            <param name="reservation">An <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> reference.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle" /> structure that represents the
            bounds of <paramref name="reservation" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.GetActivityBarBounds(System.Drawing.Graphics,NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Gets the bounds of the activity for the specified reservation without taking into account
            the text on the right and left of the activity bar.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics" /> object to compute the bounds with.</param>
            <param name="reservation">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> reference.</param>
            <returns>A <see cref="T:System.Drawing.RectangleF" /> structure that represents the
            bounds of <paramref name="reservation" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.GetActivityBounds(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Gets the bounds of the activity for the specified reservation.
            </summary>
            <param name="reservation">An <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> reference.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle" /> structure that represents the
            bounds of <paramref name="reservation" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.GetActivityBounds(System.Drawing.Graphics,NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Gets the bounds of the activity for the specified reservation.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics" /> object to compute the bounds with.</param>
            <param name="reservation">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> reference.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle" /> structure that represents the
            bounds of <paramref name="reservation" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.GetFlag(System.UInt16)">
            <summary>
            Gets the value of a flag.
            </summary>
            <param name="flag">The flag.</param>
            <returns>The value of a flag.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.GetReservationAt(System.Int32)">
            <summary>
            Gets the reservation that is displayed at the specified row index.
            </summary>
            <param name="rowIndex">The index of the row.</param>
            <returns>The <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> object that is displayed at the specified row index.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.GetRowIndex(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Gets the index of the row that displays the specified reservation.
            </summary>
            <param name="reservation">An <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> to compute the index.</param>
            <returns>The index of the row that displays the specified reservation or -1 if
            the specified reservation is not displayed in any row.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.HitTest(System.Drawing.Point)">
            <summary>
            Gets information about the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationSheet" /> control at a specified point on the screen.
            </summary>
            <param name="point">A <see cref="T:System.Drawing.Point" /> that represents single x,y coordinate.
            </param>
            <returns>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet.HitTestInfo" /> that contains specific information about the Gantt sheet.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.InvalidateActivity(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Invalidates all the reservations of the specified activity.
            </summary>
            <param name="activity">The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to invalidate.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.InvalidateReservation(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Invalidates the specified reservation.
            </summary>
            <param name="reservation">An <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> to invalidate.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.OnGanttModelChanged">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnGanttModelChanged">GanttSheet.OnGanttModelChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.OnGanttModelChanging">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnGanttModelChanging">GanttSheet.OnGanttModelChanging</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.OnGanttRowControllerChanging(NickLee.Views.Gantt.Windows.Forms.IGanttRowController)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnGanttRowControllerChanging(NickLee.Views.Gantt.Windows.Forms.IGanttRowController)">GanttSheet.OnGanttRowControllerChanging</see>.
            </summary>
            <exception cref="T:System.NotSupportedException">The row controller is does not
            implement <see cref="T:NickLee.Views.Gantt.Windows.Forms.IReservationRowController" />.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden. See <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)">Control.OnMouseDown</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden. See <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)">Control.OnMouseMove</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overridden. See <see cref="M:System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)">Control.OnMouseUp</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.OnPaint(System.Windows.Forms.PaintEventArgs)">GanttSheet.OnPaint</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.PaintRow(System.Drawing.Graphics,System.Int32,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Brush,System.Drawing.Brush,System.Boolean)">
            <summary>
            Overridden. See <see cref="M:NickLee.Views.Gantt.Windows.Forms.GanttSheet.PaintRow(System.Drawing.Graphics,System.Int32,System.Drawing.Rectangle,System.Drawing.Font,System.Drawing.Brush,System.Drawing.Brush,System.Boolean)">GanttSheet.PaintRow</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.SetFlag(System.UInt16,System.Boolean)">
            <summary>
            Sets or unsets the value of a flag.
            </summary>
            <param name="flag">The flag value.</param>
            <param name="value">The flag value</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Overridden. See <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)">Control.WndProc</see>
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ReservationSheet._flags">
            <summary>
            Contains flag indicators.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.InteractiveBarStyleInfo">
            <summary>
            Gets information about the bar style involved in the current interaction on the control.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTestInfo" /> structure.</value>
            <remarks>
            This property should be used only during an interaction, that is, when the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.InteractiveReservation" /> property is not <see langword="null" />.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.InteractiveReservation" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.InteractiveReservation">
            <summary>
            Gets the reservation involved in the current interaction on the control.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> reference, or <see langword="null" /> if
            no interaction is being performed on the control.</value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.InteractiveBarStyleInfo" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.RowController">
            <summary>
            Gets or sets the row controller for the sheet.
            </summary>
            <value>An object that implements the <see cref="T:NickLee.Views.Gantt.Windows.Forms.IReservationRowController" /> interface.</value>
            <remarks>
            This property defines the object that controls the rows of the sheet. In
            order to see activities in the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationSheet" />, this property must
            be set to an object that implements the <see cref="T:NickLee.Views.Gantt.Windows.Forms.IReservationRowController" /> interface such
            as the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationTable" /> or <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationChart" />. The row controller defines
            the activity visible in each row, the row height, the selected rows as well as the
            first visible row.
            </remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ReservationSheet.ReservationSheetRowCollection">
            <summary>
            Defines the collection of rows in the Schedule Sheet.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.QueryReservationZOrderEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.QueryReservationZOrder" /> event of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" />.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.QueryReservationZOrderEventArgs.Reservation">
            <summary>
            Gets the reservation for which we query the z-order.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> for whiwh we query
            the z-order.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.QueryReservationZOrderEventArgs.ZOrder">
            <summary>
            Gets or sets the z-order of the reservation.
            </summary>
            <value>An <see cref="T:System.Int32" /> that represents the z-order of the
            reservation.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.Printing.NamespaceDoc">
            <summary>
            The <strong>NickLee.Views.Gantt.Windows.Forms.Printing</strong> namespace
            contains classes that allows to print the content of a Gantt Chart.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.LayoutReservationsEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.LayoutReservations" /> event of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.WorkCalendarSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
            <summary>
            Deserializes the specified serialized CodeDOM object into an object.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.WorkCalendarSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
            <summary>
            Serializes the specified object into a CodeDOM object.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.Design.TimeGridCollectionSerializer">
            <summary>
            A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> for the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.TimeGridCollectionSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
            <summary>
            Deserializes the specified serialized CodeDOM object into an object.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.TimeGridCollectionSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
            <summary>
            Serializes the specified object into a CodeDOM object.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.Design.ActivityBarStyleCollectionEditor">
            <summary>
            Provides a user interface to edit a collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.ActivityBarStyleCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the value of the specified object using the editor style indicated by <see cref="M:NickLee.Views.Gantt.Windows.Forms.Design.ActivityBarStyleCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
            <param name="provider">An <see cref="T:System.IServiceProvider" /> that this editor can use to obtain services.
            </param>
            <param name="value">The object to edit.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.ActivityBarStyleCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the <see cref="M:NickLee.Views.Gantt.Windows.Forms.Design.ActivityBarStyleCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used
            to gain additional context information.
            </param>
            <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that indicates the style
            of editor used by <see cref="M:NickLee.Views.Gantt.Windows.Forms.Design.ActivityBarStyleCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.
            </returns>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid">
            <summary>
            Defines a grid made of vertical lines distributed on the time line.
            </summary>
            <remarks>You can add grid to
            a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" /> component using the <strong>TimeGrids</strong> property.
            <p>The time interval between two grid lines can be controlled by the
            <see cref="T:NickLee.Views.Gantt.TimeUnit" /> and <see cref="P:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid.Steps" /> properties.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to add grids to an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" />.
            </para>
            <code lang="C#">
            ActivitySheet sheet = new ActivitySheet();
            // Delete default time grids
            sheet.TimeGrids.Clear();
            // Add a new grid that draws ticks each hour
            TimeGrid grid = new DefaultTimeGrid();
            grid.TimeUnit = TimeUnit.Hour;
            sheet.TimeGrids.Add(grid);
            </code>
            <code lang="Visual Basic">
            Dim sheet As New ActivitySheet
            ' Delete default time grids
            sheet.TimeGrids.Clear()
            ' Add a new grid that draws ticks each hour
            Dim grid as New DefaultTimeGrid
            grid.TimeUnit = TimeUnit.Hour
            sheet.TimeGrids.Add(grid)
            </code>
            </example>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.WorkingTimesGrid" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.TimeRangeGrid" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid.GetTimeSampler">
            <summary>
            Gets a time sampler used to iterate on the dates of the grid.
            </summary>
            <returns>An <see cref="T:NickLee.Views.Gantt.ITimeSampler" /> that can iterate between the visible dates of the grid.</returns>
            <exception cref="T:System.InvalidOperationException">The grid is not connected to a
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeControl" /> instance.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid.GetTimeSampler(System.DateTime,System.DateTime)">
            <summary>
            Gets a time sampler used to iterate on the grid.
            </summary>
            <param name="startTime">The start time of the time sampler.</param>
            <param name="endTime">The end time of the time sampler.</param>
            <returns>A <see cref="T:NickLee.Views.Gantt.DefaultTimeSampler" /> that can iterate between the specified dates.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid.Paint(System.Drawing.Graphics,System.Drawing.RectangleF)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.TimeGrid.Paint(System.Drawing.Graphics,System.Drawing.RectangleF)">TimeGrid.Paint</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid.SetTimeUnit(NickLee.Views.Gantt.TimeUnit,System.Int32)">
            <summary>
            Sets both the <see cref="P:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid.TimeUnit" /> and <see cref="P:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid.Steps" /> properties
            in one operation.
            </summary>
            <param name="timeUnit">One of the <see cref="T:NickLee.Views.Gantt.TimeUnit" /> values.</param>
            <param name="steps">A value that represents the number of time unit (see <see cref="P:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid.TimeUnit" /> property)
            that separates two vertical grid lines.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid.SetUnitDuration(System.TimeSpan,System.Int32)">
            <summary>
            Sets both the <see cref="P:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid.UnitDuration" /> and <see cref="P:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid.Steps" /> properties
            in one operation.
            </summary>
            <param name="unitDuration">A <see cref="T:System.TimeSpan" /> structure.</param>
            <param name="steps">A value that represents the number of time unit (see <see cref="P:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid.UnitDuration" /> property)
            that separates two vertical grid lines.</param>
            <remarks>Calling this method automatically sets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid.TimeUnit" /> property to
            <see cref="T:NickLee.Views.Gantt.TimeUnit">TimeUnit.None</see>.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid.Color">
            <summary>
            Gets or sets the color of the vertical grid lines.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of the vertical grid lines.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid.DashStyle">
            <summary>
            Gets or sets the style of vertical grid lines.
            </summary>
            <value>
            One of the <see cref="T:NickLee.Views.Windows.Forms.GridLineStyle" /> values.
            The default value is <strong>Dot</strong>.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid.Steps">
            <summary>
            Gets or sets the number of time unit that separates two vertical grid lines.
            </summary>
            <value>A value that represents the number of time unit (see <see cref="P:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid.TimeUnit" /> property)
            that separates two vertical grid lines. The default value is <strong>1</strong>.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid.TimeUnit">
            <summary>
            Gets or sets the time unit that separates two vertical grid lines.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.TimeUnit" /> values that represents the period
            of time between two vertical lines. The default value is <strong>Day</strong>.
            </value>
            <remarks>The vertical grid lines will be separated by the value of this property unless the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid.Steps" /> property is different from its default value of 1.
            If the value of the <see cref="P:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid.Steps" /> property is different from 1, then the grid lines
            will be separated by <see cref="P:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid.Steps" /> time units.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid.UnitDuration">
            <summary>
            Gets or sets the unit duration that separates two vertical grid lines.
            </summary>
            <value>A <see cref="T:System.TimeSpan" /> structure.</value>
            <remarks><p>The vertical grid lines will be separated by the value of this property unless the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid.Steps" /> property is different from its default value of 1.
            If the value of the <see cref="P:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid.Steps" /> property is different from 1, then the grid lines
            will be separated by <see cref="P:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid.Steps" /> time units.</p>
            <p>This property is used only if the <see cref="P:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid.TimeUnit" /> property is
            set to <see cref="T:NickLee.Views.Gantt.TimeUnit">TimeUnit.None</see>.
            </p>
            </remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ConstraintDialog">
            <summary>
            A dialog box that allows you to edit the property of an <see cref="T:NickLee.Views.Gantt.Data.IConstraint" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ConstraintDialog.#ctor">
            <summary>
            Creates and initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ConstraintDialog" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ConstraintDialog.Dispose(System.Boolean)">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ConstraintDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ConstraintDialog.ValidateDialog">
            <summary>
            Invoked when the user validates the dialog.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ConstraintDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ConstraintDialog.AutoScaleBaseSize">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Form.AutoScaleBaseSize">Form.AutoScaleBaseSize</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ConstraintDialog.CanRemove">
            <summary>
            Gets a value indicating if the dialog box contains a button allowing you to
            remove the constraint.
            </summary>
            <value><see langword="true" /> if the dialog box contains a button to remove the constraint
            <see langword="false" /> otherwise. The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ConstraintDialog.ClientSize">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Form.ClientSize">Form.ClientSize</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ConstraintDialog.Constraint">
            <summary>
            Gets or sets the constraint to edit.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> to edit in the dialog.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ConstraintDialog.Text">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.Text">Control.Text</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.BeforeCreateConstraintEventArgs">
            <summary>
            Provides data for the  <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.BeforeCreateConstraint" /> event of an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" />.
            </summary>
            <remarks>The <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.BeforeCreateConstraint" /> event occurs before the
            user creates a constraint in the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" />.
            A <strong>BeforeCreateConstraintEventArgs</strong> provides the <see cref="P:NickLee.Views.Gantt.Windows.Forms.BeforeCreateConstraintEventArgs.Cancel" /> property
            to indicate whether the creation of the constraint should be canceled.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.BeforeCreateConstraintEventArgs.#ctor(NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.ConstraintType)">
            <summary>
            Creates the event args.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.BeforeCreateConstraintEventArgs._cancel">
            <summary>
            Indicates if the creation of the constraint is canceled.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.BeforeCreateConstraintEventArgs._constraintType">
            <summary>
            The constraint type to create.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.BeforeCreateConstraintEventArgs._fromActivity">
            <summary>
            The activity origin of the constraint to create.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.BeforeCreateConstraintEventArgs._toActivity">
            <summary>
            The activity destination of the constraint to create.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.BeforeCreateConstraintEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the creation of the constraint
            should be canceled.
            </summary>
            <value>
            <see langword="true" /> if the creation of the constraint should
            be canceled; <see langword="false" /> otherwise.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.BeforeCreateConstraintEventArgs.ConstraintType">
            <summary>
            Gets or sets the type of constraint that the user wants to create.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Data.ConstraintType" /> values.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.BeforeCreateConstraintEventArgs.FromActivity">
            <summary>
            Gets the activity origin of the constraint.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> origin of the constraint.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.BeforeCreateConstraintEventArgs.ToActivity">
            <summary>
            Gets the activity destination of the constraint.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> destination of the constraint.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarText">
            <summary>
            Defines a property of an activity that can be displayed as text in an activity bar style.
            </summary>
            <remarks><p>When an activity is drawn using an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />, the properties of the
            activity can be displayed above and below the bar, on the left, the right or the center of the bar.
            The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarText" /> class defines the text that will be displayed and
            how it will be formatted.</p>
            <p>You do not have to create instances of this class, instead you can get the instances defined
            in an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> using the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.TopText" />, <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.BottomText" />,
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.LeftText" />,
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.RightText" /> and <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.InsideText" /> of
            an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following example changes the property displayed on the right and on the left of an activity bar.
            </para>
            <code lang="C#">
            style.RightText.Value = "Reservations";
            style.LeftText.Value = "{StartTime:m}";
            </code>
            <code lang="Visual Basic">
            style.RightText.Value = "Reservations"
            style.LeftText.Value = "{StartTime:m}"
            </code>
            <para lang="C#, Visual Basic">
            Assuming that <strong>style</strong> is an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />, the property displayed
            on the right will be the reservations of the activity (see <see cref="P:NickLee.Views.Gantt.Data.IActivity.Reservations">IActivity.Reservations</see>) and
            the property displayed on the right will be the start time of the activity (see <see cref="P:NickLee.Views.Gantt.Data.IActivity.StartTime">IActivity.StartTime</see>)
            formatted with the 'm' format of dates that corresponds to the Month/Day pattern (see <see cref="T:System.Globalization.DateTimeFormatInfo" />).
            </para>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarText.#ctor(NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle)">
            <summary>
            Creates an initializes a new instance of <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarText" />.
            </summary>
            <param name="style">The bar style</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarText.Clone">
            <summary>
            Copies the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarText" />.
            </summary>
            <returns>A new <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarText" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarText.GetText(System.Object)">
            <summary>
            Gets the text displayed by this <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarText" /> for the specified object.
            </summary>
            <param name="obj">The object to get the property value from.</param>
            <returns>The text that will be displayed by this <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarText" />.</returns>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarText._formatInfo">
            <summary>
            Format provider for the format.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarText._selectedTextColor">
            <summary>
            The color for the selected text.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarText._style">
            <summary>
            Style that contains this bar text.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarText._textAlignment">
            <summary>
            The horizontal alignment of the text.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarText._textColor">
            <summary>
            The color for the text.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarText._textPosition">
            <summary>
            The vertical alignment of the text.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarText._value">
            <summary>
            Name of the property to display.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarText.FormatInfo">
            <summary>
            Gets or sets the culture specific information used to determine how values are formatted.
            </summary>
            <value>An object that implements the <see cref="T:System.IFormatProvider" /> interface,
            such as the <see cref="T:System.Globalization.CultureInfo" /> class.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarText.SelectionTextColor">
            <summary>
            Gets or sets the color used to draw the text when the row being drawn is selected.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> structure.</value>
            <remarks>The default value is <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarText.Style">
            <summary>
            Sets the activity bar style that contains this object.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarText.TextAlign">
            <summary>
            Gets or sets the horizontal alignment used to draw the text.
            </summary>
            <value>One of the <see cref="T:System.Drawing.StringAlignment" /> values.</value>
            <remarks><p>The default value is
            <see cref="F:System.Drawing.StringAlignment.Near">StringAlignment.Near</see>.</p>
            <p>This property is only meaningful for texts being drawn inside,
            above, or below an activity bar. See <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.TopText" />,
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.InsideText" /> or <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.BottomText" />
            for details.</p>
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarText.TextColor">
            <summary>
            Gets or sets the color used to draw the text.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> structure.</value>
            <remarks>The default value is <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarText.TextPosition">
            <summary>
            Gets or sets the vertical alignment used to draw the text.
            </summary>
            <value>One of the <see cref="T:System.Drawing.StringAlignment" /> values.</value>
            <remarks><p>The default value is
            <see cref="F:System.Drawing.StringAlignment.Near">StringAlignment.Near</see>.</p>
            <p>This property is only meaningful for texts being drawn inside
            an activity bar. See the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.InsideText" />
            property for details.</p>
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarText.Value">
            <summary>
            Gets or sets the expression value that will be displayed.
            </summary>
            <value>
            A string that represents an expression. The default value is
            <see langword="null" />.
            </value>
        </member>
        <member name="T:NickLee.Views.Gantt.ReservationsTimeRange">
            <summary>
            This implementation of the <see cref="T:NickLee.Views.Gantt.ITimeRange" /> interface listens to a
            <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> and automatically adjusts its bounds according to
            the reservations located in the Gantt model.
            </summary>
            <remarks><p>This class is used by a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" />
            to update its time bounds.</p>
            <p>Use the <see cref="P:NickLee.Views.Gantt.GanttTimeRange.GanttModel" /> property to connect a
            <strong>ReservationsTimeRange</strong> to a Gantt data model.</p>
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.ReservationsTimeRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.ReservationsTimeRange" /> class.
            </summary>
            <remarks>To connect this instance to a Gantt data model, use
            the <see cref="P:NickLee.Views.Gantt.GanttTimeRange.GanttModel" /> property.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.ReservationsTimeRange.#ctor(NickLee.Views.Gantt.Data.IGanttModel)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.ReservationsTimeRange" /> class connected
            to the specified <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> instance.
            </summary>
            <param name="model">A <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> instance to listen to.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.ReservationsTimeRange.OnGanttModelChanged">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.GanttTimeRange.OnGanttModelChanged">GanttTimeRange.OnGanttModelChanged</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.ReservationsTimeRange.OnGanttModelChanging">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.GanttTimeRange.OnGanttModelChanging">GanttTimeRange.OnGanttModelChanging</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.GanttPropertyAttribute">
            <summary>
            Specifies how a Gantt property is exported.
            </summary>
            <remarks>
            A Gantt property is a property of a resource, an activity, a constraint, or a reservation.
            When such a property is created on the appropriate class, it is automatically
            exported to other Gantt components. That means that the property will be
            available to property browsers, evaluated expressions, and XML serialization.
            Using this attribute can change this default behavior. You can control both the
            <strong>browsable</strong> and <strong>XML serialization</strong> aspects.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to use the
            <strong>GanttProperty</strong> attribute.
            </para>
            <code lang="C#">
            [GanttProperty(false)]
            public int MyProperty {
            get {
            return _myProperty;
            }
            set {
            _myProperty = value;
            }
            }
            </code>
            <code lang="Visual Basic">
            &lt;GanttProperty(False)&gt; _
            Public Property MyProperty() As Integer
            Get
            Return _myProperty
            End Get
            Set (ByVal Value As Integer)
            _myProperty = value
            End Set
            End Property
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttPropertyAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.GanttPropertyAttribute" /> class.
            </summary>
            <param name="value"><see langword="true" /> if the property on which the attribute is set must be exported;
            <see langword="false" /> otherwise.</param>
            <remarks>This constructor sets both the <strong>browsable</strong> and <strong>XML serialization</strong> aspects. Use the second
            constructor if you need more tuning.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to use the
            <strong>GanttProperty</strong> attribute.
            </para>
            <code lang="C#">
            [GanttProperty(false)]
            public int MyProperty {
            get {
            return _myProperty;
            }
            set {
            _myProperty = value;
            }
            }
            </code>
            <code lang="Visual Basic">
            &lt;GanttProperty(False)&gt; _
            Public Property MyProperty() As Integer
            Get
            Return _myProperty
            End Get
            Set (ByVal Value As Integer)
            _myProperty = value
            End Set
            End Property
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttPropertyAttribute.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.GanttPropertyAttribute" /> class.
            </summary>
            <param name="browsable"><see langword="true" /> if the property on which the attribute is set has to be
            available to property browsers and evaluated expressions; <see langword="false" /> otherwise.</param>
            <param name="serializable"><see langword="true" /> if the property on which the attribute is set has to be
            serialized during XML serialization.</param>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to use the
            <strong>GanttProperty</strong> attribute.
            </para>
            <code lang="C#">
            [GanttProperty(false)]
            public int MyProperty {
            get {
            return _myProperty;
            }
            set {
            _myProperty = value;
            }
            }
            </code>
            <code lang="Visual Basic">
            &lt;GanttProperty(False)&gt; _
            Public Property MyProperty() As Integer
            Get
            Return _myProperty
            End Get
            Set (ByVal Value As Integer)
            _myProperty = value
            End Set
            End Property
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttPropertyAttribute.Equals(System.Object)">
            <summary>
            This member overrides <see cref="M:System.Attribute.Equals(System.Object)" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttPropertyAttribute.GetHashCode">
            <summary>
            This member overrides <see cref="M:System.Attribute.GetHashCode" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttPropertyAttribute.IsDefaultAttribute">
            <summary>
            This member overrides <see cref="M:System.Attribute.IsDefaultAttribute" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.GanttPropertyAttribute.Match(System.Object)">
            <summary>
            This member overrides <see cref="M:System.Attribute.Match(System.Object)" />.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttPropertyAttribute.IsBrowsable">
            <summary>
            Gets a value indicating whether the property on which the attribute is set should be available to
            property browsers and evaluated expressions.
            </summary>
            <value>
            <see langword="true" /> if the property on which the attribute is set has to be
            available to property browsers and evaluated expressions;<see langword="false" /> otherwise.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.GanttPropertyAttribute.IsSerializable">
            <summary>
            Gets a value indicating whether the property on which the attribute is set should be serialized
            during XML serialization.
            </summary>
            <value>
            <see langword="true" /> if the property on which the attribute is set has to be serialized during XML
            serialization.
            </value>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Design.CustomPropertyDescriptorDialog.Dispose(System.Boolean)">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Design.CustomPropertyDescriptorDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.Design.CustomPropertyDescriptorDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:NickLee.Views.Gantt.Data.IGanttModel.ActivitiesChanging" /> and
            <see cref="E:NickLee.Views.Gantt.Data.IGanttModel.ActivitiesChanged" /> events of a <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.WorkingTimesEditor">
            <summary>
            A control that allows to view and edit the content of a <see cref="T:NickLee.Views.Gantt.WorkCalendar" />.
            </summary>
            <remarks>This control allows to view and edit the content of a <see cref="T:NickLee.Views.Gantt.WorkCalendar" />. Use
            the <see cref="P:NickLee.Views.Gantt.Windows.Forms.WorkingTimesEditor.Calendar" /> property to set the edited <see cref="T:NickLee.Views.Gantt.WorkCalendar" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.WorkingTimesEditor.#ctor">
            <summary>
            Creates a new <see cref="T:NickLee.Views.Gantt.Windows.Forms.WorkingTimesEditor" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.WorkingTimesEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.WorkingTimesEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.WorkingTimesEditor.UpdateValuesFromCalendar">
            <summary>
            Updates the values of the dialog based on calendar
            selection.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.WorkingTimesEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.WorkingTimesEditor.Calendar">
            <summary>
            Gets or sets the edited calendar.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> that represents the edited calendar.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.WorkingTimesEditor.FirstVisibleDate">
            <summary>
            Gets or sets the first visible date.
            </summary>
            <value>A <see cref="T:System.DateTime" /> that represents the first visible date
            of the calendar displaying working times.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.WorkingTimesEditor.InvalidateType">
            <summary>
            Type of errors in the text boxes.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection">
            <summary>
            Represents a collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> objects.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection.Add(NickLee.Views.Gantt.Windows.Forms.TimeGrid)">
            <summary>
            Adds a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> with the specified value to the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection" /> .
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> to add.</param>
            <returns>
            The index where the new element was inserted.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection.AddRange(NickLee.Views.Gantt.Windows.Forms.TimeGridCollection)">
            <summary>
            Adds the contents of another <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection" /> to the end of the collection.
            </summary>
            <param name="value">
            A <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection" /> containing the objects to add to the collection.
            </param>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection.Add(NickLee.Views.Gantt.Windows.Forms.TimeGrid)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection.AddRange(NickLee.Views.Gantt.Windows.Forms.TimeGrid[])">
            <summary>
            Copies the elements of an array to the end of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" />.
            </summary>
            <param name="value">
            An array of type <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> containing the objects to add to the collection.
            </param>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.Add(NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection.Contains(NickLee.Views.Gantt.Windows.Forms.TimeGrid)">
            <summary>
            Gets a value indicating whether the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection" /> contains the specified <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" />.
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> to locate.</param>
            <returns>
            <see langword="true" /> if the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> is contained in the collection;
            <see langword="false" /> otherwise.
            </returns>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection.IndexOf(NickLee.Views.Gantt.Windows.Forms.TimeGrid)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection.CopyTo(NickLee.Views.Gantt.Windows.Forms.TimeGrid[],System.Int32)">
            <summary>
            Copies the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection" /> values to a one-dimensional <see cref="T:System.Array" /> instance at the
            specified index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection" />.</param>
            <param name="index">The index in <paramref name="array" /> where copying starts.</param>
            <exception cref="T:System.ArgumentException"><paramref name="array" /> is multidimensional. -or- The number of elements in the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection" /> is greater than the available space between <paramref name="arrayIndex" /> and the end of <paramref name="array" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />. </exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index" /> is less than <paramref name="array" /> lowbound. </exception>
            <seealso cref="T:System.Array" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection.IndexOf(NickLee.Views.Gantt.Windows.Forms.TimeGrid)">
            <summary>
            Returns the index of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> in
            the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection" />.
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> to locate.</param>
            <returns>
            The index of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> of <paramref name="value" /> in the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection" />, if found; <strong>-1</strong> otherwise.
            </returns>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection.Contains(NickLee.Views.Gantt.Windows.Forms.TimeGrid)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection.Insert(System.Int32,NickLee.Views.Gantt.Windows.Forms.TimeGrid)">
            <summary>
            Inserts a <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> into the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection" /> at the specified index.
            </summary>
            <param name="index">The zero-based index where <paramref name="value" /> should be inserted.</param>
            <param name=" value">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> to insert.</param>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection.Add(NickLee.Views.Gantt.Windows.Forms.TimeGrid)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection.OnClear">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnClear">CollectionBase.OnClear</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection.OnClearComplete">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnClearComplete">CollectionBase.OnClearComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection.OnCollectionChanged(System.EventArgs)">
            <summary>
            Is called to notify the time control that the collection has changed.
            </summary>
            <remarks>Called when the collection is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">CollectionBase.OnInsert</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">CollectionBase.OnInsertComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection.OnRemove(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">CollectionBase.OnRemoveComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">CollectionBase.OnRemoveComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">CollectionBase.OnSetComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">CollectionBase.OnSetComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection.OnValidate(System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)">CollectionBase.OnValidate</see>.
            </summary>
            <exception cref="T:System.InvalidCastException"><paramref name="value" /> is not an
            instance of <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" />.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection.Remove(NickLee.Views.Gantt.Windows.Forms.TimeGrid)">
            <summary>
            Removes a specific <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> from the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection" />.
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> to remove from the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection" />.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is not found in the collection. </exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection.Synchronize(NickLee.Views.Gantt.Windows.Forms.TimeGridCollection)">
            <summary>
            Synchronizes the grid collection using the specified <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection" />.
            </summary>
            <param name="grids">A <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection" /> to synchronize with.</param>
            <remarks>The method synchronizes the <see cref="T:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid" /> instances of this collection
            with the <see cref="T:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid" /> instances of the specified collection.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection.Synchronize(NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection)">
            <summary>
            Synchronizes the grid collection using the specified <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection" />.
            </summary>
            <param name="rows">A <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRowCollection" /> to synchronize with.</param>
            <remarks>The method synchronizes the <see cref="T:NickLee.Views.Gantt.Windows.Forms.DefaultTimeGrid" /> instances of this collection
            with the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> instances of the specified collection.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.TimeGridCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeGrid" /> at the specified index.
            </summary>
            <param name="index">The zero-based index of the entry to locate in the collection.</param>
            <value>
            The entry at the specified index of the collection.
            </value>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index" /> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.RowLayoutStyleEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet.RowLayoutStyle" /> event of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.HitTestConstraintLinkEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.HitTestConstraintLink" /> event
            of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivitySheet" /> class.
            </summary>
            <remarks>A <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.HitTestConstraintLink" /> event is raised to know
            if a specific point is located on the link representing constraints between activities when the activity sheet is using owner drawing for constraints (see
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintsOwnerDraw" /> for details).
            It contains all the information needed for the user to do hit testing against the
            specified constraint. Use the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HitTestConstraintLinkEventArgs.HitTest" /> property to set the result of the hit test.</remarks>
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.HitTestConstraintLink" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintsOwnerDraw" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HitTestConstraintLinkEventArgs.DefaultHitTesting">
            <summary>
            Do hit testing on the constraint link using the information provided in this instance.
            </summary>
            <remarks>Call this method to do hit testing on the constraint link if you want to keep
            the original hit testing on the link, that is, as if the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.ConstraintsOwnerDraw" />
            property was set to <see langword="false" />.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HitTestConstraintLinkEventArgs.HitTest">
            <summary>
            Gets or sets a value indicating whether <see cref="P:NickLee.Views.Gantt.Windows.Forms.HitTestConstraintLinkEventArgs.Point" /> is located on the
            link representing the constraint.
            </summary>
            <value><see langword="true" /> <see cref="P:NickLee.Views.Gantt.Windows.Forms.HitTestConstraintLinkEventArgs.Point" /> is located on the link
            representing the constraint; otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HitTestConstraintLinkEventArgs.Point">
            <summary>
            Gets the point used for hit testing.
            </summary>
            <value>A <see cref="P:NickLee.Views.Gantt.Windows.Forms.HitTestConstraintLinkEventArgs.Point" /> structure.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.BeforeEditActivityEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:NickLee.Views.Gantt.Windows.Forms.GanttSheet.BeforeEditActivity" /> event of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle">
            <summary>
            Defines a graphical representation of an activity or reservation in a <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />.
            </summary>
            <remarks><p>An <strong>ActivityBarStyle</strong> is composed of an
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBar" /> that displays a rectangle, two optional symbols instances
            of the class <see cref="T:NickLee.Views.Gantt.Windows.Forms.BarSymbol" />, one on the right of the bar and one on the
            left, and five optional texts one above the bar, one below the bar and on the right, center and left of the bar. The text to
            be displayed is described by the class <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarText" />.</p>
            <p>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> control contains a collection of
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> in its <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ActivityBarStyles" />
            property. When the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> needs to displays an activity or reservation then it
            looks inside its collection of styles and paints all the activity bar styles that
            correspond to the activity or reservation. To detect if a particular style matches,
            it uses the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.StyleFor" /> property of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />.
            This property defines a Boolean expression that will be evaluated for this purpose.</p>
            <p>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> has two properties that define where the activity
            bar should be painted: The <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.FromProperty" /> and <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ToProperty" />.</p>
            <p><see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.FromProperty" /> contains the name of a property of an
            activity or reservation that defines the starting date where the activity bar should be painted. By
            default the value is "StartTime", meaning that the bar starts drawing at the start
            time of the activity (<see cref="P:NickLee.Views.Gantt.Data.IActivity.StartTime">IActivity.StartTime</see>).
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.FromProperty" /> must then define a property of type <see cref="T:System.DateTime" />.</p>
            <p><see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ToProperty" /> contains the name of a property of an activity or reservation that defines
            the ending date of the activity bar on the screen. By default the value is "EndTime"
            meaning that the bar rectangle will end at the end time of the activity (see
            <see cref="P:NickLee.Views.Gantt.Data.IActivity.EndTime">IActivity.EndTime</see>). The property defined by the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ToProperty" /> can be of type <see cref="T:System.DateTime" /> in this case the date
            defines the end of the bar, it can also be of type <see cref="T:System.TimeSpan" /> in this case
            the end date of the bar is computed by adding the duration to the start date of the
            bar. The property can also be of type <see cref="T:System.Single" />,
            <see cref="T:System.Double" /> or <see cref="T:System.Int32" />, in this case the value of the property is considered as a
            percentage of the duration of the activity (see <see cref="P:NickLee.Views.Gantt.Data.IActivity.Duration">IActivity.Duration</see>), the
            end date of the bar reflects the percentage for the start time of the activity.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following example shows how to create bar styles assuming that the type of activity displayed
            has a property named 'Priority' with three possible values: 'Low', 'Medium' and 'High'. Normal activities
            (activities that are not a summary activity or a milestone) with low priority will be drawn in green,
            activities with medium priority in blue and high priority activities in red.
            </para>
            <code lang="C#">
            ActivityBarStyle lowPriorityStyle = new ActivityBarStyle();
            lowPriorityStyle.Name = "LowPriority";
            lowPriorityStyle.Bar.Color = Color.Green;
            lowPriorityStyle.StyleFor = "Normal &amp;&amp; (Priority == \"Low\")";

            ActivityBarStyle mediumPriorityStyle = new ActivityBarStyle();
            mediumPriorityStyle.Name = "MediumPriority";
            mediumPriorityStyle.Bar.Color = Color.Blue;
            mediumPriorityStyle.StyleFor = "Normal &amp;&amp; (Priority == \"Medium\")";

            ActivityBarStyle highPriorityStyle = new ActivityBarStyle();
            highPriorityStyle.Name = "HighPriority";
            highPriorityStyle.Bar.Color = Color.Red;
            highPriorityStyle.StyleFor = "Normal &amp;&amp; (Priority == \"High\")";

            ActivityBarStyle summaryStyle = new ActivityBarStyle();
            summaryStyle.Name = "Summary";
            summaryStyle.StyleFor = "IsSummary";
            summaryStyle.Bar.BottomMargin = 0.5F;
            summaryStyle.Bar.Color = Color.Black;
            summaryStyle.EndSymbol.Shape = BarSymbolShape.DownPentagon;
            summaryStyle.StartSymbol.Shape = BarSymbolShape.DownPentagon;

            ActivityBarStyle milestoneStyle = new ActivityBarStyle();
            milestoneStyle.Name = "Milestone";
            milestoneStyle.Bar.TopMargin = 1F;
            milestoneStyle.RightText.Value = "{StartTime:m}";
            milestoneStyle.StartSymbol.Shape = NickLee.Views.Gantt.Windows.Forms.BarSymbolShape.Diamond;
            milestoneStyle.StyleFor = "Milestone";
            milestoneStyle.ToProperty = "StartTime";

            ganttChart.ActivityBarStyles.Clear();
            ganttChart.ActivityBarStyles.AddRange(new ActivityBarStyle[] {
            lowPriorityStyle,
            mediumPriorityStyle,
            highPriorityStyle,
            summaryStyle,
            milestoneStyle});
            </code>
            <code lang="Visual Basic">
            Dim LowPriorityStyle As ActivityBarStyle = New ActivityBarStyle
            LowPriorityStyle.Name = "LowPriority"
            LowPriorityStyle.Bar.Color = Color.Green
            LowPriorityStyle.StyleFor = "Normal &amp;&amp; (Priority == \"Low\")"

            Dim MediumPriorityStyle As ActivityBarStyle = New ActivityBarStyle
            MediumPriorityStyle.Name = "MediumPriority"
            MediumPriorityStyle.Bar.Color = Color.Blue
            MediumPriorityStyle.StyleFor = "Normal &amp;&amp; (Priority == \"Medium\")"

            Dim HighPriorityStyle As ActivityBarStyle = New ActivityBarStyle
            HighPriorityStyle.Name = "HighPriority"
            HighPriorityStyle.Bar.Color = Color.Red
            HighPriorityStyle.StyleFor = "Normal &amp;&amp; (Priority == \"High\")"

            Dim SummaryStyle As ActivityBarStyle = New ActivityBarStyle
            SummaryStyle.Name = "Summary"
            SummaryStyle.StyleFor = "IsSummary"
            SummaryStyle.Bar.BottomMargin = 0.5!
            SummaryStyle.Bar.Color = Color.Black
            SummaryStyle.EndSymbol.Shape = BarSymbolShape.DownPentagon
            SummaryStyle.StartSymbol.Shape = BarSymbolShape.DownPentagon

            Dim MilestoneStyle As ActivityBarStyle = new ActivityBarStyle
            MilestoneStyle.Name = "Milestone"
            MilestoneStyle.Bar.TopMargin = 1.0!
            MilestoneStyle.RightText.Value = "{StartTime:m}"
            MilestoneStyle.StartSymbol.Shape = NickLee.Views.Gantt.Windows.Forms.BarSymbolShape.Diamond
            MilestoneStyle.StyleFor = "Milestone"
            MilestoneStyle.ToProperty = "StartTime"

            MyGanttChart.ActivityBarStyles.Clear()
            MyGanttChart.ActivityBarStyles.AddRange(New ActivityBarStyle() {LowPriorityStyle,MediumPriorityStyle,HighPriorityStyle,SummaryStyle,MilestoneStyle})
            </code>
            </example>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.BarSymbol" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBar" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarText" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ActivityBarStyles" />
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.hitTestDelta">
            <summary>
            Size of hit testing region on borders of activity
            bar for resizing.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.#ctor">
            <summary>
            Creates and initializes a new <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.#ctor(NickLee.Views.Gantt.Windows.Forms.BarSymbol,NickLee.Views.Gantt.Windows.Forms.ActivityBar,NickLee.Views.Gantt.Windows.Forms.BarSymbol)">
            <summary>
            Creates and initializes a new <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />.
            </summary>
            <param name="startSymbol">A <see cref="T:NickLee.Views.Gantt.Windows.Forms.BarSymbol" /> that defines the symbol at the beginning of the bar.</param>
            <param name="bar">An <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBar" /> that defines the shape and color of the bar.</param>
            <param name="endSymbol">A <see cref="T:NickLee.Views.Gantt.Windows.Forms.BarSymbol" /> that defines the symbol at the end of the bar.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="start" />,
            <paramref name="bar" />, or <paramref name="end" /> is <see langword="null" />.
            </exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.Accept(System.Object)">
            <summary>
            Checks if this <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> can be applied to the specified
            object.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to test. It can be an <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> or
            an <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> reference.</param>
            <returns><see langword="true" /> if this <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> can be applied to the specified
            object; <see langword="false" /> otherwise.</returns>
            <remarks>The method is called by the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> control to check if the style must
            be used to draw the specified object. The default implementation evaluates the expression defined
            by the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.StyleFor" /> property.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.StyleFor" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.Clone">
            <summary>
            Copies the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />.
            </summary>
            <returns>A new <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.Dispose">
            <summary>
            Releases all resources used by the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.Dispose(System.Boolean)">
            <summary>
            Disposes of the resources (other than memory) used by the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> object.
            </summary>
            <param name="disposing"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.
            </param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.Finalize">
            <summary>
            This member overrides <see cref="M:System.Object.Finalize">Object.Finalize</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.GetBarAndSymbolBounds(System.Drawing.Graphics,System.Object,NickLee.Views.Gantt.Windows.Forms.GanttSheet,System.Int32)">
            <summary>
            Computes the bounding rectangle of this activity bar style
            when applied to the specified object without taking into account the texts around the
            activity bar.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> object to draw to.</param>
            <param name="obj">The <see cref="T:System.Object" /> to apply the style to.</param>
            <param name="sheet">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> component where the object is drawn.</param>
            <param name="yPos">The vertical position of the row of the Gantt sheet where the object is drawn.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.GetBarAndSymbolBounds(System.Drawing.Graphics,System.Object,System.Drawing.RectangleF,System.Drawing.RectangleF@,System.Drawing.RectangleF@,System.Drawing.RectangleF@,System.Boolean)">
            <summary>
            Call this method if normalBounds has been already computed.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.GetBarBounds(System.Drawing.Graphics,System.Object,NickLee.Views.Gantt.Windows.Forms.GanttSheet,System.Int32)">
            <summary>
            Computes the bounding rectangle of this activity style
            when applied to the specified object without taking bar symbols and texts into account.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> object to draw to.</param>
            <param name="obj">The <see cref="T:System.Object" /> to apply the style to.</param>
            <param name="sheet">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> component where the object is drawn.</param>
            <param name="yPos">The vertical position of the row of the Gantt sheet where the object is drawn.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.GetBounds(System.Drawing.Graphics,System.Object,NickLee.Views.Gantt.Windows.Forms.GanttSheet,System.Drawing.Font,System.Int32)">
            <summary>
            Computes the bounding rectangle of this activity style
            when applied to the specified object.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> object to draw to.</param>
            <param name="obj">The <see cref="T:System.Object" /> to apply the style to.</param>
            <param name="sheet">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> component where the object is drawn.</param>
            <param name="font">A <see cref="T:System.Drawing.Font" /> object used to draw the text around the bar.</param>
            <param name="yPos">The vertical position of the row of the Gantt sheet where the object is drawn.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.GetCursor(System.Object,NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.EditAction)">
            <summary>
            Returns the cursor that should be used when editing the specified object using the mouse pointer.
            </summary>
            <param name="obj">The object being edited. It can be an <see cref="T:NickLee.Views.Gantt.Data.IActivity" />, or an <see cref="T:NickLee.Views.Gantt.Data.IReservation" />
            instance.</param>
            <param name="action">One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.EditAction" /> values.</param>
            <returns>A <see cref="T:System.Windows.Forms.Cursor" /> reference.</returns>
            <remarks><p>The default behavior of this method is to return the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.MoveCursor" />,
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.FromPropertyCursor" />, and <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ToPropertyCursor" /> properties depeding on
            the <paramref name="action" /> value.</p>
            <p>If this method returns null, a default cursor will used during the interaction.</p></remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.GetDefaultToolTipExpression">
            <summary>
            Default expression for the tooltip.
            </summary>
            <remarks>Depends on Name, FromProperty, ToProperty</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.GetEditAction(System.Object,NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTestType)">
            <summary>
            Returns the action that should happen when the mouse pointer hovers the specified area of the style.
            </summary>
            <param name="obj">The object being hovered. It can be an <see cref="T:NickLee.Views.Gantt.Data.IActivity" />, or an <see cref="T:NickLee.Views.Gantt.Data.IReservation" />
            instance.</param>
            <param name="type">One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTestType" /> values.</param>
            <returns>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.EditAction" /> values.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.GetLeftText(System.Object,System.Boolean)">
            <summary>
            Gets the text displayed on the left of the bar
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.GetRightText(System.Object,System.Boolean)">
            <summary>
            Gets the text displayed on the right of the bar
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.GetToolTip(System.Object)">
            <summary>
            Gets the text that will be displayed in the tooltip of the specified object.
            </summary>
            <param name="obj">The object to compute the tooltip text for.</param>
            <returns>The tooltip text.</returns>
            <remarks>The default implementation uses the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ToolTip" /> property.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTest(System.Drawing.Graphics,System.Object,NickLee.Views.Gantt.Windows.Forms.GanttSheet,System.Int32,System.Int32,System.Drawing.Point)">
            <summary>
            Gets information about this style at a specified point on the screen.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to paint the style.</param>
            <param name="obj">The object being hit tested. It can be an <see cref="T:NickLee.Views.Gantt.Data.IActivity" />
            or an <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> reference.</param>
            <param name="sheet">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> component where the style is drawn.</param>
            <param name="rowIndex">The zero-based index of the row being hit tested.</param>
            <param name="pos">The vertical position relative to the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> where the style is drawn.</param>
            <param name="point">A <see cref="T:System.Drawing.Point" /> that represents single x,y coordinate.</param>
            <returns>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTestInfo" /> that contains specific information about the style.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.IsFromPropertyEditable(System.Object)">
            <summary>
            Indicates whether the <strong>from</strong> property of the specified object is editable or not.
            </summary>
            <param name="obj">An <see cref="T:System.Object" />. It can be an <see cref="T:NickLee.Views.Gantt.Data.IActivity" />, or an <see cref="T:NickLee.Views.Gantt.Data.IReservation" />
            instance.</param>
            <returns><see langword="true" /> if the <strong>from</strong> property of the object is editable;
            Otherwise, <see langword="false" />.</returns>
            <remarks>The default implementation uses the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.CanEditFromProperty" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.IsToPropertyEditable(System.Object)">
            <summary>
            Indicates whether the <strong>to</strong> property of the specified object is editable or not.
            </summary>
            <param name="obj">An <see cref="T:System.Object" />. It can be an <see cref="T:NickLee.Views.Gantt.Data.IActivity" />, or an <see cref="T:NickLee.Views.Gantt.Data.IReservation" />
            instance.</param>
            <returns><see langword="true" /> if the <strong>to</strong> property of the object is editable;
            Otherwise, <see langword="false" />.</returns>
            <remarks>The default implementation uses the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.CanEditToProperty" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.OnDrawBarStyle(NickLee.Views.Gantt.Windows.Forms.DrawBarStyleEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.DrawBarStyle" /> event.
            </summary>
            <param name="e">An <see cref="T:NickLee.Views.Gantt.Windows.Forms.DrawBarStyleEventArgs" /> that contains the event data.</param>
            <remarks>Called to draw the bar style when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.OwnerDraw" /> property
            is set to <see langword="true" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.OnHitTestBarStyle(NickLee.Views.Gantt.Windows.Forms.HitTestBarStyleEventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTestBarStyle" /> event.
            </summary>
            <param name="e">An <see cref="T:NickLee.Views.Gantt.Windows.Forms.HitTestBarStyleEventArgs" /> that contains the event data.</param>
            <remarks>Called to do hit testing on the bar style when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.OwnerDraw" /> property
            is set to <see langword="true" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.OnStyleChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.StyleChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.Paint(System.Drawing.Graphics,NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ActivityBarStylePaintContext)">
            <summary>
            Paints the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics" /> object to draw to.</param>
            <param name="context">A <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ActivityBarStylePaintContext" /> object that contains
            information about the current painting operation.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ResetBottomLinesCount">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.BottomLinesCount" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ResetTopLinesCount">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.TopLinesCount" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ShouldSerializeBottomLinesCount">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.BottomLinesCount" /> property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from
            its default; <see langword="false" /> otherwise.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ShouldSerializeTopLinesCount">
            <summary>
            Indicates whether the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.TopLinesCount" /> property should be persisted.
            </summary>
            <returns><see langword="true" /> if the property value has changed from
            its default; <see langword="false" /> otherwise.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.SnapTime(System.Object,NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.EditAction,System.DateTime@)">
            <summary>
            Snaps the specified date-time value.
            </summary>
            <param name="obj">The object for which snapping is computed.</param>
            <param name="action">One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.EditAction" /> values.</param>
            <param name="time">A <see cref="T:System.DateTime" /> value to snap.</param>
            <returns><see langword="true" /> if the time was snapped; otherwise <see langword="false" />.</returns>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.SnapController" />
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle._allowConstraintLinkConnection">
            <summary>
            A value indicating whether this style can be used to connect
            constraint links.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle._bar">
            <summary>
            The shape of the bar.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle._bottomLinesCount">
            <summary>
            Number of lines of text below, -1 means
            it is computed from the style
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle._bottomText">
            <summary>
            The property that defines the text displayed on the middle of the bar.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle._endSymbol">
            <summary>
            The symbol at the end of the bar.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle._expression">
            <summary>
            Result of parsing _styleFor.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle._fromProperty">
            <summary>
            The name of the property of the activity that defines the
            place where the bar starts drawing (usually <strong>StartTime</strong>).
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle._fromPropertyDescriptor">
            <summary>
            Property descriptor for the From property
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle._leftText">
            <summary>
            The property that defines the text displayed on the left of the bar.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle._middleText">
            <summary>
            The property that defines the text displayed on the middle of the bar.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle._name">
            <summary>
            The name of this style.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle._ownerDraw">
            <summary>
            A value indicating whether this style an owner-drawn style.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle._rightText">
            <summary>
            The property that defines the text displayed on the right of the bar.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle._selectedTextColor">
            <summary>
            The color for the selected text.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle._snapController">
            <summary>
            A time iterator that defines the way the time is snapped during interaction.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle._startSymbol">
            <summary>
            The symbol at the beginning of the bar.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle._styleFor">
            <summary>
            Contains an expression that will be evaluated to
            see if an activity should be drawn with this style.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle._textColor">
            <summary>
            The color for the text.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle._topLinesCount">
            <summary>
            Number of lines of text above, -1 means
            it is computed from the style
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle._toProperty">
            <summary>
            The name of the property of the activity that defines the
            place where the bar ends drawing (usually <strong>EndTime</strong>).
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle._toPropertyDescriptor">
            <summary>
            Property descriptor for the To property
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle._topText">
            <summary>
            The property that defines the text displayed on the middle of the bar.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.DrawBarStyle">
            <summary>
            Occurs when the bar style is drawn using user code.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.OwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows an event handler
            listening to the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.DrawBarStyle" /> event.
            </para>
            <code lang="C#">
            // Attach the event handler
            TreeTable table = new TreeTable();
            table.OwnerDraw = true;
            table.DrawTableCell += new DrawTableCellEventHandler(OnDrawTableCell);

            // The code of the event handler
            private void OnDrawTableCell(object sender, DrawTableCellArgs e) {
            TreeTable table = e.TreeTable;
            object value = table.GetValueAt(e.Row);
            // If the node being drawn has children and is expanded, draw it using
            // an italic font.
            if (table.TreeModel.GetChildCount(value) != 0 &amp;&amp; table.IsRowExpanded(value)) {
            Font font = new Font(e.Font, e.Font.Style | FontStyle.Italic);
            e.DrawCell(e.Bounds, e.BackBrush, e.ForeBrush, font);
            } else
            e.DrawCell();
            }
            </code>
            <code lang="Visual Basic">
            ' Attach the event handler
            Dim table As New TreeTable()
            table.OwnerDraw = True

            ' The code of the event handler
            Private Sub OnDrawTableCell(ByVal sender As Object, ByVal e As DrawTableCellArgs) Handles table.DrawTableCell
            Dim table As TreeTable = e.TreeTable
            Dim value As Object = table.GetValueAt(e.Row)
            ' If the node being drawn has children and is expanded, draw it using
            ' an italic font.
            If table.TreeModel.GetChildCount(value) &lt;&gt; 0 And table.IsRowExpanded(value)) Then
            Dim font As New Font(e.Font, e.Font.Style | FontStyle.Italic)
            e.DrawCell(e.Bounds, e.BackBrush, e.ForeBrush, font)
            Else
            e.DrawCell()
            End If
            End Sub
            </code>
            </example>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.OwnerDraw" />
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTestBarStyle" />
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTestBarStyle">
            <summary>
            Occurs when the bar style is hit tested using user code.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.OwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.OwnerDraw" />
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.DrawBarStyle" />
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.StyleChanged">
            <summary>
            Occurs when something changes in the bar style.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.AllowConstraintLinkConnection">
            <summary>
            Gets or sets a value indicating whether this style can be used to connect
            constraint links.
            </summary>
            <value><see langword="true" /> if the style can be used to connect constraint links;
            otherwise, <see langword="false" />. The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.Bar">
            <summary>
            Gets or sets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBar" /> that defines the shape and appearance of the bar.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBar" /> that defines the appearance and shape of the bar displayed by
            this activity bar style.
            </value>
            <exception cref="T:System.ArgumentNullException">The value of the property is
            <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The value of the property is already
            used by another bar style.</exception>
            <remarks>The value cannot be <see langword="null" />.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.BottomLinesCount">
            <summary>
            Gets or sets the number of lines of text that will be
            displayed below the bar.
            </summary>
            <value>The number of lines of text that will be
            displayed below the bar.</value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.TopLinesCount" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.BottomText">
            <summary>
            Gets a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarText" /> that describes the text displayed below the bar.
            </summary>
            <value>
            An <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarText" /> that describes the property of the activity that
            will be displayed below the bar.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.LeftText" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.RightText" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.InsideText" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.TopText" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.CanEditFromProperty">
            <summary>
            Gets or sets a value indicating whether the <strong>from</strong> property of this style is editable.
            </summary>
            <value><see langword="true" /> if the <strong>from</strong> property of the style is editable;
            Otherwise, <see langword="false" />. The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.CanEditToProperty">
            <summary>
            Gets or sets a value indicating whether the <strong>to</strong> property of this style is editable.
            </summary>
            <value><see langword="true" /> if the <strong>to</strong> property of the style is editable;
            Otherwise, <see langword="false" />. The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.EndSymbol">
            <summary>
            Gets or sets the symbol at the end of the bar.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.BarSymbol" /> that describes the symbol that
            will be displayed at the end of the bar.</value>
            <exception cref="T:System.ArgumentNullException">The value of the property is
            <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The value of the property is already
            used by another bar style.</exception>
            <remarks>The value of the property cannot be <see langword="null" />. In order to
            have an activity bar style with no symbol use <strong>None</strong> in the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.BarSymbol.Shape">BarSymbol.Shape</see> property.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.FromProperty">
            <summary>
            Gets or sets the name of the property that defines the date where the
            bar starts.
            </summary>
            <value>
            A <see cref="T:System.String" /> that represents the name of the property of the activity
            defining the start date of the bar.
            The default value is <strong>StartTime</strong>.
            </value>
            <remarks>See the description of <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> for more details.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ToProperty" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.FromPropertyCursor">
            <summary>
            Gets or sets the cursor used to modify the <strong>from</strong> property using the mouse pointer.
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Cursor" /> displayed when the user modifies the <strong>from</strong> property using the mouse pointer.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.InsideText">
            <summary>
            Gets a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarText" /> that describes the text displayed inside the bar.
            </summary>
            <value>
            An <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarText" /> that describes the property of the activity that
            will be displayed inside the bar.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.LeftText" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.RightText" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.TopText" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.BottomText" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.Interactive">
            <summary>
            Gets or sets a value indicating whether this style is interactive.
            </summary>
            <value><see langword="true" /> if the style is interactive;
            Otherwise, <see langword="false" />. The default value is <see langword="true" />.</value>
            <remarks>When set to <see langword="false" />, this property prevents the style
            from being involved in interactive operations such as editing or tooltip management.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.LeftText">
            <summary>
            Gets an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarText" /> that defines the text displayed on the left of the bar.
            </summary>
            <value>
            An <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarText" /> that describes the text that
            will be displayed on the left of the bar.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.InsideText" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.RightText" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.TopText" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.BottomText" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.MoveCursor">
            <summary>
            Gets or sets the cursor used to indicate that a bar style can be moved.
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Cursor" /> displayed to indicates that a bar style can be moved.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.Name">
            <summary>
            Gets or sets the name of the style.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the name of the style.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.OwnerDraw">
            <summary>
            Gets or sets a value indicating whether the code that you
            provide draws the bar style or not.
            </summary>
            <value>
            <see langword="true" /> if the bar style is to be drawn using custom user
            code; <see langword="false" /> otherwise.
            </value>
            <remarks>
            <p>When the <strong>OwnerDraw</strong> property is set to <see langword="true" />,
            you need to handle the drawing and hit testing operations on the bar style. You can use
            this capability to create your own special bar style
            displays. Use the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.DrawBarStyle" /> event to handle the drawing of
            the bar style. Use the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTestBarStyle" /> event to handle hit testing on
            the bar style.</p>
            <p>When the <strong>OwnerDraw</strong> property is set to <see langword="false" />,
            the <strong>DrawBarStyle</strong> event is not raised.</p>
            </remarks>
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.DrawBarStyle" />
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTestBarStyle" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.RightText">
            <summary>
            Gets a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarText" /> that defines the text displayed on the right of the bar.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarText" /> that describes the property of the activity that
            will be displayed on the right of the bar.</value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.LeftText" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.InsideText" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.TopText" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.BottomText" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.SelectionTextColor">
            <summary>
            Gets or sets the color used to draw the text when the row being drawn is selected.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> structure.</value>
            <remarks>The default value is <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ShowEditingToolTip">
            <summary>
            Gets or sets a value indicating whether this style should show tooltips during edition.
            </summary>
            <value><see langword="true" /> if the style shows tooltips during edition;
            Otherwise, <see langword="false" />. The default value is <see langword="true" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ShowToolTip">
            <summary>
            Gets or sets a value indicating whether this style should show tooltips.
            </summary>
            <value><see langword="true" /> if the style shows tooltips;
            Otherwise, <see langword="false" />. The default value is <see langword="true" />.</value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ToolTip" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ShowEditingToolTip" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.SnapController">
            <summary>
            Gets or sets a time iterator that defines the way date-time values are snapped.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.ITimeIterator" /> object that defines the way date-time values are
            snapped.</value>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.SnapTime(System.Object,NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.EditAction,System.DateTime@)" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.StartSymbol">
            <summary>
            Gets or sets the symbol at the beginning of the bar.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Windows.Forms.BarSymbol" /> that describes the symbol that
            will be displayed at the beginning of the bar.</value>
            <exception cref="T:System.ArgumentNullException">The value of the property is
            <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The value of the property is already
            used by another bar style.</exception>
            <remarks>The value of the property cannot be <see langword="null" />. In order to
            have an activity bar style with no symbol use <strong>None</strong> in the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.BarSymbol.Shape">BarSymbol.Shape</see> property.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.StyleFor">
            <summary>
            Gets or sets an expression that will be evaluated to test if this style
            matches a particular activity.
            </summary>
            <value>A <see cref="T:System.String" /> that represents a Boolean expression based on an activity to check if the
            style must be used to draw a particular activity. The default value is "" meaning that the style can
            be applied to all activities.
            </value>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to apply a style to activities whose <strong>StartTime</strong> is
            after a specific date.
            </para>
            <code lang="C#">
            ActivityBarStyle style = new ActivityBarStyle();
            style.StyleFor = "StartTime &gt; #1/1/2000#";
            </code>
            <code lang="Visual Basic">
            Dim  style As ActivityBarStyle = new ActivityBarStyle
            style.StyleFor = "StartTime &gt; #1/1/2000#"
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.TextColor">
            <summary>
            Gets or sets the color used to draw the text of this sytle.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> structure.</value>
            <remarks>The default value is <see cref="F:System.Drawing.Color.Empty">Color.Empty</see>.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ToolTip">
            <summary>
            Gets or sets the expression for tooltips.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the format of the tooltip that
            will be displayed when the mouse hovers a bar style.</value>
            <remarks>The value of this property is an expression that enables an easy customization of the
            tooltip.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample sets the string displayed by the tooltip as the concatenation of
            the activity name, the activity start time and the activity duration.
            </para>
            <code lang="C#">
            ActivityBarStyle style = ...
            style.ToolTip = "'Name : ' + Name + '\\n' + {StartTime:m} + '(' + Duration + ')'";
            </code>
            <code lang="Visual Basic">
            Dim style As ActivityBarStyle = ...
            style.ToolTip = "'Name : ' + Name + '\\n' + {StartTime:m} + '(' + Duration + ')'"
            </code>
            <para lang="C#,Visual Basic">
            Note the use of the '{' and '}' characters to specify a format for the <strong>StartTime</strong>
            property (see <see cref="T:System.Globalization.DateTimeFormatInfo" /> for details about date formats).
            </para>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.TopLinesCount">
            <summary>
            Gets or sets the number of lines of text that will be
            displayed above the bar.
            </summary>
            <value>The number of lines of text that will be
            displayed above the bar.</value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.BottomLinesCount" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ToProperty">
            <summary>
            Gets or sets the name of the property that defines the date where the
            bar ends.
            </summary>
            <value>
            A <see cref="T:System.String" /> that represents the name of the property of the activity
            defining the end date of the bar.
            The default value is <strong>EndTime</strong>.
            </value>
            <remarks>See the description of <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> for more details.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.FromProperty" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ToPropertyCursor">
            <summary>
            Gets or sets the cursor used to modify the <strong>to</strong> property using the mouse pointer.
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Cursor" /> displayed when the user modifies the <strong>to</strong> property using the mouse pointer.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.TopText">
            <summary>
            Gets a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarText" /> that describes the text displayed above the bar.
            </summary>
            <value>
            An <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarText" /> that describes the property of the activity that
            will be displayed above the bar.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.LeftText" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.RightText" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.BottomText" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.InsideText" />
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ActivityBarStylePaintContext">
            <summary>
            Defines a context that contains parameters used when drawing a style.
            </summary>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.Paint(System.Drawing.Graphics,NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ActivityBarStylePaintContext)" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ActivityBarStylePaintContext.Activity">
            <summary>
            Gets the activity that is currently being painted.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> object that represents the activity that is
            currently being painted.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ActivityBarStylePaintContext.BackgroundBrush">
            <summary>
            Gets the background brush used to paint the style.
            </summary>
            <value>A <see cref="T:System.Drawing.Brush" /> object that is used for the background of the style.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ActivityBarStylePaintContext.BarBounds">
            <summary>
            Gets the bounds of the bar being painted.
            </summary>
            <value>
            A <see cref="T:System.Drawing.RectangleF" /> structure;
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ActivityBarStylePaintContext.BottomTextClip">
            <summary>
            Gets a <see cref="T:System.Drawing.RectangleF" /> object that represents the
            bounding box of the bar of the next activity with text drawn below the bar.
            </summary>
            <value>The bounding box of the bar of the next activity with text drawn below the bar.</value>
            <remarks>This value is used to clip the text above the activity in order to avoid
            text overlapping.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ActivityBarStylePaintContext.Font">
            <summary>
            Gets the font used to paint text.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Font" /> object that represents the font
            used to represent text in the style.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ActivityBarStylePaintContext.ForegroundBrush">
            <summary>
            Gets the foreground brush used to paint the style.
            </summary>
            <value>A <see cref="T:System.Drawing.Brush" /> object that is used for the foreground of the style.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ActivityBarStylePaintContext.GanttSheet">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> where
            the style is painted.
            </summary>
            <value>
            A <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> object that represents the
            Gantt sheet where the style is painted.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ActivityBarStylePaintContext.Object">
            <summary>
            Gets the object that is currently being painted.
            </summary>
            <value>A <see cref="T:System.Object" /> reference that represents either the activity or the
            reservation currently being painted.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ActivityBarStylePaintContext.PaintBottomText">
            <summary>
            Gets a value indicating if the text below the bar must be painted.
            </summary>
            <value><see langword="true" /> if the text below the bar must be painted;
            <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ActivityBarStylePaintContext.PaintTopText">
            <summary>
            Gets a value indicating if the text above the bar must be painted.
            </summary>
            <value><see langword="true" /> if the text on top of the bar must be painted;
            <see langword="false" /> otherwise.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ActivityBarStylePaintContext.Position">
            <summary>
            Gets the vertical position where the style is painted in the row.
            </summary>
            <value>
            An integer value that represents the vertical position where the style
            is painted in the row.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ActivityBarStylePaintContext.Reservation">
            <summary>
            Gets the reservation that is currently being painted.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> object that represents the reservation that is
            currently being painted in a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" />. If the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ActivityBarStylePaintContext.Sheet" />
            property is not a <strong>ScheduleSheet</strong>, this property is <see langword="null" />.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ActivityBarStylePaintContext.RowIndex">
            <summary>
            Gets the index of the row of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> where
            the style is painted.
            </summary>
            <value>An integer that represents the index of the row of
            the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />
            where the style is painted.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ActivityBarStylePaintContext.Sheet">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> where
            the style is painted.
            </summary>
            <value>
            A <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> object that represents the
            Gantt sheet where the style is painted.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ActivityBarStylePaintContext.TopTextClip">
            <summary>
            Gets a <see cref="T:System.Drawing.RectangleF" /> object that represents the
            bounding box of the bar of the next activity with text drawn above the bar.
            </summary>
            <value>The bounding box of the bar of the next activity with text drawn above the bar.</value>
            <remarks>This value is used to clip the text above the activity in order to avoid
            text overlapping.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.ActivityBarStylePaintContext.VerticalPosition">
            <summary>
            Gets the vertical position where the style is painted in the row.
            </summary>
            <value>
            An integer value that represents the vertical position where the style
            is painted in the row.
            </value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.EditAction">
            <summary>
            Specifies the action that will be achieved on an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />
            during edition.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTestInfo">
            <summary>
            Contains information about a part of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> at a
            specified coordinate.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTestInfo.#ctor(NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTestType,NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle)">
            <summary>
            Creates and initializes a new <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTestInfo" /> instance.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTestInfo.Type">
            <summary>
            Gets the part of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> control that was clicked.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTestType" /> values that represents the
            part of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> control that was clicked.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTestInfo.Style">
            <summary>
            Gets the style that was clicked.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTestType">
            <summary>
            Specifies the part of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> the user has clicked.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.TimeRangeChangeEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Gantt.ITimeRange.TimeRangeChanging" /> and
            <see cref="E:NickLee.Views.Gantt.ITimeRange.TimeRangeChanged" /> events of an <see cref="T:NickLee.Views.Gantt.ITimeRange" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.TimeRangeChangeEventArgs.#ctor(NickLee.Views.Gantt.DateTimeInterval)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.TimeRangeChangeEventArgs" /> class, notifying
            that the time range has been changed.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.TimeRangeChangeEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the operation should be canceled.
            </summary>
            <value><see langword="true" /> if the operation should be canceled; otherwise
            <see langword="false" />. The default value is <see langword="false" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.TimeRangeChangeEventArgs.TimeInterval">
            <summary>
            Gets or sets the time interval of the event.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> structure.</value>
            <remarks>This value can be changed during a <see cref="E:NickLee.Views.Gantt.ITimeRange.TimeRangeChanging" />
            event.</remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.TimeLineChangeEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:NickLee.Views.Gantt.ITimeLine.TimeLineChanging" /> and
            <see cref="E:NickLee.Views.Gantt.ITimeLine.TimeLineChanged" /> events of a <see cref="T:NickLee.Views.Gantt.ITimeLine" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.Scheduler">
            <summary>
            Implementation of the critical path method and leveling algorithm.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.#ctor(NickLee.Views.Gantt.Data.ProjectSchedulingModel)">
            <summary>
            Creates a new Scheduler algorithm
            </summary>
            <param name="model">The model to compute.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.CanLevel(NickLee.Views.Gantt.Data.SchedulingActivity,System.DateTime)">
            <summary>
            Test if the specified activity can be placed at the specified date.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.ClearLeveling">
            <summary>
            Resets all the leveling delays to Zero.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.ClearLeveling(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Resets the leveling delay to Zero.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.ComputeCriticalPath(System.Boolean)">
            <summary>
            Computes the critical path.
            </summary>
            <param name="doAsLate">When set to true , treat the AsLateAsPossible constraint
            in a second pass.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.ComputeEarlyStart(System.Boolean)">
            <summary>
            Computes the early start of activities.
            </summary>
            <param name="secondPass">When true we check if a second pass is required
            to treat "As Late As Possible" constraints.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.ComputeEarlyStart(NickLee.Views.Gantt.Data.SchedulingActivity,System.Boolean)">
            <summary>
            Computes the early start of an activity.
            </summary>
            <param name="a">The activity to compute</param>
            <param name="asLateAsPossible"></param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.ComputeLateFinish">
            <summary>
            Compute late finish for all activities in the model.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.ComputeLateFinish(NickLee.Views.Gantt.Data.SchedulingActivity)">
            <summary>
            Compute late finish for one activity.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.ComputePredecessors">
            <summary>
            Computes the list of all predecessors of activities.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.ComputePredecessors(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Computes the list of all predecessors of the activity recursivly.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.ComputeSlack(NickLee.Views.Gantt.Data.SchedulingActivity)">
            <summary>
            Computes the Total and free slack based on early start/late finish
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.ComputeSucessors">
            <summary>
            Computes the list of all predecessors of activities
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.ComputeSucessors(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Computes the list of all successors of the activity recursively.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.End">
            <summary>
            Clean the scheduler after computing.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.GetAllLevelingActivities">
            <summary>
            Gets all the activities that will participate to leveling.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.GetAllLevelingActivities(NickLee.Views.Gantt.Data.IActivity,System.Collections.Hashtable)">
            <summary>
            Gets all the activities that will participate to leveling.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.GetDemand(NickLee.Views.Gantt.Data.SchedulingActivity,NickLee.Views.Gantt.Data.SchedulingResource)">
            <summary>
            Get the demand for the specified resource to execute the specified activity.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.GetFromConstraints(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Gets the constraints from the specified activity as well as
            the constraints from the parents.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.GetToConstraints(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Gets the constraints to the specified activity as well as
            the constraints to the parents.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.GetWorkResources">
            <summary>
            Computes all the resources of type Work with at least one reservation
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.GetWorkResources(NickLee.Views.Gantt.Data.SchedulingResource,System.Collections.ArrayList)">
            <summary>
            Computes all the resources of type Work with at least one reservation
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.HasNonLeveledPred(NickLee.Views.Gantt.Data.SchedulingActivity,System.DateTime,System.Collections.Hashtable)">
            <summary>
            Check if the activity has a predecessor with a start time &gt; t
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.Init">
            <summary>
            Initialize the scheduler before computing.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.InitLeveling">
            <summary>
            Initialize the resource leveling process.
            </summary>
            <remarks>
            Computes the activity order in _IDS
            Clear the leveling delays.
            Sets the Preleveled Start and Preleveled End
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.LevelResources">
            <summary>
            Removes resource overallocation by setting
            Leveling delay on activities.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.ReComputeEarlyStart(NickLee.Views.Gantt.Data.SchedulingActivity,System.DateTime)">
            <summary>
            Recomputes the early start of the specified
            activity.
            </summary>
            <remarks>We try to limit the recomputation to only what is necessary. </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.Schedule">
            <summary>
            Sets the results to the model and compute slacks
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.Schedule(NickLee.Views.Gantt.Data.SchedulingActivity)">
            <summary>
            Sets the results to the activity and compute slacks
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.UseMoreThanMax(NickLee.Views.Gantt.Data.SchedulingActivity)">
            <summary>
            Check is the activity is using more that the max unit of any resource.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.UseMoreThanMax(NickLee.Views.Gantt.Data.SchedulingActivity,NickLee.Views.Gantt.Data.SchedulingResource)">
            <summary>
            Check is the activity is using more that the max unit of the specified resource.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.UseResource(NickLee.Views.Gantt.Data.IActivity,NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Checks if the activity has a reservation on the specified resource
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Scheduler.UseWorkResource(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Test if the specified activity use a resource of type Work.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.Scheduler._computed">
            <summary>
            Stores activities currenlty computed to detect cycles in constraints.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.Scheduler._cumululatedPredecessors">
            <summary>
            Cache containing the list of all predecessors of each activity.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.Scheduler._cumululatedSucessors">
            <summary>
            Cache containing the list of all sucessors of each activity.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.Scheduler._earlyStartComputed">
            <summary>
            Stores activities with early start computed.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.Scheduler._fromConstraints">
            <summary>
            Cache for the from constraints of an activity.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.Scheduler._IDS">
            <summary>
            Stores the indexes that give the order of activities
            in the model. (used in sorting activities for leveling).
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.Scheduler._lateFinishComputed">
            <summary>
            Stores activities with late finish computed.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.Scheduler._model">
            <summary>
            The model to compute.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.Scheduler._partialEarlyStartComputation">
            <summary>
            Flag to indicate that we are recomputing the Early Start
            for a subset of the model.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.Scheduler._projectEnd">
            <summary>
            project end computed by the algorithm
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Data.Scheduler._toConstraints">
            <summary>
            Cache for the to constraints of an activity.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.Scheduler.Calendar">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> of the model.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.Scheduler.LevelingComparer">
            <summary>
            Uses to choose which activity will be leveled first.
            The current order is LateStart/TotalSlack/Work/Resource Utilization/Priority/ID
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.Scheduler.StartTimeComparer">
            <summary>
            IComparer to compare the start time of activities.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.ResourcesAction">
            <summary>
            Describes an action performed on <see cref="T:NickLee.Views.Gantt.Data.IResource" /> objects.
            </summary>
            <remarks>This enumeration is used by the <see cref="T:NickLee.Views.Gantt.Data.ResourcesChangeEventArgs" /> class.</remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.Design.CustomPropertyDescriptorCollectionSerializer">
            <summary>
            A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> for the <see cref="T:NickLee.Views.Gantt.Data.CustomPropertyDescriptorCollection" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Design.CustomPropertyDescriptorCollectionSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
            <summary>
            Deserializes the specified serialized CodeDOM object into an object.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.Design.CustomPropertyDescriptorCollectionSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
            <summary>
            Serializes the specified object into a CodeDOM object.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.ConstraintsAction">
            <summary>
            Describes an action performed on <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> objects.
            </summary>
            <remarks>This enumeration is used by the <see cref="T:NickLee.Views.Gantt.Data.ConstraintsChangeEventArgs" /> class.</remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.CalendarCollection">
            <summary>
            Defines a collection of <see cref="T:NickLee.Views.Gantt.WorkCalendar" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.CalendarCollection.#ctor(NickLee.Views.Gantt.Data.ProjectSchedulingModel)">
            <summary>
            Initializes a new instance of <see cref="T:NickLee.Views.Gantt.Data.CalendarCollection" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.CalendarCollection.Add(NickLee.Views.Gantt.WorkCalendar)">
            <summary>
            Adds an <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> with the specified value to the
            <see cref="T:NickLee.Views.Gantt.Data.CalendarCollection" />.
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> to add.</param>
            <returns>
            The index at which the new element was inserted.
            </returns>
            <seealso cref="M:NickLee.Views.Gantt.Data.CalendarCollection.AddRange(NickLee.Views.Gantt.WorkCalendar[])" />
        </member>
        <member name="M:NickLee.Views.Gantt.Data.CalendarCollection.AddRange(NickLee.Views.Gantt.WorkCalendar[])">
            <summary>
            Copies the elements of an array to the end of the <see cref="T:NickLee.Views.Gantt.Data.CalendarCollection" />.
            </summary>
            <param name="value">
            An array of type <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> containing the objects to add to the collection.
            </param>
            <seealso cref="M:NickLee.Views.Gantt.Data.CalendarCollection.Add(NickLee.Views.Gantt.WorkCalendar)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Data.CalendarCollection.AddRange(NickLee.Views.Gantt.Data.CalendarCollection)">
            <summary>
            Adds the contents of another <see cref="T:NickLee.Views.Gantt.Data.CalendarCollection" /> to the end of the collection.
            </summary>
            <param name="value">
            An <see cref="T:NickLee.Views.Gantt.Data.CalendarCollection" /> containing the objects to add to the collection.
            </param>
            <seealso cref="M:NickLee.Views.Gantt.Data.CalendarCollection.Add(NickLee.Views.Gantt.WorkCalendar)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Data.CalendarCollection.Contains(NickLee.Views.Gantt.WorkCalendar)">
            <summary>
            Gets a value indicating whether the
            <see cref="T:NickLee.Views.Gantt.Data.CalendarCollection" /> contains the specified <see cref="T:NickLee.Views.Gantt.WorkCalendar" />.
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> to locate.</param>
            <returns>
            <see langword="true" /> if the <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> is contained in the collection;
            <see langword="false" /> otherwise.
            </returns>
            <seealso cref="M:NickLee.Views.Gantt.Data.CalendarCollection.IndexOf(NickLee.Views.Gantt.WorkCalendar)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Data.CalendarCollection.CopyTo(System.Object[],System.Int32)">
            <summary>
            Copies the <see cref="T:NickLee.Views.Gantt.Data.CalendarCollection" /> values to a one-dimensional <see cref="T:System.Array" /> instance at the
            specified index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from <see cref="T:NickLee.Views.Gantt.Data.CalendarCollection" />.</param>
            <param name="index">The index in <paramref name="array" /> where copying starts.</param>
            <exception cref="T:System.ArgumentException"><paramref name="array" /> is multidimensional. The number of elements in the <see cref="T:NickLee.Views.Gantt.Data.CalendarCollection" /> is greater than the available space between <paramref name="arrayIndex" /> and the end of <paramref name="array" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />. </exception>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index" /> is less than <paramref name="array" /> lowbound. </exception>
            <seealso cref="T:System.Array" />
        </member>
        <member name="M:NickLee.Views.Gantt.Data.CalendarCollection.IndexOf(NickLee.Views.Gantt.WorkCalendar)">
            <summary>
            Returns the index of a <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> in
            the <see cref="T:NickLee.Views.Gantt.Data.CalendarCollection" />.
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> to locate.</param>
            <returns>
            The index of the <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> of <paramref name="value" /> in the
            <see cref="T:NickLee.Views.Gantt.Data.CalendarCollection" />, if found; <strong>-1</strong> otherwise.
            </returns>
            <seealso cref="M:NickLee.Views.Gantt.Data.CalendarCollection.Contains(NickLee.Views.Gantt.WorkCalendar)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Data.CalendarCollection.Insert(System.Int32,NickLee.Views.Gantt.WorkCalendar)">
            <summary>
            Inserts an <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> into the <see cref="T:NickLee.Views.Gantt.Data.CalendarCollection" /> at the specified index.
            </summary>
            <param name="index">The zero-based index where <paramref name="value" /> should be inserted.</param>
            <param name=" value">The <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> to insert.</param>
            <seealso cref="M:NickLee.Views.Gantt.Data.CalendarCollection.Add(NickLee.Views.Gantt.WorkCalendar)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Data.CalendarCollection.InsertRange(System.Int32,NickLee.Views.Gantt.WorkCalendar[])">
            <summary>
            Inserts the elements of an array at the specified index of the <see cref="T:NickLee.Views.Gantt.Data.CalendarCollection" />.
            </summary>
            <param name="index">The zero-based starting index of the range of elements to insert.</param>
            <param name="value">
            An array of type <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> containing the objects to add to the collection.
            </param>
            <seealso cref="M:NickLee.Views.Gantt.Data.CalendarCollection.Add(NickLee.Views.Gantt.WorkCalendar)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Data.CalendarCollection.OnCollectionChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Data.CalendarCollection.CollectionChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
            <remarks>Called when the collection is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.CalendarCollection.Remove(NickLee.Views.Gantt.WorkCalendar)">
            <summary>
            Removes a specific <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> from the
            <see cref="T:NickLee.Views.Gantt.Data.CalendarCollection" />.
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> to remove from the <see cref="T:NickLee.Views.Gantt.Data.CalendarCollection" />.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is not found in the collection. </exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.CalendarCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes a range of <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> objects from the
            <see cref="T:NickLee.Views.Gantt.Data.CalendarCollection" />.
            </summary>
            <param name="index">The zero-based starting index of the range of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException"><paramref name="index" /> is not a valid index.</exception>
        </member>
        <member name="E:NickLee.Views.Gantt.Data.CalendarCollection.CollectionChanged">
            <summary>
            Occurs when the collection has changed.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.CalendarCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> at the specified index in the collection.
            </summary>
            <param name="index">The zero-based index of the entry to locate in the collection.</param>
            <value>
            The entry at the specified index of the collection.
            </value>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index" /> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.ActivitiesAction">
            <summary>
            Describes an action performed on <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> objects.
            </summary>
            <remarks>This enumeration is used by the <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> class.</remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.WorkingTime">
            <summary>
            Specifies a working period of time in a day of a <see cref="T:NickLee.Views.Gantt.WorkCalendar" />.
            </summary>
            <seealso cref="T:NickLee.Views.Gantt.WorkCalendar" />
        </member>
        <member name="M:NickLee.Views.Gantt.WorkingTime.#ctor(System.TimeSpan,System.TimeSpan)">
            <summary>
            Creates a new <see cref="T:NickLee.Views.Gantt.WorkingTime" /> object.
            </summary>
            <param name="startTime">A <see cref="T:System.TimeSpan" /> that specifies the start time of the period.</param>
            <param name="endTime">A <see cref="T:System.TimeSpan" /> that specifies the end time of the period. Note
            that start time must be stricly before endTime.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.WorkingTime.Clone">
            <summary>
            Creates a copy of the object.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.WorkingTime.EndTime">
            <summary>
            Gets the end time of the period.
            </summary>
            <value>A <see cref="T:System.TimeSpan" /> that represents the end time of the period.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.WorkingTime.StartTime">
            <summary>
            Gets the start time of the period.
            </summary>
            <value>A <see cref="T:System.TimeSpan" /> that represents the start time of the period.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPrintDocument">
            <summary>
            Defines a reusable object to send the contents of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttChart" /> or <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleChart" />
            to the printer.
            </summary>
            <remarks>
            <p>This class derives from the <see cref="T:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument" /> class and allows you to
            send the contents of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttChart" /> or <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleChart" /> to the
            printer.</p>
            <p>Typically you create an instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPrintDocument" /> class,
            set the properties that describe how to print, such as the header and footer, and use the <see cref="M:System.Drawing.Printing.PrintDocument.Print">Print</see>
            method to start the printing process.</p>
            </remarks>
            <seealso cref="T:NickLee.Views.Windows.Forms.Printing.Header" />
            <seealso cref="T:NickLee.Views.Windows.Forms.Printing.Footer" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPageSetupDialog" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPrintDocument.#ctor">
            <summary>
            Creates and initializes a new <see cref="T:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPrintDocument" /> object.
            </summary>
            <remarks>
            A <see cref="T:NickLee.Views.Gantt.Windows.Forms.HierarchyChart" /> object must be associated with the document
            before any use.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPrintDocument.#ctor(NickLee.Views.Gantt.Windows.Forms.HierarchyChart)">
            <summary>
            Creates and initializes a new <see cref="T:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPrintDocument" /> object
            associated with a <see cref="T:NickLee.Views.Gantt.Windows.Forms.HierarchyChart" /> object.
            </summary>
            <param name="chart">
            The <see cref="T:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPrintDocument" /> object to be
            associated with.
            </param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPrintDocument.ComputeNumberOfPages">
            <summary>
            Re-computes the number of pages needed to print the
            document.
            </summary>
            <remarks>The number of pages needed to print the document is
            only computed automatically when printing the document. Use this
            method to compute the number of pages according to the current settings
            of the document. The method will set the number of pages in
            the <see cref="P:NickLee.Views.Windows.Forms.Printing.ExtendedPrintDocument.Pages" /> property.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)">PrintDocument.OnBeginPrint</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPrintDocument.OnPrintPageContent(System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            Prints the contents of a page.
            </summary>
            <param name="ppea">
            A <see cref="T:System.Drawing.Printing.PrintPageEventArgs" /> that contains the event data.
            </param>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPrintDocument.Chart">
            <summary>
            Gets or sets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.HierarchyChart" /> object to print.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.HierarchyChart" /> object to print.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPrintDocument.FirstDate">
            <summary>
            Gets or sets the start printing date.
            </summary>
            <value>A <see cref="T:System.DateTime" /> object that represents the first date that will be printed.</value>
            <remarks>
            Setting this property has no effect if the <see cref="P:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPrintDocument.PrintAllTimeRange" /> is <see langword="true" />.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPrintDocument.LastDate">
            <summary>
            Gets or sets the end printing date.
            </summary>
            <value>A <see cref="T:System.DateTime" /> object that represents the last date that will be printed.</value>
            <remarks>
            Setting this property has no effect if the <see cref="P:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPrintDocument.PrintAllTimeRange" /> is <see langword="true" />.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPrintDocument.PagesPerBand">
            <summary>
            Gets or sets the number of pages per band to print.
            </summary>
            <value>The number of pages per band to print.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The property value
            is negative.</exception>
            <remarks>The number of pages must be strictly positive.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPrintDocument.PrintAllTimeRange">
            <summary>
            Gets or sets a value that indicates whether the whole range of dates
            must be printed.
            </summary>
            <value><see langword="true" /> if the document will print the full
            time range of the chart, otherwise <see langword="false" />. The default value
            is <see langword="true" />. </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPrintDocument.RepeatTable">
            <summary>
            Gets or sets a value that indicates whether the table should be
            printed repeatedly on every page.
            </summary>
            <value><see langword="true" /> if the table must be printed on every page; <see langword="false" /> if the
            table must printed only on the first page of a band. The default value is <see langword="false" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPrintDocument.TableColumnCount">
            <summary>
            Gets or sets the number of columns to be printed.
            </summary>
            <value>A number that represents the number of columns of the table to print. The
            default value is 2.</value>
            <exception cref="T:System.ArgumentOutOfRangeException">The property value
            is negative.</exception>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.Printing.GanttPrintDocument.TimePrintContext">
            <summary>
            Gets the <strong>TimePrintContext</strong>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.DrawTimeScaleRowEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Gantt.Windows.Forms.TimeScale.DrawRow" /> event
            of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" /> class.
            </summary>
            <remarks>A <see cref="E:NickLee.Views.Gantt.Windows.Forms.TimeScale.DrawRow" /> event is raised to draw
            the time scale rows of owner draw <strong>TimeScale</strong> objects.
            It contains all the information needed for the user to paint the
            specified row, including the row bounding box,
            and the <see cref="T:System.Drawing.Graphics" /> object on which the drawing should
            be done.</remarks>
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.TimeScale.DrawRow" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScale.OwnerDraw" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DrawTimeScaleRowEventArgs.DrawRow">
            <summary>
            Draws the time scale row using the information provided in this instance.
            </summary>
            <remarks>Call this method to draw the time scale row if you want to keep
            the original drawing of the row, that is, as if the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.TimeScale.OwnerDraw" />
            property was set to <see langword="false" />.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.DrawTimeScaleRowEventArgs.DrawRow(System.Drawing.Brush,System.Drawing.Brush,System.Drawing.Font,System.Drawing.Pen)">
            <summary>
            Draws the time scale row background using the information provided in this instance.
            </summary>
            <param name="backBrush">The brush used to draw the background of the row. Use <see langword="null" />
            to skip the drawing of the background.</param>
            <param name="foreBrush">The brush used to draw the text of the row. Use <see langword="null" />
            to skip the drawing of the text.</param>
            <param name="font">The font used to draw the text of the row. Use <see langword="null" />
            to skip the drawing of the text.</param>
            <param name="tickPen">The pen used to paint the ticks of the row. Use <see langword="null" />
            to skip the drawing of the ticks.</param>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DrawTimeScaleRowEventArgs.Bounds">
            <summary>
            Gets the bounds of the time scale row being drawn.
            </summary>
            <value>A <see cref="T:System.Drawing.RectangleF" /> structure that contains the bounds of
            the time scale row being drawn.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DrawTimeScaleRowEventArgs.Graphics">
            <summary>
            Gets the graphics surface to draw the time scale row on.
            </summary>
            <value>
            The <see cref="T:System.Drawing.Graphics" /> surface to draw the time scale row on.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.DrawTimeScaleRowEventArgs.Row">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> being drawn.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScaleRow" /> being drawn.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.Design.ScrollActivitySheetDesigner">
            <summary>
            Defines a designer for the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet" /> class.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ActivityDialog">
            <summary>
            Displays a dialog window from which the user can edit the values of an activity.
            </summary>
            <remarks>
            The <strong>ActivityDialog</strong> class represent a dialog window from which the user can edit the values of an activity.
            The user will be able to edit the basic information of the activity such as the name, start time and duration, but also
            the resource that are assigned to this activity as well as predecessor constraints on this activity.
            <p>The activity to edit must be specified using the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.Activity" /> property.</p>
            <p>The dialog box is presented as a tab control with tabs for editing various aspects of the
            activity: the general information, the resources, the constraints and the note. The
            tab that allows to edit the resources assigned to this activity can be hidden using the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.CanEditReservations" /> property. The tab that allowd to edit the constraints can be hidden using the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.CanEditConstraints" /> property.</p>
            <p>The class can be sub-classed to add new tabs or new fields that corresponds to
            the properties of your class of activities.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to use
            an <Strong>ActivityDialog</Strong>.
            </para>
            <code lang="C#">
            private void EditActivity(IActivity activity) {
            ActivityDialog dialog = new ActivityDialog();
            dialog.Activity = activity;
            dialog.ShowDialog();
            }
            </code>
            <code lang="Visual Basic">
            Private Sub EditActivity(ByVal activity As IActivity)
            Dim dialog As New ActivityDialog
            dialog.Activity = activity
            dialog.ShowDialog()
            End Sub
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.#ctor">
            <summary>
            Creates and initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityDialog" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.Dispose(System.Boolean)">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.OnActivityChanged">
            <summary>
            Is called when the activity inspected by the dialog has changed.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.OnVisibleChanged(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)">Control.OnVisibleChanged</see>
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)">Form.ProcessDialogKey</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.ValidateDialog">
            <summary>
            Invoked when the users validates the dialog.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.ValidateReservations">
            <summary>
            Validates modifications for resources
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog._activity">
            <summary>
            The edited activity.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog._canEditConstraints">
            <summary>
            Indicates if constraints can be edited.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog._canEditReservations">
            <summary>
            Indicates if reservations can be edited.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog._constraintChanged">
            <summary>
            Indicates if the user has modified constraints.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog._constraints">
            <summary>
            List of edited constraints for the activity.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog._reservationChanged">
            <summary>
            Indicates if the user has modified reservations.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog._reservations">
            <summary>
            List of edited reservations for the activity.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.advancedPage">
            <summary>
            The <see cref="T:System.Windows.Forms.TabPage" /> the contains information for a <see cref="T:NickLee.Views.Gantt.Data.SchedulingActivity" />.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.buttonCancel">
            <summary>
            The cancel button.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.buttonOK">
            <summary>
            The ok button.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.calendarComboBox">
            <summary>
            The <see cref="T:System.Windows.Forms.ComboBox" /> for calendar.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.calendarLabel">
            <summary>
            The <see cref="T:System.Windows.Forms.Label" /> for calendar.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.constrainTaskLabel">
            <summary>
            The <see cref="T:System.Windows.Forms.Label" /> for constrain task.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.constraintDateEditor">
            <summary>
            The <see cref="T:System.Windows.Forms.DateTimePicker" /> for constraint date.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.constraintDateLabel">
            <summary>
            The <see cref="T:System.Windows.Forms.Label" /> for constraint date.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.constraintTypeComboBox">
            <summary>
            The <see cref="T:System.Windows.Forms.ComboBox" /> for constraint type.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.constraintTypeLabel">
            <summary>
            The <see cref="T:System.Windows.Forms.Label" /> for constraint type.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.datesLabel">
            <summary>
            The <see cref="T:System.Windows.Forms.Label" /> for Dates.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.durationLabel">
            <summary>
            The <see cref="T:System.Windows.Forms.Label" /> for Duration.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.durationTimeSpanUpDown">
            <summary>
            The <see cref="T:NickLee.Views.Windows.Forms.TimeSpanUpDown" /> for duration.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.finishDateTimePicker">
            <summary>
            The date time picker for the end date of the activity.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.finishLabel">
            <summary>
            The <see cref="T:System.Windows.Forms.Label" /> for end time.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.generalTab">
            <summary>
            The <see cref="T:System.Windows.Forms.TabPage" /> the contains general information on the activity.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.milestoneCheckBox">
            <summary>
            The <see cref="T:System.Windows.Forms.CheckBox" /> for Milestone.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.nameLabel">
            <summary>
            The <see cref="T:System.Windows.Forms.Label" /> for Name.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.nameTextBox">
            <summary>
            The <see cref="T:System.Windows.Forms.TextBox" /> for name.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.notApplicableLabel">
            <summary>
            The <see cref="T:System.Windows.Forms.Label" /> for 'not applicable'.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.notesLabel">
            <summary>
            The <see cref="T:System.Windows.Forms.Label" /> for notes.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.notesTab">
            <summary>
            The <see cref="T:System.Windows.Forms.TabPage" /> the contains notes on the activity.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.noteTextBox">
            <summary>
            The <see cref="T:System.Windows.Forms.TextBox" /> for notes.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.percentCompleteLabel">
            <summary>
            The <see cref="T:System.Windows.Forms.Label" /> for Percent Complete.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.percentCompleteUpDown">
            <summary>
            The <see cref="T:System.Windows.Forms.NumericUpDown" /> for Percent Complete.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.predecessorsGrid">
            <summary>
            The data grid for predecessors.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.predecessorsLabel">
            <summary>
            The <see cref="T:System.Windows.Forms.Label" /> for Predecessors.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.predecessorsTab">
            <summary>
            The <see cref="T:System.Windows.Forms.TabPage" /> the contains predecessors information on the activity.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.resourcesGrid">
            <summary>
            The data grid for resources.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.resourcesLabel">
            <summary>
            The <see cref="T:System.Windows.Forms.Label" /> for resources.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.resourcesTab">
            <summary>
            The <see cref="T:System.Windows.Forms.TabPage" /> the contains reservations information on the activity.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.separator1">
            <summary>
            The <see cref="T:System.Windows.Forms.GroupBox" /> for the first separator of the first tab.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.separator2">
            <summary>
            The <see cref="T:System.Windows.Forms.GroupBox" /> for the second separator of the first tab.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.startDateTimePicker">
            <summary>
            The date time picker for the start date of the activity.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.startLabel">
            <summary>
            The <see cref="T:System.Windows.Forms.Label" /> for start time.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.tabControl">
            <summary>
            The main <see cref="T:System.Windows.Forms.TabControl" /> the contains information on the activity.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.Activity">
            <summary>
            Gets or sets the activity edited by this dialog box.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> edited by this dialog.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.CanEditConstraints">
            <summary>
            Gets or sets a value indicating if the user can edit the
            predecessor constraints of the edited activity.
            </summary>
            <value><see langword="true" /> if the user can edit the predecessor
            constraints of the edited activity; <see langword="false" /> otherwise.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.CanEditReservations">
            <summary>
            Gets or sets a value indicating if the user can edit
            the reservations of the edited activity.
            </summary>
            <value><see langword="true" /> if the user can edit the reservations
            of the edited activity; <see langword="false" /> otherwise.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.ClientSize">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Form.ClientSize">Form.ClientSize</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityDialog.Text">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.Text">Control.Text</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection">
            <summary>
            Represents a collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> objects.
            </summary>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.ActivityBarStyles" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.ActivityBarStyles" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.Add(NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle)">
            <summary>
            Adds an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> with the specified value to the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" />.
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> to add.</param>
            <returns>
            The index at which the new element was inserted.
            </returns>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.AddRange(NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle[])" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.AddRange(NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection)">
            <summary>
            Adds the contents of another <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" /> to the end of the collection.
            </summary>
            <param name="value">
            An <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" /> containing the objects to add to the collection.
            </param>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.Add(NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.AddRange(NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle[])">
            <summary>
            Copies the elements of an array to the end of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" />.
            </summary>
            <param name="value">
            An array of type <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> containing the objects to add to the collection.
            </param>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.Add(NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.BottomLinesCount">
            <summary>
            Gets the maximal number of lines below the bar.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.Contains(NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle)">
            <summary>
            Gets a value indicating whether the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" /> contains the specified <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />.
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> to locate.</param>
            <returns>
            <see langword="true" /> if the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> is contained in the collection;
            <see langword="false" /> otherwise.
            </returns>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.IndexOf(NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.CopyTo(NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle[],System.Int32)">
            <summary>
            Copies the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" /> values to a one-dimensional <see cref="T:System.Array" /> instance at the
            specified index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" />.</param>
            <param name="index">The index in <paramref name="array" /> where copying starts.</param>
            <exception cref="T:System.ArgumentException"><paramref name="array" /> is multidimensional. The number of elements in the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" /> is greater than the available space between <paramref name="arrayIndex" /> and the end of <paramref name="array" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />. </exception>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index" /> is less than <paramref name="array" /> lowbound. </exception>
            <seealso cref="T:System.Array" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.IndexOf(NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle)">
            <summary>
            Returns the index of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> in
            the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" />.
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> to locate.</param>
            <returns>
            The index of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> of <paramref name="value" /> in the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" />, if found; <strong>-1</strong> otherwise.
            </returns>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.Contains(NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.Insert(System.Int32,NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle)">
            <summary>
            Inserts an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> into the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" /> at the specified index.
            </summary>
            <param name="index">The zero-based index where <paramref name="value" /> should be inserted.</param>
            <param name=" value">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> to insert.</param>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.Add(NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.InsertRange(System.Int32,NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle[])">
            <summary>
            Inserts the elements of an array at the specified index of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" />.
            </summary>
            <param name="index">The zero-based starting index of the range of elements to insert.</param>
            <param name="value">
            An array of type <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> containing the objects to add to the collection.
            </param>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.Add(NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.OnClear">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnClear">CollectionBase.OnClear</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.OnClearComplete">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnClearComplete">CollectionBase.OnClearComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.OnCollectionChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.CollectionChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
            <remarks>Called when the collection is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">CollectionBase.OnInsertComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.OnInsertRange(System.Int32,System.Collections.ICollection)">
            <summary>
            Performs additional custom processes before inserting a range of elements into the collection instance.
            </summary>
            <param name="index">The index where the range will be inserted.</param>
            <param name="objects">The objects to be inserted.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.OnInsertRangeComplete(System.Int32,NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle[])">
            <summary>
            Performs additional custom processes after inserting a range of elements into the collection instance.
            </summary>
            <param name="index">The index where the range was inserted.</param>
            <param name="objects">The objects that where inserted.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">CollectionBase.OnRemoveComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.OnRemoveRange(System.Int32,System.Collections.ICollection)">
            <summary>
            Performs additional custom processes before removing a range of elements from the collection instance.
            </summary>
            <param name="index">The index where the range will be removed.</param>
            <param name="objects">The objects to be removed.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.OnRemoveRangeComplete(System.Int32,NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle[])">
            <summary>
            Performs additional custom processes after removing a range of elements from the collection instance.
            </summary>
            <param name="index">The index where the range was removed.</param>
            <param name="objects">The objects that were removed.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">CollectionBase.OnSetComplete</see>
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.Remove(NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle)">
            <summary>
            Removes a specific <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> from the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" />.
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> to remove from the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" />.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is not found in the collection. </exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes a range of <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> objects from the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" />.
            </summary>
            <param name="index">The zero-based starting index of the range of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException"><paramref name="index" /> is not a valid index.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.Set(NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection)">
            <summary>
            Sets the contents of the collection.
            </summary>
            <param name="collection">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" /> collection to set.</param>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.AddRange(NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle[])" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.Set(NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle[])">
            <summary>
            Sets the contents of the collection.
            </summary>
            <param name="collection">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> array to set.</param>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.AddRange(NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle[])" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.TopLinesCount">
            <summary>
            Gets the maximal number of lines above the bar.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.CollectionChanged">
            <summary>
            Occurs when the collection has changed.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> with the specified name in the collection.
            </summary>
            <param name="name">The name of the style to locate in the collection.</param>
            <value>
            The style with the specified name in the collection, or <see langword="null" /> if
            no style has the specified name.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> at the specified index in the collection.
            </summary>
            <param name="index">The zero-based index of the entry to locate in the collection.</param>
            <value>
            The entry at the specified index of the collection.
            </value>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index" /> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="T:NickLee.Views.Gantt.TimeSamplerEnumerator">
            <summary>
            An enumerator on a <see cref="T:NickLee.Views.Gantt.ITimeSampler" /> object.
            </summary>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to enumerate days between two dates.
            </para>
            <code lang="C#">
            DefaultTimeSampler sampler = new DefaultTimeSampler(new DateTime(2000, 1, 1), new DateTime(2000, 1, 4), TimeUnit.Day);
            foreach (DateTime day in sampler) {
            Console.WriteLine(day);
            }
            </code>
            <code lang="Visual Basic">
            Dim sampler As DefaultTimeSampler = New DefaultTimeSampler(New DateTime(2000, 1, 1), New DateTime(2000, 1, 4), TimeUnit.Day)
            For Each day As DateTime In sampler
            Console.WriteLine(day)
            Next
            </code>
            </example>
            <seealso cref="T:NickLee.Views.Gantt.ITimeSampler" />
        </member>
        <member name="M:NickLee.Views.Gantt.TimeSamplerEnumerator.#ctor(NickLee.Views.Gantt.ITimeSampler)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.TimeSamplerEnumerator" /> class.
            </summary>
            <param name="timeSampler">The <see cref="T:NickLee.Views.Gantt.ITimeSampler" /> to enumerate.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.TimeSamplerEnumerator.Dispose">
            <summary>
            Implements the <see cref="M:System.IDisposable.Dispose">IDisposable.Dispose</see> method.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.TimeSamplerEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns><see langword="true" /> if the enumerator was successfully advanced to
            the next element; <see langword="false" /> if the enumerator has passed the
            end of the collection.
            </returns>
            <exception cref="T:System.InvalidOperationException">The collection was modified
            after the enumerator was created.
            </exception>
            <remarks>
            <p>After an enumerator is created or after a <see cref="M:NickLee.Views.Gantt.TimeSamplerEnumerator.Reset" />,
            an enumerator is positioned before the first element of the collection,
            and the first call to <strong>MoveNext</strong> moves the enumerator over
            the first element of the collection.
            </p>
            <p>After the end of the collection is passed, subsequent calls to
            <strong>MoveNext</strong> return <see langword="false" /> until
            <strong>Reset</strong> is called.
            </p>
            <p>
            An enumerator remains valid as long as the collection remains unchanged.
            If changes are made to the collection, such as adding, modifying or
            deleting elements, the enumerator is irrecoverably invalidated and the next
            call to <strong>MoveNext</strong> or <strong>Reset</strong> throws an
            <see cref="T:System.InvalidOperationException" />. If the collection is
            modified between <strong>MoveNext</strong> and <strong>Current</strong>,
            <strong>Current</strong> will return the element that it is set to,
            even if the enumerator is already invalidated.
            </p>
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.TimeSamplerEnumerator.Current" />
            <seealso cref="M:NickLee.Views.Gantt.TimeSamplerEnumerator.Reset" />
            <seealso cref="M:System.Collections.IEnumerator.MoveNext">IEnumerator.MoveNext</seealso>
        </member>
        <member name="M:NickLee.Views.Gantt.TimeSamplerEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">The collection was modified
            after the enumerator was created.
            </exception>
            <remarks>
            <p><strong>Reset</strong> moves the enumerator to the beginning of the
            collection, before the first element. After <strong>Reset</strong>,
            <see cref="M:NickLee.Views.Gantt.TimeSamplerEnumerator.MoveNext" /> must be called to advance the enumerator to the
            first element of the collection before reading the value of <see cref="P:NickLee.Views.Gantt.TimeSamplerEnumerator.Current" />.
            </p>
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.TimeSamplerEnumerator.Current" />
            <seealso cref="M:NickLee.Views.Gantt.TimeSamplerEnumerator.MoveNext" />
            <seealso cref="M:System.Collections.IEnumerator.Reset">IEnumerator.Reset</seealso>
        </member>
        <member name="P:NickLee.Views.Gantt.TimeSamplerEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <value>The current element in the collection.</value>
            <exception cref="T:System.InvalidOperationException">The enumerator is positionned
            before the first element of the collection, or after the last element.
            </exception>
            <remarks>
            <p>After an enumerator is created or after a <see cref="M:NickLee.Views.Gantt.TimeSamplerEnumerator.Reset" />,
            <see cref="M:NickLee.Views.Gantt.TimeSamplerEnumerator.MoveNext" /> must be called to advance the enumerator to
            the first element of the collection before reading the value of
            <strong>Current</strong>; otherwise, <strong>Current</strong> is
            undefined.
            </p>
            <p><strong>Current</strong> also throws an exception if the last call to
            <strong>MoveNext</strong> returned <see langword="false" />, which
            indicates the end of the collection.
            </p>
            <p><strong>Current</strong> does not move the position of the enumerator
            and consecutive calls to <strong>Current</strong> return the same object
            until either <strong>MoveNext</strong> or <strong>Reset</strong> is called.
            </p>
            <p>
            An enumerator remains valid as long as the collection remains unchanged.
            If changes are made to the collection, such as adding, modifying or
            deleting elements, the enumerator is irrecoverably invalidated and the next
            call to <strong>MoveNext</strong> or <strong>Reset</strong> throws an
            <see cref="T:System.InvalidOperationException" />. If the collection is
            modified between <strong>MoveNext</strong> and <strong>Current</strong>,
            <strong>Current</strong> will return the element that it is set to,
            even if the enumerator is already invalidated.
            </p>
            </remarks>
            <seealso cref="M:NickLee.Views.Gantt.TimeSamplerEnumerator.MoveNext" />
            <seealso cref="M:NickLee.Views.Gantt.TimeSamplerEnumerator.Reset" />
            <seealso cref="P:System.Collections.IEnumerator.Current">IEnumerator.Current</seealso>
        </member>
        <member name="P:NickLee.Views.Gantt.TimeSamplerEnumerator.TimeSampler">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.ITimeSampler" /> this enumerator enumerates.
            </summary>
            <value>
            The <see cref="T:NickLee.Views.Gantt.ITimeSampler" /> object enumerated by this enumerator.
            </value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.WorkDurationConverter">
            <summary>
            Defines a <see cref="T:System.ComponentModel.TypeConverter" /> to convert from and to a string
            a <see cref="T:System.TimeSpan" /> that represents a working time duration.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.WorkDurationConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)">TypeConverter.CanConvertFrom</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.WorkDurationConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)">TypeConverter.CanConvertTo</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.WorkDurationConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)">TypeConverter.ConvertFrom</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.WorkDurationConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)">TypeConverter.ConvertTo</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.WorkDurationConverter.ParsePrettyTimeSpan(NickLee.Views.Gantt.Data.ProjectSchedulingModel,System.String,System.Globalization.CultureInfo)">
            <summary>
            Parses the specified string into a <see cref="T:System.TimeSpan" /> structure.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.WorkDurationConverter.PrettyTimeSpan(NickLee.Views.Gantt.Data.ProjectSchedulingModel,System.TimeSpan,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified <see cref="T:System.TimeSpan" /> structure to a string.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.ResourceType">
            <summary>
            Defines the type of a <see cref="T:NickLee.Views.Gantt.Data.SchedulingResource" />.
            </summary>
            <remarks>Use the value of this enumeration to define the type of a resource in
            <see cref="P:NickLee.Views.Gantt.Data.SchedulingResource.Type" /> property of
            the <see cref="T:NickLee.Views.Gantt.Data.SchedulingResource" /> class.
            </remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.WorkingTimesGrid">
            <summary>
            Defines a grid that can display the content of a <see cref="T:NickLee.Views.Gantt.WorkCalendar" />.
            </summary>
            <remarks>Use the <see cref="P:NickLee.Views.Gantt.Windows.Forms.WorkingTimesGrid.Calendar" /> property to specify the calendar that will be
            displayed by the grid.</remarks>
            <seealso cref="T:NickLee.Views.Gantt.WorkCalendar" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.WorkingTimesGrid.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.WorkingTimesGrid" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.WorkingTimesGrid.#ctor(NickLee.Views.Gantt.WorkCalendar)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.WorkingTimesGrid" /> class using the specified calendar.
            </summary>
            <param name="calendar">The <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> to display.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.WorkingTimesGrid.Paint(System.Drawing.Graphics,System.Drawing.RectangleF)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.TimeGrid.Paint(System.Drawing.Graphics,System.Drawing.RectangleF)">TimeGrid.Paint</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.WorkingTimesGrid.PaintNonWorkingTime(System.Drawing.Graphics,System.Drawing.Brush,NickLee.Views.Gantt.DateTimeInterval,System.Drawing.RectangleF)">
            <summary>
            Paints the specified time interval as a nonworking time area.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics" /> object to draw to.</param>
            <param name="brush">A <see cref="T:System.Drawing.Brush" /> to fill the rectangle that defines the week-end.</param>
            <param name="interval">A <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> object that represents the time interval of the nonworking time.</param>
            <param name="rect">A <see cref="T:System.Drawing.RectangleF" /> object that represents the week-end.</param>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.WorkingTimesGrid.BackColor">
            <summary>
            Gets or sets the background color of nonworking time areas.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of nonworking time areas.
            </value>
            <remarks>This property is used only if the <see cref="P:NickLee.Views.Gantt.Windows.Forms.WorkingTimesGrid.UseHatch" /> property is <see langword="true" />.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.WorkingTimesGrid.Calendar">
            <summary>
            Gets or sets the calendar to display.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.WorkCalendar" /> reference.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.WorkingTimesGrid.ForeColor">
            <summary>
            Gets or sets the foreground color of nonworking time areas.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color" /> that represents the color of nonworking time areas.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.WorkingTimesGrid.HatchStyle">
            <summary>
            Gets or sets the style of hatch for grid.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Drawing2D.HatchStyle" /> that is used to paint the grid when
            the <see cref="P:NickLee.Views.Gantt.Windows.Forms.WorkingTimesGrid.UseHatch" /> property is set to <see langword="true" />.
            The default value is <strong>Percent25</strong>.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.WorkingTimesGrid.MinStripSize">
            <summary>
            Gets or sets the minimum width in pixels of non-working time strips.
            </summary>
            <value>An <see cref="T:System.Int32" /> that represents the minimum number of pixels
            a non-working time strip must have to be displayed. The default value is
            <strong>20</strong>.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.WorkingTimesGrid.UseHatch">
            <summary>
            Gets or sets a value indicating whether the hatch brush will be used to fill the
            background of the grid.
            </summary>
            <value><see langword="true" /> if the background of the bar is hatched,
            <see langword="false" /> otherwise.
            The default value is <see langword="false" />.
            </value>
            <remarks>When the property returns <see langword="true" /> the
            value of the <see cref="P:NickLee.Views.Gantt.Windows.Forms.WorkingTimesGrid.HatchStyle" /> property is used to fill the background
            of the bar.</remarks>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.HitTestBarStyleEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTestBarStyle" /> event of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> class.
            </summary>
            <remarks>A <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTestBarStyle" /> event is
            raised to do hit testing for owner drawn bar styles.
            It contains all the information needed for the user to do hit testing,
            including the bar bounding box, and the activity or reservation being hit tested.
            The <see cref="P:NickLee.Views.Gantt.Windows.Forms.HitTestBarStyleEventArgs.HitTestType" /> property can be used to set the result of the hit test.</remarks>
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTestBarStyle" />
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.OwnerDraw" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.HitTestBarStyleEventArgs.DefaultHitTesting">
            <summary>
            Do hit testing on the bar style using the information provided in this instance.
            </summary>
            <remarks>Call this method to do hit testing on the bar style if you want to keep
            the original hit testing on the bar style, that is, as if the
            <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.OwnerDraw" />
            property was set to <see langword="false" />.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HitTestBarStyleEventArgs.Activity">
            <summary>
            Gets the activity being hit tested.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HitTestBarStyleEventArgs.ActivityBarStyle">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> being hit tested.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> being hit tested.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HitTestBarStyleEventArgs.BarAndSymbolBounds">
            <summary>
            Gets the bounds of the bar being hit tested taking into account the start and end symbols.
            </summary>
            <value>A <see cref="T:System.Drawing.RectangleF" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HitTestBarStyleEventArgs.BarBounds">
            <summary>
            Gets the the bounds of the bar being hit tested.
            </summary>
            <value>A <see cref="T:System.Drawing.RectangleF" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HitTestBarStyleEventArgs.GanttSheet">
            <summary>
            Gets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HitTestBarStyleEventArgs.GanttSheet" /> being hit tested.
            </summary>
            <value>The <see cref="P:NickLee.Views.Gantt.Windows.Forms.HitTestBarStyleEventArgs.GanttSheet" /> being hit tested.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HitTestBarStyleEventArgs.Graphics">
            <summary>
            Gets the graphics surface used to draw the bar style on.
            </summary>
            <value>
            The <see cref="T:System.Drawing.Graphics" /> surface used to draw the bar style on.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HitTestBarStyleEventArgs.HitTestType">
            <summary>
            Gets or sets the result of hit testing.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle.HitTestType" /> values.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HitTestBarStyleEventArgs.Point">
            <summary>
            Gets the point used for hit testing.
            </summary>
            <value>A <see cref="P:NickLee.Views.Gantt.Windows.Forms.HitTestBarStyleEventArgs.Point" /> structure.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HitTestBarStyleEventArgs.Reservation">
            <summary>
            Gets the reservation being hit tested.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> instance.</value>
            <remarks>This property is <see langword="null" /> if <see cref="P:NickLee.Views.Gantt.Windows.Forms.HitTestBarStyleEventArgs.GanttSheet" /> is not a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScheduleSheet" />
            or a <see cref="T:NickLee.Views.Gantt.Windows.Forms.ReservationSheet" />.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HitTestBarStyleEventArgs.RowIndex">
            <summary>
            Gets the row index of the row being hit tested in the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HitTestBarStyleEventArgs.GanttSheet" />.
            </summary>
            <value>The zero-based index of the row being hit tested.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.HitTestBarStyleEventArgs.VerticalPosition">
            <summary>
            Gets the vertical position at which the bar style is located in the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HitTestBarStyleEventArgs.GanttSheet" />.
            </summary>
            <value>An integer that represents the vertical position at which the bar style is located in the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HitTestBarStyleEventArgs.GanttSheet" />.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.GanttChart">
            <summary>
            A Gantt chart is a chart that displays activities.
            </summary>
            <remarks>
            <p>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttChart" /> is made up of rows,
            each containing one single activity. The left part of the Gantt chart displays
            activities as a tree structure and shows related information, such as start and end time.
            The right part of the chart displays a graphical representation of the duration
            of activities over time.</p>
            <p><img src="ganttchart.png" /></p>
            <p>The <strong>GanttChart</strong> control will display the information
            contained in a Gantt data model. You will set the data model of a <strong>GanttChart</strong>
            using the <see cref="P:NickLee.Views.Gantt.Windows.Forms.HierarchyChart.GanttModel" /> property.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to create a <strong>GanttChart</strong>
            and assign a Gantt data model to it.
            </para>
            <code lang="C#">
            Form form = new Form();

            // Creates the Gantt chart
            GanttChart chart = new GanttChart();
            chart.Dock = DockStyle.Fill;

            // Adds the control to the form
            form.Controls.Add(chart);

            // Creates a Gantt model
            IGanttModel model = new SimpleGanttModel();
            IActivity activity = model.NewActivity();
            activity.Name = "My Activity";
            activity.StartTime = DateTime.Now;
            activity.Duration = TimeSpan.FromDays(5);
            model.Activities.Add(activity);

            // Assign Gantt model to the chart
            chart.GanttModel = model;

            // Change start visible time
            chart.FirstVisibleTime = DateTime.Now;

            Application.Run(form);
            </code>
            <code lang="Visual Basic">
            Dim form1 As Form = New Form

            'Creates the Gantt chart
            Dim chart As GanttChart = New GanttChart
            chart.Dock = DockStyle.Fill
            form.Controls.Add(chart)

            'Creates a Gantt model
            Dim model As IGanttModel = New SimpleGanttModel
            Dim activity As IActivity = model.NewActivity
            activity.Name = "My Activity"
            activity.StartTime = DateTime.Now
            activity.Duration = TimeSpan.FromDays(5)
            model.Activities.Add(activity)

            'Assign Gantt model to the chart
            chart.GanttModel = model

            'Change start visible time
            chart.FirstVisibleTime = DateTime.Now
            Application.Run(form)
            </code>
            </example>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.GanttTable" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScale" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttChart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttChart" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttChart.Collapse(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Collapses the specified activity.
            </summary>
            <param name="activity">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to collpase.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttChart.CollapseAll(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Collapses the specified activity and all its children.
            </summary>
            <param name="activity">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to collapse.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttChart.CreateGanttTable">
            <summary>
            Creates the table for the Gantt chart.
            </summary>
            <remarks>This method creates the table of the Gantt chart. The
            default implementation creates an instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityTable" /> class.
            </remarks>
            <returns>A new <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityTable" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttChart.CreateScrollGanttSheet">
            <summary>
            Creates the Gantt sheet and time scale of the Gantt chart.
            </summary>
            <remarks>This method creates the Gantt sheet and time scale of the Gantt chart. The
            default implementation creates an instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet" /> class that
            regroups a time scale and a Gantt sheet.
            </remarks>
            <returns>A new <see cref="T:NickLee.Views.Gantt.Windows.Forms.ScrollActivitySheet" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttChart.Expand(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Expands the specified activity.
            </summary>
            <param name="activity">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to expand.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttChart.ExpandAll(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Expands the specified activity and all its children.
            </summary>
            <param name="activity">A <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to expand.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttChart.GetActivityAt(System.Int32)">
            <summary>
            Retrieves the activity of the specified index.
            </summary>
            <param name="rowIndex">The zero-based index of the activity to retrieve.</param>
            <returns>The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> located at the specified index.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttChart.GetCurrentActivity">
            <summary>
            Returns the current activity in the table.
            </summary>
            <returns>The current <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> in the table.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttChart.GetRowHeight(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Gets the height of the specified activity.
            </summary>
            <param name="activity">The activity.</param>
            <returns>The height of <paramref name="activity" />.</returns>
            <exception cref="T:System.ArgumentException"><paramref name="activity" /> is not
            part of the gantt model.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttChart.GetSelectedActivities">
            <summary>
            Retrieves an array containing the selected activities.
            </summary>
            <returns>An array containing the selected activities.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttChart.IndentActivity(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Indents the specified activity.
            </summary>
            <param name="activity">The activity to indent.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttChart.IsExpanded(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Gets a value indicating whether the specified activity is expanded.
            </summary>
            <param name="activity">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to test.</param>
            <returns>A value indicating whether the specified activity is expanded.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttChart.IsRowVisible(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Gets a value indicating whether the specified activity is visible.
            </summary>
            <param name="activity">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to test.</param>
            <returns>A value indicating whether the specified activity is visible.</returns>
            <remarks>
            An activity is said to be visible when all its ancestors are expanded.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttChart.MoveActivityDown(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Moves down the specified activity.
            </summary>
            <param name="activity">The activity to move down.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttChart.MoveActivityUp(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Moves up the specified activity.
            </summary>
            <param name="activity">The activity to move up.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttChart.NewActivity(System.String,System.String,NickLee.Views.Gantt.DateTimeInterval)">
            <summary>
            Creates a new activity as a sibling of the current row.
            </summary>
            <param name="id">The unique identifier of the new activity.</param>
            <param name="name">The name of the new activity.</param>
            <param name="interval">The initial time interval for the activity.</param>
            <returns>The zero-based index of the row containing the new activity.</returns>
            <remarks>If <paramref name="id" /> is <see langword="null" />, a unique ID provided by
            the model will be used.
            If <paramref name="name" /> is <see langword="null" />, the table is
            automatically placed in editing mode to edit the activity name.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttChart.OutdentActivity(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Outdents the specified activity.
            </summary>
            <param name="activity">The activity to outdent.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttChart.ResetConstraintToolTip">
            <summary>
            Resets the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttChart.ConstraintToolTip" /> property to its default value.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.GanttChart.SetRowHeight(NickLee.Views.Gantt.Data.IActivity,System.Int32)">
            <summary>
            Sets the height of the specified activity.
            </summary>
            <param name="activity">The activity.</param>
            <param name="height">The new height.</param>
            <exception cref="T:System.ArgumentException"><paramref name="activity" /> is not
            part of the gantt model.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="height" /> is
            negative.</exception>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttChart.BeforeCreateConstraint">
            <summary>
            Event fired before a constraint is created using the mouse.
            </summary>
            <remarks>When the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttChart.CanCreateConstraint" /> property is <see langword="true" />, the
            user can create a constraint by selecting the origin and destination activity using the
            mouse pointer. Before
            the constraint is created, this event is raised so that you can cancel the creation or
            notify the user of some particular case.</remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.GanttChart.CanCreateConstraint" />
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttChart.CanCreateConstraintChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttChart.CanCreateConstraint" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttChart.ConstraintLinkStyleChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttChart.ConstraintLinkStyle" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttChart.ConstraintsColorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttChart.ConstraintsColor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttChart.ConstraintsOwnerDrawChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttChart.ConstraintsOwnerDraw" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttChart.ConstraintToolTipChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttChart.ConstraintToolTip" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttChart.CreateConstraintCursorChanged">
            <summary>
            Occurs when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttChart.CreateConstraintCursor" /> property is changed on the control.
            </summary>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttChart.DrawConstraintLink">
            <summary>
            Occurs when the activity sheet draws constraint links in owner draw mode.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttChart.ConstraintsOwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows an event handler
            listening to the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.DrawConstraintLink" /> event. The event handler draws
            constraint links using a specific pen that depends on the constraint.
            </para>
            <code lang="C#">
            private void OnDrawConstraintLink(object sender, DrawConstraintLinkEventArgs e) {
            Pen pen = ComputePen(e.Constraint);
            e.DrawConstraintLink(pen, e.Brush);
            }
            </code>
            <code lang="Visual Basic">
            Private Sub OnDrawSheetRow(ByVal sender As Object, ByVal e As DrawConstraintLinkEventArgs)
            Dim pen as Pen = ComputePen(e.Constraint)
            e.DrawConstraintLink(pen, e.Brush)
            End Sub
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.GanttChart.HitTestConstraintLink">
            <summary>
            Occurs when the activity sheet does hit testing on constraint links in owner draw mode.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttChart.ConstraintsOwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttChart.CanCreateConstraint">
            <summary>
            Gets or sets a value indicating whether constraints
            can be created using the mouse.
            </summary>
            <value>
            <see langword="true" /> if constraints can be created
            using the mouse; <see langword="false" /> otherwise.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttChart.ConstraintLinkStyle">
            <summary>
            Gets or sets the style of constraint links between activities.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ConstraintLinkStyle" /> values. The default
            is <strong>Direct</strong>.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.GanttChart.ConstraintsColor" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttChart.ConstraintsColor">
            <summary>
            Gets or sets the color of constraints links.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> used to draw the constraints links.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttChart.ConstraintsOwnerDraw">
            <summary>
            Gets or sets a value indicating whether the code that you
            provide draws the constraint links or not.
            </summary>
            <value>
            <see langword="true" /> if constraint links are to be drawn using custom user
            code; <see langword="false" /> otherwise.
            </value>
            <remarks>
            <p>When the <strong>ConstraintsOwnerDraw</strong> property is set to <see langword="true" />,
            you need to handle the drawing and hit testing of constraint links.
            Use the <see cref="E:NickLee.Views.Gantt.Windows.Forms.GanttChart.DrawConstraintLink" /> event to handle the drawing of
            constraint links.
            Use the <see cref="E:NickLee.Views.Gantt.Windows.Forms.GanttChart.HitTestConstraintLink" /> event to handle the hit testing of
            constraint links.
            </p>
            <p>When the <strong>ConstraintsOwnerDraw</strong> property is set to <see langword="false" />,
            the <strong>DrawConstraintLink</strong> and <strong>HitTestConstraintLink</strong> events are not raised.</p>
            </remarks>
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.GanttChart.DrawConstraintLink" />
            <seealso cref="E:NickLee.Views.Gantt.Windows.Forms.GanttChart.HitTestConstraintLink" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttChart.ConstraintToolTip">
            <summary>
            Gets or sets the tooltip format for constraints.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the format of the tooltip that
            will be displayed when the mouse hovers constraints.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttChart.CreateConstraintCursor">
            <summary>
            Gets the cursor that is used when the user creates a constraint using the
            mouse pointer.
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Cursor" /> that is used when the user creates a constraint using the
            mouse pointer.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttChart.GanttSheet">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> used to display the activity or
            resource hierarchy in a Gantt model.
            </summary>
            <value>
            The <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> control that displays the activity or
            resource hierarchy in a Gantt model.
            </value>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.GanttChart.GanttTable">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttTable" /> used to display the activity or
            resource hierarchy in a Gantt model.
            </summary>
            <value>The <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttTable" /> control that
            display the activity or
            resource hierarchy in the Gantt model.
            </value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.EditedConstraint">
            <summary>
            Private class for editing constraint
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.Design.TimeScrollBarDesigner">
            <summary>
            Defines a designer for the <see cref="T:NickLee.Views.Gantt.Windows.Forms.TimeScrollBar" /> control.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.TimeScrollBarDesigner.PostFilterEvents(System.Collections.IDictionary)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)">ComponentDesigner.PostFilterEvents</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.Design.TimeScrollBarDesigner.PostFilterProperties(System.Collections.IDictionary)">
            <summary>
            This member overrides <see cref="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)">ComponentDesigner.PostFilterProperties</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.Design.CalendarTypeConverter">
            <summary>
            Type converter for WorkCalendar used to generate correct calls
            to static fields for Standard static calendars.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.CurrentDateIndicator">
            <summary>
            Defines a vertical line that displays the current date in a <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />.
            </summary>
            <remarks>
            A <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> can display several date indicators. To add a date indicator in
            a <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" /> use the <see cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.DateIndicators" /> property.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.GanttSheet.DateIndicators">GanttSheet.DateIndicators</seealso>
            <example>
            <para lang="C#,Visual Basic">
            The following example adds a <see cref="T:NickLee.Views.Gantt.Windows.Forms.CurrentDateIndicator" /> in a <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />.
            </para>
            <code lang="C#">
            public void AddDateIndicator(GanttSheet sheet) {
            CurrentDateIndicator dateIndicator = new CurrentDateIndicator();
            sheet.DateIndicators.Add(dateIndicator);
            }
            </code>
            <code lang="Visual Basic">
            Sub AddDateIndicator(ByVal sheet As GanttSheet)
            Dim dateIndicator As CurrentDateIndicator = New CurrentDateIndicator
            sheet.DateIndicators.Add(dateIndicator)
            End Sub
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CurrentDateIndicator.#ctor">
            <summary>
            Creates and initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CurrentDateIndicator" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CurrentDateIndicator.SetTimeControl(NickLee.Views.Gantt.Windows.Forms.TimeControl)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Gantt.Windows.Forms.DateIndicator.SetTimeControl(NickLee.Views.Gantt.Windows.Forms.TimeControl)">DateIndicator.SetTimeControl</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CurrentDateIndicator.Time">
            <summary>
            This member overrides <see cref="P:NickLee.Views.Gantt.Windows.Forms.DateIndicator.Time">DateIndicator.Time</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CurrentDateIndicator.UpdateInterval">
            <summary>
            Gets or sets the interval between two updates of the indicator.
            </summary>
            <value>An integer value that represents the duration in milliseconds between
            two repainting of the indicator. The default value is one minute.
            </value>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.CreateActivityEventHandler">
            <summary>
            Represents the method that handles a <see cref="E:NickLee.Views.Gantt.Windows.Forms.CalendarView.CreateActivity" /> event of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarView" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection">
            <summary>
            Represents a collection of <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> objects.
            </summary>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.CalendarView.BarStyles" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.Add(NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle)">
            <summary>
            Adds an <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> with the specified value to the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection" />.
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> to add.</param>
            <returns>
            The index at which the new element was inserted.
            </returns>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.AddRange(NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle[])" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.AddRange(NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle[])">
            <summary>
            Copies the elements of an array to the end of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection" />.
            </summary>
            <param name="value">
            An array of type <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> containing the objects to add to the collection.
            </param>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.Add(NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.AddRange(NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection)">
            <summary>
            Adds the contents of another <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection" /> to the end of the collection.
            </summary>
            <param name="value">
            An <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection" /> containing the objects to add to the collection.
            </param>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.Add(NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.Contains(NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle)">
            <summary>
            Gets a value indicating whether the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection" /> contains the specified <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" />.
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> to locate.</param>
            <returns>
            <see langword="true" /> if the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> is contained in the collection;
            <see langword="false" /> otherwise.
            </returns>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.IndexOf(NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.CopyTo(NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle[],System.Int32)">
            <summary>
            Copies the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection" /> values to a one-dimensional <see cref="T:System.Array" /> instance at the
            specified index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection" />.</param>
            <param name="index">The index in <paramref name="array" /> where copying starts.</param>
            <exception cref="T:System.ArgumentException"><paramref name="array" /> is multidimensional. The number of elements in the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection" /> is greater than the available space between <paramref name="arrayIndex" /> and the end of <paramref name="array" />.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />. </exception>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index" /> is less than <paramref name="array" /> lowbound. </exception>
            <seealso cref="T:System.Array" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.IndexOf(NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle)">
            <summary>
            Returns the index of a <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> in
            the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection" />.
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> to locate.</param>
            <returns>
            The index of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> of <paramref name="value" /> in the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection" />, if found; <strong>-1</strong> otherwise.
            </returns>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.Contains(NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.Insert(System.Int32,NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle)">
            <summary>
            Inserts an <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> into the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection" /> at the specified index.
            </summary>
            <param name="index">The zero-based index where <paramref name="value" /> should be inserted.</param>
            <param name=" value">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> to insert.</param>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.Add(NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.InsertRange(System.Int32,NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle[])">
            <summary>
            Inserts the elements of an array at the specified index of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection" />.
            </summary>
            <param name="index">The zero-based starting index of the range of elements to insert.</param>
            <param name="value">
            An array of type <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> containing the objects to add to the collection.
            </param>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.Add(NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.OnClear">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnClear">CollectionBase.OnClear</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.OnClearComplete">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnClearComplete">CollectionBase.OnClearComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.OnCollectionChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.CollectionChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
            <remarks>Called when the collection is changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">CollectionBase.OnInsertComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.OnInsertRange(System.Int32,System.Collections.ICollection)">
            <summary>
            Performs additional custom processes before inserting a range of elements into the collection instance.
            </summary>
            <param name="index">The index where the range will be inserted.</param>
            <param name="objects">The objects to be inserted.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.OnInsertRangeComplete(System.Int32,NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle[])">
            <summary>
            Performs additional custom processes after inserting a range of elements into the collection instance.
            </summary>
            <param name="index">The index where the range was inserted.</param>
            <param name="objects">The objects that where inserted.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">CollectionBase.OnRemoveComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.OnRemoveRange(System.Int32,System.Collections.ICollection)">
            <summary>
            Performs additional custom processes before removing a range of elements from the collection instance.
            </summary>
            <param name="index">The index where the range will be removed.</param>
            <param name="objects">The objects to be removed.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.OnRemoveRangeComplete(System.Int32,NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle[])">
            <summary>
            Performs additional custom processes after removing a range of elements from the collection instance.
            </summary>
            <param name="index">The index where the range was removed.</param>
            <param name="objects">The objects that were removed.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)">CollectionBase.OnSetComplete</see>
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.Remove(NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle)">
            <summary>
            Removes a specific <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> from the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection" />.
            </summary>
            <param name="value">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> to remove from the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection" />.</param>
            <exception cref="T:System.ArgumentException"><paramref name="value" /> is not found in the collection. </exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes a range of <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> objects from the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection" />.
            </summary>
            <param name="index">The zero-based starting index of the range of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentException"><paramref name="index" /> is not a valid index.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.Set(NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle[])">
            <summary>
            Sets the contents of the collection.
            </summary>
            <param name="collection">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> array to set.</param>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.AddRange(NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle[])" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.Set(NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection)">
            <summary>
            Sets the contents of the collection.
            </summary>
            <param name="collection">The <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection" /> collection to set.</param>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.AddRange(NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle[])" />
        </member>
        <member name="E:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.CollectionChanged">
            <summary>
            Occurs when the collection has changed.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyleCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:NickLee.Views.Gantt.Windows.Forms.CalendarViewBarStyle" /> at the specified index in the collection.
            </summary>
            <param name="index">The zero-based index of the entry to locate in the collection.</param>
            <value>
            The entry at the specified index of the collection.
            </value>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index" /> is outside the valid range of indexes for the collection.</exception>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStylesDialog">
            <summary>
            Displays a dialog window from which the user can edit the values of an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" />.
            </summary>
            <remarks>
            The <strong>ActivityBarStylesDialog</strong> is a dialog window from which the user can edit the
            style of activity bars. To indicate the styles to edit you will use the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStylesDialog.Styles" />
            property that contains the collection of style to edit (see class <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" />).
            The dialog box presents the list of styles contained in the collection and allows
            to modify all aspects of the style of bars such as colors, shape of symbols at
            the beginning and end of the activity bars.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following example shows a method that edits the collection of bar styles of
            a <see cref="T:NickLee.Views.Gantt.Windows.Forms.GanttSheet" />:
            </para>
            <code lang="C#">
            public void EditBarStyles(GanttSheet sheet) {
            ActivityBarStylesDialog editor = new ActivityBarStylesDialog();
            editor.Styles = sheet.ActivityBarStyles;
            if (editor.ShowDialog() == DialogResult.OK) {
            sheet.ActivityBarStyles.Clear();
            sheet.ActivityBarStyles.AddRange(editor.Styles);
            }
            }
            </code>
            <code lang="Visual Basic">
            Sub EditBarStyles(ByVal sheet As GanttSheet)
            Dim editor As ActivityBarStylesDialog = New ActivityBarStylesDialog
            editor.Styles = sheet.ActivityBarStyles
            If (editor.ShowDialog() = DialogResult.OK) Then
            sheet.ActivityBarStyles.Clear()
            sheet.ActivityBarStyles.AddRange(editor.Styles)
            End If
            End Sub
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStylesDialog.#ctor">
            <summary>
            Creates and initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStylesDialog" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStylesDialog.Dispose(System.Boolean)">
            <summary>
            Cleans up any resources being used.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStylesDialog.GetBrowsableProperties">
            <summary>
            Gets the list of properties that will be proposed to the user for displaying on the activity bar.
            </summary>
            <remarks>
            The method computes the list of properties that will be proposed to the user for displaying on the activity bar.
            The method looks for the browsable properties of the type defined in the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStylesDialog.ActivityType" />
            property.</remarks>
            <returns>An array of <see cref="T:System.String" /> where each string represent a property of an activity.</returns>
            <seealso cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStylesDialog.ActivityType" />
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStylesDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStylesDialog.ScaleCore(System.Single,System.Single)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)">Control.ScaleCore</see>.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.Windows.Forms.ActivityBarStylesDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStylesDialog.ActivityType">
            <summary>
            Gets or sets the type of activity used by the dialog.
            </summary>
            <value>An instance of the <see cref="T:System.Type" /> class. The default value is <see cref="T:NickLee.Views.Gantt.Data.IActivity" />.</value>
            <remarks>This property is used to find the browsable properties of an activity. The list
            of properties will be proposed to the user as properties that can be displayed in the bar.</remarks>
            <seealso cref="M:NickLee.Views.Gantt.Windows.Forms.ActivityBarStylesDialog.GetBrowsableProperties" />
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStylesDialog.AutoScaleBaseSize">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Form.AutoScaleBaseSize">Form.AutoScaleBaseSize</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStylesDialog.ClientSize">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Form.ClientSize">Form.ClientSize</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStylesDialog.Styles">
            <summary>
            Gets or sets the collection of styles edited by this editor.
            </summary>
            <value>
            The <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyleCollection" /> that contains the styles
            to edit.
            </value>
            <remarks>When you get the value of this property you will get a complete
            new collection with new <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" /> objects. The dialog box does not directly
            modify the collection of style that you set in this property. It works on
            a deep copy of the collection.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Windows.Forms.ActivityBarStylesDialog.Text">
            <summary>
            This member overrides <see cref="P:System.Windows.Forms.Control.Text">Control.Text</see>.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarFillStyle">
            <summary>
            Specifies how <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBar" /> objects are filled.
            </summary>
            <remarks>Use the members of this enumeration to set the
            value of the <see cref="P:NickLee.Views.Gantt.Windows.Forms.ActivityBar.FillStyle" /> property in the
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBar" /> class.
            </remarks>
            <seealso cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBar" />
        </member>
        <member name="T:NickLee.Views.Gantt.Web.UI.ScheduleSheet">
            <summary>
            A chart that displays reservations of resources over the time.
            </summary>
            <remarks>
            <p>The <see cref="T:NickLee.Views.Gantt.Web.UI.ScheduleSheet" /> is made up of rows,
            each row is displaying the reservations of one resource.</p>
            <p><img src="schedulesheet.png" /></p>
            <p>In order to display reservations, the <see cref="T:NickLee.Views.Gantt.Web.UI.ScheduleSheet" /> must be
            connected to a class that implements the <see cref="T:NickLee.Views.Gantt.Windows.Forms.IResourceRowController" />
            interface such as the <see cref="T:NickLee.Views.Gantt.Web.UI.ResourceTable" /> or <see cref="T:NickLee.Views.Gantt.Web.UI.ScheduleChart" />
            classes. To connect the <see cref="T:NickLee.Views.Gantt.Web.UI.ScheduleSheet" /> use the
            <see cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.RowController" /> property.</p>
            <p>The <see cref="T:NickLee.Views.Gantt.Web.UI.ScheduleSheet" /> inherits from the <see cref="T:NickLee.Views.Gantt.Web.UI.TimeControl" /> class
            that is the base class for controls displaying information over the time. In
            particular <see cref="T:NickLee.Views.Gantt.Web.UI.TimeControl" /> defines the
            <see cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.FirstVisibleTime" /> property that is the first visible time
            displayed by the control and the <see cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.VisibleDuration" /> property
            that defines the period of time displayed by the control.</p>
            <p>In order to synchronize the time of several controls that are displaying time
            information, the <see cref="T:NickLee.Views.Gantt.Web.UI.TimeControl" /> control also defines the
            <see cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.TimeLine" /> property. For example, to synchronize a
            <see cref="T:NickLee.Views.Gantt.Web.UI.ScheduleSheet" /> with a <see cref="T:NickLee.Views.Gantt.Web.UI.TimeScale" /> object, you will set the
            <see cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.TimeLine" /> property of the <see cref="T:NickLee.Views.Gantt.Web.UI.ScheduleSheet" /> to the
            <see cref="T:NickLee.Views.Gantt.Web.UI.TimeScale" /> object.</p>
            <p>The base class <see cref="T:NickLee.Views.Gantt.Web.UI.GanttSheet" /> defines many appearence properties such as the
            back color, the color of selected rows, the font of the sheet, the vertical and horizontal
            grid lines.</p>
            <p>The appearance of an activity on a line depends on the
            <see cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.ActivityBarStyles" /> property that defines the styles of bar
            to be used for activities depending on the type and current values of an activity.
            For more information of this topic see <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />.</p>
            <p>Each row of the <see cref="T:NickLee.Views.Gantt.Web.UI.ScheduleSheet" /> will display several activity objects.
            The control proposes several layout algorithms to layout the activities in order to
            avoid overlapping of activities in a row. The different possible values are defined
            by the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle" /> enumeration.</p>
            </remarks>
            <seealso cref="T:NickLee.Views.Gantt.Web.UI.ScrollScheduleSheet" />
            <seealso cref="T:NickLee.Views.Gantt.Web.UI.ScheduleChart" />
            <seealso cref="T:NickLee.Views.Gantt.Web.UI.ActivitySheet" />
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleSheet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Web.UI.ScheduleSheet" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleSheet.Dispose">
            <summary>
            Overridden. See <see cref="M:System.Web.UI.Control.Dispose">Control.Dispose</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleSheet.GetActivityBarBounds(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Gets the bounds of the activity for the specified reservation without taking into account
            the text on the right and left of the activity bar.
            </summary>
            <param name="reservation">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> reference.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle" /> structure that represents the
            bounds of <paramref name="reservation" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleSheet.GetActivityBounds(NickLee.Views.Gantt.Data.IReservation)">
            <summary>
            Gets the bounds of the activity for the specified reservation.
            </summary>
            <param name="reservation">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> reference.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle" /> structure that represents the
            bounds of <paramref name="reservation" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleSheet.GetResourceAt(System.Int32)">
            <summary>
            Gets the resource displayed at the specified row index.
            </summary>
            <param name="rowIndex">The row index.</param>
            <returns>The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> displayed at the specified row index.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleSheet.GetRowIndex(NickLee.Views.Gantt.Data.IResource)">
            <summary>
            Gets the index of the row where the specified resource is displayed.
            </summary>
            <param name="resource">The <see cref="T:NickLee.Views.Gantt.Data.IResource" /> of which to index is to be found.</param>
            <returns>The index of the resource or <strong>-1</strong> if the resource is not currently visible.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ScheduleSheet.RenderImageMapAreas(System.Web.UI.HtmlTextWriter)">
            <summary>
            Is called to render image map areas.
            </summary>
            <param name="writer">The writer in which to put the image map areas.</param>
            <remarks>The implementation of this method create image map areas to display
            tooltips for visible reservations.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.ActivityToolTip" />
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.ScheduleSheet.LayoutReservations">
            <summary>
            Event fired to allow the customization of the layout of reservations
            in a row.
            </summary>
            <remarks>This event is fired after the row has been layouted according to
            the <see cref="P:NickLee.Views.Gantt.Web.UI.ScheduleSheet.ActivityLayoutStyle" /> property. If you plan to completely
            redefine a new layout, set the <see cref="P:NickLee.Views.Gantt.Web.UI.ScheduleSheet.ActivityLayoutStyle" /> property
            to <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle">Simple</see>
            to improve performances.
            </remarks>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.ScheduleSheet.QueryReservationZOrder">
            <summary>
            Event fired to allow the specification of the z-order of a reservation
            in a row.
            </summary>
            <remarks>The layout of activities in a row is controlled by the <see cref="P:NickLee.Views.Gantt.Web.UI.ScheduleSheet.ActivityLayoutStyle" />
            property. Activities will be sorted by their Start Time so that
            an activity starting earlier than another activity will be drawn before. You
            can modify this behavior by specifying a z-order for each reservation.
            </remarks>
            <example>
            <para lang="C#"> The following example shows how to make the reservation
            of type Maintenance drawn below all other reservations by setting a smaller
            z-order.
            </para>
            <code lang="C#">
            myScheduleSheet.QueryReservationZOrder += new QueryReservationZOrderEventHandler(GetZOrder);
            private void GetZOrder(object source, QueryReservationZOrderEventArgs e)
            {
            if (e.Reservation.Activity is Maintenance)
            e.ZOrder = 0;
            else
            e.ZOrder = 1;
            }
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.ScheduleSheet.RowLayoutStyle">
            <summary>
            Event that is fired to query the layout style that will be used to layout
            the reservation of a specified resource.
            </summary>
            <remarks>Handling this event allows you to specify an <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle" /> per
            row of the <see cref="T:NickLee.Views.Gantt.Web.UI.ScheduleSheet" />.
            </remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ScheduleSheet.ActivityLayoutStyle">
            <summary>
            Gets or sets the style used to layout activities in a row.
            </summary>
            <remarks>This property will change the style of layout for all
            the rows of the schedule sheet. You can also specify a layout style per
            row by handling the <see cref="E:NickLee.Views.Gantt.Web.UI.ScheduleSheet.RowLayoutStyle" /> event.</remarks>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle" /> values. The
            default value is <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityLayoutStyle">Pretty</see>.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Web.UI.NamespaceDoc">
            <summary>
            The <strong>NickLee.Views.Gantt.Web.UI</strong> namespace contains the Gantt
            Web Forms control. In particular the namespace contains the <see cref="T:NickLee.Views.Gantt.Web.UI.GanttChart" />
            and <see cref="T:NickLee.Views.Gantt.Web.UI.ScheduleChart" /> classes.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Web.UI.ActivitySheet">
            <summary>
            A chart that displays activities over the time.
            </summary>
            <remarks>
            <p>The <see cref="T:NickLee.Views.Gantt.Web.UI.ActivitySheet" /> is made up of rows, each containing one single activity.
            The control displays a graphical representation of the duration of activities over the time as
            well as constraints between activities.</p>
            <p><img src="activitysheet.png" /></p>
            <p>In order to display activities, the <see cref="T:NickLee.Views.Gantt.Web.UI.ActivitySheet" /> must be connected
            to a class that implements the <see cref="T:NickLee.Views.Gantt.Windows.Forms.IActivityRowController" /> interface such
            as the <see cref="T:NickLee.Views.Gantt.Web.UI.ActivityTable" /> or <see cref="T:NickLee.Views.Gantt.Web.UI.GanttChart" /> classes. To connect the
            <see cref="T:NickLee.Views.Gantt.Web.UI.ActivitySheet" /> use the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.RowController" /> property.</p>
            <p>The <see cref="T:NickLee.Views.Gantt.Web.UI.ActivitySheet" /> inherits from the <see cref="T:NickLee.Views.Gantt.Web.UI.TimeControl" /> class that is
            the base class for controls displaying information over the time. In particular
            <see cref="T:NickLee.Views.Gantt.Web.UI.TimeControl" /> defines the <see cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.FirstVisibleTime" /> property
            that is the first visible time displayed by the control and the
            <see cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.VisibleDuration" /> property that defines the period of time displayed by
            the control.</p>
            <p>In order to synchronize the time of several controls that are displaying time information,
            the <see cref="T:NickLee.Views.Gantt.Web.UI.TimeControl" /> control also defines the <see cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.TimeLine" />
            property. For example, to synchronize a <see cref="T:NickLee.Views.Gantt.Web.UI.GanttSheet" /> with a
            <see cref="T:NickLee.Views.Gantt.Web.UI.TimeScale" /> object, you will set the <see cref="P:NickLee.Views.Gantt.Web.UI.TimeControl.TimeLine" /> property
            of the <see cref="T:NickLee.Views.Gantt.Web.UI.GanttSheet" /> to the <see cref="T:NickLee.Views.Gantt.Web.UI.TimeScale" /> object.</p>
            <p>The base class <see cref="T:NickLee.Views.Gantt.Web.UI.GanttSheet" /> defines many appearance properties such as the
            back color, the color of selected rows, the font of the sheet, the vertical and horizontal
            grid lines.</p>
            <p>The appearance of an activity on a line depends on the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.ActivityBarStyles" />
            property that defines the styles of bar to be used for activities depending on the type
            and current values of an activity. For more information on this topic see
            <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />.</p>
            </remarks>
            <seealso cref="T:NickLee.Views.Gantt.Web.UI.ScrollActivitySheet" />
            <seealso cref="T:NickLee.Views.Gantt.Web.UI.GanttChart" />
            <seealso cref="T:NickLee.Views.Gantt.Web.UI.ScheduleSheet" />
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ActivitySheet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Web.UI.ActivitySheet" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ActivitySheet.GetActivityAt(System.Int32)">
            <summary>
            Gets the activity that is displayed at the specified row index.
            </summary>
            <param name="rowIndex">The index of the row.</param>
            <returns>The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> object that is displayed at the specified row index.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ActivitySheet.GetActivityBarBounds(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Gets the bounds of the specified activity bar without taking into consideration the text around
            the activity bar.
            </summary>
            <param name="activity">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> reference.</param>
            <returns>
            A <see cref="T:System.Drawing.RectangleF" /> structure that represents the
            bounds of <paramref name="activity" />. The method will return an empty
            rectangle if the activity is not currently visible or if no style can be
            used to render this activity (see <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />.
            </returns>
            <seealso cref="M:NickLee.Views.Gantt.Web.UI.ActivitySheet.GetActivityBounds(NickLee.Views.Gantt.Data.IActivity)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ActivitySheet.GetActivityBounds(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Gets the bounds of the specified activity.
            </summary>
            <param name="activity">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> reference.</param>
            <returns>
            A <see cref="T:System.Drawing.RectangleF" /> structure that represents the
            bounds of <paramref name="activity" />. The method will return an empty
            rectangle if the activity is not currently visible or if no style can be
            used to render this activity (see <see cref="T:NickLee.Views.Gantt.Windows.Forms.ActivityBarStyle" />.
            </returns>
            <seealso cref="M:NickLee.Views.Gantt.Web.UI.ActivitySheet.GetActivityBarBounds(NickLee.Views.Gantt.Data.IActivity)" />
            <seealso cref="M:NickLee.Views.Gantt.Web.UI.ActivitySheet.GetConstraintBounds(NickLee.Views.Gantt.Data.IConstraint)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ActivitySheet.GetConstraintBounds(NickLee.Views.Gantt.Data.IConstraint)">
            <summary>
            Gets the bounds of the specified constraint.
            </summary>
            <param name="constraint">An <see cref="T:NickLee.Views.Gantt.Data.IConstraint" /> reference.</param>
            <returns>
            A <see cref="T:System.Drawing.RectangleF" /> structure that represents the
            bounds of <paramref name="constraint" />. The method will return an empty
            rectangle if the constraint is not currently visible because the origin
            or destination activity is not visible.
            </returns>
            <seealso cref="M:NickLee.Views.Gantt.Web.UI.ActivitySheet.GetActivityBounds(NickLee.Views.Gantt.Data.IActivity)" />
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ActivitySheet.GetRowIndex(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Gets the index of the row that displays the specified activity.
            </summary>
            <param name="activity">An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to compute the index.</param>
            <returns>The index of the row that displays the specified activity or -1 if
            the specified activity is not displayed in any row.
            </returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Web.UI.ActivitySheet.RenderImageMapAreas(System.Web.UI.HtmlTextWriter)">
            <summary>
            Is called to render image map areas.
            </summary>
            <param name="writer">The writer in which to put the image map areas.</param>
            <remarks>The implementation of this method creates image map areas to display
            tooltips for visible activities.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.ActivityToolTip" />
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.ActivitySheet.DrawConstraintLink">
            <summary>
            Occurs when the activity sheet draws constraint links in owner draw mode.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Gantt.Web.UI.ActivitySheet.ConstraintsOwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows an event handler
            listening to the <see cref="E:NickLee.Views.Gantt.Windows.Forms.ActivitySheet.DrawConstraintLink" /> event. The event handler draws
            constraint links using a specific pen that depends on the constraint.
            </para>
            <code lang="C#">
            private void OnDrawConstraintLink(object sender, DrawConstraintLinkEventArgs e) {
            Pen pen = ComputePen(e.Constraint);
            e.DrawConstraintLink(pen, e.Brush);
            }
            </code>
            <code lang="Visual Basic">
            Private Sub OnDrawSheetRow(ByVal sender As Object, ByVal e As DrawConstraintLinkEventArgs)
            Dim pen as Pen = ComputePen(e.Constraint)
            e.DrawConstraintLink(pen, e.Brush)
            End Sub
            </code>
            </example>
        </member>
        <member name="E:NickLee.Views.Gantt.Web.UI.ActivitySheet.HitTestConstraintLink">
            <summary>
            Occurs when the activity sheet does hit testing on constraint links in owner draw mode.
            </summary>
            <remarks>This event is raised only when the <see cref="P:NickLee.Views.Gantt.Web.UI.ActivitySheet.ConstraintsOwnerDraw" /> property
            is set to <see langword="true" />.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ActivitySheet.ConstraintLinkStyle">
            <summary>
            Gets or sets the style of constraint links between activities.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Windows.Forms.ConstraintLinkStyle" /> values. The default value
            is <strong>Direct</strong>.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.ActivitySheet.ConstraintsColor" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ActivitySheet.ConstraintsColor">
            <summary>
            Gets or sets the color of constraints links.
            </summary>
            <value>A <see cref="T:System.Drawing.Color" /> that represents the color of constraints links. By
            default the value is the same as the color defined by the <see cref="P:NickLee.Views.Gantt.Web.UI.GanttSheet.ForeColor">GanttSheet.ForeColor</see> property.
            </value>
            <seealso cref="P:NickLee.Views.Gantt.Web.UI.ActivitySheet.ConstraintLinkStyle" />
        </member>
        <member name="P:NickLee.Views.Gantt.Web.UI.ActivitySheet.ConstraintsOwnerDraw">
            <summary>
            Gets or sets a value indicating whether the code that you
            provide draws the constraint links or not.
            </summary>
            <value>
            <see langword="true" /> if constraint links are to be drawn using custom user
            code; <see langword="false" /> otherwise.
            </value>
            <remarks>
            <p>When the <strong>ConstraintsOwnerDraw</strong> property is set to <see langword="true" />,
            you need to handle the drawing and hit testing of constraint links.
            Use the <see cref="E:NickLee.Views.Gantt.Web.UI.ActivitySheet.DrawConstraintLink" /> event to handle the drawing of
            constraint links.
            Use the <see cref="E:NickLee.Views.Gantt.Web.UI.ActivitySheet.HitTestConstraintLink" /> event to handle the hit testing of
            constraint links.
            </p>
            <p>When the <strong>ConstraintsOwnerDraw</strong> property is set to <see langword="false" />,
            the <strong>DrawConstraintLink</strong> and <strong>HitTestConstraintLink</strong> events are not raised.</p>
            </remarks>
            <seealso cref="E:NickLee.Views.Gantt.Web.UI.ActivitySheet.DrawConstraintLink" />
            <seealso cref="E:NickLee.Views.Gantt.Web.UI.ActivitySheet.HitTestConstraintLink" />
        </member>
        <member name="T:NickLee.Views.Gantt.TimeLineChangeEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Gantt.ITimeLine.TimeLineChanging" /> and
            <see cref="E:NickLee.Views.Gantt.ITimeLine.TimeLineChanged" /> events of an <see cref="T:NickLee.Views.Gantt.ITimeLine" />.
            </summary>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to handle the
            <strong>ITimeLine.TimeLineChanged</strong> event.
            </para>
            <code lang="C#">
            LinearTimeLine timeLine = new LinearTimeLine();
            timeLine.TimeLineChanged += new TimeLineChangeEventHandler(TimeLineChanged);

            private void TimeLineHasChanged(object sender, TimeLineChangeEventArgs args) {
            if (args.EventType == TimeLineEventType.FirstVisibleTimeChanged) {
            Console.WriteLine("The new first visible time is : " + args.FirstVisibleTime.ToString());
            } else {
            Console.WriteLine("The time line conversion has changed");
            }
            }
            </code>
            <code lang="Visual Basic">
            Dim WithEvents timeLine As new LinearTimeLine

            Private Sub TimeLineHasChanged(ByVal sender As Object, ByVal args As NickLee.Views.Gantt.TimeLineChangeEventArgs) Handles timeLine.TimeLineChanged
            If args.EventType = NickLee.Views.Gantt.TimeLineEventType.FirstVisibleTimeChanged Then
            Console.WriteLine("The new first visible time is : " + args.FirstVisibleTime.ToString())
            Else
            Console.WriteLine("The time line conversion has changed")
            End If
            End Sub
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.TimeLineChangeEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.TimeLineChangeEventArgs" /> class, notifying
            that the conversion method has changed.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.TimeLineChangeEventArgs.#ctor(System.DateTime)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.TimeLineChangeEventArgs" /> class, notifying
            a change of the first visible time.
            </summary>
            <param name="time">The new first visible time.</param>
        </member>
        <member name="P:NickLee.Views.Gantt.TimeLineChangeEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the operation should be canceled.
            </summary>
            <value><see langword="true" /> if the operation should be canceled; otherwise
            <see langword="false" />. The default value is <see langword="false" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.TimeLineChangeEventArgs.EventType">
            <summary>
            Gets the type of event that occurred on the time line.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.TimeLineEventType" /> value that represents the
            type of event that occurred on the time line.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.TimeLineChangeEventArgs.FirstVisibleTime">
            <summary>
            Gets or sets the new first visible time of the time line.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure that represents the new first
            visible time of the time line. </value>
        </member>
        <member name="T:NickLee.Views.Gantt.DateTimeInterval">
            <summary>
            Defines a time interval.
            </summary>
            <remarks>
            <p>The time interval is defined by a start time (see <see cref="P:NickLee.Views.Gantt.DateTimeInterval.Start" />) and a
            duration (see <see cref="P:NickLee.Views.Gantt.DateTimeInterval.Duration" />).</p>
            <p><strong>DateTimeInterval</strong> implements <see cref="T:System.IFormattable" />. To see the
            supported formats, see <see cref="M:NickLee.Views.Gantt.DateTimeInterval.ToString(System.String,System.IFormatProvider)" />.</p>
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to create several <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> objects.
            </para>
            <code lang="C#">
            DateTimeInterval interval1 = new DateTimeInterval(DateTime.Now, TimeSpan.FromDays(1));
            DateTimeInterval interval2 = new DateTimeInterval(interval1.End, TimeSpan.FromDays(1));
            if (interval1.Overlaps(interval2))
            Console.WriteLine("interval1 and interval2 are overlaping.");
            </code>
            <code lang="Visual Basic">
            Dim interval1 As New DateTimeInterval(DateTime.Now, TimeSpan.FromDays(1))
            Dim interval2 As New DateTimeInterval(interval1.End, TimeSpan.FromDays(1))
            If interval1.Overlaps(interval2) Then
            Console.WriteLine("interval1 and interval2 are overlaping.")
            End If
            </code>
            </example>
        </member>
        <member name="F:NickLee.Views.Gantt.DateTimeInterval.Empty">
            <summary>
            Defines a time interval with an empty duration.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.DateTimeInterval._start">
            <summary>
            The start of the time interval.
            </summary>
        </member>
        <member name="F:NickLee.Views.Gantt.DateTimeInterval._duration">
            <summary>
            The duration of the time interval.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.DateTimeInterval.#ctor(System.DateTime,System.DateTime)">
            <overloads>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> class.
            </overloads>
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> class with the specified
            start and end times.
            </summary>
            <param name="startTime">A <see cref="T:System.DateTime" /> structure that defines the interval start time.</param>
            <param name="endTime">A <see cref="T:System.DateTime" /> structure that defines the interval end time.</param>
            <remarks>
            If the end time is inferior than the start time, the values will be silently
            swapped and <paramref name="startTime" /> becomes the new start
            time of the interval and <paramref name="endTime" /> becomes the new end time of the interval.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to create several <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> objects.
            </para>
            <code lang="C#">
            DateTimeInterval interval1 = new DateTimeInterval(DateTime.Now, TimeSpan.FromDays(1));
            DateTimeInterval interval2 = new DateTimeInterval(interval1.End, TimeSpan.FromDays(1));
            if (interval1.Overlaps(interval2))
            Console.WriteLine("interval1 and interval2 are overlaping.");
            </code>
            <code lang="Visual Basic">
            Dim interval1 As New DateTimeInterval(DateTime.Now, TimeSpan.FromDays(1))
            Dim interval2 As New DateTimeInterval(interval1.End, TimeSpan.FromDays(1))
            If interval1.Overlaps(interval2) Then
            Console.WriteLine("interval1 and interval2 are overlaping.")
            End If
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.DateTimeInterval.#ctor(System.DateTime,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> class with the specified start time and duration.
            </summary>
            <param name="startTime">A <see cref="T:System.DateTime" /> that defines the interval start time.</param>
            <param name="duration">A <see cref="T:System.TimeSpan" /> that defines the interval duration. The value must not be negative.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration" /> is negative.</exception>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to create several <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> objects.
            </para>
            <code lang="C#">
            DateTimeInterval interval1 = new DateTimeInterval(DateTime.Now, TimeSpan.FromDays(1));
            DateTimeInterval interval2 = new DateTimeInterval(interval1.End, TimeSpan.FromDays(1));
            if (interval1.Overlaps(interval2))
            Console.WriteLine("interval1 and interval2 are overlaping.");
            </code>
            <code lang="Visual Basic">
            Dim interval1 As New DateTimeInterval(DateTime.Now, TimeSpan.FromDays(1))
            Dim interval2 As New DateTimeInterval(interval1.End, TimeSpan.FromDays(1))
            If interval1.Overlaps(interval2) Then
            Console.WriteLine("interval1 and interval2 are overlaping.")
            End If
            </code>
            </example>
        </member>
        <member name="M:NickLee.Views.Gantt.DateTimeInterval.Clone">
            <summary>
            Creates a copy of this time interval.
            </summary>
            <returns>A copy of this time interval.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.DateTimeInterval.SetInterval(System.DateTime,System.DateTime)">
            <summary>
            Sets the start- and end-times of the interval.
            </summary>
            <param name="startTime">A <see cref="T:System.DateTime" /> object that defines the start time of the interval.</param>
            <param name="endTime">A <see cref="T:System.DateTime" /> object that defines the end time of the interval.</param>
            <remarks>
            If the end time is inferior than the start time, the values will be silently
            swapped and <paramref name="startTime" /> becomes the new start
            time of the interval and <paramref name="endTime" /> becomes the new end time of the interval.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.DateTimeInterval.Start" />
            <seealso cref="P:NickLee.Views.Gantt.DateTimeInterval.Duration" />
        </member>
        <member name="M:NickLee.Views.Gantt.DateTimeInterval.SetInterval(System.DateTime,System.TimeSpan)">
            <summary>
            Sets the interval start time and duration.
            </summary>
            <param name="startTime">A <see cref="T:System.DateTime" /> object that defines the start time of the interval.</param>
            <param name="duration">A <see cref="T:System.TimeSpan" /> that defines the interval duration. The value must not be negative.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="duration" /> is negative.</exception>
            <seealso cref="P:NickLee.Views.Gantt.DateTimeInterval.Start" />
            <seealso cref="P:NickLee.Views.Gantt.DateTimeInterval.Duration" />
        </member>
        <member name="M:NickLee.Views.Gantt.DateTimeInterval.Equals(System.Object)">
            <summary>
            Returns whether an object is logically equal to this interval.
            </summary>
            <remarks>
            The result will be <see langword="true" /> if the argument is
            a <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> object that represents the same
            period of time as this interval.
            </remarks>
            <param name="obj">The object to compare with.</param>
            <returns><see langword="true" /> if the objects are the same; otherwise,
            <see langword="false" />.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.DateTimeInterval.GetHashCode">
            <summary>
            Gets the hash code for the time interval.
            </summary>
            <returns>The hash code for the time interval.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.DateTimeInterval.Union(NickLee.Views.Gantt.DateTimeInterval)">
            <summary>
            Computes the union of this time interval and the specified time interval and
            stores the result in this time interval.
            </summary>
            <param name="interval">A <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> to compute the union with.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.DateTimeInterval.Overlaps(NickLee.Views.Gantt.DateTimeInterval)">
            <summary>
            Tests if the time interval overlaps another time interval.
            </summary>
            <param name="interval">A <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> to test with.</param>
            <returns><see langword="true" /> if the time interval overlaps the
            specified interval; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.DateTimeInterval.Contains(NickLee.Views.Gantt.DateTimeInterval)">
            <summary>
            Tests if the time interval contains another time interval.
            </summary>
            <param name="interval">A <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> to test with.</param>
            <returns><see langword="true" /> if the time interval contains the
            specified interval; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.DateTimeInterval.Contains(System.DateTime)">
            <summary>
            Tests if the time interval contains a time.
            </summary>
            <param name="time">A <see cref="T:System.DateTime" /> to test with.</param>
            <returns><see langword="true" /> if the time interval contains the
            specified time; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.DateTimeInterval.op_Equality(NickLee.Views.Gantt.DateTimeInterval,NickLee.Views.Gantt.DateTimeInterval)">
            <summary>
            This operator compares two <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> objects for equality.
            </summary>
            <param name="interval1">The first interval to compare.</param>
            <param name="interval2">The second interval to compare.</param>
            <returns><see langword="true" /> if the time intervals are equal;
            <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.DateTimeInterval.op_Inequality(NickLee.Views.Gantt.DateTimeInterval,NickLee.Views.Gantt.DateTimeInterval)">
            <summary>
            This operator compares two <see cref="T:NickLee.Views.Gantt.DateTimeInterval" /> objects for inequality.
            </summary>
            <param name="interval1">The first interval to compare.</param>
            <param name="interval2">The second interval to compare.</param>
            <returns><see langword="true" /> if the time intervals are different;
            <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.DateTimeInterval.IsEmpty">
            <summary>
            Tests if this time interval is empty.
            </summary>
            <returns><see langword="true" /> if this time interval is empty;
            <see langword="false" /> otherwise.</returns>
            <remarks>An empty interval is an interval whose start date is <strong>DateTime.MinValue</strong>
            and whose duration is zero.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.DateTimeInterval.ToString">
            <summary>
            This member overrides <see cref="M:System.Object.ToString">Object.ToString</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.DateTimeInterval.ToString(System.String)">
            <summary>
            Formats the string using the specified format.
            </summary>
            <param name="format">The format used to format the string.</param>
            <returns>The string representation of this object.</returns>
            <remarks>
            To see the supported formats, see <see cref="M:NickLee.Views.Gantt.DateTimeInterval.ToString(System.String,System.IFormatProvider)" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.DateTimeInterval.ToString(System.IFormatProvider)">
            <summary>
            Formats the string using the specified <see cref="T:System.IFormatProvider" />.
            </summary>
            <param name="formatProvider">The format provider used to format the string.</param>
            <returns>The string representation of this object.</returns>
            <remarks>
            To see the supported formats, see <see cref="M:NickLee.Views.Gantt.DateTimeInterval.ToString(System.String,System.IFormatProvider)" />.
            </remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.DateTimeInterval.ToString(System.String,System.IFormatProvider)">
            <summary>
            Formats the string using the specified format and <see cref="T:System.IFormatProvider" />.
            </summary>
            <param name="format">The format used to format the string.</param>
            <param name="formatProvider">The format provider used to format the string.</param>
            <returns>The string representation of this object.</returns>
            <remarks>The pattern of the supported formats is:<br /><br />c[format]<br /><br />
            <strong>c</strong> is the selector and <strong>format</strong> is an optional format.
            The selector lets choose the part of the time interval that will be converted to a string.
            Valid characters are:<br /><br />
            <ul>
            <li>s :to select the start time of the interval.</li>
            <li>e :to select the end time of the interval.</li>
            <li>d :to select the duration the interval.</li>
            <li>Any other character: to select the whole interval.</li>
            </ul>
            <br />
            The format is an optional string that formats the value selected by the selector. For
            example, if the selector is <strong>s</strong>, the format is the format used for
            <see cref="T:System.DateTime" /> structures. See <see cref="T:System.Globalization.DateTimeFormatInfo" /> for details.
            </remarks>
            <example>
            <para lang="C#,Visual Basic">The following code sample shows how to format a
            <strong>DateTimeInterval</strong> object.
            </para>
            <code lang="C#">
            DateTimeInterval interval = new DateTimeInterval(
            new DateTime(2000, 1, 1),
            TimeSpan.FromDays(2));

            // Displays the start time using the 'm' format of the DateTimeFormatInfo class.
            string str = interval.ToString("sm");
            System.Console.WriteLine(str);

            // Displays the whole interval using the 'g' format of the DateTimeFormatInfo class.
            str = interval.ToString("ag");
            System.Console.WriteLine(str);
            </code>
            <code lang="Visual Basic">
            Dim interval As New DateTimeInterval(
            New DateTime(2000, 1, 1),
            TimeSpan.FromDays(2))

            ' Displays the start time using the 'm' format of the DateTimeFormatInfo class.
            Dim str As String = interval.ToString("sm")
            System.Console.WriteLine(str)

            ' Displays the whole interval using the 'g' format of the DateTimeFormatInfo class.
            str = interval.ToString("ag")
            System.Console.WriteLine(str)
            </code>
            </example>
        </member>
        <member name="P:NickLee.Views.Gantt.DateTimeInterval.Start">
            <summary>
            Gets or sets the start time of the interval.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure.</value>
            <remarks>As the <see cref="P:NickLee.Views.Gantt.DateTimeInterval.End" /> property is computed using the <see cref="P:NickLee.Views.Gantt.DateTimeInterval.Start" /> and
            <see cref="P:NickLee.Views.Gantt.DateTimeInterval.Duration" /> properties, changing the <see cref="P:NickLee.Views.Gantt.DateTimeInterval.Start" /> property also changes
            the <see cref="P:NickLee.Views.Gantt.DateTimeInterval.End" /> property.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.DateTimeInterval.End" />
            <seealso cref="P:NickLee.Views.Gantt.DateTimeInterval.Duration" />
        </member>
        <member name="P:NickLee.Views.Gantt.DateTimeInterval.End">
            <summary>
            Gets the end time of the interval.
            </summary>
            <value>A <see cref="T:System.DateTime" /> structure.</value>
            <remarks>The <strong>End</strong> property is computed using the
            <see cref="P:NickLee.Views.Gantt.DateTimeInterval.Start" /> and <see cref="P:NickLee.Views.Gantt.DateTimeInterval.Duration" /> properties.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.DateTimeInterval.Start" />
            <seealso cref="P:NickLee.Views.Gantt.DateTimeInterval.Duration" />
        </member>
        <member name="P:NickLee.Views.Gantt.DateTimeInterval.Duration">
            <summary>
            Gets or sets the interval duration.
            </summary>
            <value>A <see cref="T:System.TimeSpan" /> structure.</value>
            <exception cref="T:System.ArgumentException">The property value is negative.</exception>
            <remarks>As the <see cref="P:NickLee.Views.Gantt.DateTimeInterval.End" /> property is computed using the <see cref="P:NickLee.Views.Gantt.DateTimeInterval.Start" /> and
            <strong>Duration</strong> properties, changing the <strong>Duration</strong> property also
            changes the <strong>End</strong> property.
            </remarks>
            <seealso cref="P:NickLee.Views.Gantt.DateTimeInterval.Start" />
            <seealso cref="P:NickLee.Views.Gantt.DateTimeInterval.End" />
        </member>
        <member name="T:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs">
            <summary>
            Provides data for the <see cref="E:NickLee.Views.Gantt.Data.IGanttModel.ReservationsChanging" /> and
            <see cref="E:NickLee.Views.Gantt.Data.IGanttModel.ReservationsChanged" /> events of an <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs" /> class, notifying
            that all the reservations of the Gantt model have been changed.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs.#ctor(NickLee.Views.Gantt.Data.IReservation,NickLee.Views.Gantt.Data.ReservationsAction)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs" /> class.
            </summary>
            <param name="reservation">The <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> on which the action was taken.</param>
            <param name="action">The <see cref="T:NickLee.Views.Gantt.Data.ReservationsAction" /> that causes the event.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs.#ctor(NickLee.Views.Gantt.Data.IReservation[],NickLee.Views.Gantt.Data.ReservationsAction)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs" /> class.
            </summary>
            <param name="reservations">The array of <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> objects on which the
            action was taken.</param>
            <param name="action">The <see cref="T:NickLee.Views.Gantt.Data.ReservationsAction" /> that causes the event.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs.#ctor(NickLee.Views.Gantt.Data.IReservation,System.String,System.Object,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs" /> class, notifying
            that the specified reservation had one of its property changed.
            </summary>
            <param name="reservation">The reservation that has been changed.</param>
            <param name="propertyName">The property that has been changed, or <see langword="null" /> to
            specify that all the properties have been changed.</param>
            <param name="value">The new value of the property.</param>
            <param name="oldValue">The old value of the property.</param>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs.Action">
            <summary>
            Gets the action that has occurred on the reservations of the Gantt model.
            </summary>
            <value>One of the <see cref="T:NickLee.Views.Gantt.Data.ReservationsAction" /> values.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the operation should be canceled.
            </summary>
            <value><see langword="true" /> if the operation should be canceled;
            <see langword="false" /> otherwise. The default value is <see langword="false" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs.OldValue">
            <summary>
            Gets the old value of the property that has changed.
            </summary>
            <value>An <see cref="T:System.Object" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs.Property">
            <summary>
            Gets the property that has changed.
            </summary>
            <value>A <see cref="T:System.String" /> that represents the property that has
            changed on the <see cref="T:NickLee.Views.Gantt.Data.IReservation" />.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs.Reservation">
            <summary>
            Gets the reservation upon which an action has occurred.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> instance, or
            <see langword="null" /> if the action concerns every
            reservations in the Gantt model.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs.Reservations">
            <summary>
            Gets the constraints upon which an action has occurred.
            </summary>
            <value>An array of <see cref="T:NickLee.Views.Gantt.Data.IReservation" /> objects.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs.Synthetic">
            <summary>
            Gets or sets a value indicating whether the operation is synthetic.
            </summary>
            <value><see langword="true" /> if the operation is synthetic;
            <see langword="false" /> otherwise. The default value is <see langword="false" />.</value>
            <remarks>A synthetic event is not recorded by the <see cref="T:NickLee.Views.Gantt.Data.GanttModelUndoManager" />.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.ReservationsChangeEventArgs.Value">
            <summary>
            Gets or sets the new value of the property that has changed.
            </summary>
            <value>An <see cref="T:System.Object" /> instance.</value>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.ConstraintsChangeEventHandler">
            <summary>
            Represents the method that will handle the <see cref="E:NickLee.Views.Gantt.Data.IGanttModel.ConstraintsChanging" /> and
            <see cref="E:NickLee.Views.Gantt.Data.IGanttModel.ConstraintsChanged" /> events of a <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" />.
            </summary>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.BaseReadOnlyReservationCollection">
            <summary>
            Defines a read-only collection of <see cref="T:NickLee.Views.Gantt.Data.BaseReservation" /> objects.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReadOnlyReservationCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.BaseReadOnlyReservationCollection" /> class.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReadOnlyReservationCollection.ToString">
            <summary>
            This member overrides <see cref="M:System.Object.ToString">Object.ToString</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReadOnlyReservationCollection.ToString(System.IFormatProvider)">
            <summary>
            Formats the string using the specified <see cref="T:System.IFormatProvider" />.
            </summary>
            <param name="formatProvider">The format provider used to format the string.</param>
            <returns>The string representation of this object.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReadOnlyReservationCollection.ToString(System.String)">
            <summary>
            Formats the string using the specified format.
            </summary>
            <param name="format">The format used to format the string.</param>
            <returns>The string representation of this object.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseReadOnlyReservationCollection.ToString(System.String,System.IFormatProvider)">
            <summary>
            Formats the string using the specified format and <see cref="T:System.IFormatProvider" />.
            </summary>
            <param name="format">The format used to format the string.</param>
            <param name="formatProvider">The format provider used to format the string.</param>
            <returns>The string representation of this object.</returns>
        </member>
        <member name="T:NickLee.Views.Gantt.Data.BaseActivityCollection">
            <summary>
            Defines a collection of <see cref="T:NickLee.Views.Gantt.Data.BaseActivity" /> objects.
            </summary>
            <remarks>This class is used by the <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModel" /> class.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.#ctor(NickLee.Views.Gantt.Data.BaseActivity)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.BaseActivityCollection" /> class.
            </summary>
            <param name="activity">The parent activity for the collection.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.#ctor(NickLee.Views.Gantt.Data.BaseGanttModel)">
            <summary>
            Initializes a new instance of the <see cref="T:NickLee.Views.Gantt.Data.BaseActivityCollection" /> class.
            </summary>
            <param name="model">The Gantt data model for the collection.</param>
            <remarks>This constructor is only used by the Gantt data model to create the
            root activity collection.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.Add(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Adds the specified activity at the end of the collection.
            </summary>
            <param name="activity">The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to add.</param>
            <returns>The zero-based index of the position of the inserted activity.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.AddRange(NickLee.Views.Gantt.Data.IActivity[])">
            <summary>
            Adds the specified activities at the end of the collection.
            </summary>
            <param name="activities">An array of <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> objects to add.</param>
            <returns>The zero-based index of the position of the inserted activities.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.Contains(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Determines if the specified <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> is a member of the collection.
            </summary>
            <param name="activity">The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to locate in the collection.</param>
            <returns><see langword="true" /> if the <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> is a member of the collection;
            <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.NickLee#Views#Gantt#Data#IActivityCollection#RemoveRange(System.Int32,System.Int32)">
            <summary>
            Defines a collection of <see cref="T:NickLee.Views.Gantt.Data.BaseActivity" /> objects.
            </summary>
            <remarks>This class is used by the <see cref="T:NickLee.Views.Gantt.Data.BaseGanttModel" /> class.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.IndexOf(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Retrieves the index of a specific activity in the collection.
            </summary>
            <param name="activity">The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to locate in the collection.</param>
            <returns>The zero-based index of the activity found in the collection;
            <strong>-1</strong> otherwise.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.Insert(System.Int32,NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Inserts an activity into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="activity" /> should be inserted.</param>
            <param name="activity">The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to insert.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.InsertRange(System.Int32,NickLee.Views.Gantt.Data.IActivity[])">
            <summary>
            Inserts activities into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which the new activities should be inserted.</param>
            <param name="activities">An array of the activities to insert.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.OnActivityCollectionChanged(NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)">
            <summary>
            Notifies the Gantt data model that the collection has changed.
            </summary>
            <param name="e">An <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> that contains the event data.</param>
            <remarks>This method must be called each time the collection has changed.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.OnActivityCollectionChanging(NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs)">
            <summary>
            Notifies the Gantt data model that the collection is changing.
            </summary>
            <param name="e">An <see cref="T:NickLee.Views.Gantt.Data.ActivitiesChangeEventArgs" /> that contains the event data.</param>
            <remarks>This method must be called each time the collection is changing.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.OnClear">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnClear">CollectionBase.OnClear</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.OnClearComplete">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnClearComplete">CollectionBase.OnClearComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)">CollectionBase.OnInsert</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnInsertComplete(System.Int32,System.Object)">CollectionBase.OnInsertComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.OnInsertRange(System.Int32,System.Collections.ICollection)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Util.Collections.SimpleCollectionBase.OnInsertRange(System.Int32,System.Collections.ICollection)">SimpleCollectionBase.OnInsertRange</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.OnInsertRangeComplete(System.Int32,System.Collections.ICollection)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Util.Collections.SimpleCollectionBase.OnInsertRangeComplete(System.Int32,System.Collections.ICollection)">SimpleCollectionBase.OnInsertRangeComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.OnMove(System.Int32,System.Int32)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Util.Collections.SimpleCollectionBase.OnMove(System.Int32,System.Int32)">SimpleCollectionBase.OnMove</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.OnMoveComplete(System.Int32,System.Int32)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Util.Collections.SimpleCollectionBase.OnMoveComplete(System.Int32,System.Int32)">SimpleCollectionBase.OnMoveComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.OnRemove(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)">CollectionBase.OnRemove</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)">CollectionBase.OnRemoveComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.OnRemoveRange(System.Int32,System.Collections.ICollection)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Util.Collections.SimpleCollectionBase.OnRemoveRange(System.Int32,System.Collections.ICollection)">SimpleCollectionBase.OnRemoveRange</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.OnRemoveRangeComplete(System.Int32,System.Collections.ICollection)">
            <summary>
            This member overrides <see cref="M:NickLee.Views.Util.Collections.SimpleCollectionBase.OnRemoveRangeComplete(System.Int32,System.Collections.ICollection)">SimpleCollectionBase.OnRemoveRangeComplete</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.OnValidate(System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)">CollectionBase.OnValidate</see>.
            </summary>
            <exception cref="T:System.InvalidCastException"><paramref name="value" /> is not a
            <see cref="T:NickLee.Views.Gantt.Data.BaseActivity" />.</exception>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.Remove(NickLee.Views.Gantt.Data.IActivity)">
            <summary>
            Removes the specified activity from the collection.
            </summary>
            <param name="activity">The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> to remove.</param>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.ToString">
            <summary>
            This member overrides <see cref="M:System.Object.ToString">Object.ToString</see>.
            </summary>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.ToString(System.IFormatProvider)">
            <summary>
            Formats the string using the specified <see cref="T:System.IFormatProvider" />.
            </summary>
            <param name="formatProvider">The format provider used to format the string.</param>
            <returns>The string representation of this object.</returns>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.ToString(System.String)">
            <summary>
            Formats the string using the specified format.
            </summary>
            <param name="format">The format used to format the string.</param>
            <returns>The string representation of this object.</returns>
            <remarks>This method returns the concatenation of the child activities separated by a
            comma. If <paramref name="format" /> is <strong>i</strong> or <strong>I</strong>, the identifier is used to
            represent an activity; otherwise, its name is used.</remarks>
        </member>
        <member name="M:NickLee.Views.Gantt.Data.BaseActivityCollection.ToString(System.String,System.IFormatProvider)">
            <summary>
            Formats the string using the specified format and <see cref="T:System.IFormatProvider" />.
            </summary>
            <param name="format">The format used to format the string.</param>
            <param name="formatProvider">The format provider used to format the string.</param>
            <returns>The string representation of this object.</returns>
            <remarks>This method returns the concatenation of the child activities separated by a
            comma. If <paramref name="format" /> is <strong>i</strong> or <strong>I</strong>, the identifier is used to
            represent an activity; otherwise, its name is used.</remarks>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseActivityCollection.Activity">
            <summary>
            Gets the activity that owns the collection.
            </summary>
            <value>An <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> instance, or <see langword="null" />
            if the collection is the root collection in the Gantt data model.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseActivityCollection.GanttModel">
            <summary>
            Gets the Gantt data model to which this collection belongs.
            </summary>
            <value>A <see cref="T:NickLee.Views.Gantt.Data.IGanttModel" /> instance.</value>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseActivityCollection.InnerList">
            <summary>
            This member overrides <see cref="P:System.Collections.CollectionBase.InnerList">CollectionBase.InnerList</see>.
            </summary>
        </member>
        <member name="P:NickLee.Views.Gantt.Data.BaseActivityCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> at the specified indexed location in the collection.
            </summary>
            <param name="index">The zero-based index of the activity to get.</param>
            <value>The <see cref="T:NickLee.Views.Gantt.Data.IActivity" /> at the specified index.</value>
        </member>
    </members>
</doc>
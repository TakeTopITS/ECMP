<DataBaseUpgradeFiles>
  <DataBaseUpgradeFile>
    <ID>3295</ID>
    <SQLText>Select * From T_JNUnit</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3296</ID>
    <SQLText>
			-- FUNCTION: public.Func_tg_ImplePlan_Insert()

			-- DROP FUNCTION public."Func_tg_ImplePlan_Insert"();

			CREATE OR REPLACE FUNCTION public."Func_tg_ImplePlan_Insert"()
			RETURNS trigger
			LANGUAGE 'plpgsql'
			COST 100
			VOLATILE NOT LEAKPROOF
			AS $BODY$
			declare charCreatorCode char(20);
			declare charPlanOperatorCode char(20);
			declare charPlanOperatorName char(20);
			declare charBelongDepartCode char(20);
			declare charBelongDepartName varchar(40);
			declare charLeaderCode char(20);
			declare charLeaderName char(20);

			begin
			select rtrim(COALESCE(new.OperatorCode,'')),rtrim(COALESCE(new.OperatorName,'')),rtrim(COALESCE(new.BelongDepartCode,''))
			,rtrim(COALESCE(new.BelongDepartName,'')),rtrim(COALESCE(new.LeaderCode,'')),rtrim(COALESCE(new.leader,''))
			into charPlanOperatorCode,charPlanOperatorName,charBelongDepartCode ,charBelongDepartName,charLeaderCode,charLeaderName;

			--更新归属部门代码和名称
			if  length(charLeaderCode) &gt; 0  then

			select DepartCode,DepartName into charBelongDepartCode,charBelongDepartName From T_ProjectMember  Where UserCode = charLeaderCode;
			Update T_ImplePlan Set BelongDepartCode = charBelongDepartCode,BelongDepartName = charBelongDepartName Where ID = new.ID;

			End if;

			--增加小时，纠正日期
			update T_ImplePlan Set end_date = timeadd('hour',23, end_date) Where ID = new.ID and date_part('hour',end_date) = 0;

			--改变基准时间段和单位的值
			update T_ImplePlan Set BaseLine_Start_Date = new.Start_Date,BaseLine_End_Date = new.End_Date Where ID = new.ID;
			update T_ImplePlan Set Duration = F_WorkDay(new.Start_Date,new.End_Date)+1,Duration_Unit='d' Where ID = new.ID;

			if(new.ProjectID = 0 or new.ProjectID = null)
			then

			Select cast(substring(ltrim(rtrim(cast(new.PID as char(50)))) from 0  for char_length(ltrim(rtrim(cast(new.PID as char(50)))))-1) as int) into new.ProjectID;
			Select cast(substring(ltrim(rtrim(cast(new.PID as char(50)))) from char_length(ltrim(rtrim(cast (new.PID as char(50)))))-1 for 2) as int) into new.VerID;

			-- 		  --增加小时，纠正日期
			-- 		  update T_ImplePlan Set end_date = timeadd('hour',23, end_date) Where ID = new.ID and date_part('hour',end_date) = 0;

			-- 		  --改变基准时间段和单位的值
			-- 		  update T_ImplePlan Set BaseLine_Start_Date = new.Start_Date,BaseLine_End_Date = new.End_Date Where ID = new.ID;
			-- 		  update T_ImplePlan Set Duration = F_WorkDay(new.Start_Date,new.End_Date)+1,Duration_Unit='d' Where ID = new.ID;

			Update T_ImplePlan Set ProjectID = new.ProjectID Where ID = new.ID;
			Update T_ImplePlan Set VerID = new.VerID   Where ID = new.ID;

			Select CreatorCode into charCreatorCode From T_ProjectPlanVersion Where ProjectID = new.ProjectID and VerID = new.VerID;

			Update T_ImplePlan Set UpdateManCode = charCreatorCode  Where ID = new.ID;
			Update T_ImplePlan Set CreatorCode = charCreatorCode  Where ID = new.ID;

			Update T_ImplePlan Set Type = '计划'  Where ID = new.ID;
			Update T_ImplePlan Set Status = '计划'  Where ID = new.ID;
			Update T_ImplePlan Set PriorID = 0 Where Id = new.ID;
			Update T_ImplePlan Set FromPlanID = new.ID Where ID = new.ID;

			if(charPlanOperatorCode = null Or charPlanOperatorCode = '')
			then

			Select PMCode,PMName into charPlanOperatorCode , charPlanOperatorName From T_Project Where ProjectID = new.ProjectID;
			Update T_ImplePlan Set OperatorCode = charPlanOperatorCode,OperatorName =charPlanOperatorName Where ID = new.ID;

			end if;

			end if;

			return new;
			end
			$BODY$;

			ALTER FUNCTION public."Func_tg_ImplePlan_Insert"()
			OWNER TO postgres;
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3297</ID>
    <SQLText>
			-- FUNCTION: public.Func_tg_ImplePlan_Insert()

			-- DROP FUNCTION public."Func_tg_ImplePlan_Insert"();

			CREATE OR REPLACE FUNCTION public."Func_tg_ImplePlan_Insert"()
			RETURNS trigger
			LANGUAGE 'plpgsql'
			COST 100
			VOLATILE NOT LEAKPROOF
			AS $BODY$
			declare charCreatorCode char(20);
			declare charPlanOperatorCode char(20);
			declare charPlanOperatorName char(20);
			declare charBelongDepartCode char(20);
			declare charBelongDepartName varchar(40);
			declare charLeaderCode char(20);
			declare charLeaderName char(20);

			begin
			select rtrim(COALESCE(new.OperatorCode,'')),rtrim(COALESCE(new.OperatorName,'')),rtrim(COALESCE(new.BelongDepartCode,''))
			,rtrim(COALESCE(new.BelongDepartName,'')),rtrim(COALESCE(new.LeaderCode,'')),rtrim(COALESCE(new.leader,''))
			into charPlanOperatorCode,charPlanOperatorName,charBelongDepartCode ,charBelongDepartName,charLeaderCode,charLeaderName;

			--更新归属部门代码和名称
			if  length(charLeaderCode) &gt; 0  then

			select DepartCode,DepartName into charBelongDepartCode,charBelongDepartName From T_ProjectMember  Where UserCode = charLeaderCode;
			Update T_ImplePlan Set BelongDepartCode = charBelongDepartCode,BelongDepartName = charBelongDepartName Where ID = new.ID;

			End if;

			--增加小时，纠正日期
			update T_ImplePlan Set end_date = timeadd('hour',23, end_date) Where ID = new.ID and date_part('hour',end_date) = 0;

			--改变基准时间段和单位的值
			update T_ImplePlan Set BaseLine_Start_Date = new.Start_Date,BaseLine_End_Date = new.End_Date Where ID = new.ID;
			update T_ImplePlan Set Duration = F_WorkDay(new.Start_Date,new.End_Date)+1,Duration_Unit='d' Where ID = new.ID;

			if(new.ProjectID = 0 or new.ProjectID = null)
			then

			Select cast(substring(ltrim(rtrim(cast(new.PID as char(50)))) from 0  for char_length(ltrim(rtrim(cast(new.PID as char(50)))))-1) as int) into new.ProjectID;
			Select cast(substring(ltrim(rtrim(cast(new.PID as char(50)))) from char_length(ltrim(rtrim(cast (new.PID as char(50)))))-1 for 2) as int) into new.VerID;

			-- 		  --增加小时，纠正日期
			-- 		  update T_ImplePlan Set end_date = timeadd('hour',23, end_date) Where ID = new.ID and date_part('hour',end_date) = 0;

			-- 		  --改变基准时间段和单位的值
			-- 		  update T_ImplePlan Set BaseLine_Start_Date = new.Start_Date,BaseLine_End_Date = new.End_Date Where ID = new.ID;
			-- 		  update T_ImplePlan Set Duration = F_WorkDay(new.Start_Date,new.End_Date)+1,Duration_Unit='d' Where ID = new.ID;

			Update T_ImplePlan Set ProjectID = new.ProjectID Where ID = new.ID;
			Update T_ImplePlan Set VerID = new.VerID   Where ID = new.ID;

			Select CreatorCode into charCreatorCode From T_ProjectPlanVersion Where ProjectID = new.ProjectID and VerID = new.VerID;

			Update T_ImplePlan Set UpdateManCode = charCreatorCode  Where ID = new.ID;
			Update T_ImplePlan Set CreatorCode = charCreatorCode  Where ID = new.ID;

			Update T_ImplePlan Set Type = '计划'  Where ID = new.ID;
			Update T_ImplePlan Set Status = '计划'  Where ID = new.ID;
			Update T_ImplePlan Set PriorID = 0 Where Id = new.ID;
			Update T_ImplePlan Set FromPlanID = new.ID Where ID = new.ID;

			if(charPlanOperatorCode = null Or charPlanOperatorCode = '')
			then

			Select PMCode,PMName into charPlanOperatorCode , charPlanOperatorName From T_Project Where ProjectID = new.ProjectID;
			Update T_ImplePlan Set OperatorCode = charPlanOperatorCode,OperatorName =charPlanOperatorName Where ID = new.ID;

			end if;

			end if;

			return new;
			end
			$BODY$;

			ALTER FUNCTION public."Func_tg_ImplePlan_Insert"()
			OWNER TO postgres;
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3298</ID>
    <SQLText>alter table t_taskstatus alter  COLUMN  status  type character(10);</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3299</ID>
    <SQLText>Alter Table t_schedule Add Column color character(20)</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3300</ID>
    <SQLText>Update t_schedule Set color = 'green'</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3301</ID>
    <SQLText>Alter Table t_schedule Add Column "column" character(100)</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3302</ID>
    <SQLText>Update t_schedule Set "column" = ''</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3303</ID>
    <SQLText>
			ALTER TABLE t_schedule RENAME begintime TO "start";
			ALTER TABLE t_schedule RENAME endtime TO "end";
			ALTER TABLE t_schedule RENAME plantitle TO "name";
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3304</ID>
    <SQLText>ALTER TABLE t_schedule RENAME plandetail TO "detail";</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3305</ID>
    <SQLText>ALTER TABLE t_schedule RENAME plandate TO "scheduledate";</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3306</ID>
    <SQLText>ALTER TABLE t_schedule  ALTER COLUMN id SET data TYPE char(100) USING id::char(100);</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3307</ID>
    <SQLText>ALTER TABLE t_schedule RENAME scheduledate TO createdate</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3308</ID>
    <SQLText>
			Update t_promodulelevel set isdeleted = 'YES' where modulename in ('成员日程','查看所有成员日程');
			Update t_promodulelevelforpage set isdeleted = 'YES' where modulename in ('工作日程');
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3309</ID>
    <SQLText>
			--更改商品盘点视图，适合集团版----------------
			CREATE OR REPLACE View V_GoodsCheckReport
			as
			Select OwnerCode,GoodsCode,GoodsName,Type,ModelNumber,Spec,SN,UnitName, Sum(Number) As TotalNumber,Sum(Price*Number) As TotalAmount
			From T_Goods Group By OwnerCode, GoodsCode,Goodsname,Type,ModelNumber,Spec,SN,UnitName
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3310</ID>
    <SQLText>
			truncate table t_report;
			truncate table t_reporttemplate;
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3311</ID>
    <SQLText>
			CREATE OR REPLACE PROCEDURE public.pro_deleteuserauthorizationbysupermodule(
			)
			LANGUAGE 'plpgsql'
			AS $BODY$
			begin
			delete from t_promodule where rtrim(modulename)||rtrim(moduletype)||rtrim(usertype)  in (select rtrim(modulename)|| rtrim(moduletype) || rtrim(usertype) from t_promodulelevel where visible = 'no' or isdeleted = 'yes');
			delete from t_departrelatedmodule where rtrim(modulename) || rtrim(moduletype) || rtrim(usertype) in (select rtrim(modulename) || rtrim(moduletype) || rtrim(usertype) from t_promodulelevel where visible = 'no' or isdeleted = 'yes');
			end
			$BODY$;
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3312</ID>
    <SQLText>Delete from t_promodulelevelforpage where modulename = '工作日程'</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3313</ID>
    <SQLText>update t_promodulelevel set pagename = 'TTMakeDefect.aspx' where modulename = '记录缺陷'</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3314</ID>
    <SQLText>update t_promodulelevel set pagename = trim(pagename)</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3315</ID>
    <SQLText>
			update t_promodulelevel set modulename = '记录需求',homemodulename= '记录需求' where modulename = '建立和分派需求';
			update t_promodule set modulename = '记录需求' where modulename = '建立和分派需求';
			update t_promodulelevelforpage set modulename = '记录需求',homemodulename = '记录需求' where modulename = '建立和分派需求';
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3316</ID>
    <SQLText>
			Insert Into T_ProModuleLevelForPage(ModuleName,HomeModuleName,IconURL,SortNumber,PageName,UserType,ParentModule,Visible,LangCode,IsDeleted)
			Values('计划完成进度','计划完成进度','css/Images/output.png',5,'TTProjectPlanScheduleReport.aspx?ProjectID=','INNER','项目报表列表','YES','zh-CN','NO')
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3317</ID>
    <SQLText>alter table "t_projectstatus" alter  COLUMN  status  type  character(10) ;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3318</ID>
    <SQLText>
			alter table "t_wlstatus" alter COLUMN status type character(10) ;
			alter table "t_planstatus" alter COLUMN status type character(10) ;
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3319</ID>
    <SQLText>
			alter table "t_reqstatus" alter COLUMN status type character(10) ;
			alter table "t_defectstatus" alter COLUMN status type character(10) ;
			alter table "t_teststatus" alter COLUMN status type character(10) ;
			alter table "t_otherstatus" alter COLUMN status type character(10) ;
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3320</ID>
    <SQLText>
			-- FUNCTION: public.Func_tg_ImplePlan_Update()

			-- DROP FUNCTION public."Func_tg_ImplePlan_Update"();

			CREATE OR REPLACE FUNCTION public."Func_tg_ImplePlan_Update"()
			RETURNS trigger
			LANGUAGE 'plpgsql'
			COST 100
			VOLATILE NOT LEAKPROOF
			AS $BODY$
			declare chrPMCode varchar(20);
			declare chrPMName varchar(20);

			declare charBelongDepartCode char(20);
			declare charBelongDepartName varchar(40);

			declare charLeaderCode char(20);

			declare chrPlanVerType varchar(20);
			declare chrLeaderCode varchar(20);
			declare chrLeaderName varchar(20);
			declare chrProjectType char(20);
			declare chrImpactByDetail char(10);
			declare intWholePlanPercent_Done int;
			declare intParentIDGantt  int;

			begin

			--插入原来的数据作为日志
			Insert Into T_ImplePlan_UpdateLog(ID,ProjectID,WorkID,Name,Start_Date,End_Date,Resource
			,Budget
			,MakeDate
			,Status
			,ParentID
			,PriorID
			,Type
			,VerID
			,DefaultSchedule
			,DefaultCost
			,BackupID
			,LockStatus
			,UpdateManCode
			,UpdateTime
			,FromProjectID
			,FromProjectPlanVerID
			,CreatorCode
			,Percent_Done
			,priority
			,BaseLine_Start_Date
			,BaseLine_End_Date
			,Duration
			,Duration_Unit
			,Other_Field
			,Index
			,pid
			,Parent_ID
			,FromPlanID
			,OperatorCode
			,OperatorName
			,SortNumber
			,leader
			,remark
			,baseline_percent_done
			,taskcolor
			,LeaderCode
			,WorkHour
			,ActualHour
			,Expense
			,CreateLogTime
			,RequireNumber
			,FinishedNumber
			,UnitName
			,Price
			,BelongDepartCode
			,BelongDepartName) values(old.ID
			,old.ProjectID
			,old.WorkID
			,old.Name
			,old.Start_Date
			,old.End_Date
			,old.Resource
			,old.Budget
			,old.MakeDate
			,old.Status
			,old.ParentID
			,old.PriorID
			,old.Type
			,old.VerID
			,old.DefaultSchedule
			,old.DefaultCost
			,old.BackupID
			,old.LockStatus
			,old.UpdateManCode
			,old.UpdateTime
			,old.FromProjectID
			,old.FromProjectPlanVerID
			,old.CreatorCode
			,old.Percent_Done
			,old.priority
			,old.BaseLine_Start_Date
			,old.BaseLine_End_Date
			,old.Duration
			,old.Duration_Unit
			,old.Other_Field
			,old.Index
			,old.pid
			,old.Parent_ID
			,old.FromPlanID
			,old.OperatorCode
			,old.OperatorName
			,old.SortNumber
			,old.leader
			,old.remark
			,old.baseline_percent_done
			,old.taskcolor
			,old.LeaderCode
			,old.WorkHour
			,old.ActualHour
			,old.Expense
			,now()
			,old.RequireNumber
			,old.FinishedNumber
			,old.UnitName
			,old.Price
			,old.BelongDepartCode
			,old.BelongDepartName);

			select rtrim(COALESCE(new.BelongDepartCode,'')),rtrim(COALESCE(new.BelongDepartName,'')) into charBelongDepartCode,charBelongDepartName;

			Select Type into chrPlanVerType From T_ProjectPlanVersion Where ProjectID = new.ProjectID and VerID = new.VerID;

			Select Percent_Done into intWholePlanPercent_Done From T_ImplePlan Where ProjectID = new.ProjectID and VerID = new.VerID and Parent_ID = 0;

			select PMCode,PMName into chrPMCode,chrPMName From T_Project Where ProjectID = new.ProjectID;

			--更新归属部门代码和名称
			if new.leadercode != old.leadercode then

			-- 	    delete from t_sqlrunlog;
			--  	    insert into t_sqlrunlog(logcontent,createtime) values(new.leader|| '--' || old.leader,now());

			select new.leadercode into  charLeaderCode ;

			select DepartCode,DepartName into charBelongDepartCode,charBelongDepartName From T_ProjectMember  Where UserCode = charLeaderCode;
			Update T_ImplePlan Set BelongDepartCode = charBelongDepartCode,BelongDepartName = charBelongDepartName Where ID = new.ID ;

			End if;

			--依活动版计划进度更改项目总进度
			if new.percent_done!=old.percent_done then
			Select ProjectType into chrProjectType From T_Project Where ProjectID = new.ProjectID;
			Select ProgressByDetailImpact into chrImpactByDetail From T_ProjectType Where Type = chrProjectType;

			if chrImpactByDetail = 'YES' and new.parent_id = 0 and chrPlanVerType = '在用' then
			Update T_Project Set FinishPercent = intWholePlanPercent_Done Where ProjectID = new.ProjectID;
			End if;
			End if;

			--更改此计划转的任务的开始时间和结束时间
			if new.Start_Date!=old.Start_Date or new.End_Date !=old.End_Date then

			Update T_ProjectTask Set BeginDate = new.Start_Date,EndDate = new.End_Date Where PlanID = new.ID ;

			Update T_TaskAssignRecord Set BeginDate = new.Start_Date,EndDate = new.End_Date
			Where TaskID In (Select TaskID From T_ProjectTask Where PlanID = new.ID  and PriorID = 0);

			End if;

			return new;
			end
			$BODY$;

			ALTER FUNCTION public."Func_tg_ImplePlan_Update"()
			OWNER TO postgres;
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3321</ID>
    <SQLText>
			-- FUNCTION: public.Func_tg_ImplePlan_Delete()

			-- DROP FUNCTION public."Func_tg_ImplePlan_Delete"();

			CREATE OR REPLACE FUNCTION public."Func_tg_ImplePlan_Delete"()
			RETURNS trigger
			LANGUAGE 'plpgsql'
			COST 100
			VOLATILE NOT LEAKPROOF
			AS $BODY$
			begin
			Delete From T_ImplePlan Where ID in (Select ChildPlanID From F_GetAllChildPlanID(old.ID));

			return old;
			end
			$BODY$;

			ALTER FUNCTION public."Func_tg_ImplePlan_Delete"()
			OWNER TO postgres;
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3322</ID>
    <SQLText>
			-- FUNCTION: public.Func_tg_ImplePlan_Insert()

			-- DROP FUNCTION public."Func_tg_ImplePlan_Insert"();

			CREATE OR REPLACE FUNCTION public."Func_tg_ImplePlan_Insert"()
			RETURNS trigger
			LANGUAGE 'plpgsql'
			COST 100
			VOLATILE NOT LEAKPROOF
			AS $BODY$
			declare charCreatorCode char(20);
			declare charPlanOperatorCode char(20);
			declare charPlanOperatorName char(20);
			declare charBelongDepartCode char(20);
			declare charBelongDepartName varchar(40);
			declare charLeaderCode char(20);
			declare charLeaderName char(20);

			begin
			select rtrim(COALESCE(new.OperatorCode,'')),rtrim(COALESCE(new.OperatorName,'')),rtrim(COALESCE(new.BelongDepartCode,''))
			,rtrim(COALESCE(new.BelongDepartName,'')),rtrim(COALESCE(new.LeaderCode,'')),rtrim(COALESCE(new.leader,''))
			into charPlanOperatorCode,charPlanOperatorName,charBelongDepartCode ,charBelongDepartName,charLeaderCode,charLeaderName;

			--更新归属部门代码和名称
			if  length(charLeaderCode) &gt; 0  then

			select DepartCode,DepartName into charBelongDepartCode,charBelongDepartName From T_ProjectMember  Where UserCode = charLeaderCode;
			Update T_ImplePlan Set BelongDepartCode = charBelongDepartCode,BelongDepartName = charBelongDepartName Where ID = new.ID;

			End if;

			--增加小时，纠正日期
			update T_ImplePlan Set end_date = timeadd('hour',23, end_date) Where ID = new.ID and date_part('hour',end_date) = 0;

			--改变基准时间段和单位的值
			update T_ImplePlan Set BaseLine_Start_Date = new.Start_Date,BaseLine_End_Date = new.End_Date Where ID = new.ID;
			update T_ImplePlan Set Duration = F_WorkDay(new.Start_Date,new.End_Date)+1,Duration_Unit='d' Where ID = new.ID;

			if(new.ProjectID = 0 or new.ProjectID = null)
			then

			Select cast(substring(ltrim(rtrim(cast(new.PID as char(50)))) from 0  for char_length(ltrim(rtrim(cast(new.PID as char(50)))))-1) as int) into new.ProjectID;
			Select cast(substring(ltrim(rtrim(cast(new.PID as char(50)))) from char_length(ltrim(rtrim(cast (new.PID as char(50)))))-1 for 2) as int) into new.VerID;

			-- 		  --增加小时，纠正日期
			-- 		  update T_ImplePlan Set end_date = timeadd('hour',23, end_date) Where ID = new.ID and date_part('hour',end_date) = 0;

			-- 		  --改变基准时间段和单位的值
			-- 		  update T_ImplePlan Set BaseLine_Start_Date = new.Start_Date,BaseLine_End_Date = new.End_Date Where ID = new.ID;
			-- 		  update T_ImplePlan Set Duration = F_WorkDay(new.Start_Date,new.End_Date)+1,Duration_Unit='d' Where ID = new.ID;

			Update T_ImplePlan Set ProjectID = new.ProjectID Where ID = new.ID;
			Update T_ImplePlan Set VerID = new.VerID   Where ID = new.ID;

			Select CreatorCode into charCreatorCode From T_ProjectPlanVersion Where ProjectID = new.ProjectID and VerID = new.VerID;

			Update T_ImplePlan Set UpdateManCode = charCreatorCode  Where ID = new.ID;
			Update T_ImplePlan Set CreatorCode = charCreatorCode  Where ID = new.ID;

			Update T_ImplePlan Set Type = '计划'  Where ID = new.ID;
			Update T_ImplePlan Set Status = '计划'  Where ID = new.ID;
			Update T_ImplePlan Set PriorID = 0 Where Id = new.ID;
			Update T_ImplePlan Set FromPlanID = new.ID Where ID = new.ID;

			if(charPlanOperatorCode = null Or charPlanOperatorCode = '')
			then

			Select PMCode,PMName into charPlanOperatorCode , charPlanOperatorName From T_Project Where ProjectID = new.ProjectID;
			Update T_ImplePlan Set OperatorCode = charPlanOperatorCode,OperatorName =charPlanOperatorName Where ID = new.ID;

			end if;

			end if;

			return new;
			end
			$BODY$;

			ALTER FUNCTION public."Func_tg_ImplePlan_Insert"()
			OWNER TO postgres;
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3323</ID>
    <SQLText>update t_promodulelevel set pagename = 'TTUpLoadDoc.aspx' where pagename = 'TTUpLoadDoc.aspx';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3324</ID>
    <SQLText>update t_promodulelevel set pagename = 'TTUpLoadDoc.aspx' where pagename = 'TTUploadDoc.aspx';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3325</ID>
    <SQLText>
			Insert Into T_ProModuleLevelForPage(ModuleName,HomeModuleName,IconURL,SortNumber,PageName,UserType,ParentModule,Visible,LangCode,IsDeleted)
			Values('--&gt;资金预算','--&gt;资金预算','',5,'TTMakeProjectBudget.aspx?ProjectID=','INNER','主管项目第一行','YES','zh-CN','NO');

			Insert Into T_ProModuleLevelForPage(ModuleName,HomeModuleName,IconURL,SortNumber,PageName,UserType,ParentModule,Visible,LangCode,IsDeleted)
			Values('--&gt;物资预算','--&gt;物资预算','',5,'TTProjectRelatedItem.aspx?ProjectID=','INNER','主管项目第一行','YES','zh-CN','NO');
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3326</ID>
    <SQLText>
			Insert Into T_ProModuleLevelForPage(ModuleName,HomeModuleName,IconURL,SortNumber,PageName,UserType,ParentModule,Visible,LangCode,IsDeleted)
			Values('关联流程模板','关联流程模板','',12,'TTAttachWorkFlowTemplate.aspx?RelatedType=ProjectPlan&amp;RelatedID=','INNER','项目计划菜单','YES','zh-CN','NO');
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3327</ID>
    <SQLText>
			Update t_promodulelevel set pagename = 'TTTenderList.aspx' where pagename = 'TTTenderList_HYYQ.aspx';
			Update t_promodulelevel set pagename = 'TTTenderFinanceList.aspx' where pagename = 'TTTenderFinanceList_HYYQ.aspx'
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3328</ID>
    <SQLText>Update T_ProModuleLevelForPage Set ModuleName = '项目收益',HomeModuleName = '项目收益' Where ModuleName = '合同收入与费用'</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3329</ID>
    <SQLText>
			Update T_ProModuleLevel Set ModuleName = '项目收益',HomeModuleName = '项目收益' Where ModuleName = '项目收入与费用';
			Update T_ProModule Set ModuleName = '项目收益' Where ModuleName = '项目收入与费用';

			Update T_ProModuleLevel Set ModuleName = '项目收益报告',HomeModuleName = '项目收益报告' Where ModuleName = '项目收益';
			Update T_ProModule Set ModuleName = '项目收益报告' Where ModuleName = '项目收益';
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3330</ID>
    <SQLText>select setval('T_WorkFlowTStep_stepid_seq',(select max(stepid) from T_WorkFlowTStep))</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3331</ID>
    <SQLText>
			Insert Into T_ProModuleLevelForPage(ModuleName,HomeModuleName,IconURL,SortNumber,PageName,UserType,ParentModule,Visible,LangCode,IsDeleted)
			Values('计划拼接','计划拼接','',13,'TTProjectPlanJoint.aspx?PlanID=','INNER','项目计划菜单','YES','zh-CN','NO');
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3332</ID>
    <SQLText>
			Update T_ProModuleLevelForPage Set IconURL = 'css/Images/note.png' where ModuleName = '计划备注';
			Update T_ProModuleLevelForPage Set IconURL = 'css/Images/doc.png' where ModuleName = '计划文档'
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3333</ID>
    <SQLText>
			CREATE View V_GoodsMainPlanBusinessObjectMaterialData
			AS
			Select PlanVerID,PlanMRPVerID, 'SaleOrder' as RelatedType, (Select SOID From T_GoodsSaleRecord Where ID = SourceRecordID) as RelatedID,ItemCode,ItemName,ModelNumber,Specification,Brand,RequireNumber,0 as CheckOutNumber,0 as CheckInNumber,0 AS ReturnNumber,Unit From T_ItemMainPlanRelatedItemPurchasePlan Where SourceType = 'GoodsSORecord'
			Union
			Select PlanVerID,PlanMRPVerID,'SaleOrder' as RelatedType, (Select SOID From T_GoodsSaleRecord Where ID = SourceRecordID) as RelatedID,ItemCode,ItemName,ModelNumber,Specification,Brand,RequireNumber,0 as CheckOutNumber,0 as CheckInNumber,0 AS ReturnNumber,Unit From T_ItemMainPlanRelatedItemProductPlan Where SourceType = 'GoodsSORecord'
			Union

			Select PlanVerID,PlanMRPVerID,'Project' as RelatedType, (Select ProjectID From T_ProjectRelatedItem Where ID = SourceRecordID) as RelatedID,ItemCode,ItemName,ModelNumber,Specification,Brand,RequireNumber,0 as CheckOutNumber,0 as CheckInNumber,0 AS ReturnNumber,Unit From T_ItemMainPlanRelatedItemPurchasePlan Where SourceType = 'GoodsPJRecord'
			Union
			Select PlanVerID,PlanMRPVerID,'Project' as RelatedType, (Select ProjectID From T_ProjectRelatedItem Where ID = SourceRecordID) as RelatedID,ItemCode,ItemName,ModelNumber,Specification,Brand,RequireNumber,0 as CheckOutNumber,0 as CheckInNumber,0 AS ReturnNumber,Unit From T_ItemMainPlanRelatedItemProductPlan Where SourceType = 'GoodsPJRecord'
			Union

			Select PlanVerID,PlanMRPVerID,'Other' as RelatedType, 0 as RelatedID,ItemCode,ItemName,ModelNumber,Specification,Brand,RequireNumber,0 as CheckOutNumber,0 as CheckInNumber,0 AS ReturnNumber,Unit From T_ItemMainPlanRelatedItemPurchasePlan Where SourceType &lt;&gt; 'GoodsSORecord' and SourceType &lt;&gt; 'Project'
			Union
			Select PlanVerID,PlanMRPVerID,'Other' as RelatedType, 0 as RelatedID,ItemCode,ItemName,ModelNumber,Specification,Brand,RequireNumber,0 as CheckOutNumber,0 as CheckInNumber,0 AS ReturnNumber,Unit From T_ItemMainPlanRelatedItemProductPlan Where SourceType &lt;&gt; 'GoodsSORecord' and SourceType &lt;&gt; 'Project'
			Union

			Select 0,0, B.RelatedType,B.RelatedID, A.GoodsCode As ItemCode,A.GoodsName as ItemName,A.ModelNumber, A.Spec as Specification,A.manufacturer as Brand, 0 as RequireNumber,0 as CheckOutNumber,A.Number as CheckInNumber,0 as ReturnNumber,A.UnitName as Unit  From  T_GoodsCheckInOrderDetail A,T_GoodsCheckInOrder B
			Where A.CheckInID = B.CheckInID
			Union
			Select 0,0,B.RelatedType,B.RelatedID, A.GoodsCode,A.GoodsName,A.ModelNumber ,A.Spec,A.manufacturer as Brand,0,A.Number,0,0,A.UnitName From T_GoodsShipmentDetail A,T_GoodsShipmentOrder B
			Where A.ShipmentNO = B.ShipmentNO
			Union
			Select 0,0,B.RelatedType,B.RelatedID, A.GoodsCode,A.GoodsName,A.ModelNumber , A.Spec,A.manufacturer as Brand,0,0,0,A.Number,A.UnitName From T_GoodsCheckInOrderDetail A,T_GoodsCheckInOrder B,T_GoodsReturnDetail C
			Where A.CheckInID = B.CheckInID  AND A.SourceID = C.ID
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3334</ID>
    <SQLText>
			CREATE View V_GoodsMainPlanBusinessObjectMaterialDataReport
			as
			Select PlanVerID,PlanMRPVerID, RelatedType,RelatedID,ItemCode,ItemName,ModelNumber,Specification,Brand,Unit,sum(RequireNumber) as TotalRequireNumber,sum(CheckOutNumber) as TotalCheckOutNumber,Sum(CheckInNumber) as TotalCheckInNumber, Sum(ReturnNumber) as TotalReturnNumber
			,(sum(CheckOutNumber) - SUM(RequireNumber)) as  MoreThanCheckOutNumber,(SUM(RequireNumber) - Sum(CheckInNumber)) as LessThanCheckInNumber
			From V_GoodsMainPlanBusinessObjectMaterialData
			Group By PlanVerID,PlanMRPVerID,RelatedType,RelatedID,ItemCode,ItemName,ModelNumber,Specification,Brand,UNit
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3335</ID>
    <SQLText>
			CREATE View V_GoodsMainPlanBusinessObjectMaterialDataSummaryReport
			as
			Select PlanVerID,PlanMRPVerID, RelatedType,RelatedID,ItemCode,ItemName,ModelNumber,Specification,Brand,Unit, TotalRequireNumber,TotalCheckOutNumber, COALESCE (CASE WHEN MoreThanCheckOutNumber &lt; 0 then 0 END,0) AS MoreThanCheckOutNumber ,LessThanCheckInNumber, TotalReturnNumber,TotalCheckInNumber
			From V_GoodsMainPlanBusinessObjectMaterialDataReport
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3336</ID>
    <SQLText>
			drop view v_goodsmainplanmaterialdatareport;
			drop view V_GoodsMainPlanMaterialData;
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3337</ID>
    <SQLText>
			Create OR Replace View V_GoodsMainPlanMaterialData
			AS

			Select PlanVerID,PlanMRPVerID,ItemCode,ItemName,ModelNumber,Specification,Brand,RequireNumber,0 as CheckOutNumber,0 as CheckInNumber,0 AS ReturnNumber,Unit From T_ItemMainPlanRelatedItemPurchasePlan
			Union
			Select PlanVerID,PlanMRPVerID,ItemCode,ItemName,ModelNumber,Specification,Brand,RequireNumber,0 as CheckOutNumber,0 as CheckInNumber,0 AS ReturnNumber,Unit From T_ItemMainPlanRelatedItemProductPlan
			Union

			Select B.RelatedID,0,A.GoodsCode,A.GoodsName,A.ModelNumber, A.Spec AS Specification,A.manufacturer as Brand,0,0,A.Number as CheckInNumber,0,A.UnitName  From  T_GoodsCheckInOrderDetail A, T_GoodsCheckInOrder B
			Where A.CheckInID = B.CheckInID  AND B.RelatedType = 'MRPPlan'
			Union
			Select B.RelatedID,0,A.GoodsCode,A.GoodsName,A.ModelNumber , A.Spec AS Specification,A.manufacturer as Brand,0,A.Number,0,0,A.UnitName From T_GoodsShipmentDetail A,T_GoodsShipmentOrder B
			Where A.ShipmentNO = B.ShipmentNO  AND B.RelatedType ='MRPPlan'

			Union
			Select B.RelatedID,0,A.GoodsCode,A.GoodsName,A.ModelNumber , A.Spec,A.manufacturer as Brand,0,0,A.Number,A.Number,A.UnitName From T_GoodsCheckInOrderDetail A,T_GoodsCheckInOrder B,T_GoodsReturnDetail C
			Where A.CheckInID = B.CheckInID and A.SourceID = C.ID  AND B.RelatedType ='MRPPlan'
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3338</ID>
    <SQLText>
			Create View V_GoodsMainPlanMaterialDataReport
			as
			Select PlanVerID,PlanMRPVerID,ItemCode,ItemName,ModelNumber,Specification,Brand,Unit,sum(RequireNumber) as TotalRequireNumber,sum(CheckOutNumber) as TotalCheckOutNumber,Sum(CheckInNumber) as TotalCheckInNumber, Sum(ReturnNumber) as TotalReturnNumber
			,(sum(CheckOutNumber) - SUM(RequireNumber)) as  MoreThanCheckOutNumber,(SUM(RequireNumber) - Sum(CheckInNumber)) as LessThanCheckInNumber
			From V_GoodsMainPlanMaterialData
			Group By PlanVerID,PlanMRPVerID,ItemCode,ItemName,ModelNumber,Specification,Brand,UNit
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3339</ID>
    <SQLText>
			Create View V_GoodsMainPlanMaterialDataSummaryReport
			as
			Select PlanVerID,PlanMRPVerID,ItemCode,ItemName,ModelNumber,Specification,Brand,Unit, TotalRequireNumber,TotalCheckOutNumber, CASE WHEN MoreThanCheckOutNumber &lt; 0 then 0 END AS MoreThanCheckOutNumber ,LessThanCheckInNumber, TotalReturnNumber,TotalCheckInNumber
			From V_GoodsMainPlanMaterialDataReport
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3340</ID>
    <SQLText>
			Alter Table t_itemmainplanmrpversion Add RelatedProjectID int default 0;
			Alter Table t_itemmainplanmrpversion Add RelatedProjectPlanVerID int default 0;
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3341</ID>
    <SQLText>update t_itemmainplanmrpversion set  RelatedProjectID = 0,RelatedProjectPlanVerID = 0;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3342</ID>
    <SQLText>Update T_ProModuleLevel Set IconURL = 'ImagesSkin/liuchengguanliAPP.png' where ModuleName = '发起申请' and ModuleType = 'APP'</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3343</ID>
    <SQLText>Delete from T_ProjectRelatedItem Where id = 1147</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3344</ID>
    <SQLText>
			Alter Table public.t_tender_hyyq add PMCode character varying(20) COLLATE pg_catalog."default";
			Alter Table public.t_tender_hyyq add PMName character varying(20) COLLATE pg_catalog."default";

			Alter Table public.t_tender_hyyq add TechnicalDirectorCode character varying(20) COLLATE pg_catalog."default";
			Alter Table public.t_tender_hyyq add TechnicalDirectorName character varying(20) COLLATE pg_catalog."default";

			Alter Table public.t_tender_hyyq add PrincipalCode character varying(20) COLLATE pg_catalog."default";
			Alter Table public.t_tender_hyyq add PrincipalName character varying(20) COLLATE pg_catalog."default";

			Alter Table public.t_tender_hyyq add InternalAndExternal character varying(10) COLLATE pg_catalog."default";

			Alter Table public.t_tender_hyyq add BiddingPrice numeric(18,2) DEFAULT 0;
			Alter Table public.t_tender_hyyq add ControlPrice numeric(18,2) DEFAULT 0;
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3345</ID>
    <SQLText>
			Update public.t_tender_hyyq set PMCode = '';
			Update public.t_tender_hyyq set PMName = '';
			Update public.t_tender_hyyq set TechnicalDirectorCode = '';
			Update public.t_tender_hyyq set TechnicalDirectorName = '';

			Update public.t_tender_hyyq set PrincipalCode = '';
			Update public.t_tender_hyyq set PrincipalName = '';
			Update public.t_tender_hyyq set InternalAndExternal = '';


			Update public.t_tender_hyyq set BiddingPrice = 0;
			Update public.t_tender_hyyq set ControlPrice = 0;
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3346</ID>
    <SQLText>

			CREATE TABLE public.t_tender_content
			(
			tendercontent character varying(200) COLLATE pg_catalog."default",

			CONSTRAINT t_tender_content_pkey PRIMARY KEY (tendercontent)
			)
		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3347</ID>
    <SQLText>alter table t_tender_hyyq alter COLUMN receivemargintime type character varying;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3348</ID>
    <SQLText>
			CREATE TABLE t_tenderexpense ( expenseid bigserial NOT NULL, tenderid bigint,expensename character varying(200) COLLATE pg_catalog."default", expenseamount numeric(18,2), remarks text COLLATE pg_catalog."default", expensedate character varying(200) COLLATE pg_catalog."default", CONSTRAINT t_tenderexpense_pkey PRIMARY KEY (expenseid) )

		</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3349</ID>
    <SQLText>CREATE OR REPLACE VIEW public.v_projectmembertaskdetailreport
 AS
 SELECT COALESCE(f.departcode, ''::bpchar) AS departcode,
    COALESCE(f.departname, ''::character varying) AS departname,
    COALESCE(e.usercode, ''::bpchar) AS usercode,
    COALESCE(e.username, ''::bpchar) AS username,
        CASE b.projectid
            WHEN 1 THEN NULL::bigint
            ELSE b.projectid
        END AS projectid,
    COALESCE(b.projectcode, ''::character varying) AS projectcode,
    COALESCE(b.projectname, ''::bpchar) AS projectname,
    COALESCE(cast(c.id as text), ''::text) AS planid,
    COALESCE(c.name, ''::character varying) AS planname,
    a.taskid,
    a.task AS taskname,
    c.start_date AS planbegintime,
    c.end_date AS planendtime,
    a.begindate AS taskbegindate,
    d.operationtime AS taskfirstoperatetime,
    a.enddate AS taskenddate,
    d.operationtime AS tasklastestoperatetime,
    a.status,
    f_getsumtasklog(a.taskid) AS tasklog,
    a.manhour,
    a.type AS tasktype
   FROM t_projecttask a
     LEFT JOIN t_project b ON a.projectid = b.projectid
     LEFT JOIN t_impleplan c ON a.planid = c.id AND (c.verid IN ( SELECT t_projectplanversion.verid
           FROM t_projectplanversion
          WHERE t_projectplanversion.type = '在用'::bpchar))
     LEFT JOIN t_taskassignrecord d ON a.taskid = d.taskid AND (d.id IN ( SELECT min(t_taskassignrecord.id) AS min
           FROM t_taskassignrecord
          GROUP BY t_taskassignrecord.taskid))
     LEFT JOIN t_projectmember e ON d.operatorcode = e.usercode
     LEFT JOIN t_department f ON e.departcode = f.departcode
     LEFT JOIN t_taskassignrecord g ON a.taskid = g.taskid AND (g.id IN ( SELECT min(t_taskassignrecord.id) AS min
           FROM t_taskassignrecord
          GROUP BY t_taskassignrecord.taskid))
  WHERE (a.planid IN ( SELECT t_impleplan.id AS planid
           FROM t_impleplan)) AND (a.projectid IN ( SELECT t_project.projectid
           FROM t_project));</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3350</ID>
    <SQLText>select setval('t_goods_id_seq',(select max(id) from t_goods));
select setval('t_goodsadjustrecord_id_seq',(select max(id) from t_goodsadjustrecord));
select setval('t_goodsapplication_aaid_seq',(select max(aaid) from t_goodsapplication));
select setval('t_goodsapplicationdetail_id_seq',(select max(id) from t_goodsapplicationdetail));
select setval('t_goodsborroworder_borrowno_seq',(select max(borrowno) from t_goodsborroworder));
select setval('t_goodsborroworderdetail_id_seq',(select max(id) from t_goodsborroworderdetail));
select setval('t_goodscheckinorder_checkinid_seq',(select max(checkinid) from t_goodscheckinorder));
select setval('t_goodscheckinorderdetail_id_seq',(select max(id) from t_goodscheckinorderdetail));
select setval('t_goodscheckoutnoticeorder_cooid_seq',(select max(cooid) from t_goodscheckoutnoticeorder));
select setval('t_goodscheckoutnoticeorderdetail_id_seq',(select max(id) from t_goodscheckoutnoticeorderdetail));
select setval('t_goodsdeliveryorder_doid_seq',(select max(doid) from t_goodsdeliveryorder));
select setval('t_goodsdeliveryorderdetail_id_seq',(select max(id) from t_goodsdeliveryorderdetail));
select setval('t_goodsmtrecord_id_seq',(select max(id) from t_goodsmtrecord));
select setval('t_goodsproductionorder_pdid_seq',(select max(pdid) from t_goodsproductionorder));
select setval('t_goodsproductionorderdetail_id_seq',(select max(id) from t_goodsproductionorderdetail));
select setval('t_goodspurchaseorder_poid_seq',(select max(poid) from t_goodspurchaseorder));
select setval('t_goodspurrecord_id_seq',(select max(id) from t_goodspurrecord));
select setval('t_goodsreturndetail_id_seq',(select max(id) from t_goodsreturndetail));
select setval('t_goodsreturnorder_roid_seq',(select max(roid) from t_goodsreturnorder));
select setval('t_goodssaleorder_soid_seq',(select max(soid) from t_goodssaleorder));
select setval('t_goodssalequotationorder_qoid_seq',(select max(qoid) from t_goodssalequotationorder));
select setval('t_goodssalequotationorderdetail_id_seq',(select max(id) from t_goodssalequotationorderdetail));
select setval('t_goodssalerecord_id_seq',(select max(id) from t_goodssalerecord));
select setval('t_goodsscrape_id_seq',(select max(id) from t_goodsscrape));
select setval('t_goodsshipmentdetail_id_seq',(select max(id) from t_goodsshipmentdetail));
select setval('t_goodsshipmentorder_shipmentno_seq',(select max(shipmentno) from t_goodsshipmentorder));
select setval('t_goodssupplyorder_suid_seq',(select max(suid) from t_goodssupplyorder));
select setval('t_goodssupplyorderdetail_id_seq',(select max(id) from t_goodssupplyorderdetail));
select setval('t_goodsuserrecord_id_seq',(select max(id) from t_goodsuserrecord));</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3351</ID>
    <SQLText>select setval('t_asset_id_seq',(select max(id) from t_asset));
select setval('t_assetadjustrecord_id_seq',(select max(id) from t_assetadjustrecord));
select setval('t_assetapplication_aaid_seq',(select max(aaid) from t_assetapplication));
select setval('t_assetapplicationdetail_id_seq',(select max(id) from t_assetapplicationdetail));

select setval('t_assetcheckinorder_checkinid_seq',(select max(checkinid) from t_assetcheckinorder));
select setval('t_assetcheckinorderdetail_id_seq',(select max(id) from t_assetcheckinorderdetail));

select setval('t_assetmtrecord_id_seq',(select max(id) from t_assetmtrecord));

select setval('t_assetpurchaseorder_poid_seq',(select max(poid) from t_assetpurchaseorder));
select setval('t_assetpurrecord_id_seq',(select max(id) from t_assetpurrecord));
select setval('t_assetreturndetail_id_seq',(select max(id) from t_assetreturndetail));
select setval('t_assetreturnorder_roid_seq',(select max(roid) from t_assetreturnorder));

select setval('t_assetscrape_id_seq',(select max(id) from t_assetscrape));
select setval('t_assetshipmentdetail_id_seq',(select max(id) from t_assetshipmentdetail));
select setval('t_assetshipmentorder_shipmentno_seq',(select max(shipmentno) from t_assetshipmentorder));

select setval('t_assetuserrecord_id_seq',(select max(id) from t_assetuserrecord));</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3352</ID>
    <SQLText>Alter Table t_constract Add ProvisionalAmount numeric default 0;
Alter Table t_constract Add SafeCivilizedFee numeric default 0;
Alter Table t_constract Add PartAConnectWay character varying(100) Default '';
Alter Table t_constract Add PartBConnectWay character varying(100) Default '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3353</ID>
    <SQLText>Update t_constract set ProvisionalAmount = 0,SafeCivilizedFee = 0,PartAConnectWay = '',PartBConnectWay = '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3354</ID>
    <SQLText>
		CREATE TABLE public.T_ConstractPartC
		(
		partcid bigserial NOT NULL,
		constractid bigint NOT NULL,
		partcname character varying(200) COLLATE pg_catalog."default",
		contactname character varying(20) COLLATE pg_catalog."default",
		contactway character varying(100) COLLATE pg_catalog."default",
		CONSTRAINT T_ConstractPartC_pkey PRIMARY KEY (partcid)
		)</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3355</ID>
    <SQLText>CREATE TABLE public.t_ContractBasisDocument
(
    docid bigint NOT NULL DEFAULT nextval('t_document_docid_seq'::regclass),
	constractcode character varying(50) COLLATE pg_catalog."default",
    doctype character(100) COLLATE pg_catalog."default",
    docname character varying(200) COLLATE pg_catalog."default",
    address character varying(500) COLLATE pg_catalog."default",
    uploadmancode character(20) COLLATE pg_catalog."default",
    uploadmanname character(20) COLLATE pg_catalog."default",
    uploadtime timestamp without time zone,
 
    CONSTRAINT t_ContractBasisDocument_pkey PRIMARY KEY (docid)
)</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3356</ID>
    <SQLText>Update T_Constract Set MainContent = ''  Where Length(MainContent) &gt; 100</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3357</ID>
    <SQLText>Update  t_goodsapplication set status = '处理中' Where Status = '审批中';
Update  t_goodsborroworder set status = '处理中' Where Status = '审批中';

Update  t_goodscheckoutnoticeorder set status = '处理中' Where Status = '审批中';

Update  t_goodsdeliveryorder set status = '处理中' Where Status = '审批中';
Update  t_goodsproductionorder set status = '处理中' Where Status = '审批中';
Update  t_goodspurchaseorder set status = '处理中' Where Status = '审批中';
Update  t_goodsreturnorder set status = '处理中' Where Status = '审批中';

Update  t_goodssaleorder set status = '处理中' Where Status = '审批中';
Update  t_goodssalequotationorder set status = '处理中' Where Status = '审批中';
Update  t_goodspurchaseorder set status = '处理中' Where Status = '审批中';


Update  t_goodssupplyorder set status = '处理中' Where Status = '审批中';

Update  t_assetapplication set status = '处理中' Where Status = '审批中';

Update  t_assetpurchaseorder set status = '处理中' Where Status = '审批中';

Update  t_assetapplication set status = '处理中' Where Status = '审批中';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3358</ID>
    <SQLText>
		Update T_WorkFlow Set Status = '处理中' Where Status = '活动';
		Update T_WorkFlowBackup Set Status = '处理中' Where Status = '活动';

		Update t_workflowstep Set Status = '处理中' Where Status = '活动';
		Update t_workflowstepbackup Set Status = '处理中' Where Status = '活动';

		Update t_workflowstepdetail Set Status = '处理中' Where Status = '活动';
		Update t_workflowstepdetailbackup Set Status = '处理中' Where Status = '活动';

		Update t_wlstatus Set Status = '处理中' Where Status = '活动';

		Update t_projectstatus Set Status = '处理中' Where Status ='活动';
		Update t_reqstatus Set Status = '处理中' Where Status = '活动';

		Update t_taskstatus Set Status = '处理中' Where Status = '活动';

		Update t_planstatus Set Status = '处理中' Where Status ='活动';
		Update t_otherstatus Set Status = '处理中' Where Status = '活动';
		Update t_teststatus Set Status = '处理中' Where Status = '活动';

		Update t_planstatus Set Status = '处理中' Where Status = '活动';
		Update t_otherstatus Set Status = '处理中' Where Status = '活动';
		Update t_teststatus Set Status = '处理中' Where Status = '活动';
	</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3359</ID>
    <SQLText>
		Update t_wlstatus Set HomeName = '处理中' Where HomeName in ('活动','进行中');

		Update t_projectstatus Set HomeName = '处理中' Where HomeName in ('活动','进行中');
		Update t_reqstatus Set HomeName = '处理中' Where HomeName in ('活动','进行中');

		Update t_taskstatus Set HomeName = '处理中' Where HomeName in ('活动','进行中');

		Update t_planstatus Set HomeName = '处理中' Where HomeName in ('活动','进行中');
		Update t_otherstatus Set HomeName = '处理中' Where HomeName in ('活动','进行中');
		Update t_teststatus Set HomeName = '处理中' Where HomeName in ('活动','进行中');

		Update t_planstatus Set HomeName = '处理中' Where HomeName in ('活动','进行中');
		Update t_otherstatus Set HomeName = '处理中' Where HomeName in ('活动','进行中');
		Update t_teststatus Set HomeName = '处理中' Where HomeName in ('活动','进行中');
	</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3360</ID>
    <SQLText>
		Update t_project Set Status = '处理中' Where Status = '活动';
		Update t_requirement Set Status = '处理中' Where Status = '活动';
		Update t_defectment Set Status = '处理中' Where Status ='活动';
		Update t_projecttask Set Status = '处理中' Where Status = '活动';
		Update t_impleplan Set Status = '处理中' Where Status = '活动';
		Update t_plan Set Status = '处理中' Where Status = '活动';
	</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3361</ID>
    <SQLText>CREATE OR REPLACE FUNCTION public."Func_TG_InsertWLStepByStatus"()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE NOT LEAKPROOF
AS $BODY$
declare intCount bigint;
declare chrNewStatus char(10);

begin

   --if(old.Status &lt;&gt; new.Status)
   
   IF  (TG_OP='UPDATE') THEN
   
   if NEW.Status &lt;&gt; Old.Status then

       select rtrim(ltrim(Status)) into chrNewStatus from T_WorkFlow  Where WLID = NEW.WLID ;
	   
       select Count(*) into intCount From T_WorkFlowStep Where WLID = new.WLID ;
       
        if( intCount = 0 and chrNewStatus = '处理中') then
               insert into T_WorkFlowStep(WLID,SortNumber,StepName,LimitedOperator,LimitedTime,DepartRelated,Status)
              select new.WLID,SortNumber,StepName,LimitedOperator,LimitedTime,DepartRelated, '新建'
                from T_WorkFlowTStep where TemName = new.TemName and SortNumber = 1 ;
   
      
           Update T_WorkFlowStep set Status = '处理中',ActiveTime = now() where SortNumber = 1 and WLID = new.WLID;
        
        end if;
      
   end if;
   
   END IF;
   	return new;
	
end
$BODY$;

ALTER FUNCTION public."Func_TG_InsertWLStepByStatus"()
    OWNER TO postgres;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3362</ID>
    <SQLText>CREATE OR REPLACE FUNCTION public."Func_TG_InsertWLStepDetail"()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE NOT LEAKPROOF
AS $BODY$
declare intStepID bigint;
      declare intSortNumber bigint;
      declare intWLID bigint;
      declare chrTemName varchar(50);
      declare chrCreatorCode varchar(20);
      declare chrCreatorName varchar(20);
      declare chrCreatorDepartCode varchar(20);
      declare chrDepartRelated char(10);
	  declare intDepartRelatedLevelNumber bigint;
      declare chrPartTimeReview char(10);
      declare chrSMSSend varchar(1000);
      declare chrMailSend varchar(1000);
      declare chrOperatorSelect char(10);
      declare chrPriorOperatorSelect char(10);
      declare chrIsSelect char(10);
      declare chrProjectRelated char(10);
      declare intProjectID bigint;

      declare chrRelatedType char(20);
      declare intRelatedID bigint;

      declare chrSelfReview char(10);

      declare chrAdminEMail varchar(200);
      declare intFolderID bigint;

	  Begin

	  select  EMail into chrAdminEMail From T_ProjectMember Where UserCode = 'ADMIN';
      select FolderID into intFolderID From T_MailFolder Where OwnerCode = 'ADMIN' and KeyWord = 'Waiting';

      select StepID,SortNumber,WLID,rtrim(DepartRelated) into intStepID,intSortNumber,intWLID,chrDepartRelated  from T_WorkFlowStep Where StepID = new.StepID;

	  select CreatorCode,CreatorName,RelatedType,RelatedID into chrCreatorCode,chrCreatorName,chrRelatedType,intRelatedID from T_WorkFlow where WLID = new.WLID;

      select rtrim(DepartCode) into chrCreatorDepartCode  from T_ProjectMember where UserCode = chrCreatorCode;

      select TemName into chrTemName from T_WorkFlow where WLID = intWLID;

      --select @chrSMSSend = rtrim(ltrim(ReceiveSMS)) from T_WorkFlow where WLID = @intWLID

      select rtrim(SelfReview) into chrSelfReview from T_WorkFlowTStep where SortNumber = intSortNumber and TemName = chrTemName;
      select rtrim(OperatorSelect) into chrOperatorSelect  from T_WorkFlowTStep where SortNumber = @intSortNumber and TemName = chrTemName;
      select rtrim(IsPriorStepSelect) into chrPriorOperatorSelect from T_WorkFlowTStep where SortNumber = intSortNumber and TemName = chrTemName;

      select rtrim(PartTimeReview) into chrPartTimeReview  from T_WorkFlowTStep where SortNumber = intSortNumber and TemName = chrTemName;
      select rtrim(ProjectRelated) into chrProjectRelated from T_WorkFlowTStep where SortNumber = intSortNumber and TemName = chrTemName;
      select DepartRelatedLevelNumber into intDepartRelatedLevelNumber  from T_WorkFlowTStep where SortNumber = intSortNumber and TemName = chrTemName;

      select rtrim(SendSMS) into chrSMSSend  from T_WorkFlowTStep where SortNumber = intSortNumber and TemName = chrTemName;
      select rtrim(SendEMail) into chrMailSend  from T_WorkFlowTStep where SortNumber = intSortNumber and TemName = chrTemName;
      select '"ADMIN"' || '&amp;amp;amp;lt;' || chrMailSend || '&amp;amp;amp;gt;' into chrMailSend;

----------以下中文短语和语句都不能改，信息发送时要进行其它语言的替换，以实现多语言功能，改了就可能替换不了---------

      --如果此步骤项目相关，则取得相关的项目号-------------------------------------------
      if(chrProjectRelated = 'YES')  Then

		  if(chrRelatedType = '项目')   Then

		  select   intRelatedID into intProjectID ;

		  End If;

		  if(chrRelatedType = '需求')   Then

		  Select ProjectID into intProjectID  From T_RelatedReq Where ReqID = intRelatedID;

		  End If;

		  if(chrRelatedType = '缺陷')   Then

		  Select ProjectID into intProjectID  From T_RelatedDefect Where DefectID = intRelatedID;

		  End If;

		  if(chrRelatedType = '计划')  Then

		  Select iProjectID into intProjectID From T_ImplePlan Where ID = intRelatedID;

		  End If;

		  if(chrRelatedType = '任务')   Then

		  Select ProjectID into intProjectID From T_ProjectTask Where TaskID = intRelatedID;

		  End If;

		  if(chrRelatedType = '风险')  Then

		    Select ProjectID into intProjectID From T_ProjectRisk Where ID = intRelatedID;

		  End If;

      End If;

         --如果申请者或前步审批者自选下一步审批者
      If(chrOperatorSelect = 'YES' or chrPriorOperatorSelect = 'YES')
      Then
      select  'NO' into chrIsSelect ;

      Else

      select  'YES' into chrIsSelect ;

      End If;

      if(chrSelfReview = 'YES')
      Then

      insert into T_WorkFlowStepDetail(StepID,WLID,OperatorCode,OperatorName,Actor,WorkDetail,FinishedTime,Requisite,FieldList,AllowFullEdit,EditFieldList,CanNotNullFieldList,SignPictureField,IsOperator,ManHour,Expense,Status)
      select intStepID,intWLID,chrCreatorCode,chrCreatorName,'主办者','发起人自审',1,'YES',A.FieldList,A.AllowFullEdit,A.EditFieldList,A.CanNotNullFieldList,A.SignPictureField, chrIsSelect,0,0,'处理中'
      from T_WorkFlowTStepOperator A,T_WorkFlowTStep B
      where A.StepID = B.StepID and A.TemName = chrTemName
      and B.SortNumber = intSortNumber;

       raise notice '1';

      If(chrSMSSend = 'YES' )
      Then

      insert into Sms_Send(UserCode,Mobile,Msg,UserRTXCode)
      SELECT chrCreatorCode,MobilePhone,'通知：你好，你有工作，内容：自审 ，请及时登录管理平台打开工作流模块进行处理，此信息来自：系统管理员！',coalesce(UserRTXCode,'')
      from T_ProjectMember
      where UserCode = chrCreatorCode;
      End If;

      If(chrMailSend = 'YES' )
      Then
      insert into T_Mail(Title,Body,FromAddress,ToAddress,CCAddress,HTMLFormat,SenderDate,contain,AttachmentFlag,ReaderFlag,FolderID,UserCode)
      select '审批通知','通知：你好，你有工作，内容：自审，请及时登录管理平台打开工作流模块进行处理，此信息来自：系统管理员！',
      chrAdminEMail,EMail,'',1,getdate(),100,0,0,intFolderID,'ADMIN'
      from T_ProjectMember
      where UserCode = chrCreatorCode;
      End If;

      Else

      If(chrDepartRelated = 'NO' )
      Then

      if(chrProjectRelated = 'NO')
      Then
      insert into T_WorkFlowStepDetail(StepID,WLID,OperatorCode,OperatorName,Actor,WorkDetail,FinishedTime,Requisite,FieldList,AllowFullEdit,EditFieldList,CanNotNullFieldList,SignPictureField, IsOperator,ManHour,Expense,Status)
      select intStepID,intWLID,C.UserCode,C.UserName,A.Actor,A.WorkDetail,A.LimitedTime,A.Requisite,A.FieldList,A.AllowFullEdit,A.EditFieldList,A.CanNotNullFieldList,A.SignPictureField,chrIsSelect,0,0,'处理中'
      from T_ActorGroupDetail C,T_WorkFlowTStepOperator A,T_WorkFlowTStep B
      where C.GroupName = A.ActorGroup and A.StepID = B.StepID and A.TemName = chrTemName
      and B.SortNumber = intSortNumber;

	 raise notice '2';

      If(chrSMSSend = 'YES' and chrOperatorSelect = 'NO')
      Then
      insert into Sms_Send(UserCode,Mobile,Msg,UserRTXCode)
      SELECT D.UserCode, D.MobilePhone,'通知：你好，你有工作，内容： ' || A.WorkDetail || '，请及时登录管理平台打开工作流模块进行处理，此信息来自：系统管理员！',coalesce(D.UserRTXCode,'')
      from T_ActorGroupDetail C,T_WorkFlowTStepOperator A,T_WorkFlowTStep B,T_ProjectMember D
      where C.GroupName = A.ActorGroup and A.StepID = B.StepID and A.TemName = chrTemName
      and B.SortNumber = intSortNumber and C.UserCode = D.UserCode;
      End If;

      If(chrMailSend = 'YES' and chrOperatorSelect = 'NO')
      Then
      insert into T_Mail(Title,Body,FromAddress,ToAddress,CCAddress,HTMLFormat,SenderDate,contain,AttachmentFlag,ReaderFlag,FolderID,UserCode)
      select '审批通知','通知：你好，你有工作，内容： ' || A.WorkDetail || '，请及时登录管理平台打开工作流模块进行处理，此信息来自：系统管理员！',
      chrAdminEMail,D.EMail,'',1,getdate(),100,0,0,intFolderID,'ADMIN'
      from T_ActorGroupDetail C,T_WorkFlowTStepOperator A,T_WorkFlowTStep B,T_ProjectMember D
      where C.GroupName = A.ActorGroup and A.StepID = B.StepID and A.TemName = chrTemName
      and B.SortNumber = intSortNumber and C.UserCode = D.UserCode;
      End If;

      Else

      insert into T_WorkFlowStepDetail(StepID,WLID,OperatorCode,OperatorName,Actor,WorkDetail,FinishedTime,Requisite,FieldList,AllowFullEdit,EditFieldList,CanNotNullFieldList,SignPictureField,IsOperator,ManHour,Expense,Status)
      select intStepID,intWLID,C.UserCode,C.UserName,A.Actor,A.WorkDetail,A.LimitedTime,A.Requisite,A.FieldList,A.AllowFullEdit,A.EditFieldList,A.CanNotNullFieldList,A.SignPictureField, chrIsSelect,0,0,'处理中'
      from T_ActorGroupDetail C,T_RelatedUser D, T_WorkFlowTStepOperator A,T_WorkFlowTStep B
      where C.GroupName = A.ActorGroup and C.UserCode = D.UserCode and A.StepID = B.StepID and A.TemName = chrTemName
      and B.SortNumber = intSortNumber  and D.ProjectID = intProjectID;

raise notice '3';

      If(chrSMSSend = 'YES' and chrOperatorSelect = 'NO')
      Then
      insert into Sms_Send(UserCode,Mobile,Msg,UserRTXCode)
      SELECT D.UserCode, D.MobilePhone,'通知：你好，你有工作，内容： ' || A.WorkDetail || '，请及时登录管理平台打开工作流模块进行处理，此信息来自：系统管理员！',coalesce(D.UserRTXCode,'')
      from T_ActorGroupDetail C,T_RelatedUser E,T_WorkFlowTStepOperator A,T_WorkFlowTStep B,T_ProjectMember D
      where C.GroupName = A.ActorGroup and C.UserCode = E.UserCode and A.StepID = B.StepID and A.TemName = chrTemName
      and B.SortNumber = intSortNumber and C.UserCode = D.UserCode and E.ProjectID = intRelatedID;
      End If;

      If(chrMailSend = 'YES' and chrOperatorSelect = 'NO')
      Then
      insert into T_Mail(Title,Body,FromAddress,ToAddress,CCAddress,HTMLFormat,SenderDate,contain,AttachmentFlag,ReaderFlag,FolderID,UserCode)
      select '审批通知','通知：你好，你有工作，内容： ' || A.WorkDetail || '，请及时登录管理平台打开工作流模块进行处理，此信息来自：系统管理员！',
      chrAdminEMail,D.EMail,'',1,getdate(),100,0,0,intFolderID,'ADMIN'
      from T_ActorGroupDetail C,T_RelatedUser E,T_WorkFlowTStepOperator A,T_WorkFlowTStep B,T_ProjectMember D
      where C.GroupName = A.ActorGroup and C.UserCode = E.UserCode and A.StepID = B.StepID and A.TemName = chrTemName
      and B.SortNumber = intSortNumber and C.UserCode = D.UserCode and E.ProjectID = intRelatedID;
      End If;

      End If;

      Else

      if(chrPartTimeReview = 'YES')
      Then

      if(chrProjectRelated = 'NO')
      Then

      insert into T_WorkFlowStepDetail(StepID,WLID,OperatorCode,OperatorName,WorkDetail,Actor,FinishedTime,Requisite,FieldList,AllowFullEdit,EditFieldList,CanNotNullFieldList,SignPictureField, IsOperator,ManHour,Expense,Status)
      select intStepID,intWLID,C.UserCode,C.UserName,A.WorkDetail,A.Actor,A.LimitedTime,A.Requisite,A.FieldList,A.AllowFullEdit,A.EditFieldList,A.CanNotNullFieldList,A.SignPictureField, chrIsSelect,0,0,'处理中'
      from T_ActorGroupDetail C,T_ProjectMember D,T_Department E,T_WorkFlowTStepOperator A,T_WorkFlowTStep B
      where C.GroupName = A.ActorGroup and C.UserCode = D.UserCode and D.DepartCode = E.DepartCode and A.StepID = B.StepID and A.TemName = chrTemName
      and B.SortNumber = intSortNumber and (( D.DepartCode = chrCreatorDepartCode ) or (D.DepartCode in (select ParentDepartCode from F_GetParentDepartCode(chrCreatorDepartCode) Where Level &lt;= intDepartRelatedLevelNumber))
      or ( C.UserCode in ( Select UserCode From T_PartTimeJob Where DepartCode in ( select ParentDepartCode from F_GetParentDepartCode(chrCreatorDepartCode) Where Level &lt;= intDepartRelatedLevelNumber))));

raise notice '4';

      If(chrSMSSend = 'YES' and chrOperatorSelect = 'NO')
      Then
      insert into Sms_Send(UserCode,Mobile,Msg,UserRTXCode)
      SELECT F.UserCode, F.MobilePhone,'通知：你好，你有工作，内容： ' || A.WorkDetail || '，请及时登录管理平台打开工作流模块进行处理，此信息来自：系统管理员！',coalesce(F.UserRTXCode,'')
      from T_ActorGroupDetail C,T_ProjectMember D,T_Department E,T_WorkFlowTStepOperator A,T_WorkFlowTStep B,T_ProjectMember F
      where C.GroupName = A.ActorGroup and C.UserCode = D.UserCode and D.DepartCode = E.DepartCode and A.StepID = B.StepID and A.TemName = chrTemName
      and B.SortNumber = intSortNumber and (( D.DepartCode = chrCreatorDepartCode ) or (D.DepartCode in (select ParentDepartCode from F_GetParentDepartCode(chrCreatorDepartCode) Where Level &lt;= intDepartRelatedLevelNumber))
      or ( C.UserCode in ( Select UserCode From T_PartTimeJob Where DepartCode in ( select ParentDepartCode from F_GetParentDepartCode(chrCreatorDepartCode) Where Level &lt;= intDepartRelatedLevelNumber))))
      and C.UserCode = F.UserCode;

      End If;

      If(chrMailSend = 'YES' and chrOperatorSelect = 'NO')
      Then
      insert into T_Mail(Title,Body,FromAddress,ToAddress,CCAddress,HTMLFormat,SenderDate,contain,AttachmentFlag,ReaderFlag,FolderID,UserCode)
      select '审批通知','通知：你好，你有工作，内容： ' || A.WorkDetail || '，请及时登录管理平台打开工作流模块进行处理，此信息来自：系统管理员！',
      chrAdminEMail,D.EMail,'',1,getdate(),100,0,0,intFolderID,'ADMIN'
      from T_ActorGroupDetail C,T_ProjectMember D,T_Department E,T_WorkFlowTStepOperator A,T_WorkFlowTStep B,T_ProjectMember F
      where C.GroupName = A.ActorGroup and C.UserCode = D.UserCode and D.DepartCode = E.DepartCode and A.StepID = B.StepID and A.TemName = chrTemName
      and B.SortNumber = intSortNumber and (( D.DepartCode = chrCreatorDepartCode ) or (D.DepartCode in (select ParentDepartCode from F_GetParentDepartCode(chrCreatorDepartCode) Where Level &lt;= intDepartRelatedLevelNumber))
      or ( C.UserCode in ( Select UserCode From T_PartTimeJob Where DepartCode in ( select ParentDepartCode from F_GetParentDepartCode(chrCreatorDepartCode) Where Level &lt;= intDepartRelatedLevelNumber))))
      and C.UserCode = F.UserCode;
      End If;

      Else

      insert into T_WorkFlowStepDetail(StepID,WLID,OperatorCode,OperatorName,WorkDetail,Actor,FinishedTime,Requisite,FieldList,AllowFullEdit,EditFieldList,CanNotNullFieldList,SignPictureField, IsOperator,ManHour,Expense,Status)
      select intStepID,intWLID,C.UserCode,C.UserName,A.WorkDetail,A.Actor,A.LimitedTime,A.Requisite,A.FieldList,A.AllowFullEdit,A.EditFieldList,A.CanNotNullFieldList,A.SignPictureField, chrIsSelect,0,0,'处理中'
      from T_ActorGroupDetail C,T_RelatedUser F,T_ProjectMember D,T_Department E,T_WorkFlowTStepOperator A,T_WorkFlowTStep B
      where C.GroupName = A.ActorGroup and C.UserCode = F.UserCode and  C.UserCode = D.UserCode and D.DepartCode = E.DepartCode and A.StepID = B.StepID and A.TemName = chrTemName
      and B.SortNumber = intSortNumber and F.ProjectID = intProjectID and (( D.DepartCode = chrCreatorDepartCode ) or (D.DepartCode in (select ParentDepartCode from F_GetParentDepartCode(chrCreatorDepartCode) Where Level &lt;= intDepartRelatedLevelNumber))
      or ( C.UserCode in ( Select UserCode From T_PartTimeJob Where DepartCode in ( select ParentDepartCode from F_GetParentDepartCode(chrCreatorDepartCode) Where Level &lt;= intDepartRelatedLevelNumber))));

raise notice '5';

      If(chrSMSSend = 'YES' and chrOperatorSelect = 'NO')
      Then
      insert into Sms_Send(UserCode,Mobile,Msg,UserRTXCode)
      SELECT F.UserCode, F.MobilePhone,'通知：你好，你有工作，内容： ' || A.WorkDetail || '，请及时登录管理平台打开工作流模块进行处理，此信息来自：系统管理员！',coalesce(F.UserRTXCode,'')
      from T_ActorGroupDetail C,T_RelatedUser G,T_ProjectMember D,T_Department E,T_WorkFlowTStepOperator A,T_WorkFlowTStep B,T_ProjectMember F
      where C.GroupName = A.ActorGroup and C.UserCode = G.UserCode and C.UserCode = D.UserCode and D.DepartCode = E.DepartCode and A.StepID = B.StepID and A.TemName = chrTemName
      and B.SortNumber = intSortNumber and G.ProjectID = intRelatedID and (( D.DepartCode = chrCreatorDepartCode ) or (D.DepartCode in (select ParentDepartCode from F_GetParentDepartCode(chrCreatorDepartCode) Where Level &lt;= intDepartRelatedLevelNumber))
      or ( C.UserCode in ( Select UserCode From T_PartTimeJob Where DepartCode in ( select ParentDepartCode from F_GetParentDepartCode(chrCreatorDepartCode) Where Level &lt;= intDepartRelatedLevelNumber))))
      and C.UserCode = F.UserCode;
      End If;

      If(chrMailSend = 'YES' and chrOperatorSelect = 'NO')
      Then
      insert into T_Mail(Title,Body,FromAddress,ToAddress,CCAddress,HTMLFormat,SenderDate,contain,AttachmentFlag,ReaderFlag,FolderID,UserCode)
      select '审批通知','通知：你好，你有工作，内容： ' || A.WorkDetail || '，请及时登录管理平台打开工作流模块进行处理，此信息来自：系统管理员！',
      chrAdminEMail,D.EMail,'',1,getdate(),100,0,0,intFolderID,'ADMIN'
      from T_ActorGroupDetail C,T_RelatedUser G,T_ProjectMember D,T_Department E,T_WorkFlowTStepOperator A,T_WorkFlowTStep B,T_ProjectMember F
      where C.GroupName = A.ActorGroup and C.UserCode = G.UserCode and C.UserCode = D.UserCode and D.DepartCode = E.DepartCode and A.StepID = B.StepID and A.TemName = chrTemName
      and B.SortNumber = intSortNumber and G.ProjectID = intRelatedID and (( D.DepartCode = chrCreatorDepartCode ) or (D.DepartCode in (select ParentDepartCode from F_GetParentDepartCode(chrCreatorDepartCode) Where Level &lt;= intDepartRelatedLevelNumber))
      or ( C.UserCode in ( Select UserCode From T_PartTimeJob Where DepartCode in ( select ParentDepartCode from F_GetParentDepartCode(chrCreatorDepartCode) Where Level &lt;= intDepartRelatedLevelNumber))))
      and C.UserCode = F.UserCode;
      End If;

      End If;

      Else

      if(chrProjectRelated = 'NO')
      Then

      insert into T_WorkFlowStepDetail(StepID,WLID,OperatorCode,OperatorName,WorkDetail,Actor,FinishedTime,Requisite,FieldList,AllowFullEdit,EditFieldList,CanNotNullFieldList,SignPictureField,IsOperator,ManHour,Expense,Status)
      select intStepID,intWLID,C.UserCode,C.UserName,A.WorkDetail,A.Actor,A.LimitedTime,A.Requisite,A.FieldList,A.AllowFullEdit,A.EditFieldList,A.CanNotNullFieldList,A.SignPictureField,chrIsSelect,0,0,'处理中'
      from T_ActorGroupDetail C,T_ProjectMember D,T_Department E,T_WorkFlowTStepOperator A,T_WorkFlowTStep B
      where C.GroupName = A.ActorGroup and C.UserCode = D.UserCode and D.DepartCode = E.DepartCode and A.StepID = B.StepID and A.TemName = chrTemName
      and B.SortNumber = intSortNumber and (( D.DepartCode = chrCreatorDepartCode ) or (D.DepartCode in (select ParentDepartCode from F_GetParentDepartCode(chrCreatorDepartCode) Where Level &lt;= intDepartRelatedLevelNumber)));

	raise notice '6';

	 If(chrSMSSend = 'YES' and chrOperatorSelect = 'NO')
      Then
      insert into Sms_Send(UserCode,Mobile,Msg,UserRTXCode)
      SELECT F.UserCode, F.MobilePhone,'通知：你好，你有工作，内容： ' || A.WorkDetail ||  '，请及时登录管理平台打开工作流模块进行处理，此信息来自：系统管理员！',coalesce(F.UserRTXCode,'')
      from T_ActorGroupDetail C,T_ProjectMember D,T_Department E,T_WorkFlowTStepOperator A,T_WorkFlowTStep B,T_ProjectMember F
      where C.GroupName = A.ActorGroup and C.UserCode = D.UserCode and D.DepartCode = E.DepartCode and A.StepID = B.StepID and A.TemName = chrTemName
      and B.SortNumber = intSortNumber and (( D.DepartCode = chrCreatorDepartCode ) or (D.DepartCode in (select ParentDepartCode from F_GetParentDepartCode(chrCreatorDepartCode) Where Level &lt;= intDepartRelatedLevelNumber)))
      and C.UserCode = F.UserCode;
      End If;

      If(chrMailSend = 'YES' and chrOperatorSelect = 'NO')
      Then
      insert into T_Mail(Title,Body,FromAddress,ToAddress,CCAddress,HTMLFormat,SenderDate,contain,AttachmentFlag,ReaderFlag,FolderID,UserCode)
      select '审批通知','通知：你好，你有工作，内容： ' || A.WorkDetail || '，请及时登录管理平台打开工作流模块进行处理，此信息来自：系统管理员！',
      chrAdminEMail,D.EMail,'',1,getdate(),100,0,0,intFolderID,'ADMIN'
      from T_ActorGroupDetail C,T_ProjectMember D,T_Department E,T_WorkFlowTStepOperator A,T_WorkFlowTStep B,T_ProjectMember F
      where C.GroupName = A.ActorGroup and C.UserCode = D.UserCode and D.DepartCode = E.DepartCode and A.StepID = B.StepID and A.TemName = chrTemName
      and B.SortNumber = intSortNumber and (( D.DepartCode = chrCreatorDepartCode ) or (D.DepartCode in (select ParentDepartCode from F_GetParentDepartCode(chrCreatorDepartCode) Where Level &lt;= intDepartRelatedLevelNumber)))
      and C.UserCode = F.UserCode;
      End If;

      Else

      insert into T_WorkFlowStepDetail(StepID,WLID,OperatorCode,OperatorName,WorkDetail,Actor,FinishedTime,Requisite,FieldList,AllowFullEdit,EditFieldList,CanNotNullFieldList,SignPictureField,IsOperator,ManHour,Expense,Status)
      select intStepID,intWLID,C.UserCode,C.UserName,A.WorkDetail,A.Actor,A.LimitedTime,A.Requisite,A.FieldList,A.AllowFullEdit,A.EditFieldList,A.CanNotNullFieldList,A.SignPictureField,chrIsSelect,0,0,'处理中'
      from T_ActorGroupDetail C,T_RelatedUser F,T_ProjectMember D,T_Department E,T_WorkFlowTStepOperator A,T_WorkFlowTStep B
      where C.GroupName = A.ActorGroup and C.UserCode = F.UserCode and C.UserCode = D.UserCode and D.DepartCode = E.DepartCode and A.StepID = B.StepID and A.TemName = chrTemName
      and B.SortNumber = intSortNumber and F.ProjectID = intProjectID and (( D.DepartCode = chrCreatorDepartCode ) or (D.DepartCode in (select ParentDepartCode from F_GetParentDepartCode(chrCreatorDepartCode) Where Level &lt;= intDepartRelatedLevelNumber)));

raise notice 'intStepID: %,intWLID: %,chrTemName: %, intSortNumber: %,chrCreatorDepartCode:%,intDepartRelatedLevelNumber:%',cast(intStepID as char(8)),intWLID,chrTemName,intSortNumber,chrCreatorDepartCode,intDepartRelatedLevelNumber;

      If(chrSMSSend = 'YES' and chrOperatorSelect = 'NO')
      Then
      insert into Sms_Send(UserCode,Mobile,Msg,UserRTXCode)
      SELECT F.UserCode, F.MobilePhone,'通知：你好，你有工作，内容： ' || A.WorkDetail || '，请及时登录管理平台打开工作流模块进行处理，此信息来自：系统管理员！',coalesce(F.UserRTXCode,'')
      from T_ActorGroupDetail C,T_RelatedUser G,T_ProjectMember D,T_Department E,T_WorkFlowTStepOperator A,T_WorkFlowTStep B,T_ProjectMember F
      where C.GroupName = A.ActorGroup and C.UserCode = G.UserCode and C.UserCode = D.UserCode and D.DepartCode = E.DepartCode and A.StepID = B.StepID and A.TemName = chrTemName
      and B.SortNumber = intSortNumber and (( D.DepartCode = chrCreatorDepartCode ) or (D.DepartCode in (select ParentDepartCode from F_GetParentDepartCode(chrCreatorDepartCode) Where Level &lt;= intDepartRelatedLevelNumber)))
      and C.UserCode = F.UserCode and G.ProjectID = intRelatedID;
      End If;

      If(chrMailSend = 'YES' and chrOperatorSelect = 'NO')
      Then
      insert into T_Mail(Title,Body,FromAddress,ToAddress,CCAddress,HTMLFormat,SenderDate,contain,AttachmentFlag,ReaderFlag,FolderID,UserCode)
      select '审批通知','通知：你好，你有工作，内容： ' || A.WorkDetail || '，请及时登录管理平台打开工作流模块进行处理，此信息来自：系统管理员！',
      chrAdminEMail,D.EMail,'',1,getdate(),100,0,0,intFolderID,'ADMIN'
      from T_ActorGroupDetail C,T_RelatedUser G,T_ProjectMember D,T_Department E,T_WorkFlowTStepOperator A,T_WorkFlowTStep B,T_ProjectMember F
      where C.GroupName = A.ActorGroup and C.UserCode = G.UserCode and C.UserCode = D.UserCode and D.DepartCode = E.DepartCode and A.StepID = B.StepID and A.TemName = chrTemName
      and B.SortNumber = intSortNumber and (( D.DepartCode = chrCreatorDepartCode ) or (D.DepartCode in (select ParentDepartCode from F_GetParentDepartCode(chrCreatorDepartCode) Where Level &lt;= intDepartRelatedLevelNumber)))
      and C.UserCode = F.UserCode and G.ProjectID = intRelatedID;
      End If;
      End If;

      End If;
      End If;

      End If;
	return new;
end
$BODY$;

ALTER FUNCTION public."Func_TG_InsertWLStepDetail"()
    OWNER TO postgres;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3363</ID>
    <SQLText>Update t_workflowstepdetail Set Status = '处理中' Where Status = '活动';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3364</ID>
    <SQLText>Update T_Leaveapplyform set Status = '处理中' Where Status = '审批中';
Update t_overtimeapplyform set Status = '处理中' Where Status = '审批中';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3365</ID>
    <SQLText>Update t_funinfordialbox set sqlcode = replace(sqlcode,'活动','处理中')</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3366</ID>
    <SQLText>Delete from t_workflowtsteprelatedmodule 
  Where ID in (Select Max(ID) from t_workflowtsteprelatedmodule Group By StepGuid,modulename);</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3367</ID>
    <SQLText>delete from t_workflowtsteprelatedmodule 
  Where ID in (Select Max(A.ID) from t_workflowtsteprelatedmodule A,t_workflowtsteprelatedmodule B
		Where A.StepGuid = B.StepGuid and A.ModuleName = B.ModuleName and A.ID &lt;&gt; B.ID)</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3368</ID>
    <SQLText>Delete From T_WorkFlowStepDetail Where WLID Not IN (Select  WLID From T_WorkFlowStepDetail Where OPeratorCode = 'C7094' LIMIT 5)
  AND OperatorCode = 'C7094'</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3369</ID>
    <SQLText>select setval('t_defectment_defectid_seq',(select max(defectid) from t_defectment));
select setval('t_defectassignrecord_id_seq',(select max(id) from t_defectassignrecord));

select setval('t_requirement_reqid_seq',(select max(reqid) from t_requirement));
select setval('t_reqassignrecord_id_seq',(select max(id) from t_reqassignrecord));

select setval('t_projecttask_taskid_seq',(select max(taskid) from t_projecttask));
select setval('t_taskassignrecord_id_seq',(select max(id) from t_taskassignrecord));</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3370</ID>
    <SQLText>Update T_ProModuleLevel Set IconURL = 'ImagesSkin/renwuzhixingchaxun.png' Where ModuleName = '任务执行查询'</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3371</ID>
    <SQLText>Update T_ProModuleLevel Set IconURL = 'ImagesSkin/wodezhuye.png' Where ModuleName = '我的主页';
Update T_ProModuleLevel Set IconURL = 'ImagesSkin/wodericheng.png' Where ModuleName = '我的日程';
Update T_ProModuleLevel Set IconURL = 'ImagesSkin/wodexiezuo.png' Where ModuleName = '我的协作';
Update T_ProModuleLevel Set IconURL = 'ImagesSkin/wodexuqiu.png' Where ModuleName = '我的需求';

Update T_ProModuleLevel Set IconURL = 'ImagesSkin/wodedangan.png' Where ModuleName = '我的档案';
Update T_ProModuleLevel Set IconURL = 'ImagesSkin/wodekefu.png' Where ModuleName = '我的客服';
Update T_ProModuleLevel Set IconURL = 'ImagesSkin/wodeliucheng.png' Where ModuleName = '我的流程';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3372</ID>
    <SQLText>Update T_ProModuleLevel Set IconURL = 'ImagesSkin/woderenwu.png' Where ModuleName = '我的任务'</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3373</ID>
    <SQLText>Update T_ProModuleLevel Set IconURL = 'ImagesSkin/KPIAPP.png' Where PageName = 'TTAPPKPIManagement.aspx'</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3374</ID>
    <SQLText>CREATE TABLE IF NOT EXISTS public.t_promodulelevelforpageuser
(
    id bigserial NOT NULL,
    modulename character(100) COLLATE pg_catalog."default" ,
    usercode character(20) COLLATE pg_catalog."default" ,
	usertype character(10) COLLATE pg_catalog."default" ,
	visible character(10) COLLATE pg_catalog."default",
    sortnumber bigint,
    CONSTRAINT t_promodulelevelforpageuser_pkey PRIMARY KEY (id)
)</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3375</ID>
    <SQLText>Delete From t_promodulelevelforpage Where PageName = 'TTPersonalSpaceMyMonthSchedule.aspx';
Update t_promodulelevelforpage Set PageName = 'TTPersonalSpaceProjectForOuter.aspx' 
   Where modulename = '我的项目' and parentModule = '个人空间外部';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3376</ID>
    <SQLText>Update t_funinfordialbox Set linkaddress = 'TTTaskHandlePage.aspx' where inforname = '待处理的任务';
Update t_funinfordialbox Set linkaddress = 'TTReqHandlePage.aspx' where inforname = '待处理的需求';
Update t_funinfordialbox Set linkaddress = 'TTDefectHandlePage.aspx' where inforname = '待处理的缺陷';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3377</ID>
    <SQLText>Update T_ProModuleLevel set PageName = 'TTProjectManageOuter.aspx' Where ModuleName = '项目管理' and UserType = 'OUTER'</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3378</ID>
    <SQLText>Alter Table t_constract Add Column TaxRate13 numeric(18,2) DEFAULT 0;
Alter Table t_constract Add Column TaxRate9 numeric(18,2) DEFAULT 0;
Alter Table t_constract Add Column TaxRate6 numeric(18,2) DEFAULT 0;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3379</ID>
    <SQLText>Alter Table t_constract Add Column Part1 character varying(100) default '';
Alter Table t_constract Add Column Part2 character varying(100) default '';
Alter Table t_constract Add Column Part3 character varying(100) default '';
Alter Table t_constract Add Column Part4 character varying(100) default '';
Alter Table t_constract Add Column Part5 character varying(100) default '';
Alter Table t_constract Add Column Part6 character varying(100) default '';
Alter Table t_constract Add Column Part7 character varying(100) default '';
Alter Table t_constract Add Column Part8 character varying(100) default '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3380</ID>
    <SQLText>UPdate t_constract Set TaxRate13 = 0,TaxRate9 = 0,TaxRate6 = 0;
Update t_constract Set Part1 = '',Part2 = '',Part3 = '',Part4 = '',Part5 = '',Part6= '',Part7='',Part8='';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3381</ID>
    <SQLText>Alter Table t_constract Add Column Part1Operator character varying(100) default '';
Alter Table t_constract Add Column Part1ConnectWay character varying(100) default '';
Alter Table t_constract Add Column Part2Operator character varying(100) default '';
Alter Table t_constract Add Column Part2ConnectWay character varying(100) default '';
Alter Table t_constract Add Column Part3Operator character varying(100) default '';
Alter Table t_constract Add Column Part3ConnectWay character varying(100) default '';												   
Alter Table t_constract Add Column Part4Operator character varying(100) default '';
Alter Table t_constract Add Column Part4ConnectWay character varying(100) default '';
Alter Table t_constract Add Column Part5Operator character varying(100) default '';
Alter Table t_constract Add Column Part5ConnectWay character varying(100) default '';
Alter Table t_constract Add Column Part6Operator character varying(100) default '';
Alter Table t_constract Add Column Part6ConnectWay character varying(100) default '';
Alter Table t_constract Add Column Part7Operator character varying(100) default '';
Alter Table t_constract Add Column Part7ConnectWay character varying(100) default '';														   
Alter Table t_constract Add Column Part8Operator character varying(100) default '';
Alter Table t_constract Add Column Part8ConnectWay character varying(100) default '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3382</ID>
    <SQLText>Update t_constract Set Part1Operator = '',Part2Operator = '',Part3Operator = '',Part4Operator = '',Part5Operator = '',Part6Operator= '',Part7Operator='',Part8Operator='';
Update t_constract Set Part1ConnectWay = '',Part2ConnectWay = '',Part3ConnectWay = '',Part4ConnectWay = '',Part5ConnectWay = '',Part6ConnectWay= '',Part7ConnectWay='',Part8ConnectWay='';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3383</ID>
    <SQLText>Alter Table t_constract Add Column TaxRate13Amount numeric(18,2) DEFAULT 0;
Alter Table t_constract Add Column TaxRate9Amount numeric(18,2) DEFAULT 0;
Alter Table t_constract Add Column TaxRate6Amount numeric(18,2) DEFAULT 0;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3384</ID>
    <SQLText>Update T_Constract Set TaxRate13Amount = 0,TaxRate6Amount = 0,TaxRate9Amount = 0;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3385</ID>
    <SQLText>Alter Table t_constractpayable Add TaxRate numeric(18,2) Default 0;
Alter Table t_constractpayablerecord Add TaxRate numeric(18,2) Default 0;
Alter Table t_constractreceivables Add TaxRate numeric(18,2) Default 0;
Alter Table t_constractreceivablesrecord Add TaxRate numeric(18,2) Default 0;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3386</ID>
    <SQLText>Update t_constractpayable Set TaxRate = 0;
Update t_constractpayablerecord Set TaxRate = 0;
Update t_constractreceivables Set TaxRate = 0;
Update t_constractreceivablesrecord Set TaxRate = 0;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3387</ID>
    <SQLText>-------------------------------业务表单数据源-------------------------------------------------
			Insert into T_ProModuleLevel(ModuleName,HomeModuleName ,ParentModule ,PageName,ModuleType,UserType,SortNumber,Visible,IsDeleted,LangCode,IconURL )
			Values('业务表单数据源','业务表单数据源','流程管理','TTExcelFormImportToDB.aspx','SYSTEM','INNER',7,'YES','NO','zh-CN','');

			-------------SAMPLE----------------------------
			Insert into T_ProModule(ModuleName,UserCode,Visible,ModuleType ,UserType)
			Values('业务表单数据源','SAMPLE','YES','SYSTEM','INNER');


			-------------ADMIN------------------------------
			Insert into T_ProModule(ModuleName,UserCode,Visible,ModuleType,UserType)
			Values('业务表单数据源','ADMIN','YES','SYSTEM','INNER');</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3388</ID>
    <SQLText>CREATE TABLE IF NOT EXISTS public.t_excelformdata
(
    id bigserial NOT NULL,
	
	formtype character varying(200) COLLATE pg_catalog."default" NOT NULL,
    formcode character varying(200) COLLATE pg_catalog."default" NOT NULL,
    formname character varying(200) COLLATE pg_catalog."default" NOT NULL,
	rowcode character varying(200) COLLATE pg_catalog."default" NOT NULL,
	
    fieldname character varying(1000) COLLATE pg_catalog."default" NOT NULL,
    fieldvalue text COLLATE pg_catalog."default" NOT NULL,
	
    operatorcode character varying(20) COLLATE pg_catalog."default" NOT NULL,
    operatorname character varying(20) COLLATE pg_catalog."default" NOT NULL,
	operatetime timestamp without time zone DEFAULT now(),
	
    CONSTRAINT t_excelformdata_pkey PRIMARY KEY (id)
);</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3389</ID>
    <SQLText>Alter Table T_Constract Add column Warranty int Default 0;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3390</ID>
    <SQLText>Update T_Constract Set Warranty = 0;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3391</ID>
    <SQLText>Alter Table T_Constract Add column WarrantyDate date Default now();</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3392</ID>
    <SQLText>Update T_Constract Set WarrantyDate = EndDate;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3393</ID>
    <SQLText>Alter Table t_constract add column OperatorName character varying(20) default '';
Alter Table t_constract add column SignName character varying(20) default '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3394</ID>
    <SQLText>Update t_constract set operatorname = '',signname = '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3395</ID>
    <SQLText>Update T_SystemAnalystChartManagement Set charttype = 'Line' where charttype = 'SplineArea';
Update T_SystemAnalystChartManagement Set charttype = 'Line' where charttype = 'SplineRange';
Update T_SystemAnalystChartManagement Set charttype = 'Funnel' where charttype = 'Pyramid';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3396</ID>
    <SQLText>Insert Into t_wltype(Type,SortNumber,HomeName,LangCode,MakeType)
    Values('投标管理',10,'投标管理','zh-CN','SYS');</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3397</ID>
    <SQLText>delete from t_promodulelevelforpage Where ModuleName = '关联工作流模板'</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3398</ID>
    <SQLText>Alter Table T_Constract Add Column PartyConstractCode character varying(50) default '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3399</ID>
    <SQLText>Update T_Constract Set PartyConstractCode = '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3400</ID>
    <SQLText>Alter Table t_constractpayable Add Column FromCode character varying(200) default '';
Alter Table t_constractreceivables Add Column FromCode character varying(200) default '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3401</ID>
    <SQLText>Update t_constractpayable set FromCode = '';
Update t_constractreceivables set FromCode = '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3402</ID>
    <SQLText>alter table t_industrytype alter column type type character(100);</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3403</ID>
    <SQLText>alter table t_vendor add DeviceName character varying(200) default '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3404</ID>
    <SQLText>update t_vendor Set DeviceName = '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3405</ID>
    <SQLText>select setval('T_WFTemplateRelatedJSCode_id_seq',(select max(id) from T_WFTemplateRelatedJSCode));
select setval('t_wftemplatesteprelatedjscode_id_seq',(select max(id) from t_wftemplatesteprelatedjscode));</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3406</ID>
    <SQLText>update t_wftemplaterelatedjscode set jscode = replace(jscode,'function saveWFFormDataToDatabase()','function saveWFFormDataToDatabase(intWLID)');</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3407</ID>
    <SQLText>update t_wftemplaterelatedjscode set jscode = replace(jscode,'调用一般处理程序，保存表单数据到后台数据库','调用一般处理程序，保存表单数据到后台数据库,intWLID是传入的工作流编号')</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3408</ID>
    <SQLText>-- PROCEDURE: public.pr_initialmodules(character, character)

-- DROP PROCEDURE IF EXISTS public.pr_initialmodules(character, character);

CREATE OR REPLACE PROCEDURE public.pr_initialmodules(
	IN sampleusercode character,
	IN usercode character)
LANGUAGE 'plpgsql'
AS $BODY$
begin

insert into t_promodule(modulename,usercode,visible,moduletype,usertype)
	select a.modulename,sampleusercode,'NO',a.moduletype,a.usertype from t_promodule a
            where a.usercode = 'ADMIN' and rtrim(a.modulename) || rtrim(a.moduletype) || rtrim(a.usertype)
                not in (select rtrim(b.modulename)||rtrim(b.moduletype) || rtrim (b.usertype) from t_promodule b where b.usercode = sampleusercode and b.moduletype = a.moduletype and b.usertype = a.usertype);
                
                
	insert into t_promodule(modulename,usercode,visible,moduletype,usertype)
	select a.modulename,a.usercode,a.visible,a.moduletype,a.usertype from t_promodule a
            where a.usercode = sampleusercode 
                and (rtrim(a.modulename) || rtrim(a.moduletype) || rtrim(a.usertype) not in (select rtrim(b.modulename)||rtrim(b.moduletype) || rtrim (b.usertype) from t_promodule b where a.usercode = b.usercode and b.moduletype = a.moduletype and b.usertype = a.usertype )               
                and rtrim(a.modulename)||rtrim(a.moduletype) || rtrim(a.usertype) in (select rtrim(c.modulename)||rtrim(c.moduletype) || rtrim (c.usertype) from t_promodulelevel c where c.moduletype = a.moduletype and c.usertype = a.usertype  and c.visible = 'YES' and c.isdeleted = 'NO'));				
end
$BODY$;

COMMENT ON PROCEDURE public.pr_initialmodules(character, character)
    IS '更改模组初始化存储过程';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3409</ID>
    <SQLText>-- PROCEDURE: public.pro_deleteuserauthorizationbysupermodule()

-- DROP PROCEDURE IF EXISTS public.pro_deleteuserauthorizationbysupermodule();

CREATE OR REPLACE PROCEDURE public.pro_deleteuserauthorizationbysupermodule(
	)
LANGUAGE 'plpgsql'
AS $BODY$

begin
	delete from t_promodule where rtrim(modulename)||rtrim(moduletype)||rtrim(usertype)  in (select rtrim(modulename)|| rtrim(moduletype) || rtrim(usertype) from t_promodulelevel where visible = 'NO' or isdeleted = 'YES');   
	delete from t_departrelatedmodule where rtrim(modulename) || rtrim(moduletype) || rtrim(usertype) in (select rtrim(modulename) || rtrim(moduletype) || rtrim(usertype) from t_promodulelevel where visible = 'NO' or isdeleted = 'YES');
end
$BODY$;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3410</ID>
    <SQLText>Update t_commonworkflowrelatedpage set PageName = 'TTMakeAssetPurchase.aspx' where PageName = 'TTAssetPurchaseWF.aspx';
Update t_commonworkflowrelatedpage set PageName = 'TTMakeGoodsPurchase.aspx' where PageName = 'TTGoodsPurchaseWF.aspx';

Update t_workflowtemplate set PageFile = 'TTMakeAssetPurchase.aspx' where PageFile = 'TTAssetPurchaseWF.aspx';
Update t_workflowtemplate set PageFile = 'TTMakeGoodsPurchase.aspx' where PageFile = 'TTGoodsPurchaseWF.aspx';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3411</ID>
    <SQLText>Alter Table t_workflowtemplate add column OverTimeAutoAgree char(10) Default 'NO';
Alter Table t_workflowtemplate add column OverTimeHourNumber int Default 24;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3412</ID>
    <SQLText>Update t_workflowtemplate Set OverTimeAutoAgree = 'NO',OverTimeHourNumber =24;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3413</ID>
    <SQLText>Alter Table t_workflowtstep add column OverTimeAutoAgree char(10) Default 'NO';
Alter Table t_workflowtstep add column OverTimeHourNumber int Default 24;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3414</ID>
    <SQLText>Update t_workflowtstep Set OverTimeAutoAgree = 'NO',OverTimeHourNumber =24;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3415</ID>
    <SQLText>CREATE OR REPLACE VIEW public.v_prorelateduser
 AS
 SELECT a.id,
    a.projectid,
    b.projectcode,
    b.projectname,
    b.projecttype,
    b.status,
    b.begindate,
    b.enddate,
    b.parentid,
    b.customername,
    b.pingpai,
    b.productname,
    a.unithoursalary,
    a.actor,
    a.joindate,
    a.usercode,
    a.username,
    b.pmcode,
    b.pmname,
    b.priority,
    b.usercode AS makemancode,
    b.username AS makemanname,
    b.budget,
    b.manhour,
    b.mannumber,
    b.finishpercent,
    a.status AS mystatus,
    b.status AS prostatus,
    b.customerprojectcode,
    b.confirmedbysupper,
	b.makedate
   FROM t_relateduser a
     JOIN t_project b ON a.projectid = b.projectid
  WHERE b.status &lt;&gt; ALL (ARRAY['新建'::bpchar, '评审'::bpchar, '隐藏'::bpchar, '删除'::bpchar, '归档'::bpchar]);</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3416</ID>
    <SQLText>select setval('t_dailywork_workid_seq',(select max(workid) from t_dailywork));</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3417</ID>
    <SQLText>Insert Into T_ProModuleLevelForPage(ModuleName,HomeModuleName,IconURL,SortNumber,PageName,UserType,ParentModule,Visible,LangCode,IsDeleted)
			Values('我的日程','我的日程','',7,'TTPersonalSpaceMyMonthSchedule.aspx','INNER','个人空间','NO','zh-CN','NO');</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3418</ID>
    <SQLText>Insert Into T_ProModuleLevelForPage(ModuleName,HomeModuleName,IconURL,SortNumber,PageName,UserType,ParentModule,Visible,LangCode,IsDeleted)
			Values('项目地图','项目地图','',8,'TTPersonalSpaceMyProjectPositionMap.aspx','INNER','个人空间','NO','zh-CN','NO');</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3419</ID>
    <SQLText>Insert Into T_ProModuleLevelForPage(ModuleName,HomeModuleName,IconURL,SortNumber,PageName,UserType,ParentModule,Visible,LangCode,IsDeleted)
			Values('项目总览','项目总览','',9,'TTPersonalSpaceProjectSummary.aspx','INNER','个人空间','NO','zh-CN','NO');</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3420</ID>
    <SQLText>Insert Into T_ProModuleLevelForPage(ModuleName,HomeModuleName,IconURL,SortNumber,PageName,UserType,ParentModule,Visible,LangCode,IsDeleted)
			Values('数据分析','数据分析','',10,'TTPersonalSpaceAnalysisChart.aspx','INNER','个人空间','NO','zh-CN','NO');</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3421</ID>
    <SQLText>-------------------------------合同管理台账-------------------------------------------------
			Insert into T_ProModuleLevel(ModuleName,HomeModuleName ,ParentModule ,PageName,ModuleType,UserType,SortNumber,Visible,IsDeleted,LangCode,IconURL )
			Values('合同台账','合同台账','合同管理','TTConstractManageAccount.aspx','SYSTEM','INNER',10,'YES','NO','zh-CN','');

			-------------SAMPLE----------------------------
			Insert into T_ProModule(ModuleName,UserCode,Visible,ModuleType ,UserType)
			Values('合同台账','SAMPLE','YES','SYSTEM','INNER');


			-------------ADMIN------------------------------
			Insert into T_ProModule(ModuleName,UserCode,Visible,ModuleType,UserType)
			Values('合同台账','ADMIN','YES','SYSTEM','INNER');</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3422</ID>
    <SQLText>Alter Table t_constractpayable Add IncomeRatio  varchar(100) default '';
Alter Table t_constractreceivables Add IncomeRatio  varchar(100) default '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3423</ID>
    <SQLText>Update t_constractpayable set IncomeRatio = '';
Update t_constractreceivables set IncomeRatio = '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3425</ID>
    <SQLText>Alter Table t_constract Add projectbasis  varchar(100) default '';
Alter Table t_constract Add biddingdate date default now();</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3426</ID>
    <SQLText>update t_constract set projectbasis = '';
update t_constract set biddingdate =  now();</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3427</ID>
    <SQLText>-------------------------------制定合同[工程]-------------------------------------------------
			Insert into T_ProModuleLevel(ModuleName,HomeModuleName ,ParentModule ,PageName,ModuleType,UserType,SortNumber,Visible,IsDeleted,LangCode,IconURL )
			Values('制定合同[工程]','制定合同[工程]','合同管理','TTMakeConstract_BYJF.aspx','SYSTEM','INNER',1,'YES','NO','zh-CN','');

			-------------SAMPLE----------------------------
			Insert into T_ProModule(ModuleName,UserCode,Visible,ModuleType ,UserType)
			Values('制定合同[工程]','SAMPLE','YES','SYSTEM','INNER');


			-------------ADMIN------------------------------
			Insert into T_ProModule(ModuleName,UserCode,Visible,ModuleType,UserType)
			Values('制定合同[工程]','ADMIN','YES','SYSTEM','INNER');</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3428</ID>
    <SQLText>Insert into T_ProModuleLevel(ModuleName,HomeModuleName ,ParentModule ,PageName,ModuleType,UserType,SortNumber,Visible,IsDeleted,LangCode,IconURL )
			Values('分析图','分析图','','TTAPPPersonalSpaceAnalysisChart.aspx','APP','INNER',1,'YES','NO','zh-CN','');

			-------------SAMPLE----------------------------
			Insert into T_ProModule(ModuleName,UserCode,Visible,ModuleType ,UserType)
			Values('分析图','SAMPLE','YES','APP','INNER');

			-------------ADMIN------------------------------
			Insert into T_ProModule(ModuleName,UserCode,Visible,ModuleType,UserType)
			Values('分析图','ADMIN','YES','APP','INNER');
			
			
			Insert into T_ProModuleLevel(ModuleName,HomeModuleName ,ParentModule ,PageName,ModuleType,UserType,SortNumber,Visible,IsDeleted,LangCode,IconURL )
			Values('分析图','分析图','','TTAPPPersonalSpaceAnalysisChart.aspx','APP','OUTER',1,'YES','NO','zh-CN','');

			-------------SAMPLE----------------------------
			Insert into T_ProModule(ModuleName,UserCode,Visible,ModuleType ,UserType)
			Values('分析图','SAMPLE','YES','APP','OUTER');

			-------------ADMIN------------------------------
			Insert into T_ProModule(ModuleName,UserCode,Visible,ModuleType,UserType)
			Values('分析图','ADMIN','YES','APP','OUTER');</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3429</ID>
    <SQLText>Update T_ProModuleLevel Set IsDeleted = 'NO',Visible = 'YES' Where ModuleName = '知识管理';
Update T_ProModuleLevel Set IsDeleted = 'NO',Visible = 'YES' Where ModuleName = '上传文档';
Update T_ProModuleLevel Set IsDeleted = 'NO',Visible = 'YES' Where ModuleName = '已删除文档管理';

-------------SAMPLE----------------------------
Insert into T_ProModule(ModuleName,UserCode,Visible,ModuleType ,UserType)
			Values('知识管理','SAMPLE','YES','SYSTEM','INNER');
			
Insert into T_ProModule(ModuleName,UserCode,Visible,ModuleType ,UserType)
			Values('上传文档','SAMPLE','YES','SYSTEM','INNER');

Insert into T_ProModule(ModuleName,UserCode,Visible,ModuleType ,UserType)
			Values('已删除文档管理','SAMPLE','YES','SYSTEM','INNER');</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3430</ID>
    <SQLText>Delete From T_ProModule Where ModuleName = '知识管理' and ModuleType = 'APP';
Delete From T_ProModule Where ModuleName = '上传文档' and ModuleType = 'APP';
Delete From T_ProModule Where ModuleName = '已删除文档管理' and ModuleType = 'APP';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3431</ID>
    <SQLText>Update T_ProModule Set Visible = 'YES' Where ModuleName = '知识管理' and UserCode = 'SAMPLE';
Update T_ProModule Set Visible = 'YES' Where ModuleName = '上传文档' and UserCode = 'SAMPLE';
Update T_ProModule Set Visible = 'YES' Where ModuleName = '已删除文档管理' and UserCode = 'SAMPLE';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3432</ID>
    <SQLText>CALL Pro_DeleteDoubleModule();</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3433</ID>
    <SQLText>Update T_ProModule Set Visible = 'YES' Where ModuleName = '知识管理' ;
Update T_ProModule Set Visible = 'YES' Where ModuleName = '上传文档' ;
Update T_ProModule Set Visible = 'YES' Where ModuleName = '已删除文档管理';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3434</ID>
    <SQLText>Alter Table public.t_promodulelevel Add DIYFlow character(10) Default 'NO';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3435</ID>
    <SQLText>Update public.t_promodulelevel Set DIYFlow = 'NO';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3436</ID>
    <SQLText>Update T_ProModuleLevel Set ICONUrl = 'ImagesSkin/SiteEdit.png' Where ModuleName = '网站编辑';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3437</ID>
    <SQLText>Alter Table T_Project Add column longitude char(100) default '';
Alter Table T_Project Add column latitude char(100) default '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3438</ID>
    <SQLText>Update T_Project set longitude = '';
Update T_Project set latitude = '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3439</ID>
    <SQLText>UPdate T_Project set Longitude='116.404',Latitude='39.915';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3440</ID>
    <SQLText>Insert Into t_newstype(type,homename,langcode,pagename,visible,sortnumber) values('项目地图','项目地图','zh-CN','TTPersonalSpaceMyProjectPositionMap.aspx','NO',1);</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3441</ID>
    <SQLText>Delete From T_ProModuleLevelForPage Where ModuleName = '项目总览';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3442</ID>
    <SQLText>CREATE OR REPLACE VIEW public.v_MemberForprojectdailywork
 AS
 SELECT DISTINCT on( usercode,
    username, ProjectID)
    usercode,
    username,
    unithoursalary,
    salarymethod,
    ProjectID
   FROM 
    t_relateduser b</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3443</ID>
    <SQLText>CREATE OR REPLACE VIEW public.v_projectdailywork
 AS
 SELECT DISTINCT a.workid,
    a.type,
    a.usercode,
    a.username,
    a.workdate,
    a.projectid,
    a.projectname,
    a.dailysummary,
    a.authority,
    a.recordtime,
    a.address,
    a.achievement,
    a.finishpercent,
    a.charge,
    a.confirmcharge,
    a.manhour,
    a.confirmmanhour,
    a.manhour * b.unithoursalary AS dailysalary,
    a.confirmmanhour * b.unithoursalary AS confirmdailysalary,
    b.salarymethod,
    COALESCE(a.bonus, 0::numeric) AS bonus,
    COALESCE(a.confirmbonus, 0::numeric) AS confirmbonus
   FROM t_dailywork a,
    v_MemberForprojectdailywork b,
    t_project c
  WHERE a.projectid = b.projectid AND b.projectid = c.projectid AND a.usercode = b.usercode;

</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3444</ID>
    <SQLText>Alter Table public.t_constract Add ConstractMainDocURL char(300) Default '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3445</ID>
    <SQLText>Update public.t_constract Set ConstractMainDocURL = '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3446</ID>
    <SQLText>Alter Table T_Project Add AttachFile char(200) Default '';
Alter Table T_Project Add ProjectDirection char(100) Default '';
Alter Table T_Project Add BudgetAccount char(100) Default '';
Alter Table T_Project Add ProjectLocation char(300) Default '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3447</ID>
    <SQLText>Update T_Project Set AttachFile = '';
Update T_Project Set ProjectDirection = '';
Update T_Project Set BudgetAccount = '';
Update T_Project Set ProjectLocation = '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3448</ID>
    <SQLText>CREATE TABLE IF NOT EXISTS public.T_FundingSource
(
    FundingSource character(200) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT T_FundingSource_pkey PRIMARY KEY (FundingSource)
)</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3449</ID>
    <SQLText>Alter Table T_Project Add Column FundingSource char(200) Default '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3450</ID>
    <SQLText>Update T_Project Set FundingSource = '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3451</ID>
    <SQLText>Alter Table public.t_userattendancerule Add Address char(300) Default '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3452</ID>
    <SQLText>Update public.t_userattendancerule Set Address = '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3453</ID>
    <SQLText>Alter Table public.t_attendancerule Add Address char(300) Default '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3454</ID>
    <SQLText>Update public.t_attendancerule Set Address = '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3455</ID>
    <SQLText>Alter Table public.t_headline Add Column contentdocurl character(300) default '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3456</ID>
    <SQLText>Update T_headline set contentdocurl = '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3457</ID>
    <SQLText>Alter Table public.t_officialdocument Add Column contentdocurl character(300) default '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3458</ID>
    <SQLText>Update public.t_officialdocument set contentdocurl = '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3459</ID>
    <SQLText>-- FUNCTION: public.change_field_size()

-- DROP FUNCTION IF EXISTS public.change_field_size();

CREATE OR REPLACE FUNCTION public.change_field_size(
	)
    RETURNS void
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE PARALLEL UNSAFE
AS $BODY$
DECLARE
    rec record;
BEGIN
    FOR rec IN SELECT table_name 
                 FROM INFORMATION_SCHEMA.COLUMNS 
                 WHERE column_name = 'departname'
                   AND table_schema NOT IN ('pg_catalog', 'information_schema')
                   AND table_name NOT LIKE 'v_%'
    LOOP
        BEGIN
            EXECUTE format('ALTER TABLE %I ALTER COLUMN departname TYPE character varying(200)', rec.table_name);
        EXCEPTION WHEN others THEN
            RAISE NOTICE 'Error during ALTER TABLE command for table %:', rec.table_name;
			continue;
        END;
    END LOOP;
END;
$BODY$;

</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3460</ID>
    <SQLText>DROP VIEW public.v_bmpurchaseapplication;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3461</ID>
    <SQLText>DROP VIEW public.v_bmpurchaseapplicationpayform;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3462</ID>
    <SQLText>DROP VIEW public.v_conatractchangereport;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3463</ID>
    <SQLText>DROP VIEW public.v_projectmembermanhoursummary;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3464</ID>
    <SQLText>DROP VIEW public.v_projectmembertaskdetailreport;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3465</ID>
    <SQLText>DROP VIEW public.v_userkpilist;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3467</ID>
    <SQLText>select change_field_size();</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3468</ID>
    <SQLText>DROP VIEW public.v_conatractexecutereport;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3469</ID>
    <SQLText>select change_field_size();</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3470</ID>
    <SQLText>-- View: public.v_bmpurchaseapplication

-- DROP VIEW public.v_bmpurchaseapplication;

CREATE OR REPLACE VIEW public.v_bmpurchaseapplication
 AS
 SELECT t_bmpurchaseapplication.id,
    t_bmpurchaseapplication.code AS bmacode,
    t_bmpurchaseapplication.name,
    t_bmpurchaseapplication.application,
    t_bmpurchaseapplication.applicationdate,
    t_bmpurchaseapplication.remark,
    t_bmpurchaseapplication.entercode,
    t_bmpurchaseapplication.departname,
    t_bmpurchaseapplication.engineeringaddress,
    t_bmpurchaseapplication.engineeringnumber,
    t_bmpurchaseapplication.engineeringunitname,
    t_bmpurchaseapplication.planstarttime,
    t_bmpurchaseapplication.totalduration,
    t_bmpurchaseapplication.devicenumber,
    t_bmpurchaseapplication.deviceunitname,
    t_bmpurchaseapplication.sitecondition,
    t_bmpurchaseapplication.manhour,
    t_bmpurchaseapplication.othercomment,
    t_bmpurchaseapplication.expectedamount,
    t_bmpurchaseapplication.status,
    t_bmpurchaseapplication.suppliercode,
    t_bmpurchaseapplication.suppliername,
    t_bmpurchaseapplication.projectid
   FROM t_bmpurchaseapplication;

</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3471</ID>
    <SQLText>-- View: public.v_bmpurchaseapplicationpayform

-- DROP VIEW public.v_bmpurchaseapplicationpayform;

CREATE OR REPLACE VIEW public.v_bmpurchaseapplicationpayform
 AS
 SELECT t_bmpurchaseapplication.id,
    t_bmpurchaseapplication.code AS bmaccode,
    t_bmpurchaseapplication.name,
    t_bmpurchaseapplication.application,
    t_bmpurchaseapplication.applicationdate,
    t_bmpurchaseapplication.remark,
    t_bmpurchaseapplication.entercode,
    t_bmpurchaseapplication.departname,
    t_bmpurchaseapplication.engineeringaddress,
    t_bmpurchaseapplication.engineeringnumber,
    t_bmpurchaseapplication.engineeringunitname,
    t_bmpurchaseapplication.planstarttime,
    t_bmpurchaseapplication.totalduration,
    t_bmpurchaseapplication.devicenumber,
    t_bmpurchaseapplication.deviceunitname,
    t_bmpurchaseapplication.sitecondition,
    t_bmpurchaseapplication.manhour,
    t_bmpurchaseapplication.othercomment,
    t_bmpurchaseapplication.expectedamount,
    t_bmpurchaseapplication.actualmanhour,
    t_bmpurchaseapplication.unitprice,
    t_bmpurchaseapplication.actualamount,
    t_bmpurchaseapplication.status,
    t_bmpurchaseapplication.suppliercode,
    t_bmpurchaseapplication.suppliername,
    t_bmpurchaseapplication.projectid,
    t_bmpurchaseapplication.outcontractpayamount,
    t_bmpurchaseapplication.deductedamount,
    t_bmpurchaseapplication.totalpayamount,
    t_bmpurchaseapplication.accountcode,
    t_bmpurchaseapplication.accountname,
    t_bmpurchaseapplication.currencytype,
    t_bmpurchaseapplication.comment
   FROM t_bmpurchaseapplication;

</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3472</ID>
    <SQLText>-- View: public.v_conatractchangereport

-- DROP VIEW public.v_conatractchangereport;

CREATE OR REPLACE VIEW public.v_conatractchangereport
 AS
 SELECT a.id,
    b.constractcode,
    b.constractname,
    f_getconstractrelatedprojectname(b.constractcode) AS projectname,
    b.departcode,
    b.departname,
    a.changecontent,
    a.changetype,
    a.afterchangeamount,
    b.amount,
    b.parta,
    b.partb,
    b.amount - a.afterchangeamount AS changebalance,
    a.changetime
   FROM t_constractchangerecord a
     LEFT JOIN t_constract b ON a.constractcode::text = b.constractcode::text;

</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3473</ID>
    <SQLText>-- View: public.v_projectmembermanhoursummary

-- DROP VIEW public.v_projectmembermanhoursummary;

CREATE OR REPLACE VIEW public.v_projectmembermanhoursummary
 AS
 SELECT a.usercode,
    a.username,
    c.departcode,
    c.departname,
    a.workdate,
    a.projectid,
    a.projectname,
    a.manhour,
    a.confirmmanhour
   FROM t_dailywork a,
    t_projectmember b,
    t_department c
  WHERE a.usercode = b.usercode AND b.departcode = c.departcode;

</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3474</ID>
    <SQLText>-- View: public.v_projectmembertaskdetailreport

-- DROP VIEW public.v_projectmembertaskdetailreport;

CREATE OR REPLACE VIEW public.v_projectmembertaskdetailreport
 AS
 SELECT COALESCE(f.departcode, ''::bpchar) AS departcode,
    COALESCE(f.departname, ''::character varying) AS departname,
    COALESCE(e.usercode, ''::bpchar) AS usercode,
    COALESCE(e.username, ''::bpchar) AS username,
        CASE b.projectid
            WHEN 1 THEN NULL::bigint
            ELSE b.projectid
        END AS projectid,
    COALESCE(b.projectcode, ''::character varying) AS projectcode,
    COALESCE(b.projectname, ''::bpchar) AS projectname,
    COALESCE(c.id::text, ''::text) AS planid,
    COALESCE(c.name, ''::character varying) AS planname,
    a.taskid,
    a.task AS taskname,
    c.start_date AS planbegintime,
    c.end_date AS planendtime,
    a.begindate AS taskbegindate,
    d.operationtime AS taskfirstoperatetime,
    a.enddate AS taskenddate,
    d.operationtime AS tasklastestoperatetime,
    a.status,
    f_getsumtasklog(a.taskid) AS tasklog,
    a.manhour,
    a.type AS tasktype
   FROM t_projecttask a
     LEFT JOIN t_project b ON a.projectid = b.projectid
     LEFT JOIN t_impleplan c ON a.planid = c.id AND (c.verid IN ( SELECT t_projectplanversion.verid
           FROM t_projectplanversion
          WHERE t_projectplanversion.type = '在用'::bpchar))
     LEFT JOIN t_taskassignrecord d ON a.taskid = d.taskid AND (d.id IN ( SELECT min(t_taskassignrecord.id) AS min
           FROM t_taskassignrecord
          GROUP BY t_taskassignrecord.taskid))
     LEFT JOIN t_projectmember e ON d.operatorcode = e.usercode
     LEFT JOIN t_department f ON e.departcode = f.departcode
     LEFT JOIN t_taskassignrecord g ON a.taskid = g.taskid AND (g.id IN ( SELECT min(t_taskassignrecord.id) AS min
           FROM t_taskassignrecord
          GROUP BY t_taskassignrecord.taskid))
  WHERE (a.planid IN ( SELECT t_impleplan.id AS planid
           FROM t_impleplan)) AND (a.projectid IN ( SELECT t_project.projectid
           FROM t_project));

</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3475</ID>
    <SQLText>-- View: public.v_userkpilist

-- DROP VIEW public.v_userkpilist;

CREATE OR REPLACE VIEW public.v_userkpilist
 AS
 SELECT a.usercode,
    a.username,
    a.gender,
    a.duty,
    a.departcode,
    a.departname,
    COALESCE(b.kpicheckid, 0::bigint) AS kpicheckid,
    COALESCE(b.kpicheckname, ''::character varying) AS kpicheckname,
    to_char(b.starttime, ''::text) AS starttime,
    to_char(b.endtime, ''::text) AS endtime,
    COALESCE(b.totalselfpoint, 0::numeric) AS totalselfpoint,
    COALESCE(b.totalleaderpoint, 0::numeric) AS totalleaderpoint,
    COALESCE(b.totalthirdpartpoint, 0::numeric) AS totalthirdpartpoint,
    COALESCE(b.totalsqlpoint, 0::numeric) AS totalsqlpoint,
    COALESCE(b.totalhrpoint, 0::numeric) AS totalhrpoint,
    COALESCE(b.totalpoint, 0::numeric) AS totalpoint
   FROM t_projectmember a
     FULL JOIN t_userkpicheck b ON a.usercode = b.usercode::bpchar;

</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3476</ID>
    <SQLText>-- View: public.v_conatractexecutereport

-- DROP VIEW public.v_conatractexecutereport;

CREATE OR REPLACE VIEW public.v_conatractexecutereport
 AS
 SELECT a.constractcode,
    a.constractname,
    f_getconstractrelatedprojectname(a.constractcode) AS projectname,
    a.departcode,
    a.departname,
    a.exception,
    a.amount,
    a.parta,
    a.partb,
    a.startdate,
    a.enddate,
    a.signdate,
    a.archivetime
   FROM t_constract a
     LEFT JOIN t_constractrelatedproject c ON a.constractcode::text = c.constractcode::text
  WHERE a.signdate &gt; a.startdate;
</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3477</ID>
    <SQLText>CREATE OR REPLACE FUNCTION public.change_field_size_parameter(
    in_column_name TEXT,
    in_data_type TEXT,
    in_field_length INTEGER
)
RETURNS VOID
LANGUAGE 'plpgsql'
COST 100
VOLATILE PARALLEL UNSAFE
AS $BODY$
DECLARE
    rec RECORD;
BEGIN
    FOR rec IN SELECT table_name 
                 FROM INFORMATION_SCHEMA.COLUMNS 
                 WHERE column_name = in_column_name
                   AND table_schema NOT IN ('pg_catalog', 'information_schema')
                   AND table_name NOT LIKE 'v_%'
    LOOP
        BEGIN
            EXECUTE format('ALTER TABLE %I ALTER COLUMN %I TYPE %I(length=%I)', rec.table_name, in_column_name, in_data_type, in_field_length);
        EXCEPTION WHEN others THEN
            RAISE NOTICE 'Error during ALTER TABLE command for table % and column %:', rec.table_name, in_column_name;
			continue;
        END;
    END LOOP;
END;
$BODY$;
</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3478</ID>
    <SQLText>alter table t_projectmember add column leftbarextend character(10) default 'NO';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3479</ID>
    <SQLText>Update t_projectmember set leftbarextend = 'NO';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3480</ID>
    <SQLText>-- View: public.v_projectmembermanhoursummary

-- DROP VIEW public.v_projectmembermanhoursummary;

CREATE OR REPLACE VIEW public.v_projectmembermanhoursummary
 AS
 SELECT a.usercode,
    a.username,
    c.departcode,
    c.departname,
    a.workdate,
    a.projectid,
    a.projectname,
    a.manhour,
    a.confirmmanhour
   FROM t_dailywork a,
    t_projectmember b,
    t_department c
  WHERE a.usercode = b.usercode AND b.departcode = c.departcode;
</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3481</ID>
    <SQLText>-- View: public.v_bmpurchaseapplication

-- DROP VIEW public.v_bmpurchaseapplication;

CREATE OR REPLACE VIEW public.v_bmpurchaseapplication
 AS
 SELECT t_bmpurchaseapplication.id,
    t_bmpurchaseapplication.code AS bmacode,
    t_bmpurchaseapplication.name,
    t_bmpurchaseapplication.application,
    t_bmpurchaseapplication.applicationdate,
    t_bmpurchaseapplication.remark,
    t_bmpurchaseapplication.entercode,
    t_bmpurchaseapplication.departname,
    t_bmpurchaseapplication.engineeringaddress,
    t_bmpurchaseapplication.engineeringnumber,
    t_bmpurchaseapplication.engineeringunitname,
    t_bmpurchaseapplication.planstarttime,
    t_bmpurchaseapplication.totalduration,
    t_bmpurchaseapplication.devicenumber,
    t_bmpurchaseapplication.deviceunitname,
    t_bmpurchaseapplication.sitecondition,
    t_bmpurchaseapplication.manhour,
    t_bmpurchaseapplication.othercomment,
    t_bmpurchaseapplication.expectedamount,
    t_bmpurchaseapplication.status,
    t_bmpurchaseapplication.suppliercode,
    t_bmpurchaseapplication.suppliername,
    t_bmpurchaseapplication.projectid
   FROM t_bmpurchaseapplication;
</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3482</ID>
    <SQLText>-- View: public.v_bmpurchaseapplicationpayform

-- DROP VIEW public.v_bmpurchaseapplicationpayform;

CREATE OR REPLACE VIEW public.v_bmpurchaseapplicationpayform
 AS
 SELECT t_bmpurchaseapplication.id,
    t_bmpurchaseapplication.code AS bmaccode,
    t_bmpurchaseapplication.name,
    t_bmpurchaseapplication.application,
    t_bmpurchaseapplication.applicationdate,
    t_bmpurchaseapplication.remark,
    t_bmpurchaseapplication.entercode,
    t_bmpurchaseapplication.departname,
    t_bmpurchaseapplication.engineeringaddress,
    t_bmpurchaseapplication.engineeringnumber,
    t_bmpurchaseapplication.engineeringunitname,
    t_bmpurchaseapplication.planstarttime,
    t_bmpurchaseapplication.totalduration,
    t_bmpurchaseapplication.devicenumber,
    t_bmpurchaseapplication.deviceunitname,
    t_bmpurchaseapplication.sitecondition,
    t_bmpurchaseapplication.manhour,
    t_bmpurchaseapplication.othercomment,
    t_bmpurchaseapplication.expectedamount,
    t_bmpurchaseapplication.actualmanhour,
    t_bmpurchaseapplication.unitprice,
    t_bmpurchaseapplication.actualamount,
    t_bmpurchaseapplication.status,
    t_bmpurchaseapplication.suppliercode,
    t_bmpurchaseapplication.suppliername,
    t_bmpurchaseapplication.projectid,
    t_bmpurchaseapplication.outcontractpayamount,
    t_bmpurchaseapplication.deductedamount,
    t_bmpurchaseapplication.totalpayamount,
    t_bmpurchaseapplication.accountcode,
    t_bmpurchaseapplication.accountname,
    t_bmpurchaseapplication.currencytype,
    t_bmpurchaseapplication.comment
   FROM t_bmpurchaseapplication;
</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3483</ID>
    <SQLText>-- View: public.v_conatractchangereport

-- DROP VIEW public.v_conatractchangereport;

CREATE OR REPLACE VIEW public.v_conatractchangereport
 AS
 SELECT a.id,
    b.constractcode,
    b.constractname,
    f_getconstractrelatedprojectname(b.constractcode) AS projectname,
    b.departcode,
    b.departname,
    a.changecontent,
    a.changetype,
    a.afterchangeamount,
    b.amount,
    b.parta,
    b.partb,
    b.amount - a.afterchangeamount AS changebalance,
    a.changetime
   FROM t_constractchangerecord a
     LEFT JOIN t_constract b ON a.constractcode::text = b.constractcode::text;
</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3484</ID>
    <SQLText>-- View: public.v_projectmembermanhoursummary

-- DROP VIEW public.v_projectmembermanhoursummary;

CREATE OR REPLACE VIEW public.v_projectmembermanhoursummary
 AS
 SELECT a.usercode,
    a.username,
    c.departcode,
    c.departname,
    a.workdate,
    a.projectid,
    a.projectname,
    a.manhour,
    a.confirmmanhour
   FROM t_dailywork a,
    t_projectmember b,
    t_department c
  WHERE a.usercode = b.usercode AND b.departcode = c.departcode;
</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3485</ID>
    <SQLText>-- View: public.v_projectmembertaskdetailreport

-- DROP VIEW public.v_projectmembertaskdetailreport;

CREATE OR REPLACE VIEW public.v_projectmembertaskdetailreport
 AS
 SELECT COALESCE(f.departcode, ''::bpchar) AS departcode,
    COALESCE(f.departname, ''::character varying) AS departname,
    COALESCE(e.usercode, ''::bpchar) AS usercode,
    COALESCE(e.username, ''::bpchar) AS username,
        CASE b.projectid
            WHEN 1 THEN NULL::bigint
            ELSE b.projectid
        END AS projectid,
    COALESCE(b.projectcode, ''::character varying) AS projectcode,
    COALESCE(b.projectname, ''::bpchar) AS projectname,
    COALESCE(c.id::text, ''::text) AS planid,
    COALESCE(c.name, ''::character varying) AS planname,
    a.taskid,
    a.task AS taskname,
    c.start_date AS planbegintime,
    c.end_date AS planendtime,
    a.begindate AS taskbegindate,
    d.operationtime AS taskfirstoperatetime,
    a.enddate AS taskenddate,
    d.operationtime AS tasklastestoperatetime,
    a.status,
    f_getsumtasklog(a.taskid) AS tasklog,
    a.manhour,
    a.type AS tasktype
   FROM t_projecttask a
     LEFT JOIN t_project b ON a.projectid = b.projectid
     LEFT JOIN t_impleplan c ON a.planid = c.id AND (c.verid IN ( SELECT t_projectplanversion.verid
           FROM t_projectplanversion
          WHERE t_projectplanversion.type = '在用'::bpchar))
     LEFT JOIN t_taskassignrecord d ON a.taskid = d.taskid AND (d.id IN ( SELECT min(t_taskassignrecord.id) AS min
           FROM t_taskassignrecord
          GROUP BY t_taskassignrecord.taskid))
     LEFT JOIN t_projectmember e ON d.operatorcode = e.usercode
     LEFT JOIN t_department f ON e.departcode = f.departcode
     LEFT JOIN t_taskassignrecord g ON a.taskid = g.taskid AND (g.id IN ( SELECT min(t_taskassignrecord.id) AS min
           FROM t_taskassignrecord
          GROUP BY t_taskassignrecord.taskid))
  WHERE (a.planid IN ( SELECT t_impleplan.id AS planid
           FROM t_impleplan)) AND (a.projectid IN ( SELECT t_project.projectid
           FROM t_project));
</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3486</ID>
    <SQLText>-- View: public.v_userkpilist

-- DROP VIEW public.v_userkpilist;

CREATE OR REPLACE VIEW public.v_userkpilist
 AS
 SELECT a.usercode,
    a.username,
    a.gender,
    a.duty,
    a.departcode,
    a.departname,
    COALESCE(b.kpicheckid, 0::bigint) AS kpicheckid,
    COALESCE(b.kpicheckname, ''::character varying) AS kpicheckname,
    to_char(b.starttime, ''::text) AS starttime,
    to_char(b.endtime, ''::text) AS endtime,
    COALESCE(b.totalselfpoint, 0::numeric) AS totalselfpoint,
    COALESCE(b.totalleaderpoint, 0::numeric) AS totalleaderpoint,
    COALESCE(b.totalthirdpartpoint, 0::numeric) AS totalthirdpartpoint,
    COALESCE(b.totalsqlpoint, 0::numeric) AS totalsqlpoint,
    COALESCE(b.totalhrpoint, 0::numeric) AS totalhrpoint,
    COALESCE(b.totalpoint, 0::numeric) AS totalpoint
   FROM t_projectmember a
     FULL JOIN t_userkpicheck b ON a.usercode = b.usercode::bpchar;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3487</ID>
    <SQLText>-- View: public.v_conatractexecutereport

-- DROP VIEW public.v_conatractexecutereport;

CREATE OR REPLACE VIEW public.v_conatractexecutereport
 AS
 SELECT a.constractcode,
    a.constractname,
    f_getconstractrelatedprojectname(a.constractcode) AS projectname,
    a.departcode,
    a.departname,
    a.exception,
    a.amount,
    a.parta,
    a.partb,
    a.startdate,
    a.enddate,
    a.signdate,
    a.archivetime
   FROM t_constract a
     LEFT JOIN t_constractrelatedproject c ON a.constractcode::text = c.constractcode::text
  WHERE a.signdate &gt; a.startdate;
</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3488</ID>
    <SQLText>Alter Table T_Project Add PMDuty char(100) default '';
Alter Table T_project Add PMPhoneNumber char(100) default '';
Alter Table T_project Add ProjectOperator char(20) default '';
Alter Table T_project Add ProjectOperatorPhoneNumber char(20) default '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3489</ID>
    <SQLText>Update T_Project set PMDuty = '',PMPhoneNumber = '',ProjectOperator = '',ProjectOperatorPhoneNumber = '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3490</ID>
    <SQLText>Alter table public.t_qmqualitydefectnotice Add column purchasingcontractcode character(50) Default ''</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3491</ID>
    <SQLText>Update public.t_qmqualitydefectnotice Set purchasingcontractcode = '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3492</ID>
    <SQLText>Update T_ProModuleLevel Set Visible = 'NO',IsDeleted = 'NO' Where ModuleName = '项目基础设置';
Update T_ProModuleLevel Set Visible = 'NO',IsDeleted = 'NO' Where ModuleName = '项目导入/导出';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3493</ID>
    <SQLText>Delete From T_WLType Where Type = '招标管理';
Insert Into T_WLType(Type,HomeName,LangCode,MakeType,SortNumber) values('招标管理','招标管理','zh-CN','SYS',0)</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3494</ID>
    <SQLText>Update T_WLType Set Type='招标管理',HomeName='招标管理' Where Type ='招投标管理';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3495</ID>
    <SQLText>Delete From T_WLType Where Type = '招标管理';
Insert Into T_WLType(Type,HomeName,LangCode,MakeType,SortNumber) values('招标管理','招标管理','zh-CN','SYS',0)</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3496</ID>
    <SQLText>DROP TRIGGER IF EXISTS "TG_InsertWLStepByStatus" ON public.t_workflow;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3497</ID>
    <SQLText>Create TRIGGER "TG_InsertWLStepByStatus"
    AFTER INSERT
    ON public.t_workflow
    FOR EACH ROW
    EXECUTE FUNCTION public."Func_TG_InsertWLStepByStatus"();</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3498</ID>
    <SQLText>CREATE TRIGGER "TG_UpdateWLStepByStatus"
    AFTER UPDATE 
    ON public.t_workflow
    FOR EACH ROW
    EXECUTE FUNCTION public."Func_TG_InsertWLStepByStatus"();</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3499</ID>
    <SQLText>CREATE OR REPLACE FUNCTION public."Func_TG_InsertWLStepByStatus"()
    RETURNS trigger
    LANGUAGE 'plpgsql'
    COST 100
    VOLATILE NOT LEAKPROOF
AS $BODY$
declare intCount bigint;
declare chrNewStatus char(10);
declare chrAutoActive char(10);
declare chrTemName char(100);

begin

   select rtrim(ltrim(TemName)) into chrTemName from T_WorkFlow  Where WLID = NEW.WLID ;
   Select rtrim(ltrim(AutoActive)) into chrAutoActive from T_WorkflowTemplate Where TemName = chrTemName;
   
   IF (TG_OP='UPDATE' or chrAutoActive='YES') THEN
   
   if ((NEW.Status &lt;&gt; Old.Status) Or (chrAutoActive='YES')) then

       select rtrim(ltrim(Status)) into chrNewStatus from T_WorkFlow  Where WLID = NEW.WLID ;
	   
       select Count(*) into intCount From T_WorkFlowStep Where WLID = new.WLID ;
       
       if(intCount = 0 and (chrNewStatus = '处理中' or chrAutoActive='YES'))  then
	   
           insert into T_WorkFlowStep(WLID,SortNumber,StepName,LimitedOperator,LimitedTime,DepartRelated,Status)
              select new.WLID,SortNumber,StepName,LimitedOperator,LimitedTime,DepartRelated, '新建'
                from T_WorkFlowTStep where TemName = new.TemName and SortNumber = 1 ;
   
      
           Update T_WorkFlowStep set Status = '处理中',ActiveTime = now() where SortNumber = 1 and WLID = new.WLID;
		   Update T_WorkFlow Set Status = '处理中' Where WLID = new.WLID;
        
       end if;
      
   end if;
   
   END IF;
   	return new;
	
end
$BODY$;

ALTER FUNCTION public."Func_TG_InsertWLStepByStatus"()
    OWNER TO postgres;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3500</ID>
    <SQLText>Delete From T_RelatedWorkflowTemplate Where wfTemplateName Like '项目153%';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3501</ID>
    <SQLText>Delete From T_WorkflowTemplate Where TemName Like '项目153%';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3502</ID>
    <SQLText>Delete From T_Workflow Where TemName Like '项目153%';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3503</ID>
    <SQLText>Update public.t_systemlanguage Set language = 'Español' Where LangCode = 'es';
Update public.t_systemlanguage Set language = 'Français' Where LangCode = 'fr';
insert into public.t_systemlanguage(LangCode,Language,SortNumber) values('ko','Coreano','11')</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3504</ID>
    <SQLText>Update public.t_systemlanguage Set Language = '한국어' Where LangCode = 'ko';
Update public.t_systemlanguage Set Language = '日本語' Where LangCode = 'ja';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3505</ID>
    <SQLText>Delete From T_ProModule Where UserCode Not In (Select UserCode From T_ProjectMember)</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3506</ID>
    <SQLText>Alter Table T_Project Add ApprovedAmount Decimal(18,2) Default 0;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3507</ID>
    <SQLText>Update T_Project Set ApprovedAmount = 0;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3508</ID>
    <SQLText>CREATE TABLE IF NOT EXISTS public.t_documentForProjectPlanTemplate
(
    docid bigint NOT NULL,
    relatedtype character(20) COLLATE pg_catalog."default",
    doctypeid bigint,
    doctype character(100) COLLATE pg_catalog."default",
    relatedid bigint,
    docname character varying(200) COLLATE pg_catalog."default",
    description character varying(1000) COLLATE pg_catalog."default",
    address character varying(500) COLLATE pg_catalog."default",
    author character varying(20) COLLATE pg_catalog."default",
    departcode character varying(20) COLLATE pg_catalog."default",
    departname character varying(200) COLLATE pg_catalog."default" DEFAULT ''::character varying,
    uploadmancode character(20) COLLATE pg_catalog."default",
    uploadmanname character(20) COLLATE pg_catalog."default",
    uploadtime timestamp without time zone,
    visible character varying(100) COLLATE pg_catalog."default",
    status character(10) COLLATE pg_catalog."default",
    relatedname character varying(200) COLLATE pg_catalog."default" DEFAULT ''::character varying,
    CONSTRAINT t_documentForProjectPlanTemplate_pkey PRIMARY KEY (docid)
)</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3509</ID>
    <SQLText>CREATE SEQUENCE IF NOT EXISTS public.t_documentForProjectPlanTemplate_docid_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1
    OWNED BY t_documentForProjectPlanTemplate.docid;

ALTER SEQUENCE public.t_documentForProjectPlanTemplate_docid_seq
    OWNER TO postgres;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3510</ID>
    <SQLText>Drop Table t_documentForProjectPlanTemplate</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3511</ID>
    <SQLText>CREATE TABLE IF NOT EXISTS public.t_documentForProjectPlanTemplate
(
    docid bigint NOT NULL DEFAULT nextval('t_document_docid_seq'::regclass),
    relatedtype character(20) COLLATE pg_catalog."default",
    doctypeid bigint,
    doctype character(100) COLLATE pg_catalog."default",
    relatedid bigint,
    docname character varying(200) COLLATE pg_catalog."default",
    description character varying(1000) COLLATE pg_catalog."default",
    address character varying(500) COLLATE pg_catalog."default",
    author character varying(20) COLLATE pg_catalog."default",
    departcode character varying(20) COLLATE pg_catalog."default",
    departname character varying(200) COLLATE pg_catalog."default" DEFAULT ''::character varying,
    uploadmancode character(20) COLLATE pg_catalog."default",
    uploadmanname character(20) COLLATE pg_catalog."default",
    uploadtime timestamp without time zone,
    visible character varying(100) COLLATE pg_catalog."default",
    status character(10) COLLATE pg_catalog."default",
    relatedname character varying(200) COLLATE pg_catalog."default" DEFAULT ''::character varying,
    CONSTRAINT t_documentForProjectPlanTemplate_pkey PRIMARY KEY (docid)
)</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3512</ID>
    <SQLText>Drop Table t_documentForProjectPlanTemplate;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3513</ID>
    <SQLText>CREATE TABLE IF NOT EXISTS public.t_documentForProjectPlanTemplate
(
    docid bigint NOT NULL DEFAULT nextval('t_document_docid_seq'::regclass),
    relatedtype character(20) COLLATE pg_catalog."default",
    doctypeid bigint,
    doctype character(100) COLLATE pg_catalog."default",
    relatedid bigint,
    docname character varying(200) COLLATE pg_catalog."default",
    description character varying(1000) COLLATE pg_catalog."default",
    address character varying(500) COLLATE pg_catalog."default",
    author character varying(20) COLLATE pg_catalog."default",
    departcode character varying(20) COLLATE pg_catalog."default",
    departname character varying(200) COLLATE pg_catalog."default" DEFAULT ''::character varying,
    uploadmancode character(20) COLLATE pg_catalog."default",
    uploadmanname character(20) COLLATE pg_catalog."default",
    uploadtime timestamp without time zone,
    visible character varying(100) COLLATE pg_catalog."default",
    status character(10) COLLATE pg_catalog."default",
    relatedname character varying(200) COLLATE pg_catalog."default" DEFAULT ''::character varying,
    CONSTRAINT t_documentForProjectPlanTemplate_pkey PRIMARY KEY (docid)
)</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3514</ID>
    <SQLText>CREATE SEQUENCE IF NOT EXISTS public.t_documentForProjectPlanTemplate_docid_seq
    INCREMENT 1
    START 1
    MINVALUE 1
    MAXVALUE 9223372036854775807
    CACHE 1
    OWNED BY t_documentForProjectPlanTemplate.docid;

ALTER SEQUENCE public.t_documentForProjectPlanTemplate_docid_seq
    OWNER TO postgres;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3515</ID>
    <SQLText>ALTER TABLE public.t_documentForProjectPlanTemplate  
ALTER COLUMN docid SET DEFAULT nextval('t_documentForProjectPlanTemplate_docid_seq'::regclass);</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3516</ID>
    <SQLText>CREATE OR REPLACE FUNCTION find_longest_common_substring(str1 text, str2 text)  
RETURNS text AS 
$$
  
DECLARE  
    len1 INTEGER := LENGTH(str1);  
    len2 INTEGER := LENGTH(str2);  
    i INTEGER;  
    j INTEGER;  
    max_len INTEGER := 0;  
    end_pos INTEGER;  
    lcs_str text := '';  
BEGIN  
    -- 使用动态规划找出最长公共子串  
    FOR i IN 1..len1 LOOP  
        FOR j IN 1..len2 LOOP  
            IF SUBSTRING(str1 FROM i FOR 1) = SUBSTRING(str2 FROM j FOR 1) THEN  
                IF i = 1 OR j = 1 THEN  
                    max_len := 1;  
                    end_pos := j;  
                ELSIF SUBSTRING(str1 FROM i-1 FOR max_len) = SUBSTRING(str2 FROM j-max_len FOR max_len) THEN  
                    max_len := max_len + 1;  
                    end_pos := j;  
                ELSE  
                    max_len := 1;  
                    end_pos := j;  
                END IF;  
            END IF;  
        END LOOP;  
    END LOOP;  
  
    -- 提取最长公共子串  
    IF max_len &gt; 0 THEN  
        lcs_str := SUBSTRING(str2 FROM end_pos-max_len+1 FOR max_len);  
    END IF;  
  
    RETURN lcs_str;  
END;  

$$
 LANGUAGE plpgsql;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3517</ID>
    <SQLText>Alter Table T_Project Add Column PMCanUpdatePlan char(10) Default 'YES';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3518</ID>
    <SQLText>Update T_Project Set PMCanUpdateplan = 'YES';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3519</ID>
    <SQLText>Alter Table T_Project Add Column LockStartupedPlan char(10) Default 'NO';
Alter Table T_Project Add Column allowpmchangestatus char(10) Default 'NO';
Alter Table T_Project Add Column autorunwfaftermakeproject char(10) Default 'NO';
Alter Table T_Project Add Column progressbydetailimpact char(10) Default 'YES';
Alter Table T_Project Add Column planprogressneedplanerconfirm char(10) Default 'NO';
Alter Table T_Project Add Column projectstartupneedsupperconfirm char(10) Default 'NO';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3520</ID>
    <SQLText>Update T_Project Set LockStartupedPlan = 'NO';
Update T_Project Set allowpmchangestatus = 'NO';
Update T_Project Set autorunwfaftermakeproject = 'NO';
Update T_Project Set progressbydetailimpact = 'YES';
Update T_Project Set planprogressneedplanerconfirm = 'NO';
Update T_Project Set projectstartupneedsupperconfirm = 'NO';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3521</ID>
    <SQLText>CREATE OR REPLACE VIEW public.v_prorelateduser
 AS
 SELECT a.id,
    a.projectid,
    b.projectcode,
    b.projectname,
    b.projecttype,
    b.status,
    b.begindate,
    b.enddate,
    b.parentid,
    b.customername,
    b.pingpai,
    b.productname,
    a.unithoursalary,
    a.actor,
    a.joindate,
    a.usercode,
    a.username,
    b.pmcode,
    b.pmname,
    b.priority,
    b.usercode AS makemancode,
    b.username AS makemanname,
    b.budget,
    b.manhour,
    b.mannumber,
    b.finishpercent,
    a.status AS mystatus,
    b.status AS prostatus,
    b.customerprojectcode,
    b.confirmedbysupper,
    b.makedate,
	b.ProjectStartupNeedSupperConfirm
	
   FROM t_relateduser a
     JOIN t_project b ON a.projectid = b.projectid
  WHERE b.status &lt;&gt; ALL (ARRAY['新建'::bpchar, '评审'::bpchar, '隐藏'::bpchar, '删除'::bpchar, '归档'::bpchar]);</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3522</ID>
    <SQLText>SELECT setval('t_project_projectid_seq', (SELECT MAX(ProjectID) FROM T_Project) + 1);</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3523</ID>
    <SQLText>Alter Table T_Project Add Column ProjectPlanStartupStatus char(10) Default 'NO';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3524</ID>
    <SQLText>UPdate T_Project Set ProjectPlanStartupStatus = 'NO';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3525</ID>
    <SQLText>Alter Table public.t_document Add Column MustUploadDoc char(200) Default '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3526</ID>
    <SQLText>Update T_Document Set MustUploadDoc = '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3527</ID>
    <SQLText>SELECT setval('t_document_docid_seq', (SELECT MAX(DocID) FROM T_Document) + 1);</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3528</ID>
    <SQLText>Update T_ActorGroup Set  GroupName = trim(GroupName);
Update T_ActorGroup Set  HomeName = trim(GroupName);</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3529</ID>
    <SQLText>Alter Table T_Project Add Column PlanStartupRelatedWorkflowTemplate char(50) Default '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3530</ID>
    <SQLText>Update T_Project Set PlanStartupRelatedWorkflowTemplate = '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3531</ID>
    <SQLText>Update public.t_userattendancerule Set Status = '在用' Where Status = '处理中' or Status = '活动'</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3532</ID>
    <SQLText>Alter Table public.t_customer Add Column SimpleName Char(60) Default '';
Alter Table public.t_customer Add Column WorkSiteURL Char(100) Default '';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3533</ID>
    <SQLText>Update T_Customer Set SimpleName = customername;
Update T_Customer Set WorkSiteURL = WebSite;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3534</ID>
    <SQLText>CREATE EXTENSION IF NOT EXISTS tablefunc;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3535</ID>
    <SQLText>CREATE OR REPLACE FUNCTION f_userattendancereport(
	startdate text,  
	enddate text,     
	departcode text,  
	username text
)
RETURNS text AS $$
declare 
	SqlCol text;
	MonthdaysSql VARCHAR(2000);
	UserAttendanceRecordSql VARCHAR(2000);
	Sql1 text;
	Sql2 text;
	Sql3 text;
	Sql4 text;
	LeaveSql text; 
	OvertimeSql text;
	SqlDetail text;	
	sqltotal text;
	recreport record;
	jsonreport text;
BEGIN

SELECT 'SELECT to_char(a.AttendanceDate, ''YYYY-MM-DD'') AttendanceDate,case WHEN c.Id is not null then 0 
when DATE_PART(''dow'',a.AttendanceDate) = 0 OR DATE_PART(''dow'',a.AttendanceDate)=6 OR b.ID IS NOT NULL THEN 1 ELSE 0 END IsHoliday 
FROM (SELECT generate_series(to_date('''||StartDate||''', ''YYYY-MM-DD''),to_date('''||EndDate||''', ''YYYY-MM-DD''),INTERVAL ''1 day'') as AttendanceDate) a 
LEFT JOIN T_FestivalsDaySet b ON a.AttendanceDate=b.FestivalsDate 
left join T_FestivalsExchangeDaySet c on a.AttendanceDate=c.ExchangeDate ' into MonthdaysSql;

SELECT ' SELECT UserCode,to_char(AttendanceDate,''YYYY-MM-DD'') AttendanceDate,LateMinute,EarlyMinute,LargestDistance,
CASE WHEN NCheckInIsMust=''YES'' THEN 1 ELSE 0 END NCheckInIsMust,CASE WHEN NCheckOutIsMust=''YES'' THEN 1 ELSE 0 END NCheckOutIsMust,
CASE WHEN MCheckInIsMust=''YES'' THEN MCheckIn 
WHEN NCheckInIsMust=''YES'' THEN NCheckIn
ELSE NULL END CheckIn,
CASE WHEN ACheckOutIsMust=''YES'' THEN ACheckOut 
WHEN NCheckOutIsMust=''YES'' THEN NCheckOut
ELSE NULL END CheckOut,
CASE WHEN MCheckInIsMust=''YES'' THEN COALESCE(MCheckInAddress,'''')  
WHEN NCheckInIsMust=''YES'' THEN COALESCE(NCheckInAddress,'''')
ELSE NULL END CheckInAddress,
CASE WHEN MCheckInIsMust=''YES'' THEN COALESCE(char_length(MCheckInAddress),0)  
WHEN NCheckInIsMust=''YES'' THEN COALESCE(char_length(NCheckInAddress),0)
ELSE 0 END CheckInAddressLen,
CASE WHEN ACheckOutIsMust=''YES'' THEN COALESCE(ACheckOutAddress,'''')   
WHEN NCheckOutIsMust=''YES'' THEN COALESCE(NCheckOutAddress,'''') 
ELSE NULL END CheckOutAddress,
CASE WHEN ACheckOutIsMust=''YES'' THEN COALESCE(char_length(ACheckOutAddress),0)   
WHEN NCheckOutIsMust=''YES'' THEN COALESCE(char_length(NCheckOutAddress),0) 
ELSE 0 END CheckOutAddressLen,
CASE WHEN MCheckInIsMust=''YES'' THEN MCheckInDistance  
WHEN NCheckInIsMust=''YES'' THEN NCheckInDistance
ELSE NULL END CheckInDistance,
CASE WHEN ACheckOutIsMust=''YES'' THEN ACheckOutDistance   
WHEN NCheckOutIsMust=''YES'' THEN NCheckOutDistance
ELSE NULL END CheckOutDistance
FROM T_UserAttendanceRecord 
where AttendanceDate &gt;= '''||StartDate||''' AND  AttendanceDate&lt; to_date('''||EndDate||''',''YYYY-MM-DD'')+INTERVAL ''1 day''  '
into UserAttendanceRecordSql;

SELECT ' SELECT a.姓名,a.部门,a.工号,a.职位,b.*,
CAST(a.出勤天数-COALESCE(f.HourNum,0)/8 as decimal(5,3)) 出勤天数,a.应出勤天数,a.迟到次数,a.迟到时长,a.旷工迟到次数,a.早退次数,a.早退时长,a.旷工天数,a.夜班天数,
d.*,c.*   
FROM(SELECT MIN(a.UserName) 姓名,MIN(a.DepartName)部门,MIN(a.UserCode)工号,MIN(a.Duty)职位,
SUM(case when ((b.CheckInAddressLen&gt;0 AND (b.CheckInDistance&lt;=b.LargestDistance or b.CheckInDistance=0))
and (b.CheckOutAddressLen&gt;0 AND (b.CheckOutDistance&lt;=b.LargestDistance or b.CheckOutDistance=0)) or l.HourNum&gt;=8) AND k.IsHoliday=0 then 1 else 0 end ) 出勤天数,
sum(case when k.IsHoliday=0 then 1 else 0 end) 应出勤天数, SUM(CASE WHEN COALESCE(b.LateMinute,0)&gt;0 THEN 1 ELSE 0 end) 迟到次数,
SUM(COALESCE(b.LateMinute,0)) 迟到时长,SUM(case when (COALESCE(b.CheckInAddressLen,0)=0 OR  b.CheckInDistance&gt;b.LargestDistance) AND (COALESCE(b.CheckOutAddressLen,0)=0 or b.CheckOutDistance&gt;b.LargestDistance) AND k.IsHoliday=0 and l.Creator is null then 1 else 0 end )
+SUM(CASE WHEN COALESCE(b.LateMinute,0)&gt;0 THEN 1 ELSE 0 end) 旷工迟到次数,
SUM(CASE WHEN COALESCE(b.EarlyMinute,0)&gt;0 THEN 1 ELSE 0 end) 早退次数,SUM(COALESCE(b.EarlyMinute,0)) 早退时长,
SUM(case when (COALESCE(b.CheckInAddressLen,0)=0 OR  b.CheckInDistance&gt;b.LargestDistance) AND (COALESCE(b.CheckOutAddressLen,0)=0 or b.CheckOutDistance&gt;b.LargestDistance) AND k.IsHoliday=0 and l.Creator is null then 1 else 0 end ) 旷工天数,
SUM(CASE WHEN b.NCheckInIsMust=1 AND COALESCE(b.LateMinute,0)=0 AND (b.CheckInDistance&lt;=b.LargestDistance OR b.CheckInDistance=0) 
AND b.NCheckOutIsMust=1 AND COALESCE(b.EarlyMinute,0)=0 AND (b.CheckOutDistance&lt;=b.LargestDistance OR b.CheckOutDistance=0) THEN 1 ELSE 0 END) 夜班天数 
FROM T_ProjectMember a 
cross join ('||MonthdaysSql||') k '
into Sql1;


SELECT  ' LEFT JOIN ( '||UserAttendanceRecordSql||' ) b ON a.UserCode=b.UserCode AND b.AttendanceDate=k.AttendanceDate 
left join(select a.Creator,to_char(a.StartTime,''YYYY-MM-DD'') LeaveDate,sum(a.HourNum) HourNum from T_LeaveApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
where b.Status in (''通过'',''结案'') and b.WLType = ''考勤管理'' and  b.RelatedType = ''请假''
group by a.Creator,to_char(a.StartTime,''YYYY-MM-DD'')) l on l.Creator=a.UserCode and k.AttendanceDate=l.LeaveDate 
WHERE a.DepartCode = '''||DepartCode||''' AND a.UserName = '''||UserName||'''
GROUP BY a.UserCode) a  ' into Sql2;


SELECT array_to_string(ARRAY(SELECT Type || ' int' FROM T_LeaveType order by sortnumber),',') into LeaveSql;

select ' LEFT JOIN (select * from crosstab(
''SELECT a.UserCode 工号1,c.Type LeaveType,COALESCE(b.HourNum,0) HourNum  
FROM T_ProjectMember a CROSS JOIN T_LeaveType c 
LEFT JOIN (select a.* from T_LeaveApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
where b.Status in (''''通过'''',''''结案'''') and b.WLType = ''''考勤管理'''' and  b.RelatedType = ''''请假'''') b ON a.UserCode=b.Creator AND c.Type=b.LeaveType AND to_date('''''||EndDate||''''',''''YYYY-MM-DD'''')&lt;b.EndTime AND to_date('''''||StartDate||''''',''''YYYY-MM-DD'''')&gt;=b.StartTime 
WHERE a.DepartCode = '''''||DepartCode||''''' AND a.UserName = '''''||UserName||''''' '', ''SELECT Type FROM T_LeaveType order by sortnumber'') 
as t(工号1 varchar(20),{0})
) b ON a.工号=b.工号1 
LEFT JOIN ( ' into sql3;

SELECT REPLACE(Sql3,'{0}',LeaveSql) into Sql3;

select string_agg('"'||interval || '" text',',') from( 
	select generate_series(1,EXTRACT(DAY FROM AGE(to_date(EndDate, 'YYYY-MM-DD')+INTERVAL '1 day',to_date(StartDate, 'YYYY-MM-DD')))) as interval
) itable into SqlCol;

select 'select * from crosstab(''SELECT a.UserCode,DATE_PART(''''day'''',a.AttendanceDate::date) AttendanceDay,
	CASE WHEN a.IsHoliday=1 THEN CASE WHEN b.UserCode IS NOT NULL THEN ''''休息并打卡'''' ELSE ''''休息'''' END 
	ELSE  
	CASE WHEN a.LeaveDetail IS NOT NULL THEN a.LeaveDetail 
		WHEN b.UserCode IS NULL THEN ''''旷工'''' 
		WHEN (b.CheckInAddressLen&gt;0 AND b.LateMinute=0 AND (b.CheckInDistance&lt;=b.LargestDistance or b.CheckInDistance=0)) 
	THEN CASE WHEN (b.CheckOutAddressLen&gt;0 AND b.EarlyMinute=0 AND (b.CheckOutDistance&lt;=b.LargestDistance or b.CheckOutDistance=0))  THEN ''''正常'''' 
			WHEN b.CheckOutAddressLen=0 THEN ''''下班缺卡'''' 
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''下班外勤，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 THEN ''''下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''下班外勤'''' END 
		WHEN b.CheckInAddressLen=0 
	THEN CASE WHEN (b.CheckOutAddressLen&gt;0 AND b.EarlyMinute=0 AND (b.CheckOutDistance&lt;=b.LargestDistance or b.CheckOutDistance=0))  THEN ''''上班缺卡'''' 
			WHEN b.CheckOutAddressLen=0 THEN ''''旷工'''' 
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班缺卡，下班外勤，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 THEN ''''上班缺卡，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班缺卡，下班外勤'''' END 
		WHEN b.CheckInAddressLen&gt;0 AND b.LateMinute&gt;0 AND b.CheckInDistance&gt;b.LargestDistance 
	THEN CASE WHEN (b.CheckOutAddressLen&gt;0 AND b.EarlyMinute=0 AND (b.CheckOutDistance&lt;=b.LargestDistance or b.CheckOutDistance=0))  THEN ''''上班外勤，上班迟到'''' 
			WHEN b.CheckOutAddressLen=0 THEN ''''上班外勤，上班迟到，下班缺卡''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班外勤，上班迟到，下班外勤，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 THEN ''''上班外勤，上班迟到，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班外勤，上班迟到，下班外勤'''' END 
		WHEN b.CheckInAddressLen&gt;0 AND b.LateMinute&gt;0 AND (b.CheckInDistance&lt;=b.LargestDistance or b.CheckInDistance=0)   
	THEN CASE WHEN (b.CheckOutAddressLen&gt;0 AND b.EarlyMinute=0 AND (b.CheckOutDistance&lt;=b.LargestDistance or b.CheckOutDistance=0))  THEN ''''上班迟到''''
			WHEN b.CheckOutAddressLen=0 THEN ''''上班迟到，下班缺卡'''' 
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班迟到，下班外勤，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 THEN ''''上班迟到，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班迟到，下班外勤'''' END 
		WHEN b.CheckInAddressLen&gt;0 AND b.LateMinute=0 AND b.CheckInDistance&gt;b.LargestDistance    
	THEN CASE WHEN (b.CheckOutAddressLen&gt;0 AND b.EarlyMinute=0 AND (b.CheckOutDistance&lt;=b.LargestDistance or b.CheckOutDistance=0))  THEN ''''上班外勤'''' 
			WHEN b.CheckOutAddressLen=0 THEN ''''上班外勤，下班缺卡'''' 
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班外勤，下班外勤，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 THEN ''''上班外勤，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班外勤，下班外勤'''' END 
		END 
	END|| case when a.OvertimeDetail is not null then '''' ''''||a.OvertimeDetail else '''''''' end Detail  FROM (
	SELECT a.UserCode,k.AttendanceDate,MIN(k.IsHoliday)IsHoliday,
		trim(leading '''','''' from (
			select string_agg(qjia,'''''''') qjv from (
				select DISTINCT '''',''''||LeaveType||'''' ''''||to_char(StartTime,''''YYYY-MM-DD'''')||''''到''''||to_char(EndTime,''''YYYY-MM-DD'''') as qjia 
				FROM (
					select a.* from T_LeaveApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
					where b.Status in (''''通过'''',''''结案'''') and b.WLType = ''''考勤管理'''' and  b.RelatedType = ''''请假'''') m WHERE m.Creator = a.UserCode AND to_date(k.AttendanceDate,''''YYYY-MM-DD'''') BETWEEN m.StartTime AND m.EndTime) lty))LeaveDetail,
		trim(leading '''','''' from (
			select DISTINCT '''',''''||OvertimeType||'''' ''''||SUBSTRING(COALESCE(OverTimeCheckInTime,''''''''),1,16)||''''到''''||SUBSTRING(COALESCE(OverTimeCheckOutTime,''''''''),1,16)
			FROM (
					select a.* from T_OvertimeApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
					where b.Status in (''''通过'''',''''结案'''') and b.WLType = ''''考勤管理'''' and  b.RelatedType = ''''加班'''') m WHERE m.Creator = a.UserCode AND to_date(k.AttendanceDate,''''YYYY-MM-DD'''') BETWEEN m.StartTime AND m.EndTime)) OvertimeDetail      
	FROM T_ProjectMember a 
	CROSS JOIN (
		SELECT to_char(a.AttendanceDate, ''''YYYY-MM-DD'''') AttendanceDate,case WHEN c.Id is not null then 0 
			when DATE_PART(''''dow'''',a.AttendanceDate) = 0 OR DATE_PART(''''dow'''',a.AttendanceDate)=6 OR b.ID IS NOT NULL THEN 1 ELSE 0 END IsHoliday 
		FROM (SELECT generate_series(to_date('''''||StartDate||''''', ''''YYYY-MM-DD''''),to_date('''''||EndDate||''''', ''''YYYY-MM-DD''''),INTERVAL ''''1 day'''') as AttendanceDate) a 
		LEFT JOIN T_FestivalsDaySet b ON a.AttendanceDate=b.FestivalsDate 
		left join T_FestivalsExchangeDaySet c on a.AttendanceDate=c.ExchangeDate ) k 
	LEFT JOIN (select a.* from T_LeaveApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
		where b.Status in (''''通过'''',''''结案'''') and b.WLType = ''''考勤管理'''' and  b.RelatedType = ''''请假'''') b 
		ON a.UserCode=b.Creator AND to_date(k.AttendanceDate,''''YYYY-MM-DD'''') BETWEEN b.StartTime AND b.EndTime 
	LEFT JOIN (select a.* from T_OvertimeApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
		where b.Status in (''''通过'''',''''结案'''') and b.WLType = ''''考勤管理'''' and  b.RelatedType = ''''加班'''') c  
		ON a.UserCode=c.Creator AND to_date(k.AttendanceDate,''''YYYY-MM-DD'''') BETWEEN c.StartTime AND c.EndTime
	WHERE a.DepartCode = '''''||DepartCode||''''' AND a.UserName = '''''||UserName||'''''
	GROUP BY a.UserCode,k.AttendanceDate) a 
	LEFT JOIN (  
		SELECT UserCode,to_char(AttendanceDate,''''YYYY-MM-DD'''') AttendanceDate,LateMinute,EarlyMinute,LargestDistance,
			CASE WHEN NCheckInIsMust=''''YES'''' THEN 1 ELSE 0 END NCheckInIsMust,CASE WHEN NCheckOutIsMust=''''YES'''' THEN 1 ELSE 0 END NCheckOutIsMust,
			CASE WHEN MCheckInIsMust=''''YES'''' THEN MCheckIn 
			WHEN NCheckInIsMust=''''YES'''' THEN NCheckIn
			ELSE NULL END CheckIn,
			CASE WHEN ACheckOutIsMust=''''YES'''' THEN ACheckOut 
			WHEN NCheckOutIsMust=''''YES'''' THEN NCheckOut
			ELSE NULL END CheckOut,
			CASE WHEN MCheckInIsMust=''''YES'''' THEN COALESCE(MCheckInAddress,'''''''')  
			WHEN NCheckInIsMust=''''YES'''' THEN COALESCE(NCheckInAddress,'''''''')
			ELSE NULL END CheckInAddress,
			CASE WHEN MCheckInIsMust=''''YES'''' THEN COALESCE(char_length(MCheckInAddress),0)  
			WHEN NCheckInIsMust=''''YES'''' THEN COALESCE(char_length(NCheckInAddress),0)
			ELSE 0 END CheckInAddressLen,
			CASE WHEN ACheckOutIsMust=''''YES'''' THEN COALESCE(ACheckOutAddress,'''''''')   
			WHEN NCheckOutIsMust=''''YES'''' THEN COALESCE(NCheckOutAddress,'''''''') 
			ELSE NULL END CheckOutAddress,
			CASE WHEN ACheckOutIsMust=''''YES'''' THEN COALESCE(char_length(ACheckOutAddress),0)   
			WHEN NCheckOutIsMust=''''YES'''' THEN COALESCE(char_length(NCheckOutAddress),0) 
			ELSE 0 END CheckOutAddressLen,
			CASE WHEN MCheckInIsMust=''''YES'''' THEN MCheckInDistance  
			WHEN NCheckInIsMust=''''YES'''' THEN NCheckInDistance
			ELSE NULL END CheckInDistance,
			CASE WHEN ACheckOutIsMust=''''YES'''' THEN ACheckOutDistance   
			WHEN NCheckOutIsMust=''''YES'''' THEN NCheckOutDistance
			ELSE NULL END CheckOutDistance
		FROM T_UserAttendanceRecord 
		where AttendanceDate &gt;= '''''||StartDate||''''' AND  AttendanceDate&lt; to_date('''''||EndDate||''''',''''YYYY-MM-DD'''')+INTERVAL ''''1 day''''  ) b
		ON a.UserCode=b.UserCode AND b.AttendanceDate=a.AttendanceDate'',''select generate_series(1, EXTRACT(DAY FROM AGE(to_date('''''||EndDate||''''', ''''YYYY-MM-DD'''')+INTERVAL ''''1 day'''',to_date('''''||StartDate||''''', ''''YYYY-MM-DD'''')))) as inter''
	) AS  t(usercode varchar(20),{0})' into SqlDetail;

select replace( SqlDetail , '{0}' , SqlCol) into SqlDetail;


SELECT array_to_string(ARRAY(SELECT Type || ' int' FROM T_OvertimeType),',') into OvertimeSql;

--按分钟计算实际加班时间 误差多加1分钟  因为午夜打卡时间分别为23:59和00:01 
SELECT ') c ON a.工号=c.UserCode 
LEFT JOIN (select * from crosstab(
			 ''SELECT a.UserCode 工号2,c.Type OvertimeType,FLOOR(COALESCE(DATEDIFF(''''mi'''',
				CASE WHEN b.OverTimeCheckInTime::timestamp without time zone&lt;b.StartTime THEN b.StartTime ELSE b.OverTimeCheckInTime::timestamp without time zone END,
				CASE WHEN b.OverTimeCheckOutTime::timestamp without time zone&gt;b.EndTime THEN b.EndTime ELSE b.OverTimeCheckOutTime::timestamp without time zone END)+1,0)*1.0/60) HourNum   
			FROM T_ProjectMember a 
			CROSS JOIN T_OvertimeType c 
			LEFT JOIN (select a.* from T_OvertimeApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
				where b.Status in (''''通过'''',''''结案'''') and b.WLType = ''''考勤管理'''' and  b.RelatedType = ''''加班'''') b ON a.UserCode=b.Creator AND '''''||StartDate||'''''&lt;b.EndTime AND '''''||EndDate||'''''&gt;=b.StartTime 
			WHERE a.DepartCode = '''''||DepartCode||''''' AND a.UserName = '''''||UserName||''''' ''
	,''SELECT distinct c.Type from T_OvertimeType c order by 1 '')
			as t(工号2 varchar(20),工作日加班 int,节假日加班 int,周末加班 int)
) d ON a.工号=d.工号2 
LEFT JOIN (		select a.Creator,SUM(COALESCE(a.HourNum,0)) HourNum from T_LeaveApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
		where b.Status in (''通过'',''结案'') and b.WLType = ''考勤管理'' and  b.RelatedType = ''请假'' AND '''||StartDate||'''::timestamp without time zone&lt;a.EndTime AND '''||EndDate||'''::timestamp without time zone&gt;=a.StartTime 
		GROUP BY a.Creator) f ON a.工号=f.Creator 
order by a.部门,a.姓名' into Sql4;

SELECT REPLACE(Sql4,'{0}',OvertimeSql) into Sql4;

select Sql1||Sql2||Sql3||SqlDetail||Sql4 into sqltotal;
execute sqltotal into recreport;
SELECT json_agg(row_to_json(recreport)) into jsonreport;

RETURN recreport;

END;
$$ LANGUAGE plpgsql;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3536</ID>
    <SQLText>CREATE OR REPLACE FUNCTION f_userattendancereport(
	startdate text,  
	enddate text,     
	departcode text,  
	username text
)
RETURNS text AS $$
declare 
	SqlCol text;
	MonthdaysSql VARCHAR(2000);
	UserAttendanceRecordSql VARCHAR(2000);
	Sql1 text;
	Sql2 text;
	Sql3 text;
	Sql4 text;
	LeaveSql text; 
	OvertimeSql text;
	SqlDetail text;	
	sqltotal text;
	recreport record;
	jsonreport text;
BEGIN

SELECT 'SELECT to_char(a.AttendanceDate, ''YYYY-MM-DD'') AttendanceDate,case WHEN c.Id is not null then 0 
when DATE_PART(''dow'',a.AttendanceDate) = 0 OR DATE_PART(''dow'',a.AttendanceDate)=6 OR b.ID IS NOT NULL THEN 1 ELSE 0 END IsHoliday 
FROM (SELECT generate_series(to_date('''||StartDate||''', ''YYYY-MM-DD''),to_date('''||EndDate||''', ''YYYY-MM-DD''),INTERVAL ''1 day'') as AttendanceDate) a 
LEFT JOIN T_FestivalsDaySet b ON a.AttendanceDate=b.FestivalsDate 
left join T_FestivalsExchangeDaySet c on a.AttendanceDate=c.ExchangeDate ' into MonthdaysSql;

SELECT ' SELECT UserCode,to_char(AttendanceDate,''YYYY-MM-DD'') AttendanceDate,LateMinute,EarlyMinute,LargestDistance,
CASE WHEN NCheckInIsMust=''YES'' THEN 1 ELSE 0 END NCheckInIsMust,CASE WHEN NCheckOutIsMust=''YES'' THEN 1 ELSE 0 END NCheckOutIsMust,
CASE WHEN MCheckInIsMust=''YES'' THEN MCheckIn 
WHEN NCheckInIsMust=''YES'' THEN NCheckIn
ELSE NULL END CheckIn,
CASE WHEN ACheckOutIsMust=''YES'' THEN ACheckOut 
WHEN NCheckOutIsMust=''YES'' THEN NCheckOut
ELSE NULL END CheckOut,
CASE WHEN MCheckInIsMust=''YES'' THEN COALESCE(MCheckInAddress,'''')  
WHEN NCheckInIsMust=''YES'' THEN COALESCE(NCheckInAddress,'''')
ELSE NULL END CheckInAddress,
CASE WHEN MCheckInIsMust=''YES'' THEN COALESCE(char_length(MCheckInAddress),0)  
WHEN NCheckInIsMust=''YES'' THEN COALESCE(char_length(NCheckInAddress),0)
ELSE 0 END CheckInAddressLen,
CASE WHEN ACheckOutIsMust=''YES'' THEN COALESCE(ACheckOutAddress,'''')   
WHEN NCheckOutIsMust=''YES'' THEN COALESCE(NCheckOutAddress,'''') 
ELSE NULL END CheckOutAddress,
CASE WHEN ACheckOutIsMust=''YES'' THEN COALESCE(char_length(ACheckOutAddress),0)   
WHEN NCheckOutIsMust=''YES'' THEN COALESCE(char_length(NCheckOutAddress),0) 
ELSE 0 END CheckOutAddressLen,
CASE WHEN MCheckInIsMust=''YES'' THEN MCheckInDistance  
WHEN NCheckInIsMust=''YES'' THEN NCheckInDistance
ELSE NULL END CheckInDistance,
CASE WHEN ACheckOutIsMust=''YES'' THEN ACheckOutDistance   
WHEN NCheckOutIsMust=''YES'' THEN NCheckOutDistance
ELSE NULL END CheckOutDistance
FROM T_UserAttendanceRecord 
where AttendanceDate &gt;= '''||StartDate||''' AND  AttendanceDate&lt; to_date('''||EndDate||''',''YYYY-MM-DD'')+INTERVAL ''1 day''  '
into UserAttendanceRecordSql;

SELECT ' SELECT a.姓名,a.部门,a.工号,a.职位,b.*,
CAST(a.出勤天数-COALESCE(f.HourNum,0)/8 as decimal(5,3)) 出勤天数,a.应出勤天数,a.迟到次数,a.迟到时长,a.旷工迟到次数,a.早退次数,a.早退时长,a.旷工天数,a.夜班天数,
d.*,c.*   
FROM(SELECT MIN(a.UserName) 姓名,MIN(a.DepartName)部门,MIN(a.UserCode)工号,MIN(a.Duty)职位,
SUM(case when ((b.CheckInAddressLen&gt;0 AND (b.CheckInDistance&lt;=b.LargestDistance or b.CheckInDistance=0))
and (b.CheckOutAddressLen&gt;0 AND (b.CheckOutDistance&lt;=b.LargestDistance or b.CheckOutDistance=0)) or l.HourNum&gt;=8) AND k.IsHoliday=0 then 1 else 0 end ) 出勤天数,
sum(case when k.IsHoliday=0 then 1 else 0 end) 应出勤天数, SUM(CASE WHEN COALESCE(b.LateMinute,0)&gt;0 THEN 1 ELSE 0 end) 迟到次数,
SUM(COALESCE(b.LateMinute,0)) 迟到时长,SUM(case when (COALESCE(b.CheckInAddressLen,0)=0 OR  b.CheckInDistance&gt;b.LargestDistance) AND (COALESCE(b.CheckOutAddressLen,0)=0 or b.CheckOutDistance&gt;b.LargestDistance) AND k.IsHoliday=0 and l.Creator is null then 1 else 0 end )
+SUM(CASE WHEN COALESCE(b.LateMinute,0)&gt;0 THEN 1 ELSE 0 end) 旷工迟到次数,
SUM(CASE WHEN COALESCE(b.EarlyMinute,0)&gt;0 THEN 1 ELSE 0 end) 早退次数,SUM(COALESCE(b.EarlyMinute,0)) 早退时长,
SUM(case when (COALESCE(b.CheckInAddressLen,0)=0 OR  b.CheckInDistance&gt;b.LargestDistance) AND (COALESCE(b.CheckOutAddressLen,0)=0 or b.CheckOutDistance&gt;b.LargestDistance) AND k.IsHoliday=0 and l.Creator is null then 1 else 0 end ) 旷工天数,
SUM(CASE WHEN b.NCheckInIsMust=1 AND COALESCE(b.LateMinute,0)=0 AND (b.CheckInDistance&lt;=b.LargestDistance OR b.CheckInDistance=0) 
AND b.NCheckOutIsMust=1 AND COALESCE(b.EarlyMinute,0)=0 AND (b.CheckOutDistance&lt;=b.LargestDistance OR b.CheckOutDistance=0) THEN 1 ELSE 0 END) 夜班天数 
FROM T_ProjectMember a 
cross join ('||MonthdaysSql||') k '
into Sql1;


SELECT  ' LEFT JOIN ( '||UserAttendanceRecordSql||' ) b ON a.UserCode=b.UserCode AND b.AttendanceDate=k.AttendanceDate 
left join(select a.Creator,to_char(a.StartTime,''YYYY-MM-DD'') LeaveDate,sum(a.HourNum) HourNum from T_LeaveApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
where b.Status in (''通过'',''结案'') and b.WLType = ''考勤管理'' and  b.RelatedType = ''请假''
group by a.Creator,to_char(a.StartTime,''YYYY-MM-DD'')) l on l.Creator=a.UserCode and k.AttendanceDate=l.LeaveDate 
WHERE a.DepartCode like '''||DepartCode||''' AND a.UserName like '''||UserName||'''
GROUP BY a.UserCode) a  ' into Sql2;


SELECT array_to_string(ARRAY(SELECT Type || ' int' FROM T_LeaveType order by sortnumber),',') into LeaveSql;

select ' LEFT JOIN (select * from crosstab(
''SELECT a.UserCode 工号1,c.Type LeaveType,COALESCE(b.HourNum,0) HourNum  
FROM T_ProjectMember a CROSS JOIN T_LeaveType c 
LEFT JOIN (select a.* from T_LeaveApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
where b.Status in (''''通过'''',''''结案'''') and b.WLType = ''''考勤管理'''' and  b.RelatedType = ''''请假'''') b ON a.UserCode=b.Creator AND c.Type=b.LeaveType AND to_date('''''||EndDate||''''',''''YYYY-MM-DD'''')&lt;b.EndTime AND to_date('''''||StartDate||''''',''''YYYY-MM-DD'''')&gt;=b.StartTime 
WHERE a.DepartCode like '''''||DepartCode||''''' AND a.UserName like '''''||UserName||''''' '', ''SELECT Type FROM T_LeaveType order by sortnumber'') 
as t(工号1 varchar(20),{0})
) b ON a.工号=b.工号1 
LEFT JOIN ( ' into sql3;

SELECT REPLACE(Sql3,'{0}',LeaveSql) into Sql3;

select string_agg('"'||interval || '" text',',') from( 
	select generate_series(1,cast(EXTRACT(DAY FROM AGE(to_date(EndDate, 'YYYY-MM-DD')+INTERVAL '1 day',to_date(StartDate, 'YYYY-MM-DD'))) as integer)) as interval
) itable into SqlCol;

select 'select * from crosstab(''SELECT a.UserCode,DATE_PART(''''day'''',a.AttendanceDate::date) AttendanceDay,
	CASE WHEN a.IsHoliday=1 THEN CASE WHEN b.UserCode IS NOT NULL THEN ''''休息并打卡'''' ELSE ''''休息'''' END 
	ELSE  
	CASE WHEN a.LeaveDetail IS NOT NULL THEN a.LeaveDetail 
		WHEN b.UserCode IS NULL THEN ''''旷工'''' 
		WHEN (b.CheckInAddressLen&gt;0 AND b.LateMinute=0 AND (b.CheckInDistance&lt;=b.LargestDistance or b.CheckInDistance=0)) 
	THEN CASE WHEN (b.CheckOutAddressLen&gt;0 AND b.EarlyMinute=0 AND (b.CheckOutDistance&lt;=b.LargestDistance or b.CheckOutDistance=0))  THEN ''''正常'''' 
			WHEN b.CheckOutAddressLen=0 THEN ''''下班缺卡'''' 
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''下班外勤，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 THEN ''''下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''下班外勤'''' END 
		WHEN b.CheckInAddressLen=0 
	THEN CASE WHEN (b.CheckOutAddressLen&gt;0 AND b.EarlyMinute=0 AND (b.CheckOutDistance&lt;=b.LargestDistance or b.CheckOutDistance=0))  THEN ''''上班缺卡'''' 
			WHEN b.CheckOutAddressLen=0 THEN ''''旷工'''' 
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班缺卡，下班外勤，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 THEN ''''上班缺卡，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班缺卡，下班外勤'''' END 
		WHEN b.CheckInAddressLen&gt;0 AND b.LateMinute&gt;0 AND b.CheckInDistance&gt;b.LargestDistance 
	THEN CASE WHEN (b.CheckOutAddressLen&gt;0 AND b.EarlyMinute=0 AND (b.CheckOutDistance&lt;=b.LargestDistance or b.CheckOutDistance=0))  THEN ''''上班外勤，上班迟到'''' 
			WHEN b.CheckOutAddressLen=0 THEN ''''上班外勤，上班迟到，下班缺卡''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班外勤，上班迟到，下班外勤，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 THEN ''''上班外勤，上班迟到，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班外勤，上班迟到，下班外勤'''' END 
		WHEN b.CheckInAddressLen&gt;0 AND b.LateMinute&gt;0 AND (b.CheckInDistance&lt;=b.LargestDistance or b.CheckInDistance=0)   
	THEN CASE WHEN (b.CheckOutAddressLen&gt;0 AND b.EarlyMinute=0 AND (b.CheckOutDistance&lt;=b.LargestDistance or b.CheckOutDistance=0))  THEN ''''上班迟到''''
			WHEN b.CheckOutAddressLen=0 THEN ''''上班迟到，下班缺卡'''' 
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班迟到，下班外勤，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 THEN ''''上班迟到，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班迟到，下班外勤'''' END 
		WHEN b.CheckInAddressLen&gt;0 AND b.LateMinute=0 AND b.CheckInDistance&gt;b.LargestDistance    
	THEN CASE WHEN (b.CheckOutAddressLen&gt;0 AND b.EarlyMinute=0 AND (b.CheckOutDistance&lt;=b.LargestDistance or b.CheckOutDistance=0))  THEN ''''上班外勤'''' 
			WHEN b.CheckOutAddressLen=0 THEN ''''上班外勤，下班缺卡'''' 
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班外勤，下班外勤，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 THEN ''''上班外勤，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班外勤，下班外勤'''' END 
		END 
	END|| case when a.OvertimeDetail is not null then '''' ''''||a.OvertimeDetail else '''''''' end Detail  FROM (
	SELECT a.UserCode,k.AttendanceDate,MIN(k.IsHoliday)IsHoliday,
		trim(leading '''','''' from (
			select string_agg(qjia,'''''''') qjv from (
				select DISTINCT '''',''''||LeaveType||'''' ''''||to_char(StartTime,''''YYYY-MM-DD'''')||''''到''''||to_char(EndTime,''''YYYY-MM-DD'''') as qjia 
				FROM (
					select a.* from T_LeaveApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
					where b.Status in (''''通过'''',''''结案'''') and b.WLType = ''''考勤管理'''' and  b.RelatedType = ''''请假'''') m WHERE m.Creator = a.UserCode AND to_date(k.AttendanceDate,''''YYYY-MM-DD'''') BETWEEN m.StartTime AND m.EndTime) lty))LeaveDetail,
		trim(leading '''','''' from (
			select DISTINCT '''',''''||OvertimeType||'''' ''''||SUBSTRING(COALESCE(OverTimeCheckInTime,''''''''),1,16)||''''到''''||SUBSTRING(COALESCE(OverTimeCheckOutTime,''''''''),1,16)
			FROM (
					select a.* from T_OvertimeApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
					where b.Status in (''''通过'''',''''结案'''') and b.WLType = ''''考勤管理'''' and  b.RelatedType = ''''加班'''') m WHERE m.Creator = a.UserCode AND to_date(k.AttendanceDate,''''YYYY-MM-DD'''') BETWEEN m.StartTime AND m.EndTime)) OvertimeDetail      
	FROM T_ProjectMember a 
	CROSS JOIN (
		SELECT to_char(a.AttendanceDate, ''''YYYY-MM-DD'''') AttendanceDate,case WHEN c.Id is not null then 0 
			when DATE_PART(''''dow'''',a.AttendanceDate) = 0 OR DATE_PART(''''dow'''',a.AttendanceDate)=6 OR b.ID IS NOT NULL THEN 1 ELSE 0 END IsHoliday 
		FROM (SELECT generate_series(to_date('''''||StartDate||''''', ''''YYYY-MM-DD''''),to_date('''''||EndDate||''''', ''''YYYY-MM-DD''''),INTERVAL ''''1 day'''') as AttendanceDate) a 
		LEFT JOIN T_FestivalsDaySet b ON a.AttendanceDate=b.FestivalsDate 
		left join T_FestivalsExchangeDaySet c on a.AttendanceDate=c.ExchangeDate ) k 
	LEFT JOIN (select a.* from T_LeaveApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
		where b.Status in (''''通过'''',''''结案'''') and b.WLType = ''''考勤管理'''' and  b.RelatedType = ''''请假'''') b 
		ON a.UserCode=b.Creator AND to_date(k.AttendanceDate,''''YYYY-MM-DD'''') BETWEEN b.StartTime AND b.EndTime 
	LEFT JOIN (select a.* from T_OvertimeApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
		where b.Status in (''''通过'''',''''结案'''') and b.WLType = ''''考勤管理'''' and  b.RelatedType = ''''加班'''') c  
		ON a.UserCode=c.Creator AND to_date(k.AttendanceDate,''''YYYY-MM-DD'''') BETWEEN c.StartTime AND c.EndTime
	WHERE a.DepartCode like '''''||DepartCode||''''' AND a.UserName like '''''||UserName||'''''
	GROUP BY a.UserCode,k.AttendanceDate) a 
	LEFT JOIN (  
		SELECT UserCode,to_char(AttendanceDate,''''YYYY-MM-DD'''') AttendanceDate,LateMinute,EarlyMinute,LargestDistance,
			CASE WHEN NCheckInIsMust=''''YES'''' THEN 1 ELSE 0 END NCheckInIsMust,CASE WHEN NCheckOutIsMust=''''YES'''' THEN 1 ELSE 0 END NCheckOutIsMust,
			CASE WHEN MCheckInIsMust=''''YES'''' THEN MCheckIn 
			WHEN NCheckInIsMust=''''YES'''' THEN NCheckIn
			ELSE NULL END CheckIn,
			CASE WHEN ACheckOutIsMust=''''YES'''' THEN ACheckOut 
			WHEN NCheckOutIsMust=''''YES'''' THEN NCheckOut
			ELSE NULL END CheckOut,
			CASE WHEN MCheckInIsMust=''''YES'''' THEN COALESCE(MCheckInAddress,'''''''')  
			WHEN NCheckInIsMust=''''YES'''' THEN COALESCE(NCheckInAddress,'''''''')
			ELSE NULL END CheckInAddress,
			CASE WHEN MCheckInIsMust=''''YES'''' THEN COALESCE(char_length(MCheckInAddress),0)  
			WHEN NCheckInIsMust=''''YES'''' THEN COALESCE(char_length(NCheckInAddress),0)
			ELSE 0 END CheckInAddressLen,
			CASE WHEN ACheckOutIsMust=''''YES'''' THEN COALESCE(ACheckOutAddress,'''''''')   
			WHEN NCheckOutIsMust=''''YES'''' THEN COALESCE(NCheckOutAddress,'''''''') 
			ELSE NULL END CheckOutAddress,
			CASE WHEN ACheckOutIsMust=''''YES'''' THEN COALESCE(char_length(ACheckOutAddress),0)   
			WHEN NCheckOutIsMust=''''YES'''' THEN COALESCE(char_length(NCheckOutAddress),0) 
			ELSE 0 END CheckOutAddressLen,
			CASE WHEN MCheckInIsMust=''''YES'''' THEN MCheckInDistance  
			WHEN NCheckInIsMust=''''YES'''' THEN NCheckInDistance
			ELSE NULL END CheckInDistance,
			CASE WHEN ACheckOutIsMust=''''YES'''' THEN ACheckOutDistance   
			WHEN NCheckOutIsMust=''''YES'''' THEN NCheckOutDistance
			ELSE NULL END CheckOutDistance
		FROM T_UserAttendanceRecord 
		where AttendanceDate &gt;= '''''||StartDate||''''' AND  AttendanceDate&lt; to_date('''''||EndDate||''''',''''YYYY-MM-DD'''')+INTERVAL ''''1 day''''  ) b
		ON a.UserCode=b.UserCode AND b.AttendanceDate=a.AttendanceDate'',''select generate_series(1, cast(EXTRACT(DAY FROM AGE(to_date('''''||EndDate||''''', ''''YYYY-MM-DD'''')+INTERVAL ''''1 day'''',to_date('''''||StartDate||''''', ''''YYYY-MM-DD''''))) as integer)) as inter''
	) AS  t(usercode varchar(20),{0})' into SqlDetail;

select replace( SqlDetail , '{0}' , SqlCol) into SqlDetail;


SELECT array_to_string(ARRAY(SELECT Type || ' int' FROM T_OvertimeType),',') into OvertimeSql;

--按分钟计算实际加班时间 误差多加1分钟  因为午夜打卡时间分别为23:59和00:01 
SELECT ') c ON a.工号=c.UserCode 
LEFT JOIN (select * from crosstab(
			 ''SELECT a.UserCode 工号2,c.Type OvertimeType,FLOOR(COALESCE(DATEDIFF(''''mi'''',
				CASE WHEN b.OverTimeCheckInTime::timestamp without time zone&lt;b.StartTime THEN b.StartTime ELSE b.OverTimeCheckInTime::timestamp without time zone END,
				CASE WHEN b.OverTimeCheckOutTime::timestamp without time zone&gt;b.EndTime THEN b.EndTime ELSE b.OverTimeCheckOutTime::timestamp without time zone END)+1,0)*1.0/60) HourNum   
			FROM T_ProjectMember a 
			CROSS JOIN T_OvertimeType c 
			LEFT JOIN (select a.* from T_OvertimeApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
				where b.Status in (''''通过'''',''''结案'''') and b.WLType = ''''考勤管理'''' and  b.RelatedType = ''''加班'''') b ON a.UserCode=b.Creator AND '''''||StartDate||'''''&lt;b.EndTime AND '''''||EndDate||'''''&gt;=b.StartTime 
			WHERE a.DepartCode like '''''||DepartCode||''''' AND a.UserName like '''''||UserName||''''' ''
	,''SELECT distinct c.Type from T_OvertimeType c order by 1 '')
			as t(工号2 varchar(20),工作日加班 int,节假日加班 int,周末加班 int)
) d ON a.工号=d.工号2 
LEFT JOIN (		select a.Creator,SUM(COALESCE(a.HourNum,0)) HourNum from T_LeaveApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
		where b.Status in (''通过'',''结案'') and b.WLType = ''考勤管理'' and  b.RelatedType = ''请假'' AND '''||StartDate||'''::timestamp without time zone&lt;a.EndTime AND '''||EndDate||'''::timestamp without time zone&gt;=a.StartTime 
		GROUP BY a.Creator) f ON a.工号=f.Creator 
order by a.部门,a.姓名' into Sql4;

SELECT REPLACE(Sql4,'{0}',OvertimeSql) into Sql4;

select Sql1||Sql2||Sql3||SqlDetail||Sql4 into sqltotal;
execute sqltotal into recreport;
SELECT json_agg(row_to_json(recreport)) into jsonreport;

RETURN jsonreport;

END;
$$ LANGUAGE plpgsql;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3537</ID>
    <SQLText>CREATE OR REPLACE FUNCTION f_userattendancereport(
	startdate text,  
	enddate text,     
	departcode text,  
	username text
)
RETURNS text AS $$
declare 
	SqlCol text;
	MonthdaysSql VARCHAR(2000);
	UserAttendanceRecordSql VARCHAR(2000);
	Sql1 text;
	Sql2 text;
	Sql3 text;
	Sql4 text;
	LeaveSql text; 
	OvertimeSql text;
	SqlDetail text;	
	sqltotal text;
	recreport record;
	jsonreport text;
BEGIN

SELECT 'SELECT to_char(a.AttendanceDate, ''YYYY-MM-DD'') AttendanceDate,case WHEN c.Id is not null then 0 
when DATE_PART(''dow'',a.AttendanceDate) = 0 OR DATE_PART(''dow'',a.AttendanceDate)=6 OR b.ID IS NOT NULL THEN 1 ELSE 0 END IsHoliday 
FROM (SELECT generate_series(to_date('''||StartDate||''', ''YYYY-MM-DD''),to_date('''||EndDate||''', ''YYYY-MM-DD''),INTERVAL ''1 day'') as AttendanceDate) a 
LEFT JOIN T_FestivalsDaySet b ON a.AttendanceDate=b.FestivalsDate 
left join T_FestivalsExchangeDaySet c on a.AttendanceDate=c.ExchangeDate ' into MonthdaysSql;

SELECT ' SELECT UserCode,to_char(AttendanceDate,''YYYY-MM-DD'') AttendanceDate,LateMinute,EarlyMinute,LargestDistance,
CASE WHEN NCheckInIsMust=''YES'' THEN 1 ELSE 0 END NCheckInIsMust,CASE WHEN NCheckOutIsMust=''YES'' THEN 1 ELSE 0 END NCheckOutIsMust,
CASE WHEN MCheckInIsMust=''YES'' THEN MCheckIn 
WHEN NCheckInIsMust=''YES'' THEN NCheckIn
ELSE NULL END CheckIn,
CASE WHEN ACheckOutIsMust=''YES'' THEN ACheckOut 
WHEN NCheckOutIsMust=''YES'' THEN NCheckOut
ELSE NULL END CheckOut,
CASE WHEN MCheckInIsMust=''YES'' THEN COALESCE(MCheckInAddress,'''')  
WHEN NCheckInIsMust=''YES'' THEN COALESCE(NCheckInAddress,'''')
ELSE NULL END CheckInAddress,
CASE WHEN MCheckInIsMust=''YES'' THEN COALESCE(char_length(MCheckInAddress),0)  
WHEN NCheckInIsMust=''YES'' THEN COALESCE(char_length(NCheckInAddress),0)
ELSE 0 END CheckInAddressLen,
CASE WHEN ACheckOutIsMust=''YES'' THEN COALESCE(ACheckOutAddress,'''')   
WHEN NCheckOutIsMust=''YES'' THEN COALESCE(NCheckOutAddress,'''') 
ELSE NULL END CheckOutAddress,
CASE WHEN ACheckOutIsMust=''YES'' THEN COALESCE(char_length(ACheckOutAddress),0)   
WHEN NCheckOutIsMust=''YES'' THEN COALESCE(char_length(NCheckOutAddress),0) 
ELSE 0 END CheckOutAddressLen,
CASE WHEN MCheckInIsMust=''YES'' THEN MCheckInDistance  
WHEN NCheckInIsMust=''YES'' THEN NCheckInDistance
ELSE NULL END CheckInDistance,
CASE WHEN ACheckOutIsMust=''YES'' THEN ACheckOutDistance   
WHEN NCheckOutIsMust=''YES'' THEN NCheckOutDistance
ELSE NULL END CheckOutDistance
FROM T_UserAttendanceRecord 
where AttendanceDate &gt;= '''||StartDate||''' AND  AttendanceDate&lt; to_date('''||EndDate||''',''YYYY-MM-DD'')+INTERVAL ''1 day''  '
into UserAttendanceRecordSql;

SELECT ' SELECT a.姓名,a.部门,a.工号,a.职位,b.*,
CAST(a.出勤天数-COALESCE(f.HourNum,0)/8 as decimal(5,3)) 出勤天数,a.应出勤天数,a.迟到次数,a.迟到时长,a.旷工迟到次数,a.早退次数,a.早退时长,a.旷工天数,a.夜班天数,
d.*,c.*   
FROM(SELECT MIN(a.UserName) 姓名,MIN(a.DepartName)部门,MIN(a.UserCode)工号,MIN(a.Duty)职位,
SUM(case when ((b.CheckInAddressLen&gt;0 AND (b.CheckInDistance&lt;=b.LargestDistance or b.CheckInDistance=0))
and (b.CheckOutAddressLen&gt;0 AND (b.CheckOutDistance&lt;=b.LargestDistance or b.CheckOutDistance=0)) or l.HourNum&gt;=8) AND k.IsHoliday=0 then 1 else 0 end ) 出勤天数,
sum(case when k.IsHoliday=0 then 1 else 0 end) 应出勤天数, SUM(CASE WHEN COALESCE(b.LateMinute,0)&gt;0 THEN 1 ELSE 0 end) 迟到次数,
SUM(COALESCE(b.LateMinute,0)) 迟到时长,SUM(case when (COALESCE(b.CheckInAddressLen,0)=0 OR  b.CheckInDistance&gt;b.LargestDistance) AND (COALESCE(b.CheckOutAddressLen,0)=0 or b.CheckOutDistance&gt;b.LargestDistance) AND k.IsHoliday=0 and l.Creator is null then 1 else 0 end )
+SUM(CASE WHEN COALESCE(b.LateMinute,0)&gt;0 THEN 1 ELSE 0 end) 旷工迟到次数,
SUM(CASE WHEN COALESCE(b.EarlyMinute,0)&gt;0 THEN 1 ELSE 0 end) 早退次数,SUM(COALESCE(b.EarlyMinute,0)) 早退时长,
SUM(case when (COALESCE(b.CheckInAddressLen,0)=0 OR  b.CheckInDistance&gt;b.LargestDistance) AND (COALESCE(b.CheckOutAddressLen,0)=0 or b.CheckOutDistance&gt;b.LargestDistance) AND k.IsHoliday=0 and l.Creator is null then 1 else 0 end ) 旷工天数,
SUM(CASE WHEN b.NCheckInIsMust=1 AND COALESCE(b.LateMinute,0)=0 AND (b.CheckInDistance&lt;=b.LargestDistance OR b.CheckInDistance=0) 
AND b.NCheckOutIsMust=1 AND COALESCE(b.EarlyMinute,0)=0 AND (b.CheckOutDistance&lt;=b.LargestDistance OR b.CheckOutDistance=0) THEN 1 ELSE 0 END) 夜班天数 
FROM T_ProjectMember a 
cross join ('||MonthdaysSql||') k '
into Sql1;


SELECT  ' LEFT JOIN ( '||UserAttendanceRecordSql||' ) b ON a.UserCode=b.UserCode AND b.AttendanceDate=k.AttendanceDate 
left join(select a.Creator,to_char(a.StartTime,''YYYY-MM-DD'') LeaveDate,sum(a.HourNum) HourNum from T_LeaveApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
where b.Status in (''通过'',''结案'') and b.WLType = ''考勤管理'' and  b.RelatedType = ''请假''
group by a.Creator,to_char(a.StartTime,''YYYY-MM-DD'')) l on l.Creator=a.UserCode and k.AttendanceDate=l.LeaveDate 
WHERE a.DepartCode like '''||DepartCode||''' AND a.UserName like '''||UserName||'''
GROUP BY a.UserCode) a  ' into Sql2;


SELECT array_to_string(ARRAY(SELECT Type || ' int' FROM T_LeaveType order by sortnumber),',') into LeaveSql;

select ' LEFT JOIN (select * from crosstab(
''SELECT a.UserCode 工号1,c.Type LeaveType,COALESCE(b.HourNum,0) HourNum  
FROM T_ProjectMember a CROSS JOIN T_LeaveType c 
LEFT JOIN (select a.* from T_LeaveApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
where b.Status in (''''通过'''',''''结案'''') and b.WLType = ''''考勤管理'''' and  b.RelatedType = ''''请假'''') b ON a.UserCode=b.Creator AND c.Type=b.LeaveType AND to_date('''''||EndDate||''''',''''YYYY-MM-DD'''')&lt;b.EndTime AND to_date('''''||StartDate||''''',''''YYYY-MM-DD'''')&gt;=b.StartTime 
WHERE a.DepartCode like '''''||DepartCode||''''' AND a.UserName like '''''||UserName||''''' '', ''SELECT Type FROM T_LeaveType order by sortnumber'') 
as t(工号1 varchar(20),{0})
) b ON a.工号=b.工号1 
LEFT JOIN ( ' into sql3;

SELECT REPLACE(Sql3,'{0}',LeaveSql) into Sql3;

select string_agg('"'||ex || '" text',',') from( 
	select * from (SELECT EXTRACT(DAY FROM(generate_series(StartDate::date, EndDate::date, '1 day'::interval)::date)) as ex) a order by a.ex
) itable into SqlCol;

select 'select * from crosstab(''SELECT a.UserCode,DATE_PART(''''day'''',a.AttendanceDate::date) AttendanceDay,
	CASE WHEN a.IsHoliday=1 THEN CASE WHEN b.UserCode IS NOT NULL THEN ''''休息并打卡'''' ELSE ''''休息'''' END 
	ELSE  
	CASE WHEN a.LeaveDetail IS NOT NULL THEN a.LeaveDetail 
		WHEN b.UserCode IS NULL THEN ''''旷工'''' 
		WHEN (b.CheckInAddressLen&gt;0 AND b.LateMinute=0 AND (b.CheckInDistance&lt;=b.LargestDistance or b.CheckInDistance=0)) 
	THEN CASE WHEN (b.CheckOutAddressLen&gt;0 AND b.EarlyMinute=0 AND (b.CheckOutDistance&lt;=b.LargestDistance or b.CheckOutDistance=0))  THEN ''''正常'''' 
			WHEN b.CheckOutAddressLen=0 THEN ''''下班缺卡'''' 
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''下班外勤，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 THEN ''''下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''下班外勤'''' END 
		WHEN b.CheckInAddressLen=0 
	THEN CASE WHEN (b.CheckOutAddressLen&gt;0 AND b.EarlyMinute=0 AND (b.CheckOutDistance&lt;=b.LargestDistance or b.CheckOutDistance=0))  THEN ''''上班缺卡'''' 
			WHEN b.CheckOutAddressLen=0 THEN ''''旷工'''' 
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班缺卡，下班外勤，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 THEN ''''上班缺卡，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班缺卡，下班外勤'''' END 
		WHEN b.CheckInAddressLen&gt;0 AND b.LateMinute&gt;0 AND b.CheckInDistance&gt;b.LargestDistance 
	THEN CASE WHEN (b.CheckOutAddressLen&gt;0 AND b.EarlyMinute=0 AND (b.CheckOutDistance&lt;=b.LargestDistance or b.CheckOutDistance=0))  THEN ''''上班外勤，上班迟到'''' 
			WHEN b.CheckOutAddressLen=0 THEN ''''上班外勤，上班迟到，下班缺卡''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班外勤，上班迟到，下班外勤，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 THEN ''''上班外勤，上班迟到，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班外勤，上班迟到，下班外勤'''' END 
		WHEN b.CheckInAddressLen&gt;0 AND b.LateMinute&gt;0 AND (b.CheckInDistance&lt;=b.LargestDistance or b.CheckInDistance=0)   
	THEN CASE WHEN (b.CheckOutAddressLen&gt;0 AND b.EarlyMinute=0 AND (b.CheckOutDistance&lt;=b.LargestDistance or b.CheckOutDistance=0))  THEN ''''上班迟到''''
			WHEN b.CheckOutAddressLen=0 THEN ''''上班迟到，下班缺卡'''' 
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班迟到，下班外勤，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 THEN ''''上班迟到，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班迟到，下班外勤'''' END 
		WHEN b.CheckInAddressLen&gt;0 AND b.LateMinute=0 AND b.CheckInDistance&gt;b.LargestDistance    
	THEN CASE WHEN (b.CheckOutAddressLen&gt;0 AND b.EarlyMinute=0 AND (b.CheckOutDistance&lt;=b.LargestDistance or b.CheckOutDistance=0))  THEN ''''上班外勤'''' 
			WHEN b.CheckOutAddressLen=0 THEN ''''上班外勤，下班缺卡'''' 
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班外勤，下班外勤，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 THEN ''''上班外勤，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班外勤，下班外勤'''' END 
		END 
	END|| case when a.OvertimeDetail is not null then '''' ''''||a.OvertimeDetail else '''''''' end Detail  FROM (
	SELECT a.UserCode,k.AttendanceDate,MIN(k.IsHoliday)IsHoliday,
		trim(leading '''','''' from (
			select string_agg(qjia,'''''''') qjv from (
				select DISTINCT '''',''''||LeaveType||'''' ''''||to_char(StartTime,''''YYYY-MM-DD'''')||''''到''''||to_char(EndTime,''''YYYY-MM-DD'''') as qjia 
				FROM (
					select a.* from T_LeaveApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
					where b.Status in (''''通过'''',''''结案'''') and b.WLType = ''''考勤管理'''' and  b.RelatedType = ''''请假'''') m WHERE m.Creator = a.UserCode AND to_date(k.AttendanceDate,''''YYYY-MM-DD'''') BETWEEN m.StartTime AND m.EndTime) lty))LeaveDetail,
		trim(leading '''','''' from (
			select DISTINCT '''',''''||OvertimeType||'''' ''''||SUBSTRING(COALESCE(OverTimeCheckInTime,''''''''),1,16)||''''到''''||SUBSTRING(COALESCE(OverTimeCheckOutTime,''''''''),1,16)
			FROM (
					select a.* from T_OvertimeApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
					where b.Status in (''''通过'''',''''结案'''') and b.WLType = ''''考勤管理'''' and  b.RelatedType = ''''加班'''') m WHERE m.Creator = a.UserCode AND to_date(k.AttendanceDate,''''YYYY-MM-DD'''') BETWEEN m.StartTime AND m.EndTime)) OvertimeDetail      
	FROM T_ProjectMember a 
	CROSS JOIN (
		SELECT to_char(a.AttendanceDate, ''''YYYY-MM-DD'''') AttendanceDate,case WHEN c.Id is not null then 0 
			when DATE_PART(''''dow'''',a.AttendanceDate) = 0 OR DATE_PART(''''dow'''',a.AttendanceDate)=6 OR b.ID IS NOT NULL THEN 1 ELSE 0 END IsHoliday 
		FROM (SELECT generate_series(to_date('''''||StartDate||''''', ''''YYYY-MM-DD''''),to_date('''''||EndDate||''''', ''''YYYY-MM-DD''''),INTERVAL ''''1 day'''') as AttendanceDate) a 
		LEFT JOIN T_FestivalsDaySet b ON a.AttendanceDate=b.FestivalsDate 
		left join T_FestivalsExchangeDaySet c on a.AttendanceDate=c.ExchangeDate ) k 
	LEFT JOIN (select a.* from T_LeaveApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
		where b.Status in (''''通过'''',''''结案'''') and b.WLType = ''''考勤管理'''' and  b.RelatedType = ''''请假'''') b 
		ON a.UserCode=b.Creator AND to_date(k.AttendanceDate,''''YYYY-MM-DD'''') BETWEEN b.StartTime AND b.EndTime 
	LEFT JOIN (select a.* from T_OvertimeApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
		where b.Status in (''''通过'''',''''结案'''') and b.WLType = ''''考勤管理'''' and  b.RelatedType = ''''加班'''') c  
		ON a.UserCode=c.Creator AND to_date(k.AttendanceDate,''''YYYY-MM-DD'''') BETWEEN c.StartTime AND c.EndTime
	WHERE a.DepartCode like '''''||DepartCode||''''' AND a.UserName like '''''||UserName||'''''
	GROUP BY a.UserCode,k.AttendanceDate) a 
	LEFT JOIN (  
		SELECT UserCode,to_char(AttendanceDate,''''YYYY-MM-DD'''') AttendanceDate,LateMinute,EarlyMinute,LargestDistance,
			CASE WHEN NCheckInIsMust=''''YES'''' THEN 1 ELSE 0 END NCheckInIsMust,CASE WHEN NCheckOutIsMust=''''YES'''' THEN 1 ELSE 0 END NCheckOutIsMust,
			CASE WHEN MCheckInIsMust=''''YES'''' THEN MCheckIn 
			WHEN NCheckInIsMust=''''YES'''' THEN NCheckIn
			ELSE NULL END CheckIn,
			CASE WHEN ACheckOutIsMust=''''YES'''' THEN ACheckOut 
			WHEN NCheckOutIsMust=''''YES'''' THEN NCheckOut
			ELSE NULL END CheckOut,
			CASE WHEN MCheckInIsMust=''''YES'''' THEN COALESCE(MCheckInAddress,'''''''')  
			WHEN NCheckInIsMust=''''YES'''' THEN COALESCE(NCheckInAddress,'''''''')
			ELSE NULL END CheckInAddress,
			CASE WHEN MCheckInIsMust=''''YES'''' THEN COALESCE(char_length(MCheckInAddress),0)  
			WHEN NCheckInIsMust=''''YES'''' THEN COALESCE(char_length(NCheckInAddress),0)
			ELSE 0 END CheckInAddressLen,
			CASE WHEN ACheckOutIsMust=''''YES'''' THEN COALESCE(ACheckOutAddress,'''''''')   
			WHEN NCheckOutIsMust=''''YES'''' THEN COALESCE(NCheckOutAddress,'''''''') 
			ELSE NULL END CheckOutAddress,
			CASE WHEN ACheckOutIsMust=''''YES'''' THEN COALESCE(char_length(ACheckOutAddress),0)   
			WHEN NCheckOutIsMust=''''YES'''' THEN COALESCE(char_length(NCheckOutAddress),0) 
			ELSE 0 END CheckOutAddressLen,
			CASE WHEN MCheckInIsMust=''''YES'''' THEN MCheckInDistance  
			WHEN NCheckInIsMust=''''YES'''' THEN NCheckInDistance
			ELSE NULL END CheckInDistance,
			CASE WHEN ACheckOutIsMust=''''YES'''' THEN ACheckOutDistance   
			WHEN NCheckOutIsMust=''''YES'''' THEN NCheckOutDistance
			ELSE NULL END CheckOutDistance
		FROM T_UserAttendanceRecord 
		where AttendanceDate &gt;= '''''||StartDate||''''' AND  AttendanceDate&lt; to_date('''''||EndDate||''''',''''YYYY-MM-DD'''')+INTERVAL ''''1 day''''  ) b
		ON a.UserCode=b.UserCode AND b.AttendanceDate=a.AttendanceDate'',''select * from ( SELECT EXTRACT(DAY FROM(generate_series('''''||StartDate||'''''::date,'''''||EndDate||'''''::date, ''''1 day''''::interval)::date)) as ex) a order by a.ex''
	) AS  t(usercode varchar(20),{0})' into SqlDetail;

select replace( SqlDetail , '{0}' , SqlCol) into SqlDetail;


SELECT array_to_string(ARRAY(SELECT Type || ' int' FROM T_OvertimeType),',') into OvertimeSql;

--按分钟计算实际加班时间 误差多加1分钟  因为午夜打卡时间分别为23:59和00:01 
SELECT ') c ON a.工号=c.UserCode 
LEFT JOIN (select * from crosstab(
			 ''SELECT a.UserCode 工号2,c.Type OvertimeType,FLOOR(COALESCE(DATEDIFF(''''mi'''',
				CASE WHEN b.OverTimeCheckInTime::timestamp without time zone&lt;b.StartTime THEN b.StartTime ELSE b.OverTimeCheckInTime::timestamp without time zone END,
				CASE WHEN b.OverTimeCheckOutTime::timestamp without time zone&gt;b.EndTime THEN b.EndTime ELSE b.OverTimeCheckOutTime::timestamp without time zone END)+1,0)*1.0/60) HourNum   
			FROM T_ProjectMember a 
			CROSS JOIN T_OvertimeType c 
			LEFT JOIN (select a.* from T_OvertimeApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
				where b.Status in (''''通过'''',''''结案'''') and b.WLType = ''''考勤管理'''' and  b.RelatedType = ''''加班'''') b ON a.UserCode=b.Creator AND '''''||StartDate||'''''&lt;b.EndTime AND '''''||EndDate||'''''&gt;=b.StartTime 
			WHERE a.DepartCode like '''''||DepartCode||''''' AND a.UserName like '''''||UserName||''''' ''
	,''SELECT distinct c.Type from T_OvertimeType c order by 1 '')
			as t(工号2 varchar(20),工作日加班 int,节假日加班 int,周末加班 int)
) d ON a.工号=d.工号2 
LEFT JOIN (		select a.Creator,SUM(COALESCE(a.HourNum,0)) HourNum from T_LeaveApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
		where b.Status in (''通过'',''结案'') and b.WLType = ''考勤管理'' and  b.RelatedType = ''请假'' AND '''||StartDate||'''::timestamp without time zone&lt;a.EndTime AND '''||EndDate||'''::timestamp without time zone&gt;=a.StartTime 
		GROUP BY a.Creator) f ON a.工号=f.Creator 
order by a.部门,a.姓名' into Sql4;

SELECT REPLACE(Sql4,'{0}',OvertimeSql) into Sql4;

select Sql1||Sql2||Sql3||SqlDetail||Sql4 into sqltotal;
execute sqltotal into recreport;
SELECT json_agg(row_to_json(recreport)) into jsonreport;

RETURN jsonreport;

END;
$$ LANGUAGE plpgsql;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3538</ID>
    <SQLText>CREATE OR REPLACE FUNCTION f_userattendancereport(
	startdate text,  
	enddate text,     
	departcode text,  
	username text
)
RETURNS text AS $$
declare 
	SqlCol text;
	MonthdaysSql VARCHAR(2000);
	UserAttendanceRecordSql VARCHAR(2000);
	Sql1 text;
	Sql2 text;
	Sql3 text;
	Sql4 text;
	LeaveSql text; 
	OvertimeSql text;
	SqlDetail text;	
	sqltotal text;
	recreport record;
	jsonreport text;
BEGIN

SELECT 'SELECT to_char(a.AttendanceDate, ''YYYY-MM-DD'') AttendanceDate,case WHEN c.Id is not null then 0 
when DATE_PART(''dow'',a.AttendanceDate) = 0 OR DATE_PART(''dow'',a.AttendanceDate)=6 OR b.ID IS NOT NULL THEN 1 ELSE 0 END IsHoliday 
FROM (SELECT generate_series(to_date('''||StartDate||''', ''YYYY-MM-DD''),to_date('''||EndDate||''', ''YYYY-MM-DD''),INTERVAL ''1 day'') as AttendanceDate) a 
LEFT JOIN T_FestivalsDaySet b ON a.AttendanceDate=b.FestivalsDate 
left join T_FestivalsExchangeDaySet c on a.AttendanceDate=c.ExchangeDate ' into MonthdaysSql;

SELECT ' SELECT UserCode,to_char(AttendanceDate,''YYYY-MM-DD'') AttendanceDate,LateMinute,EarlyMinute,LargestDistance,
CASE WHEN NCheckInIsMust=''YES'' THEN 1 ELSE 0 END NCheckInIsMust,CASE WHEN NCheckOutIsMust=''YES'' THEN 1 ELSE 0 END NCheckOutIsMust,
CASE WHEN MCheckInIsMust=''YES'' THEN MCheckIn 
WHEN NCheckInIsMust=''YES'' THEN NCheckIn
ELSE NULL END CheckIn,
CASE WHEN ACheckOutIsMust=''YES'' THEN ACheckOut 
WHEN NCheckOutIsMust=''YES'' THEN NCheckOut
ELSE NULL END CheckOut,
CASE WHEN MCheckInIsMust=''YES'' THEN COALESCE(MCheckInAddress,'''')  
WHEN NCheckInIsMust=''YES'' THEN COALESCE(NCheckInAddress,'''')
ELSE NULL END CheckInAddress,
CASE WHEN MCheckInIsMust=''YES'' THEN COALESCE(char_length(MCheckInAddress),0)  
WHEN NCheckInIsMust=''YES'' THEN COALESCE(char_length(NCheckInAddress),0)
ELSE 0 END CheckInAddressLen,
CASE WHEN ACheckOutIsMust=''YES'' THEN COALESCE(ACheckOutAddress,'''')   
WHEN NCheckOutIsMust=''YES'' THEN COALESCE(NCheckOutAddress,'''') 
ELSE NULL END CheckOutAddress,
CASE WHEN ACheckOutIsMust=''YES'' THEN COALESCE(char_length(ACheckOutAddress),0)   
WHEN NCheckOutIsMust=''YES'' THEN COALESCE(char_length(NCheckOutAddress),0) 
ELSE 0 END CheckOutAddressLen,
CASE WHEN MCheckInIsMust=''YES'' THEN MCheckInDistance  
WHEN NCheckInIsMust=''YES'' THEN NCheckInDistance
ELSE NULL END CheckInDistance,
CASE WHEN ACheckOutIsMust=''YES'' THEN ACheckOutDistance   
WHEN NCheckOutIsMust=''YES'' THEN NCheckOutDistance
ELSE NULL END CheckOutDistance
FROM T_UserAttendanceRecord 
where AttendanceDate &gt;= '''||StartDate||''' AND  AttendanceDate&lt; to_date('''||EndDate||''',''YYYY-MM-DD'')+INTERVAL ''1 day''  '
into UserAttendanceRecordSql;

SELECT ' SELECT a.姓名,a.部门,a.工号,a.职位,b.*,
CAST(a.出勤天数-COALESCE(f.HourNum,0)/8 as decimal(5,3)) 出勤天数,a.应出勤天数,a.迟到次数,a.迟到时长,a.旷工迟到次数,a.早退次数,a.早退时长,a.旷工天数,a.夜班天数,
d.*,c.*   
FROM(SELECT MIN(a.UserName) 姓名,MIN(a.DepartName)部门,MIN(a.UserCode)工号,MIN(a.Duty)职位,
SUM(case when ((b.CheckInAddressLen&gt;0 AND (b.CheckInDistance&lt;=b.LargestDistance or b.CheckInDistance=0))
and (b.CheckOutAddressLen&gt;0 AND (b.CheckOutDistance&lt;=b.LargestDistance or b.CheckOutDistance=0)) or l.HourNum&gt;=8) AND k.IsHoliday=0 then 1 else 0 end ) 出勤天数,
sum(case when k.IsHoliday=0 then 1 else 0 end) 应出勤天数, SUM(CASE WHEN COALESCE(b.LateMinute,0)&gt;0 THEN 1 ELSE 0 end) 迟到次数,
SUM(COALESCE(b.LateMinute,0)) 迟到时长,SUM(case when (COALESCE(b.CheckInAddressLen,0)=0 OR  b.CheckInDistance&gt;b.LargestDistance) AND (COALESCE(b.CheckOutAddressLen,0)=0 or b.CheckOutDistance&gt;b.LargestDistance) AND k.IsHoliday=0 and l.Creator is null then 1 else 0 end )
+SUM(CASE WHEN COALESCE(b.LateMinute,0)&gt;0 THEN 1 ELSE 0 end) 旷工迟到次数,
SUM(CASE WHEN COALESCE(b.EarlyMinute,0)&gt;0 THEN 1 ELSE 0 end) 早退次数,SUM(COALESCE(b.EarlyMinute,0)) 早退时长,
SUM(case when (COALESCE(b.CheckInAddressLen,0)=0 OR  b.CheckInDistance&gt;b.LargestDistance) AND (COALESCE(b.CheckOutAddressLen,0)=0 or b.CheckOutDistance&gt;b.LargestDistance) AND k.IsHoliday=0 and l.Creator is null then 1 else 0 end ) 旷工天数,
SUM(CASE WHEN b.NCheckInIsMust=1 AND COALESCE(b.LateMinute,0)=0 AND (b.CheckInDistance&lt;=b.LargestDistance OR b.CheckInDistance=0) 
AND b.NCheckOutIsMust=1 AND COALESCE(b.EarlyMinute,0)=0 AND (b.CheckOutDistance&lt;=b.LargestDistance OR b.CheckOutDistance=0) THEN 1 ELSE 0 END) 夜班天数 
FROM T_ProjectMember a 
cross join ('||MonthdaysSql||') k '
into Sql1;


SELECT  ' LEFT JOIN ( '||UserAttendanceRecordSql||' ) b ON a.UserCode=b.UserCode AND b.AttendanceDate=k.AttendanceDate 
left join(select a.Creator,to_char(a.StartTime,''YYYY-MM-DD'') LeaveDate,sum(a.HourNum) HourNum from T_LeaveApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
where b.Status in (''通过'',''结案'') and b.WLType = ''考勤管理'' and  b.RelatedType = ''请假''
group by a.Creator,to_char(a.StartTime,''YYYY-MM-DD'')) l on l.Creator=a.UserCode and k.AttendanceDate=l.LeaveDate 
WHERE a.DepartCode = '''||DepartCode||''' AND a.UserName = '''||UserName||'''
GROUP BY a.UserCode) a  ' into Sql2;


SELECT array_to_string(ARRAY(SELECT Type || ' int' FROM T_LeaveType order by sortnumber),',') into LeaveSql;

select ' LEFT JOIN (select * from crosstab(
''SELECT a.UserCode 工号1,c.Type LeaveType,COALESCE(b.HourNum,0) HourNum  
FROM T_ProjectMember a CROSS JOIN T_LeaveType c 
LEFT JOIN (select a.* from T_LeaveApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
where b.Status in (''''通过'''',''''结案'''') and b.WLType = ''''考勤管理'''' and  b.RelatedType = ''''请假'''') b ON a.UserCode=b.Creator AND c.Type=b.LeaveType AND to_date('''''||EndDate||''''',''''YYYY-MM-DD'''')&lt;b.EndTime AND to_date('''''||StartDate||''''',''''YYYY-MM-DD'''')&gt;=b.StartTime 
WHERE a.DepartCode = '''''||DepartCode||''''' AND a.UserName = '''''||UserName||''''' '', ''SELECT Type FROM T_LeaveType order by sortnumber'') 
as t(工号1 varchar(20),{0})
) b ON a.工号=b.工号1 
LEFT JOIN ( ' into sql3;

SELECT REPLACE(Sql3,'{0}',LeaveSql) into Sql3;

select string_agg('"'||ex || '" text',',') from( 
	select * from (SELECT EXTRACT(DAY FROM(generate_series(StartDate::date, EndDate::date, '1 day'::interval)::date)) as ex) a order by a.ex
) itable into SqlCol;

select 'select * from crosstab(''SELECT a.UserCode,DATE_PART(''''day'''',a.AttendanceDate::date) AttendanceDay,
	CASE WHEN a.IsHoliday=1 THEN CASE WHEN b.UserCode IS NOT NULL THEN ''''休息并打卡'''' ELSE ''''休息'''' END 
	ELSE  
	CASE WHEN a.LeaveDetail IS NOT NULL THEN a.LeaveDetail 
		WHEN b.UserCode IS NULL THEN ''''旷工'''' 
		WHEN (b.CheckInAddressLen&gt;0 AND b.LateMinute=0 AND (b.CheckInDistance&lt;=b.LargestDistance or b.CheckInDistance=0)) 
	THEN CASE WHEN (b.CheckOutAddressLen&gt;0 AND b.EarlyMinute=0 AND (b.CheckOutDistance&lt;=b.LargestDistance or b.CheckOutDistance=0))  THEN ''''正常'''' 
			WHEN b.CheckOutAddressLen=0 THEN ''''下班缺卡'''' 
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''下班外勤，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 THEN ''''下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''下班外勤'''' END 
		WHEN b.CheckInAddressLen=0 
	THEN CASE WHEN (b.CheckOutAddressLen&gt;0 AND b.EarlyMinute=0 AND (b.CheckOutDistance&lt;=b.LargestDistance or b.CheckOutDistance=0))  THEN ''''上班缺卡'''' 
			WHEN b.CheckOutAddressLen=0 THEN ''''旷工'''' 
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班缺卡，下班外勤，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 THEN ''''上班缺卡，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班缺卡，下班外勤'''' END 
		WHEN b.CheckInAddressLen&gt;0 AND b.LateMinute&gt;0 AND b.CheckInDistance&gt;b.LargestDistance 
	THEN CASE WHEN (b.CheckOutAddressLen&gt;0 AND b.EarlyMinute=0 AND (b.CheckOutDistance&lt;=b.LargestDistance or b.CheckOutDistance=0))  THEN ''''上班外勤，上班迟到'''' 
			WHEN b.CheckOutAddressLen=0 THEN ''''上班外勤，上班迟到，下班缺卡''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班外勤，上班迟到，下班外勤，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 THEN ''''上班外勤，上班迟到，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班外勤，上班迟到，下班外勤'''' END 
		WHEN b.CheckInAddressLen&gt;0 AND b.LateMinute&gt;0 AND (b.CheckInDistance&lt;=b.LargestDistance or b.CheckInDistance=0)   
	THEN CASE WHEN (b.CheckOutAddressLen&gt;0 AND b.EarlyMinute=0 AND (b.CheckOutDistance&lt;=b.LargestDistance or b.CheckOutDistance=0))  THEN ''''上班迟到''''
			WHEN b.CheckOutAddressLen=0 THEN ''''上班迟到，下班缺卡'''' 
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班迟到，下班外勤，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 THEN ''''上班迟到，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班迟到，下班外勤'''' END 
		WHEN b.CheckInAddressLen&gt;0 AND b.LateMinute=0 AND b.CheckInDistance&gt;b.LargestDistance    
	THEN CASE WHEN (b.CheckOutAddressLen&gt;0 AND b.EarlyMinute=0 AND (b.CheckOutDistance&lt;=b.LargestDistance or b.CheckOutDistance=0))  THEN ''''上班外勤'''' 
			WHEN b.CheckOutAddressLen=0 THEN ''''上班外勤，下班缺卡'''' 
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班外勤，下班外勤，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.EarlyMinute&gt;0 THEN ''''上班外勤，下班早退''''
			WHEN b.CheckOutAddressLen&gt;0 AND b.CheckOutDistance&gt;b.LargestDistance THEN ''''上班外勤，下班外勤'''' END 
		END 
	END|| case when a.OvertimeDetail is not null then '''' ''''||a.OvertimeDetail else '''''''' end Detail  FROM (
	SELECT a.UserCode,k.AttendanceDate,MIN(k.IsHoliday)IsHoliday,
		trim(leading '''','''' from (
			select string_agg(qjia,'''''''') qjv from (
				select DISTINCT '''',''''||LeaveType||'''' ''''||to_char(StartTime,''''YYYY-MM-DD'''')||''''到''''||to_char(EndTime,''''YYYY-MM-DD'''') as qjia 
				FROM (
					select a.* from T_LeaveApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
					where b.Status in (''''通过'''',''''结案'''') and b.WLType = ''''考勤管理'''' and  b.RelatedType = ''''请假'''') m WHERE m.Creator = a.UserCode AND to_date(k.AttendanceDate,''''YYYY-MM-DD'''') BETWEEN m.StartTime AND m.EndTime) lty))LeaveDetail,
		trim(leading '''','''' from (
			select DISTINCT '''',''''||OvertimeType||'''' ''''||SUBSTRING(COALESCE(OverTimeCheckInTime,''''''''),1,16)||''''到''''||SUBSTRING(COALESCE(OverTimeCheckOutTime,''''''''),1,16)
			FROM (
					select a.* from T_OvertimeApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
					where b.Status in (''''通过'''',''''结案'''') and b.WLType = ''''考勤管理'''' and  b.RelatedType = ''''加班'''') m WHERE m.Creator = a.UserCode AND to_date(k.AttendanceDate,''''YYYY-MM-DD'''') BETWEEN m.StartTime AND m.EndTime)) OvertimeDetail      
	FROM T_ProjectMember a 
	CROSS JOIN (
		SELECT to_char(a.AttendanceDate, ''''YYYY-MM-DD'''') AttendanceDate,case WHEN c.Id is not null then 0 
			when DATE_PART(''''dow'''',a.AttendanceDate) = 0 OR DATE_PART(''''dow'''',a.AttendanceDate)=6 OR b.ID IS NOT NULL THEN 1 ELSE 0 END IsHoliday 
		FROM (SELECT generate_series(to_date('''''||StartDate||''''', ''''YYYY-MM-DD''''),to_date('''''||EndDate||''''', ''''YYYY-MM-DD''''),INTERVAL ''''1 day'''') as AttendanceDate) a 
		LEFT JOIN T_FestivalsDaySet b ON a.AttendanceDate=b.FestivalsDate 
		left join T_FestivalsExchangeDaySet c on a.AttendanceDate=c.ExchangeDate ) k 
	LEFT JOIN (select a.* from T_LeaveApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
		where b.Status in (''''通过'''',''''结案'''') and b.WLType = ''''考勤管理'''' and  b.RelatedType = ''''请假'''') b 
		ON a.UserCode=b.Creator AND to_date(k.AttendanceDate,''''YYYY-MM-DD'''') BETWEEN b.StartTime AND b.EndTime 
	LEFT JOIN (select a.* from T_OvertimeApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
		where b.Status in (''''通过'''',''''结案'''') and b.WLType = ''''考勤管理'''' and  b.RelatedType = ''''加班'''') c  
		ON a.UserCode=c.Creator AND to_date(k.AttendanceDate,''''YYYY-MM-DD'''') BETWEEN c.StartTime AND c.EndTime
	WHERE a.DepartCode = '''''||DepartCode||''''' AND a.UserName = '''''||UserName||'''''
	GROUP BY a.UserCode,k.AttendanceDate) a 
	LEFT JOIN (  
		SELECT UserCode,to_char(AttendanceDate,''''YYYY-MM-DD'''') AttendanceDate,LateMinute,EarlyMinute,LargestDistance,
			CASE WHEN NCheckInIsMust=''''YES'''' THEN 1 ELSE 0 END NCheckInIsMust,CASE WHEN NCheckOutIsMust=''''YES'''' THEN 1 ELSE 0 END NCheckOutIsMust,
			CASE WHEN MCheckInIsMust=''''YES'''' THEN MCheckIn 
			WHEN NCheckInIsMust=''''YES'''' THEN NCheckIn
			ELSE NULL END CheckIn,
			CASE WHEN ACheckOutIsMust=''''YES'''' THEN ACheckOut 
			WHEN NCheckOutIsMust=''''YES'''' THEN NCheckOut
			ELSE NULL END CheckOut,
			CASE WHEN MCheckInIsMust=''''YES'''' THEN COALESCE(MCheckInAddress,'''''''')  
			WHEN NCheckInIsMust=''''YES'''' THEN COALESCE(NCheckInAddress,'''''''')
			ELSE NULL END CheckInAddress,
			CASE WHEN MCheckInIsMust=''''YES'''' THEN COALESCE(char_length(MCheckInAddress),0)  
			WHEN NCheckInIsMust=''''YES'''' THEN COALESCE(char_length(NCheckInAddress),0)
			ELSE 0 END CheckInAddressLen,
			CASE WHEN ACheckOutIsMust=''''YES'''' THEN COALESCE(ACheckOutAddress,'''''''')   
			WHEN NCheckOutIsMust=''''YES'''' THEN COALESCE(NCheckOutAddress,'''''''') 
			ELSE NULL END CheckOutAddress,
			CASE WHEN ACheckOutIsMust=''''YES'''' THEN COALESCE(char_length(ACheckOutAddress),0)   
			WHEN NCheckOutIsMust=''''YES'''' THEN COALESCE(char_length(NCheckOutAddress),0) 
			ELSE 0 END CheckOutAddressLen,
			CASE WHEN MCheckInIsMust=''''YES'''' THEN MCheckInDistance  
			WHEN NCheckInIsMust=''''YES'''' THEN NCheckInDistance
			ELSE NULL END CheckInDistance,
			CASE WHEN ACheckOutIsMust=''''YES'''' THEN ACheckOutDistance   
			WHEN NCheckOutIsMust=''''YES'''' THEN NCheckOutDistance
			ELSE NULL END CheckOutDistance
		FROM T_UserAttendanceRecord 
		where AttendanceDate &gt;= '''''||StartDate||''''' AND  AttendanceDate&lt; to_date('''''||EndDate||''''',''''YYYY-MM-DD'''')+INTERVAL ''''1 day''''  ) b
		ON a.UserCode=b.UserCode AND b.AttendanceDate=a.AttendanceDate'',''select * from ( SELECT EXTRACT(DAY FROM(generate_series('''''||StartDate||'''''::date,'''''||EndDate||'''''::date, ''''1 day''''::interval)::date)) as ex) a order by a.ex''
	) AS  t(usercode varchar(20),{0})' into SqlDetail;

select replace( SqlDetail , '{0}' , SqlCol) into SqlDetail;


SELECT array_to_string(ARRAY(SELECT Type || ' int' FROM T_OvertimeType),',') into OvertimeSql;

--按分钟计算实际加班时间 误差多加1分钟  因为午夜打卡时间分别为23:59和00:01 
SELECT ') c ON a.工号=c.UserCode 
LEFT JOIN (select * from crosstab(
			 ''SELECT a.UserCode 工号2,c.Type OvertimeType,FLOOR(COALESCE(DATEDIFF(''''mi'''',
				CASE WHEN b.OverTimeCheckInTime::timestamp without time zone&lt;b.StartTime THEN b.StartTime ELSE b.OverTimeCheckInTime::timestamp without time zone END,
				CASE WHEN b.OverTimeCheckOutTime::timestamp without time zone&gt;b.EndTime THEN b.EndTime ELSE b.OverTimeCheckOutTime::timestamp without time zone END)+1,0)*1.0/60) HourNum   
			FROM T_ProjectMember a 
			CROSS JOIN T_OvertimeType c 
			LEFT JOIN (select a.* from T_OvertimeApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
				where b.Status in (''''通过'''',''''结案'''') and b.WLType = ''''考勤管理'''' and  b.RelatedType = ''''加班'''') b ON a.UserCode=b.Creator AND '''''||StartDate||'''''&lt;b.EndTime AND '''''||EndDate||'''''&gt;=b.StartTime 
			WHERE a.DepartCode = '''''||DepartCode||''''' AND a.UserName = '''''||UserName||''''' ''
	,''SELECT distinct c.Type from T_OvertimeType c order by 1 '')
			as t(工号2 varchar(20),工作日加班 int,节假日加班 int,周末加班 int)
) d ON a.工号=d.工号2 
LEFT JOIN (		select a.Creator,SUM(COALESCE(a.HourNum,0)) HourNum from T_LeaveApplyForm a inner join T_WorkFlow b on a.ID=b.RelatedID
		where b.Status in (''通过'',''结案'') and b.WLType = ''考勤管理'' and  b.RelatedType = ''请假'' AND '''||StartDate||'''::timestamp without time zone&lt;a.EndTime AND '''||EndDate||'''::timestamp without time zone&gt;=a.StartTime 
		GROUP BY a.Creator) f ON a.工号=f.Creator 
order by a.部门,a.姓名' into Sql4;

SELECT REPLACE(Sql4,'{0}',OvertimeSql) into Sql4;

select Sql1||Sql2||Sql3||SqlDetail||Sql4 into sqltotal;
execute sqltotal into recreport;
SELECT json_agg(row_to_json(recreport)) into jsonreport;

RETURN jsonreport;

END;
$$ LANGUAGE plpgsql;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3539</ID>
    <SQLText>Update T_ProjectMember Set cssdirectory = 'CssGreen'</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3540</ID>
    <SQLText>Delete From T_NewsType Where type = '模块图';

Insert Into T_NewsType(type,homename,langcode,pagename,visible,SortNumber) values('模块图','模块图','zh-CN','TTPersonalSpaceModuleFlowView.aspx','YES',0);</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3541</ID>
    <SQLText>Delete From T_NewsType Where type = '模块图';

Insert Into T_NewsType(type,homename,langcode,pagename,visible,SortNumber) values('模块图','模块图','zh-CN','TTPersonalSpaceModuleFlowView.aspx','YES',6);</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3542</ID>
    <SQLText>Delete From T_NewsType Where type = '模块图'; 
Insert Into T_NewsType(type,homename,langcode,pagename,visible,SortNumber) values('模块图','模块图','zh-CN','TTPersonalSpaceModuleFlowView.aspx','YES',6);
Insert Into T_NewsType(type,homename,langcode,pagename,visible,SortNumber) values('模块图','ModuleChart','en','TTPersonalSpaceModuleFlowView.aspx','YES',6);</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3543</ID>
    <SQLText>Update T_ProModuleLevel Set  ModuleName = '工作流管理'  Where ModuleName = '流程管理' and LangCode = 'zh-CN';
Update T_ProModuleLevel Set  ModuleName = '项目立项'  Where ModuleName = '建立与分派项目' and LangCode = 'zh-CN';

Update T_ProModule Set  ModuleName = '工作流管理'  Where ModuleName = '流程管理';
Update T_ProModule Set  ModuleName = '项目立项'  Where ModuleName = '建立与分派项目';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3544</ID>
    <SQLText>Update T_ProModuleLevel Set  ModuleName = '工作流管理'  Where ModuleName = '流程管理';
Update T_ProModuleLevel Set  ModuleName = '项目立项'  Where ModuleName = '建立与分派项目';

Update T_ProModule Set  ModuleName = '工作流管理'  Where ModuleName = '流程管理';
Update T_ProModule Set  ModuleName = '项目立项'  Where ModuleName = '建立与分派项目';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3545</ID>
    <SQLText>Update T_ProModuleLevel Set  HomeModuleName = '项目立项'  Where HomeModuleName = '建立与分派项目';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3546</ID>
    <SQLText>Update T_ProModuleLevel Set ParentModule = '工作流管理' Where ParentModule = '流程管理';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3547</ID>
    <SQLText>Update T_ProModuleLevel Set ModuleDefinition = replace(ModuleDefinition,'项目任务管理','项目管理') Where ModuleName = '个人空间';
Update T_ProModuleLevel Set ModuleDefinition = replace(ModuleDefinition,'招聘管理','合同管理') Where ModuleName = '个人空间';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3548</ID>
    <SQLText>Update T_NewsType Set Type = '模块导航',HomeName = 'ModuleGuide' Where Type = '模块图' and LangCode = 'en';
Update T_NewsType Set Type = '模块导航',HomeName = '模块导航' Where Type = '模块图' and LangCode = 'zh-CN';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3549</ID>
    <SQLText>Update T_NewsType Set SortNumber = 1  Where Type = '驾驶舱';
Update T_NewsType Set SortNumber = 2  Where Type = '模块导航';
Update T_NewsType Set SortNumber = 3  Where Type = '头条新闻';
Update T_NewsType Set SortNumber = 4  Where Type = '头条新闻';
Update T_NewsType Set SortNumber = 5  Where Type = '综合信息';
Update T_NewsType Set SortNumber = 6  Where Type = '公告通知';
Update T_NewsType Set SortNumber = 7  Where Type = '项目地图';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3550</ID>
    <SQLText>Update T_NewsType Set Type = '操作导航',HomeName = 'WorkGuide' Where Type = '模块导航' and LangCode = 'en';
Update T_NewsType Set Type = '操作导航',HomeName = '操作导航' Where Type = '模块导航' and LangCode = 'zh-CN';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3551</ID>
    <SQLText>Update T_NewsType Set SortNumber = 1 Where Type = '驾驶舱';
Update T_NewsType Set SortNumber = 2 Where Type = '操作导航';
Update T_NewsType Set SortNumber = 3 Where Type = '头条新闻';
Update T_NewsType Set SortNumber = 4 Where Type = '公司动态'; 
Update T_NewsType Set SortNumber = 5 Where Type = '综合信息'; 
Update T_NewsType Set SortNumber = 6 Where Type = '公告通知'; 
Update T_NewsType Set SortNumber = 7 Where Type = '项目地图';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3552</ID>
    <SQLText>Update T_ProModuleLevel Set PageName = 'TTMyMemProjectsRunStatus.aspx' Where ModuleName = '领导监控';
Update T_ProModuleLevel Set PageName = 'TTCustomerQuestionManage.aspx' Where ModuleName = '客户关系';
Update T_ProModuleLevel Set PageName = 'TTGoodsManage.aspx' Where ModuleName = '供应链管理';
Update T_ProModuleLevel Set PageName = 'TTReceivablesPayableAlert.aspx' Where ModuleName = '财务管理';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3553</ID>
    <SQLText>Update T_ProModuleLevel Set PageName = 'TTUserManagement.aspx' Where ModuleName = '人事行政';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3554</ID>
    <SQLText>Update T_ProModuleLevel Set PageName = 'TTBaseDataOuter.aspx' Where ModuleName = '参数设置';
Update T_ProModuleLevel Set PageName = 'TTDocumentManage.aspx' Where ModuleName = '办公管理';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3555</ID>
    <SQLText>Update T_ProModuleLevel Set PageName = 'TTTenderUNHandleList.aspx' Where ModuleName = '投标管理';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3556</ID>
    <SQLText>Update T_ProModuleLevel Set PageName = 'TTAllProjectsRunStatus.aspx' Where ModuleName = '领导监控';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3557</ID>
    <SQLText>Update T_ProModuleLevel Set PageName = 'TakeTopPersonalSpace.aspx' Where ModuleName = '办公管理';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3558</ID>
    <SQLText>Alter Table T_ProModuleLevel Add Column UpdateMark int Default 0;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3559</ID>
    <SQLText>UPdate T_ProModuleLevel Set UpdateMark = 0;</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3560</ID>
    <SQLText>Update T_NewsType Set SortNumber = 0 Where Type = '操作导航';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3561</ID>
    <SQLText>Alter Table T_ProModule Add Column moduledefinition text Default '';
Alter Table T_ProModule Add Column diyflow character(10) Default 'NO';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3562</ID>
    <SQLText>Update T_ProModule Set moduledefinition = '';
Update T_ProModule Set diyflow = 'NO';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3563</ID>
    <SQLText>Insert Into T_ProModuleLevel(ModuleName,HomeModuleName,ParentModule,PageName,ModuleType,UserType,LangCode,IconURL,ModuleDefinition,DiyFlow,UpdateMark,SortNumber,IsDeleted,Visible)
  values('操作导航','操作导航','','','SYSTEM','INNER','zh-CN','ImagesSkin/OperateGuide.png','','YES',0,0,'NO','YES');
  
Insert Into T_ProModuleLevel(ModuleName,HomeModuleName,ParentModule,PageName,ModuleType,UserType,LangCode,IconURL,ModuleDefinition,DiyFlow,UpdateMark,SortNumber,IsDeleted,Visible)
  values('操作导航','操作导航','','','SYSTEM','OUTER','zh-CN','ImagesSkin/OperateGuide.png','','YES',0,0,'NO','YES');
  
Insert Into T_ProModule(UserCode,ModuleName,ModuleType,UserType,ModuleDefinition,DiyFlow,Visible)
  values('SAMPLE','操作导航','SYSTEM','INNER','','YES','YES');
Insert Into T_ProModule(UserCode,ModuleName,ModuleType,UserType,ModuleDefinition,DiyFlow,Visible)
  values('SAMPLE','操作导航','SYSTEM','OUTER','','YES','YES');</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3564</ID>
    <SQLText>Alter Table public.t_newstype Add NewsScope Char(10) Default 'ALL';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3565</ID>
    <SQLText>Update T_NewsType Set NewsScope = 'ALL';</SQLText>
  </DataBaseUpgradeFile>
  <DataBaseUpgradeFile>
    <ID>3566</ID>
    <SQLText>SELECT setval('t_msgpushlog_id_seq', (SELECT MAX(id) FROM t_msgpushlog)+1);</SQLText>
  </DataBaseUpgradeFile>
</DataBaseUpgradeFiles>